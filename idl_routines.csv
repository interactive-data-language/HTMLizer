"1";"ABS";"Returns the absolute value of X.";"55";"ABS.html";"15519"
"2";"ACOS";"Returns the arc-cosine of X.";"65";"ACOS.html";"10159"
"3";"ADAPT_HIST_EQUAL";"Performs adaptive histogram equalization";"29";"ADAPT_HIST_EQUAL.html";"6008"
"4";"ALOG";"Returns the natural logarithm of X.";"65";"ALOG.html";"12804"
"5";"ALOG10";"Returns the logarithm to the base 10 of X.";"65";"ALOG10.html";"10470"
"6";"AMOEBA";"Minimizes a function using downhill simplex method.";"58";"AMOEBA.html";"10217"
"7";"ANNOTATE Procedure";"Starts IDL widget used to interactively annotate images and plots with text and drawings.";"22";"ANNOTATE.html";"7119"
"8";"APP_USER_DIR";"Provides access to the application user directory.";"35";"APP_USER_DIR.html";"5326"
"9";"APP_USER_DIR_QUERY";"Locates existing application user directories.";"35";"APP_USER_DIR_QUERY.html";"5246"
"10";"ARG_PRESENT";"Returns TRUE if the value of the specified variable can be passed back to the caller.";"76";"ARG_PRESENT.html";"6452"
"11";"ARRAY_EQUAL";"Provides fast test for data equality in cases where the positions of the differing data elements is not required.";"17";"ARRAY_EQUAL.html";"13089"
"12";"ARRAY_INDICES";"Converts one-dimensional subscripts of an array into corresponding multi-dimensional subscripts.";"17";"ARRAY_INDICES.html";"34435"
"13";"ARROW";"Draws an arrow as an annotation to an existing graphic.";"27";"ARROW.html";"11068"
"14";"ARROW Procedure";"Draws line with an arrow head.";"22";"ARROW_Procedure.html";"11996"
"15";"ASCII_TEMPLATE";"Presents a GUI that generates a template defining an ASCII file format.";"39";"ASCII_TEMPLATE.html";"18536"
"16";"ASIN";"Returns the arc-sine of X.";"65";"ASIN.html";"6984"
"17";"ASSOC";"Associates an array structure with a file.";"40";"ASSOC.html";"28234"
"18";"ATAN";"Returns the arc-tangent of X.";"65";"ATAN.html";"20989"
"19";"AXIS";"Adds an axis to an existing graphic.";"27";"AXIS.html";"81397"
"20";"AXIS Procedure";"Draws an axis of the specified type and scale at a given position.";"22";"AXIS_Procedure.html";"45690"
"21";"A_CORRELATE";"Computes autocorrelation.";"8";"A_CORRELATE.html";"9853"
"22";"A Routines";;"1";"A_list.html";"3605"
"23";"BANDPASS_FILTER";"Applies a bandpass filter to a one-channel image.";"29";"BANDPASS_FILTER.html";"7432"
"24";"BANDREJECT_FILTER";"Applies a band reject filter on a one-channel image.";"29";"BANDREJECT_FILTER.html";"6191"
"25";"BARPLOT";"Plots data as a series of rectangular bars.";"27";"BARPLOT.html";"21199"
"26";"BAR_PLOT Procedure";"Creates a bar graph.";"22";"BAR_PLOT_Procedure.html";"8018"
"27";"BEGIN...END";"Defines a block of statements.";"83";"BEGIN___END.html";"58508"
"28";"BESELI";"Returns the I Bessel function of order N for X.";"61";"BESELI.html";"5895"
"29";"BESELJ";"Returns the J Bessel function of order N for X.";"61";"BESELJ.html";"5395"
"30";"BESELK";"Returns the K Bessel function of order N for X.";"61";"BESELK.html";"3698"
"31";"BESELY";"Returns the Y Bessel function of order N for X.";"61";"BESELY.html";"13277"
"32";"BETA";"Returns the value of the beta function.";"61";"BETA.html";"4411"
"33";"BILINEAR";"Computes array using bilinear interpolation.";"50";"BILINEAR.html";"11625"
"34";"BINARY_TEMPLATE";"Presents a GUI for interactively generating a template structure for use with READ_BINARY.";"39";"BINARY_TEMPLATE.html";"6463"
"35";"BINDGEN";"Returns byte array with each element set to its subscript.VOIGT";"10";"BINDGEN.html";"6775"
"36";"BINOMIAL";"Computes binomial distribution function.";"59";"BINOMIAL.html";"5157"
"37";"BIN_DATE";"Converts ASCII date/time string to binary string.";"19";"BIN_DATE.html";"6972"
"38";"BIT_FFS";"Returns the index of the first bit set (non-zero) in an integer.";"76";"BIT_FFS.html";"3387"
"39";"BIT_POPULATION";"Returns the number of set (non-zero) bits in an integer.";"76";"BIT_POPULATION.html";"2759"
"40";"BLAS_AXPY";"Updates existing array by adding a multiple of another array.";"17";"BLAS_AXPY.html";"5712"
"41";"BLK_CON";"Convolves input signal with impulse-response sequence.";"8";"BLK_CON.html";"4462"
"42";"BOX_CURSOR Procedure";"Emulates operation of a variable-sized box cursor.";"22";"BOX_CURSOR_Procedure.html";"5433"
"43";"BREAK";"Exits from a loop (FOR, WHILE, REPEAT), CASE, or SWITCH statement.";"83";"BREAK.html";"16925"
"44";"BREAKPOINT";"Sets and clears breakpoints for debugging.";"76";"BREAKPOINT.html";"9366"
"45";"BROYDEN";"Solves nonlinear equations using Broyden's method.";"57";"BROYDEN.html";"6839"
"46";"BUTTERWORTH";"Returns the absolute value of the low-pass Butterworth kernel.";"8";"BUTTERWORTH.html";"6624"
"47";"BYTARR";"Creates a byte vector or array.";"10";"BYTARR.html";"10092"
"48";"BYTE";"Converts argument to byte type.";"89";"BYTE.html";"35901"
"49";"BYTEORDER";"Converts between host and network byte ordering.";"76";"BYTEORDER.html";"14560"
"50";"BYTSCL";"Scales all values of an array into range of bytes.";"29";"BYTSCL.html";"15073"
"51";"B Routines";;"1";"B_list.html";"2819"
"52";"CALDAT";"Converts Julian date to month, day, year.";"19";"CALDAT.html";"21153"
"53";"CALENDAR Procedure";"Displays a calendar for a month or an entire year.";"19";"CALENDAR_Procedure.html";"3976"
"54";"CALL_EXTERNAL";"Calls a function in an external sharable object and returns a scalar value.";"25";"CALL_EXTERNAL.html";"10797"
"55";"CALL_FUNCTION";"Calls an IDL function.";"76";"CALL_FUNCTION.html";"9771"
"56";"CALL_METHOD";"Calls an IDL object method.";"76";"CALL_METHOD.html";"5316"
"57";"CALL_PROCEDURE";"Calls an IDL procedure.";"76";"CALL_PROCEDURE.html";"6555"
"58";"CANNY";"Implements the Canny edge-detection algorithm.";"8";"CANNY.html";"6780"
"59";"CASE";"Selects one statement for execution, depending on the value of an expression.";"83";"CASE.html";"28681"
"60";"CATCH";"Intercepts and processes error messages, and continues program execution.";"23";"CATCH.html";"14552"
"61";"CD";"Sets and/or changes the current working directory.";"74";"CD.html";"18284"
"62";"CDF Overview";;"1";"CDF_Overview.html";"10138"
"63";"CDF_ATTCREATE";"Creates a new attribute in the specified Common Data Format file.";"100";"CDF_ATTCREATE.html";"2434"
"64";"CDF_ATTDELETE";"Deletes an attribute from the specified CDF file.";"100";"CDF_ATTDELETE.html";"2189"
"65";"CDF_ATTEXISTS";"Determines whether a given attribute exists in the specified CDF file.";"100";"CDF_ATTEXISTS.html";"2509"
"66";"CDF_ATTGET";"Reads an attribute entry from a CDF file.";"100";"CDF_ATTGET.html";"3326"
"67";"CDF_ATTGET_ENTRY";"Reads a variable attribute entry from a CDF file.";"100";"CDF_ATTGET_ENTRY.html";"2343"
"68";"CDF_ATTINQ";"Obtains information about a specified attribute in a CDF file.";"100";"CDF_ATTINQ.html";"2849"
"69";"CDF_ATTNUM";"Returns the attribute number associated with a particular attribute in a CDF file.";"100";"CDF_ATTNUM.html";"2335"
"70";"CDF_ATTPUT";"Writes an attribute entry to a Common Data Format file, or attaches an attribute to a CDF variable.";"100";"CDF_ATTPUT.html";"5602"
"71";"CDF_ATTRENAME";"Used to rename an existing attribute in a CDF file.";"100";"CDF_ATTRENAME.html";"2393"
"72";"CDF_CLOSE";"Closes the specified CDF file.";"100";"CDF_CLOSE.html";"3142"
"73";"CDF_COMPRESSION";"Sets or returns the compression mode for a CDF file and/or variables.";"100";"CDF_COMPRESSION.html";"2970"
"74";"CDF_CONTROL";"Obtains or sets information for a Common Data Format file, its variables, and its attributes.";"100";"CDF_CONTROL.html";"4155"
"75";"CDF_CREATE";"Creates a new CDF file with the given filename and dimensions.";"100";"CDF_CREATE.html";"3782"
"76";"CDF_DELETE";"Deletes the specified CDF file.";"100";"CDF_DELETE.html";"2417"
"77";"CDF_DOC";"Retrieves general documentation information about a CDF file.";"100";"CDF_DOC.html";"2601"
"78";"CDF_ENCODE_EPOCH";"Encodes a CDF_EPOCH variable into a string.";"100";"CDF_ENCODE_EPOCH.html";"2797"
"79";"CDF_ENCODE_EPOCH16";"Encodes a CDF_EPOCH16 value into the standard date and time character string.";"100";"CDF_ENCODE_EPOCH16.html";"2469"
"80";"CDF_EPOCH";"Computes or breaks down CDF_EPOCH values in a CDF file.";"100";"CDF_EPOCH.html";"4649"
"81";"CDF_EPOCH16";"Computes or breaks down a CDF_EPOCH16 value in a CDF file.";"100";"CDF_EPOCH16.html";"5963"
"82";"CDF_EPOCH_COMPARE";"Compares two epoch (date and time) values.";"100";"CDF_EPOCH_COMPARE.html";"2754"
"83";"CDF_EPOCH_DIFF";"Compares two epoch (date and time) values and returns the difference in milliseconds (default) or microseconds.";"100";"CDF_EPOCH_DIFF.html";"3846"
"84";"CDF_ERROR";"Returns a a short explanation of a given status code returned from a Common Data Format file.";"100";"CDF_ERROR.html";"2373"
"85";"CDF_EXISTS";"Returns true if the CDF scientific data format library is supported on the current IDL platform.";"100";"CDF_EXISTS.html";"2516"
"86";"CDF_INQUIRE";"Returns global information about the CDF file.";"100";"CDF_INQUIRE.html";"3586"
"87";"CDF_LIB_INFO";"Returns information about the CDF Library being used by this version of IDL.";"100";"CDF_LIB_INFO.html";"2403"
"88";"CDF_OPEN";"Opens an existing Common Data Format file.";"100";"CDF_OPEN.html";"4783"
"89";"CDF_PARSE_EPOCH";"Parses a properly-formatted input string into a double-precision value properly formatted for use as a CDF_EPOCH variable.";"100";"CDF_PARSE_EPOCH.html";"2518"
"90";"CDF_PARSE_EPOCH16";"Parses a properly-formatted input string into a double-complex value properly formatted for use as a CDF_EPOCH16 variable.";"100";"CDF_PARSE_EPOCH16.html";"2388"
"91";"CDF_SET_CDF27_BACKWARD_COMPATIBLE";"Allows users of IDL version 6.3 and later to create a CDF file that can be read by IDL 6.2 or earlier, or by CDF version 2.7.2 or earlier.";"100";"CDF_SET_CDF27_BACKWARD_C.html";"2443"
"92";"CDF_SET_MD5CHECKSUM";"Calculates and inserts a MD5 checksum into a CDF file.";"100";"CDF_SET_MD5CHECKSUM.html";"2793"
"93";"CDF_SET_VALIDATE";"Ensures that file data values are validated when CDF files are opened.";"100";"CDF_SET_VALIDATE.html";"2514"
"94";"CDF_VARCREATE";"Creates a new variable in a CDF file.";"100";"CDF_VARCREATE.html";"3203"
"95";"CDF_VARDELETE";"Deletes a variable from a SINGLE_FILE CDF file.";"100";"CDF_VARDELETE.html";"2613"
"96";"CDF_VARGET";"Reads multiple values from a CDF file variable.";"100";"CDF_VARGET.html";"4129"
"97";"CDF_VARGET1";"Reads one value from a CDF file variable.";"100";"CDF_VARGET1.html";"2407"
"98";"CDF_VARINQ";"Returns a structure containing information about the specified variable in a CDF file.";"100";"CDF_VARINQ.html";"3364"
"99";"CDF_VARNUM";"Returns the variable number associated with a given variable name in a CDF file.";"100";"CDF_VARNUM.html";"2445"
"100";"CDF_VARPUT";"Writes a value to a variable in a CDF file.";"100";"CDF_VARPUT.html";"2865"
"101";"CDF_VARRENAME";"Renames an existing variable in a CDF file.";"100";"CDF_VARRENAME.html";"2144"
"102";"CDF Routines";"Common Data Format routines.";"100";"CDF_Routines.html";"3509"
"103";"CEIL";"Returns the closest integer greater than or equal to X.";"55";"CEIL.html";"11887"
"104";"CHEBYSHEV";"Returns the forward or reverse Chebyshev polynomial expansion.";"8";"CHEBYSHEV.html";"4634"
"105";"CHECK_MATH";"Returns and clears accumulated math error status.";"54";"CHECK_MATH.html";"21659"
"106";"CHISQR_CVF";"Computes cutoff value in a Chi-square distribution.";"59";"CHISQR_CVF.html";"5960"
"107";"CHISQR_PDF";"Computes Chi-square distribution function.";"59";"CHISQR_PDF.html";"6810"
"108";"CHOLDC";"Constructs Cholesky decomposition of a matrix.";"53";"CHOLDC.html";"5079"
"109";"CHOLSOL";"Solves set of linear equations (use with CHOLDC).";"53";"CHOLSOL.html";"4397"
"110";"CINDGEN";"Returns a complex array with each element set to its subscript.";"10";"CINDGEN.html";"4778"
"111";"CIR_3PNT";"Returns radius and center of circle, given 3 points.";"55";"CIR_3PNT.html";"4370"
"112";"CLOSE";"Closes the specified files.";"40";"CLOSE.html";"11838"
"113";"CLUSTER";"Performs cluster analysis.";"56";"CLUSTER.html";"7278"
"114";"CLUSTER_TREE";"Computes the hierarchical clustering for a set of m items in an n-dimensional space.";"56";"CLUSTER_TREE.html";"5768"
"115";"CLUST_WTS";"Computes cluster weights of array for cluster analysis.";"56";"CLUST_WTS.html";"4593"
"116";"CMYK_CONVERT";"Converts color triples to and from RGB, HLS, and HSV.";"18";"CMYK_CONVERT.html";"43229"
"117";"COLORBAR";"Adds a colorbar annotation to an existing graphic.";"27";"COLORBAR.html";"39057"
"118";"COLORIZE_SAMPLE";"Colorizes a grayscale image by matching luminance levels with an RGB sample table. ";"18";"COLORIZE_SAMPLE.html";"2718"
"119";"COLORMAP_APPLICABLE";"Determines whether the current visual class supports the use of a colormap. (Direct Graphics)";"18";"COLORMAP_APPLICABLE.html";"3100"
"120";"COLORMAP_GRADIENT";"Maps an image into a specified luminance-based gradient.";"18";"COLORMAP_GRADIENT.html";"4023"
"121";"COLORMAP_ROTATION";"Maps pixels within a given hue range to another hue range, using the HSV hue component.";"18";"COLORMAP_ROTATION.html";"15353"
"122";"COLOR_CONVERT";"Converts colors between color spaces.";"18";"COLOR_CONVERT.html";"5720"
"123";"COLOR_EXCHANGE";"Replaces image pixels of a given color with pixels of a new color.";"18";"COLOR_EXCHANGE.html";"2320"
"124";"COLOR_QUAN";"Converts true-color (24-bit) image to pseudo-color (8-bit) image.";"18";"COLOR_QUAN.html";"9942"
"125";"COLOR_RANGE_MAP";"Maps all the pixels of an image to another set of pixels.";"18";"COLOR_RANGE_MAP.html";"2468"
"126";"COMFIT";"Fits paired data using one of six common filtering functions.";"47";"COMFIT.html";"11752"
"127";"COMMAND_LINE_ARGS";"Returns string values supplied when the user starts IDL with the -arg or -args command line options.";"76";"COMMAND_LINE_ARGS.html";"7019"
"128";"COMMON";"Creates a common block.";"80";"COMMON.html";"12796"
"129";"COMPILE_OPT";"Change default rules for compiling routines.";"76";"COMPILE_OPT.html";"52910"
"130";"COMPLEX";"Converts argument to complex type.";"45";"COMPLEX.html";"13192"
"131";"COMPLEXARR";"Creates a complex, single-precision, floating-point vector or array.";"10";"COMPLEXARR.html";"6094"
"132";"COMPLEXROUND";"Rounds a complex array.";"55";"COMPLEXROUND.html";"4487"
"133";"COMPUTE_MESH_NORMALS";"Computes normal vectors for a set of polygons described by the input array.";"11";"COMPUTE_MESH_NORMALS.html";"3445"
"134";"COND";"Computes the condition number of a square matrix.";"53";"COND.html";"4099"
"135";"CONGRID";"Resamples an image to any dimensions.";"29";"CONGRID.html";"23430"
"136";"CONJ";"Returns the complex conjugate of X.";"45";"CONJ.html";"7616"
"137";"CONSTRAINED_MIN";"Minimizes a function using Generalized Reduced Gradient Method.";"58";"CONSTRAINED_MIN.html";"6845"
"138";"CONTINUE";"Starts the next iteration of the enclosing FOR, WHILE, or REPEAT loop.";"83";"CONTINUE.html";"14980"
"139";"CONTOUR";"Draws a two-dimensional contour plot for a 2D array of data.";"27";"CONTOUR.html";"36113"
"140";"CONTOUR Procedure";"Draws a contour plot. (Direct Graphics)";"22";"CONTOUR_Procedure.html";"101468"
"141";"CONVERT_COORD";"Transforms coordinates to and from the coordinate systems supported by IDL.(Direct Graphics)";"11";"CONVERT_COORD.html";"8407"
"142";"CONVOL";"Convolves two vectors or arrays.";"8";"CONVOL.html";"20353"
"143";"CONVOL_FFT";"Computes the convolution of an image using a product of Fourier transforms for speed.";"8";"CONVOL_FFT.html";"8772"
"144";"COORD2TO3";"Returns 3D data coordinates given normalized screen coordinates.";"11";"COORD2TO3.html";"3032"
"145";"COPY_LUN";"Copies data between two open files.";"40";"COPY_LUN.html";"4157"
"146";"CORRELATE";"Computes the linear Pearson correlation.";"8";"CORRELATE.html";"23171"
"147";"COS";"Returns the cosine of X.";"65";"COS.html";"12813"
"148";"COSH";"Returns the hyperbolic cosine of X.";"65";"COSH.html";"6647"
"149";"CPU";"Changes the values stored in the read-only !CPU system variable.";"76";"CPU.html";"6292"
"150";"CRAMER";"Solves system of linear equations using Cramer's rule.";"53";"CRAMER.html";"9062"
"151";"CREATE_CURSOR";"Creates an image array from a string array that represents a 16 by 16 cursor.";"76";"CREATE_CURSOR.html";"3679"
"152";"CREATE_STRUCT";"Creates a structure given pairs of tag names and values.";"76";"CREATE_STRUCT.html";"16302"
"153";"CREATE_VIEW Procedure";"Sets the various system variables required to define a coordinate system and a 3-D view.";"22";"CREATE_VIEW_Procedure.html";"3181"
"154";"CROSSP";"Sets up 3D transformations.";"11";"CROSSP.html";"7323"
"155";"CRVLENGTH";"Computes the length of a curve.";"47";"CRVLENGTH.html";"3623"
"156";"CTI_TEST";"Performs chi-square goodness-of-fit test.";"51";"CTI_TEST.html";"4260"
"157";"CT_LUMINANCE";"Calculates the luminance of colors.";"18";"CT_LUMINANCE.html";"4247"
"159";"CURSOR Procedure";"Reads position of the interactive graphics cursor.";"22";"CURSOR_Procedure.html";"13327"
"160";"CURVEFIT";"Fits multivariate data with a user-supplied function.";"47";"CURVEFIT.html";"32610"
"161";"CVTTOBM";"Creates a bitmap byte array for a button label.";"22";"CVTTOBM.html";"3742"
"162";"CV_COORD";"Converts 2D and 3D coordinates between coordinate systems.";"11";"CV_COORD.html";"8051"
"163";"CW_ANIMATE";"Creates a compound widget for animation. (Direct Graphics)";"92";"CW_ANIMATE.html";"3445"
"164";"CW_ANIMATE_GETP";"Gets pixmap window IDs used by CW_ANIMATE. (Direct Graphics)";"92";"CW_ANIMATE_GETP.html";"2877"
"165";"CW_ANIMATE_LOAD";"Loads images into CW_ANIMATE. (Direct Graphics)";"92";"CW_ANIMATE_LOAD.html";"2846"
"166";"CW_ANIMATE_RUN";"Displays images loaded into CW_ANIMATE. (Direct Graphics)";"92";"CW_ANIMATE_RUN.html";"2710"
"167";"CW_ARCBALL";"Creates compound widget for intuitively specifying 3D orientations.";"92";"CW_ARCBALL.html";"2701"
"168";"CW_BGROUP";"Creates button group for use as a menu.";"92";"CW_BGROUP.html";"5116"
"169";"CW_CLR_INDEX";"Creates compound widget for the selection of a color index.";"92";"CW_CLR_INDEX.html";"2500"
"170";"CW_COLORSEL";"Creates compound widget that displays all colors in current colormap.";"92";"CW_COLORSEL.html";"2657"
"171";"CW_DEFROI";"Creates compound widget used to define region of interest. (Direct Graphics)";"92";"CW_DEFROI.html";"3333"
"172";"CW_FIELD";"Creates a widget data entry field.";"92";"CW_FIELD.html";"11282"
"173";"CW_FILESEL";"Creates compound widget for file selection.";"92";"CW_FILESEL.html";"3141"
"174";"CW_FORM";"Creates compound widget for creating forms.";"92";"CW_FORM.html";"3310"
"175";"CW_FSLIDER";"Creates slider that selects floating-point values.";"92";"CW_FSLIDER.html";"3372"
"176";"CW_LIGHT_EDITOR";"Creates compound widget to edit properties of existing IDLgrLight objects in a view.";"92";"CW_LIGHT_EDITOR.html";"2706"
"177";"CW_LIGHT_EDITOR_GET";"Gets the CW_LIGHT_EDITOR properties.";"92";"CW_LIGHT_EDITOR_GET.html";"2885"
"178";"CW_LIGHT_EDITOR_SET";"Sets the CW_LIGHT_EDITOR properties.";"92";"CW_LIGHT_EDITOR_SET.html";"2523"
"179";"CW_ORIENT";"Creates compound widget used to interactively adjust the 3D drawing transformation. (Direct Graphics)";"92";"CW_ORIENT.html";"2551"
"180";"CW_PALETTE_EDITOR";"Creates compound widget to display and edit color palettes.";"18";"CW_PALETTE_EDITOR.html";"3904"
"181";"CW_PALETTE_EDITOR_GET";"Gets CW_PALETTE_EDITOR properties.";"18";"CW_PALETTE_EDITOR_GET.html";"3169"
"182";"CW_PALETTE_EDITOR_SET";"Sets CW_PALETTE_EDITOR properties.";"18";"CW_PALETTE_EDITOR_SET.html";"3071"
"183";"CW_PDMENU";"Creates widget pulldown menus.";"92";"CW_PDMENU.html";"4126"
"184";"CW_RGBSLIDER";"Creates compound widget with sliders for adjusting RGB color values.";"92";"CW_RGBSLIDER.html";"2554"
"185";"CW_TMPL";"Template for compound widgets that use XMANAGER.";"92";"CW_TMPL.html";"2834"
"186";"CW_ZOOM";"Creates widget for displaying zoomed images. (Direct Graphics)";"92";"CW_ZOOM.html";"3822"
"187";"C_CORRELATE";"Computes cross correlation.";"8";"C_CORRELATE.html";"14615"
"188";"C Routines";;"1";"C_list.html";"3727"
"189";"Command-line Options for IDL Startup";;"1";"Command_Line_Options_for.html";"25166"
"190";"DBLARR";"Creates a double-precision array.";"10";"DBLARR.html";"14695"
"192";"DCINDGEN";"Returns a double-precision, complex array with each element set to its subscript.";"10";"DCINDGEN.html";"4429"
"193";"DCOMPLEX";"Converts argument to double-precision complex type.";"45";"DCOMPLEX.html";"5831"
"194";"DCOMPLEXARR";"Creates a complex, double-precision vector or array.";"10";"DCOMPLEXARR.html";"4631"
"195";"DEFINE_KEY";"Programs keyboard function keys.";"76";"DEFINE_KEY.html";"8284"
"196";"DEFINE_MSGBLK";"Defines and loads a new message block into the current IDL session.";"76";"DEFINE_MSGBLK.html";"3848"
"197";"DEFINE_MSGBLK_FROM_FILE";"Reads the definition of a message block from a file, and loads it into the current IDL session.";"76";"DEFINE_MSGBLK_FROM_FILE.html";"3784"
"198";"DEFROI";"Defines an irregular region of interest of an image using the image display system and the cursor and mouse.";"22";"DEFROI.html";"5486"
"199";"DEFSYSV";"Creates a new system variable.";"76";"DEFSYSV.html";"6408"
"200";"DELVAR";"Deletes variables from the main IDL program level.";"76";"DELVAR.html";"8850"
"201";"DENDROGRAM";"Constructs a dendrogram and returns a set of vertices and connectivity that can be used to visualize the dendrite plot if given a hierarchical tree cluster, as created by CLUSTER_TREE.";"56";"DENDROGRAM.html";"4507"
"202";"DENDRO_PLOT Procedure";"Draws a two-dimensional dendrite plot.";"56";"DENDRO_PLOT_Procedure.html";"5014"
"203";"DERIV";"Performs differentiation using 3-point Langrangian interpolation.";"48";"DERIV.html";"16874"
"204";"DERIVSIG";"Computes standard deviation of derivative found by DERIV.";"48";"DERIVSIG.html";"4786"
"205";"DETERM";"Computes the determinant of a square matrix.";"53";"DETERM.html";"5502"
"206";"DEVICE Procedure";"Provides device-dependent control over the current graphics device.";"22";"DEVICE_Procedure.html";"48980"
"207";"DFPMIN";"Minimizes a function using Davidon-Fletcher-Powell method.";"58";"DFPMIN.html";"5366"
"208";"DIAG_MATRIX";"Constructs a diagonal matrix from an input vector, or if given a matrix, then extracts a diagonal vector.";"55";"DIAG_MATRIX.html";"7293"
"210";"DIALOG_MESSAGE";"Creates modal message dialog.";"21";"DIALOG_MESSAGE.html";"8418"
"211";"DIALOG_PICKFILE";"Creates native file-selection dialog.";"21";"DIALOG_PICKFILE.html";"20896"
"212";"DIALOG_PRINTERSETUP";"Opens native dialog used to set properties for a printer.";"21";"DIALOG_PRINTERSETUP.html";"3062"
"213";"DIALOG_PRINTJOB";"Opens native dialog used to set parameters for a print job.";"21";"DIALOG_PRINTJOB.html";"3257"
"214";"DIALOG_READ_IMAGE";"Presents GUI for reading image files.";"21";"DIALOG_READ_IMAGE.html";"4225"
"215";"DIALOG_WRITE_IMAGE";"Presents GUI for writing image files.";"21";"DIALOG_WRITE_IMAGE.html";"4077"
"216";"DIGITAL_FILTER";"Calculates coefficients of a non-recursive, digital filter.";"8";"DIGITAL_FILTER.html";"8664"
"217";"DILATE";"Implements morphologic dilation operator on binary and grayscale images.";"29";"DILATE.html";"13028"
"218";"DINDGEN";"Returns a double-precision array with each element set to its subscript.";"10";"DINDGEN.html";"10203"
"219";"DISSOLVE";"Provides a digital 'dissolve' effect for images.";"29";"DISSOLVE.html";"30694"
"220";"DIST";"Creates array with each element proportional to its frequency.";"55";"DIST.html";"10903"
"221";"DISTANCE_MEASURE";"Computes the pairwise distance between a set of items or observations.";"56";"DISTANCE_MEASURE.html";"5762"
"222";"DLM_LOAD";"Explicitly causes a DLM to be loaded.";"25";"DLM_LOAD.html";"6751"
"223";"DLM_REGISTER";"Registers a Dynamically Loadable Module (DLM) in IDL.";"25";"DLM_REGISTER.html";"4030"
"224";"DOC_LIBRARY";"Extracts documentation headers from IDL programs.";"28";"DOC_LIBRARY.html";"4702"
"225";"DOUBLE";"Converts argument to double-precision type.";"89";"DOUBLE.html";"17512"
"226";"DRAW_ROI Procedure";"Draws a region or group of regions to the current Direct Graphics device.";"22";"DRAW_ROI_Procedure.html";"5370"
"227";"D Routines";;"1";"D_list.html";"3315"
"228";".COMPILE";"Compiles programs without running.";"24";"_COMPILE.html";"15321"
"229";".CONTINUE";"Continues execution of a stopped program.";"24";"_CONTINUE.html";"6359"
"230";".EDIT";"Opens files in editor windows of the IDL Workbench.";"24";"_EDIT.html";"3365"
"231";".FULL_RESET_SESSION";"Does everything .RESET_SESSION does, plus additional reset tasks such as unloading sharable libraries.";"24";"_FULL_RESET_SESSION.html";"4738"
"232";".GO";"Executes a previously compiled $MAIN$ program.";"24";"_GO.html";"4095"
"233";".OUT";"Continues execution until the current routine returns.";"24";"_OUT.html";"3681"
"234";".RESET_SESSION";"Resets much of the state of an IDL session without requiring the user to exit and restart the IDL session.";"24";"_RESET_SESSION.html";"8252"
"235";".RETURN";"Continues execution until RETURN statement.";"24";"_RETURN.html";"3697"
"236";".RNEW";"Erases $MAIN$ program variables and then executes .RUN.";"24";"_RNEW.html";"4392"
"237";".RUN";"Compiles and executes IDL commands from files or keyboard.";"24";"_RUN.html";"13127"
"238";".SKIP";"Skips over the next n statements and then single steps.";"24";"_SKIP.html";"5247"
"239";".STEP";"Executes one or n statements from the current position.";"24";"_STEP.html";"5237"
"240";".STEPOVER";"Executes a single statement if the statement doesn't call a routine.";"24";"_STEPOVER.html";"3944"
"241";".TRACE";"Similar to .CONTINUE, but displays each line of code before execution.";"24";"_TRACE.html";"3991"
"242";"Dot Commands";;"1";"symbols.html";"3285"
"243";"EDGE_DOG";"Applies the Difference of Gaussians filter to an image.";"29";"EDGE_DOG.html";"5525"
"244";"EFONT";"Interactive vector font editor and display tool.";"26";"EFONT.html";"4533"
"245";"EIGENQL";"Computes eigenvalues and eigenvectors of a real, symmetric array.";"49";"EIGENQL.html";"5890"
"246";"EIGENVEC";"Computes eigenvectors of a real, non-symmetric array.";"49";"EIGENVEC.html";"5577"
"247";"ELLIPSE";"Adds an ellipse annotation to an existing graphic.";"27";"ELLIPSE.html";"11163"
"248";"ELMHES";"Reduces nonsymmetric array to upper Hessenberg form.";"49";"ELMHES.html";"3921"
"249";"EMBOSS";"Generates an array containing difference values that represent edges in the original image.";"29";"EMBOSS.html";"6549"
"250";"EMPTY Procedure";"Empties the graphics output buffer.";"22";"EMPTY_Procedure.html";"4636"
"251";"ENABLE_SYSRTN";"Enables/disables IDL system routines.";"76";"ENABLE_SYSRTN.html";"3484"
"252";"EOF";"Tests the specified file for the end-of-file condition.";"40";"EOF.html";"10324"
"253";"EOS Routines";"HDF-EOS (Hierarchical Data Format-Earth Observing System) routines.";"138";"EOS_Routines.html";"2515"
"254";"ERASE Procedure";"Erases the screen of the current graphics device, or starts a new page if the device is a printer.";"22";"ERASE_Procedure.html";"8645"
"255";"ERF";"Returns the value of an error function.";"61";"ERF.html";"8193"
"256";"ERFC";"Returns the value of a complementary error function.";"61";"ERFC.html";"6034"
"257";"ERFCX";"Returns the value of a scaled complementary error function.";"61";"ERFCX.html";"4213"
"258";"ERODE";"Implements the erosion operator on binary and grayscale images and vectors.";"29";"ERODE.html";"7236"
"259";"ERRORPLOT";"Draws a line plot, with error bars surrounding each vertex.";"27";"ERRORPLOT.html";"29515"
"260";"ERRPLOT Procedure";"Plots error bars over a previously drawn plot.";"22";"ERRPLOT_Procedure.html";"16221"
"261";"ESTIMATOR_FILTER";"Applies an order statistic noise-reduction filter to a one-channel image.";"29";"ESTIMATOR_FILTER.html";"5018"
"262";"EXECUTE";"Compiles, executes IDL statements contained in a string.";"76";"EXECUTE.html";"16183"
"263";"EXIT";"Quits IDL and exits back to the operating system.";"76";"EXIT.html";"11104"
"264";"EXP";"Returns the natural exponential function of given expression.";"55";"EXP.html";"14187"
"265";"EXPAND";"Shrinks/expands image using bilinear interpolation.";"29";"EXPAND.html";"5769"
"266";"EXPAND_PATH";"Expands path-definition string into full path name for use with the !PATH system variable.";"76";"EXPAND_PATH.html";"9737"
"267";"EXPINT";"Returns the value of the exponential integral.";"61";"EXPINT.html";"5499"
"268";"EXTRAC";"Returns sub-matrix of input array. Array operators (e.g., * and :) should usually be used instead.";"29";"EXTRAC.html";"6555"
"269";"EXTRACT_SLICE";"Returns 2D planar slice extracted from volume.";"11";"EXTRACT_SLICE.html";"5718"
"270";"E Routines";;"1";"E_list.html";"3107"
"271";"FACTORIAL";"Computes the factorial N!.";"63";"FACTORIAL.html";"23977"
"272";"FFT";"Returns the Fast Fourier Transform of an array.";"8";"FFT.html";"32567"
"273";"FILEPATH";"Returns full path to a file in the IDL distribution.";"35";"FILEPATH.html";"25515"
"274";"FILE_BASENAME";"Returns the final segment of a file path.";"35";"FILE_BASENAME.html";"13586"
"275";"FILE_CHMOD";"Changes the current access permission associated with a file or directory.";"35";"FILE_CHMOD.html";"6062"
"276";"FILE_COPY";"Copies files or directories to a new location.";"35";"FILE_COPY.html";"10880"
"277";"FILE_DELETE";"Removes a file or empty directory.";"35";"FILE_DELETE.html";"12726"
"278";"FILE_DIRNAME";"Returns the directory name of a file path consisting of everything except the final segment of the file path.";"35";"FILE_DIRNAME.html";"9374"
"279";"FILE_EXPAND_PATH";"Returns a fully qualified path regardless of the current working directory.";"35";"FILE_EXPAND_PATH.html";"5017"
"280";"FILE_INFO";"Returns status information about a file.";"35";"FILE_INFO.html";"10295"
"281";"FILE_LINES";"Returns the number of lines of text in a file.";"35";"FILE_LINES.html";"13312"
"282";"FILE_LINK";"Creates Unix file links.";"35";"FILE_LINK.html";"5235"
"283";"FILE_MKDIR";"Creates a new directory or directories.";"35";"FILE_MKDIR.html";"14613"
"284";"FILE_MOVE";"Renames files and directories.";"35";"FILE_MOVE.html";"10326"
"285";"FILE_POLL_INPUT";"Blocks processing until it detects that a read operation on a specified file will succeed.";"35";"FILE_POLL_INPUT.html";"3983"
"286";"FILE_READLINK";"Returns the path pointed to by a Unix symbolic link.";"35";"FILE_READLINK.html";"4036"
"287";"FILE_SAME";"Determines it two different file names refer to the same underlying file.";"35";"FILE_SAME.html";"4082"
"288";"FILE_SEARCH";"Returns a string array containing the names of all files matching the input path specification.";"35";"FILE_SEARCH.html";"53443"
"289";"FILE_TEST";"Test a file or directory for existence and other specific attributes.";"35";"FILE_TEST.html";"23098"
"290";"FILE_WHICH";"Returns the path for the first file for the given name found by searching the specified path.";"35";"FILE_WHICH.html";"7167"
"291";"FINDGEN";"Returns a floating-point array with each element set to its subscript.";"10";"FINDGEN.html";"31734"
"292";"FINITE";"Returns True if its argument is finite.";"54";"FINITE.html";"32104"
"293";"FIX";"Converts argument to integer type, or type specified by TYPE keyword.";"89";"FIX.html";"30434"
"294";"FLICK Procedure";"Causes the display to flicker between two output images at a given rate.";"22";"FLICK_Procedure.html";"6347"
"295";"FLOAT";"Converts argument to single-precision floating-point.";"89";"FLOAT.html";"21018"
"296";"FLOOR";"Returns closest integer less than or equal to argument.";"55";"FLOOR.html";"12382"
"297";"FLOW3";"Draws lines representing a 3D flow/velocity field.";"11";"FLOW3.html";"4810"
"298";"FLTARR";"Returns a single-precision, floating-point vector or array.";"10";"FLTARR.html";"25292"
"299";"FLUSH";"Flushes file unit buffers.";"40";"FLUSH.html";"8291"
"300";"FOR";"Executes one or more statements repeatedly, incrementing or decrementing a variable with each repetition, until a condition is met.";"83";"FOR.html";"79803"
"301";"FOREACH";"Executes one or more statements for each element of a variable (which can be an array, list, or hash table). Within the FOREACH loop, the element's value and (optionally) the key or index to which the element corresponds are available.";"83";"FOREACH.html";"19187"
"302";"FORMAT_AXIS_VALUES";"Formats numbers as strings for use as axis values.";"22";"FORMAT_AXIS_VALUES.html";"4187"
"303";"FORWARD_FUNCTION";"Causes argument(s) to be interpreted as functions rather than variables (versions of IDL prior to 5.0 used parentheses to declare arrays).";"76";"FORWARD_FUNCTION.html";"7239"
"304";"FREE_LUN";"Frees previously-reserved file units.";"40";"FREE_LUN.html";"11496"
"305";"FSTAT";"Returns information about a specified file unit.";"35";"FSTAT.html";"7707"
"306";"FULSTR";"Restores a sparse matrix to full storage mode.";"60";"FULSTR.html";"3439"
"307";"FUNCT";"Evaluates the sum of a Gaussian and a 2nd-order polynomial and optionally returns the value of its partial derivatives.";"47";"FUNCT.html";"4721"
"308";"FUNCTION";"Defines a function.";"76";"FUNCTION.html";"7729"
"309";"FV_TEST";"Performs the F-variance test.";"51";"FV_TEST.html";"4154"
"310";"FX_ROOT";"Computes real and complex roots of a univariate nonlinear function using an optimal Muller's method.";"57";"FX_ROOT.html";"6443"
"311";"FZ_ROOTS";"Finds the roots of a complex polynomial using Laguerre's method.";"57";"FZ_ROOTS.html";"6749"
"312";"F_CVF";"Computes the cutoff value in an F distribution.";"59";"F_CVF.html";"3788"
"313";"F_PDF";"Computes the F distribution function.";"59";"F_PDF.html";"4155"
"314";"F Routines";;"1";"F_list.html";"3520"
"315";"3D Visualization";;"1";"3D_Visualization.html";"12681"
"316";"Array Creation";;"1";"Array_Creation.html";"13316"
"317";"Array Manipulation";;"1";"Array_Manipulation.html";"13003"
"318";"Color Table Manipulation";;"18";"Color_Table_Manipulation.html";"10320"
"319";"Date and Time";;"1";"Date_and_Time.html";"17420"
"320";"Debugging";;"1";"Debugging.html";"10368"
"321";"Dialog Routines";;"1";"Dialog_Routines.html";"5280"
"322";"Direct Graphics";;"1";"Direct_Graphics.html";"7641"
"323";"Error Handling";;"1";"Error_Handling.html";"386"
"324";"Executive Commands";;"1";"Executive_Commands.html";"5872"
"325";"External Linking";;"1";"External_Linking.html";"4713"
"326";"Font Manipulation";;"1";"Font_Manipulation.html";"4579"
"327";"Graphics";;"1";"Graphics.html";"10957"
"328";"Help Routines";;"1";"Help_Routines.html";"4072"
"329";"Input/Output";;"1";"Input_Output.html";"11817"
"330";"Language Catalogs";;"1";"Language_Catalogs.html";"4042"
"331";"Object Class Library";;"1";"Object_Class_Library.html";"6454"
"332";"Operating System Access";;"1";"Operating_System_Access.html";"4701"
"334";"Programming and IDL Control";;"1";"Programming_and_IDL_Cont.html";"5445"
"335";"Query Routines";;"1";"Query_Routines.html";"4945"
"336";"Saving/Restoring a Session";;"1";"Saving_Restoring_a_Sessi.html";"6184"
"337";"Scope Functions";;"1";"Scope_Functions.html";"3820"
"338";"Statements";;"1";"Statements.html";"4510"
"339";"String Processing";;"1";"String_Processing.html";"7378"
"340";"Type Conversion";;"1";"Type_Conversion.html";"4809"
"342";"Widget Routines";;"1";"Widget_Routines.html";"7359"
"343";"Widget Routines, Compound";;"1";"Widget_Routines__Compoun.html";"8152"
"344";"Window Routines";;"1";"Window_Routines.html";"4048"
"345";"Animation";;"1";"animation_func_list.html";"6029"
"346";"List of IDL Routines by Topic";;"1";"funclisting.html";"6438"
"347";"iTools";;"1";"iTools.html";"6122"
"348";"Image Processing";;"1";"image_processing_list.html";"8858"
"349";"Mapping";;"1";"mapping_funct_list.html";"6528"
"350";"Mathematics";;"1";"mathematics_funt_list.html";"12091"
"15507";"What's New in IDL 8.4.1";;"135";"Whats_New_8_4_1.html";"31591"
"352";"Signal Processing";;"1";"signalprocessing_func_li.html";"9757"
"353";"Structures";;"1";"structures_func_list.html";"4402"
"354";"GAMMA";"Returns the gamma function of X.";"61";"GAMMA.html";"7429"
"355";"GAMMA_CT";"Applies gamma correction to a color table.";"18";"GAMMA_CT.html";"4962"
"356";"GAUSS2DFIT";"Fits a 2D elliptical Gaussian equation to rectilinearly gridded data.";"47";"GAUSS2DFIT.html";"13765"
"357";"GAUSSFIT";"Fits the sum of a Gaussian and a quadratic.";"47";"GAUSSFIT.html";"28742"
"358";"GAUSSIAN_FUNCTION";"Creates a Gaussian kernel used in convolution.";"8";"GAUSSIAN_FUNCTION.html";"11337"
"359";"GAUSSINT";"Returns integral of Gaussian probability function.";"59";"GAUSSINT.html";"4689"
"360";"GAUSS_CVF";"Computes cutoff value in Gaussian distribution.";"59";"GAUSS_CVF.html";"4514"
"361";"GAUSS_PDF";"Computes Gaussian distribution function.";"59";"GAUSS_PDF.html";"8059"
"362";"GAUSS_SMOOTH";"Smoothes data using a Gaussian kernel. Also known as a Gaussian blur, it is typically used to reduce noise and detail in an image.";"8";"GAUSS_SMOOTH.html";"14618"
"363";"GETENV";"Returns the value of an environment variable.";"74";"GETENV.html";"8749"
"364";"GETWINDOWS";"Retrieves a specific graphic window or all graphics windows.";"27";"GETWINDOWS.html";"5848"
"365";"GET_DRIVE_LIST";"Returns string array of the names of valid drives/volumes for the file system.";"74";"GET_DRIVE_LIST.html";"3371"
"366";"GET_DXF_OBJECTS";"Returns an IDLgrModel containing graphics from a given DXF file.";"39";"GET_DXF_OBJECTS.html";"3072"
"367";"GET_KBRD";"Gets one input IDL character.";"40";"GET_KBRD.html";"7143"
"368";"GET_LOGIN_INFO";"Returns the name of the computer running the IDL process, as well as the user's login name.";"76";"GET_LOGIN_INFO.html";"3679"
"369";"GET_LUN";"Reserves a logical unit number (file unit).";"40";"GET_LUN.html";"12404"
"370";"GET_SCREEN_SIZE";"Returns dimensions of the screen.";"74";"GET_SCREEN_SIZE.html";"6429"
"371";"GOTO";"Transfers program control to point specified by label.";"83";"GOTO.html";"17424"
"372";"GRIB Routines";"Read and write GRIdded Binary (GRIB) 1 and GRIB 2 files.";"104";"GRIB_Routines.html";"5106"
"373";"GRIB_CLONE";"Clones an existing handle using the context of the original handle.";"104";"GRIB_CLONE.html";"2491"
"374";"GRIB_CLOSE";"Closes a GRIB file.";"104";"GRIB_CLOSE.html";"2436"
"375";"GRIB_COUNT";"Returns the number of messages in the file.";"104";"GRIB_COUNT.html";"2608"
"376";"GRIB_FIND_NEAREST";"Finds the four nearest points of a latitude/longitude point.";"104";"GRIB_FIND_NEAREST.html";"3319"
"377";"GRIB_GET";"Returns a value from a key/value pair.";"104";"GRIB_GET.html";"3252"
"378";"GRIB_GET_API_VERSION";"Returns the current GRIB API version number.";"104";"GRIB_GET_API_VERSION.html";"2366"
"379";"GRIB_GET_ARRAY";"Gets a value array from a key.";"104";"GRIB_GET_ARRAY.html";"2681"
"380";"GRIB_GET_DOUBLE_ELEMENTS";"Gets (as a DOUBLE array) the elements of the key whose indexes are listed in the input array index.";"104";"GRIB_GET_DOUBLE_ELEMENTS.html";"2547"
"381";"GRIB_GET_MESSAGE_SIZE";"Returns the size of the coded message in bytes.";"104";"GRIB_GET_MESSAGE_SIZE.html";"2259"
"382";"GRIB_GET_NATIVE_TYPE";"Retrieves the native type of a key.";"104";"GRIB_GET_NATIVE_TYPE.html";"2237"
"383";"GRIB_GET_SIZE";"Returns the number of coded values from a key.";"104";"GRIB_GET_SIZE.html";"2480"
"384";"GRIB_GET_VALUES";"Gets an array of values.";"104";"GRIB_GET_VALUES.html";"4081"
"385";"GRIB_GRIBEX_MODE";"Turns the GRIBEX compatibility mode on or off.";"104";"GRIB_GRIBEX_MODE.html";"2538"
"386";"GRIB_GTS_HEADER";"Turns GTS headers on or off.";"104";"GRIB_GTS_HEADER.html";"2209"
"387";"GRIB_INDEX_GET";"Returns the distinct key values contained in the index.";"104";"GRIB_INDEX_GET.html";"2393"
"388";"GRIB_INDEX_GET_SIZE";"Returns the number of distinct values of the Key contained in Gindex.";"104";"GRIB_INDEX_GET_SIZE.html";"2336"
"389";"GRIB_INDEX_NEW_FROM_FILE";"Creates a new index from a file.";"104";"GRIB_INDEX_NEW_FROM_FILE.html";"2612"
"390";"GRIB_INDEX_READ";"Loads an index from a file.";"104";"GRIB_INDEX_READ.html";"2538"
"391";"GRIB_INDEX_RELEASE";"Deletes the GRIB index and releases the memory.";"104";"GRIB_INDEX_RELEASE.html";"2336"
"392";"GRIB_INDEX_SELECT";"Selects the message subset where Key equals Value.";"104";"GRIB_INDEX_SELECT.html";"2315"
"393";"GRIB_INDEX_WRITE";"Writes an index to a file for later use.";"104";"GRIB_INDEX_WRITE.html";"2240"
"394";"GRIB_IS_MISSING";"Checks if a key value is missing.";"104";"GRIB_IS_MISSING.html";"2040"
"395";"GRIB_ITERATOR_DELETE";"Deletes the iterator handle and frees the memory.";"104";"GRIB_ITERATOR_DELETE.html";"2215"
"396";"GRIB_ITERATOR_NEW";"Creates a new iterator from a handle, using current geometry and values.";"104";"GRIB_ITERATOR_NEW.html";"2300"
"397";"GRIB_ITERATOR_NEXT";"Gets the next value from an iterator.";"104";"GRIB_ITERATOR_NEXT.html";"2185"
"398";"GRIB_KEYS_ITERATOR_DELETE";"Deletes the iterator.";"104";"GRIB_KEYS_ITERATOR_DELETE.html";"2126"
"399";"GRIB_KEYS_ITERATOR_GET_NAME";"Gets the key name from the iterator.";"104";"GRIB_KEYS_ITERATOR_GET_NAME.html";"2251"
"400";"GRIB_KEYS_ITERATOR_NEW";"Creates a new iterator from a valid and initialized handle.";"104";"GRIB_KEYS_ITERATOR_NEW.html";"2159"
"401";"GRIB_KEYS_ITERATOR_NEXT";"Steps to the next iterator.";"104";"GRIB_KEYS_ITERATOR_NEXT.html";"2225"
"402";"GRIB_KEYS_ITERATOR_REWIND";"Rewinds a key iterator.";"104";"GRIB_KEYS_ITERATOR_REWIND.html";"2266"
"403";"GRIB_MULTI_APPEND";"Appends a single-field GRIB message to a multi-field GRIB message.";"104";"GRIB_MULTI_APPEND.html";"1931"
"404";"GRIB_MULTI_NEW";"Creates a new multi field handle.";"104";"GRIB_MULTI_NEW.html";"2384"
"405";"GRIB_MULTI_RELEASE";"Deletes the multi field handle and releases the memory.";"104";"GRIB_MULTI_RELEASE.html";"2316"
"406";"GRIB_MULTI_SUPPORT";"Turns support for multiple fields in a single message on or off.";"104";"GRIB_MULTI_SUPPORT.html";"2185"
"407";"GRIB_MULTI_WRITE";"Writes a multi-field message to a file.";"104";"GRIB_MULTI_WRITE.html";"2260"
"408";"GRIB_NEW_FROM_FILE";"Returns a GRIB handle from a file ID.";"104";"GRIB_NEW_FROM_FILE.html";"3567"
"409";"GRIB_NEW_FROM_INDEX";"Creates a new handle from an index after selecting the key values.";"104";"GRIB_NEW_FROM_INDEX.html";"2463"
"410";"GRIB_NEW_FROM_SAMPLES";"Creates a new GRIB handle from a sample.";"104";"GRIB_NEW_FROM_SAMPLES.html";"2293"
"411";"GRIB_OPEN";"Opens a GRIB file.";"104";"GRIB_OPEN.html";"3868"
"412";"GRIB_RELEASE";"Deletes the file handle and releases the file memory.";"104";"GRIB_RELEASE.html";"2745"
"413";"GRIB_SET";"Sets the value of a scalar key in a GRIB message.";"104";"GRIB_SET.html";"2834"
"414";"GRIB_SET_ARRAY";"Sets the value of a scalar key in a GRIB message.";"104";"GRIB_SET_ARRAY.html";"2230"
"415";"GRIB_SET_MISSING";"Sets the value of a key as ""missing"".";"104";"GRIB_SET_MISSING.html";"2089"
"416";"GRIB_SET_VALUES";"Sets the contents of the values key.";"104";"GRIB_SET_VALUES.html";"2219"
"417";"GRIB_WRITE_MESSAGE";"Writes a message to a file.";"104";"GRIB_WRITE_MESSAGE.html";"2308"
"418";"GRID3";"Creates a regularly-gridded 3D dataset from a set of scattered 3D nodes.";"50";"GRID3.html";"13118"
"419";"GRIDDATA";"Interpolates scattered data values and locations sampled on a plane or a sphere to a regular grid.";"50";"GRIDDATA.html";"22928"
"420";"GRID_INPUT";"Preprocesses and sorts two-dimensional scattered data points, and removes duplicate values.";"50";"GRID_INPUT.html";"6524"
"421";"GRID_TPS";"Uses thin plate splines to interpolate a set of values over a regular 2D grid, from irregularly sampled data values.";"47";"GRID_TPS.html";"5471"
"422";"GS_ITER";"Solves linear system using Gauss-Seidel iteration.";"53";"GS_ITER.html";"3476"
"423";"G Routines";;"1";"G_list.html";"2899"
"424";"HANNING";"Creates Hanning and Hamming windows.";"8";"HANNING.html";"9526"
"425";"HASH";"Creates a new hash variable.";"76";"HASH.html";"16452"
"426";"HDF Overview";;"1";"HDF_Overview.html";"6681"
"427";"HDF_AN_ANNLEN";"Returns the number of characters contained in the HDF AN annotation specified by the annotation identifier Annotation_id.";"103";"HDF_AN_ANNLEN.html";"2211"
"428";"HDF_AN_ANNLIST";"Obtains a list of identifiers of the annotations specified by the parameter Annotation_type and attached  to the object identified by Object_tag, and Object_ref.";"103";"HDF_AN_ANNLIST.html";"2118"
"429";"HDF_AN_ATYPE2TAG";"Returns the HDF tag that corresponds to the annotation type specified by the parameter Annotation_type.";"103";"HDF_AN_ATYPE2TAG.html";"2123"
"430";"HDF_AN_CREATE";"Creates an HDF AN data annotation of type Annotation_type specified by Object_tag and Object_ref.";"103";"HDF_AN_CREATE.html";"2216"
"431";"HDF_AN_CREATEF";"Creates an HDF AN file annotation of the type specified by the parameter Annotation_type.";"103";"HDF_AN_CREATEF.html";"2388"
"432";"HDF_AN_END";"Terminates access to the HDF AN interface identified by Annotation_id, which is previously initialized by a call to HDF_AN_START.";"103";"HDF_AN_END.html";"2128"
"433";"HDF_AN_ENDACCESS";"Terminates access to the annotation identified by the parameter Annotation_id.";"103";"HDF_AN_ENDACCESS.html";"2004"
"434";"HDF_AN_FILEINFO";"Retrieves the total number of the four kinds of annotations and stores them in the appropriate parameters";"103";"HDF_AN_FILEINFO.html";"2326"
"435";"HDF_AN_GET_TAGREF";"Retrieves the HDF tag and reference number of the annotation identified by its index and by its annotation type.";"103";"HDF_AN_GET_TAGREF.html";"2522"
"436";"HDF_AN_ID2TAGREF";"Retrieves the HDF tag/reference number pair of the HDF AN annotation identified by its annotation identifier.";"103";"HDF_AN_ID2TAGREF.html";"2050"
"437";"HDF_AN_NUMANN";"Returns the total number of HDF AN annotations that are of a given type and that are attached to the object identified by its HDF tag and HDF reference number.";"103";"HDF_AN_NUMANN.html";"2166"
"438";"HDF_AN_READANN";"Reads the HDF AN annotation identified by the annotation identifier and stores the annotation into a variable.";"103";"HDF_AN_READANN.html";"2247"
"439";"HDF_AN_SELECT";"Obtains the HDF AN identifier of the annotation specified by its index and by its annotation type.";"103";"HDF_AN_SELECT.html";"2146"
"440";"HDF_AN_START";"Initializes the HDF AN interface for the specified file.";"103";"HDF_AN_START.html";"2190"
"441";"HDF_AN_TAG2ATYPE";"Returns the HDF AN annotation type that corresponds to the specified HDF annotation tag.";"103";"HDF_AN_TAG2ATYPE.html";"2205"
"442";"HDF_AN_TAGREF2ID";"Returns the HDF AN identifier of the annotation specified by its HDF tag and its HDF reference number.";"103";"HDF_AN_TAGREF2ID.html";"2033"
"443";"HDF_AN_WRITEANN";"Writes the annotation text provided in the parameter annotation to the HDF AN annotation specified by the parameter Annotation_id.";"103";"HDF_AN_WRITEANN.html";"2106"
"444";"HDF_BROWSER";"Opens a GUI to view contents of HDF, HDF-EOS, or NetCDF file.";"103";"HDF_BROWSER.html";"5108"
"445";"HDF_CLOSE";"Closes the HDF file associated with the given file handle.";"103";"HDF_CLOSE.html";"2850"
"446";"HDF_DELDD";"Deletes a tag or reference from the list of data descriptors in an HDF file.";"103";"HDF_DELDD.html";"2387"
"447";"HDF_DF24_ADDIMAGE";"Writes a 24-bit raster image to an HDF file.";"103";"HDF_DF24_ADDIMAGE.html";"2217"
"448";"HDF_DF24_GETIMAGE";"Reads a 24-bit raster image from an HDF file.";"103";"HDF_DF24_GETIMAGE.html";"2335"
"449";"HDF_DF24_GETINFO";"Retrieves information about the current 24-bit HDF image.";"103";"HDF_DF24_GETINFO.html";"2431"
"450";"HDF_DF24_LASTREF";"Returns the reference number of the most recently read or written 24-bit image in an HDF file.";"103";"HDF_DF24_LASTREF.html";"2263"
"451";"HDF_DF24_NIMAGES";"Returns the number of 24-bit images in an HDF file.";"103";"HDF_DF24_NIMAGES.html";"2488"
"452";"HDF_DF24_READREF";"Sets the reference number of the image in an HDF file to be read by the next call to HDF_DF24_GETIMAGE.";"103";"HDF_DF24_READREF.html";"2552"
"453";"HDF_DF24_RESTART";"Causes the next call to HDF_DF24_GETIMAGE to read the first 24-bit image in the HDF file.";"103";"HDF_DF24_RESTART.html";"2464"
"454";"HDF_DFAN_ADDFDS";"Adds a file description to an HDF file.";"103";"HDF_DFAN_ADDFDS.html";"2430"
"455";"HDF_DFAN_ADDFID";"Adds a file annotation to an HDF file.";"103";"HDF_DFAN_ADDFID.html";"2289"
"456";"HDF_DFAN_GETDESC";"Reads the description for the given tag and reference number in an HDF file.";"103";"HDF_DFAN_GETDESC.html";"2278"
"457";"HDF_DFAN_GETFDS";"Reads the next available file description from an HDF file.";"103";"HDF_DFAN_GETFDS.html";"2094"
"458";"HDF_DFAN_GETFID";"Reads the next available file annotation from an HDF file.";"103";"HDF_DFAN_GETFID.html";"2129"
"459";"HDF_DFAN_GETLABEL";"Reads the label for the given tag-reference pair in an HDF file.";"103";"HDF_DFAN_GETLABEL.html";"2034"
"460";"HDF_DFAN_LABLIST";"Retrieves a list of the reference numbers and the corresponding labels for a given tag in an HDF file.";"103";"HDF_DFAN_LABLIST.html";"1916"
"461";"HDF_DFAN_LASTREF";"Returns the reference number of the most recently read or written annotation in an HDF file.";"103";"HDF_DFAN_LASTREF.html";"2116"
"462";"HDF_DFAN_PUTDESC";"Writes a description for the given tag and reference number in an HDF file.";"103";"HDF_DFAN_PUTDESC.html";"2050"
"463";"HDF_DFAN_PUTLABEL";"Writes a label for the given tag and reference number in an HDF file.";"103";"HDF_DFAN_PUTLABEL.html";"2000"
"464";"HDF_DFP_ADDPAL";"Appends a palette to an HDF file.";"103";"HDF_DFP_ADDPAL.html";"2117"
"465";"HDF_DFP_GETPAL";"Reads the next available palette from an HDF file.";"103";"HDF_DFP_GETPAL.html";"2168"
"466";"HDF_DFP_LASTREF";"Returns the reference number of the most recently read or written palette in an HDF file/";"103";"HDF_DFP_LASTREF.html";"2004"
"467";"HDF_DFP_NPALS";"Returns the number of palettes present in an HDF file.";"103";"HDF_DFP_NPALS.html";"2208"
"468";"HDF_DFP_PUTPAL";"Appends a palette to an HDF file.";"103";"HDF_DFP_PUTPAL.html";"2083"
"469";"HDF_DFP_READREF";"Sets the reference number of the palette in an HDF file to be read by the next call to HDF_DFP_GETPAL.";"103";"HDF_DFP_READREF.html";"2040"
"470";"HDF_DFP_RESTART";"Causes the next call to HDF_DFR8_GETPAL to read from the first palette in an HDF file.";"103";"HDF_DFP_RESTART.html";"2302"
"471";"HDF_DFP_WRITEREF";"Sets the reference number for the next palette to be written to an HDF file.";"103";"HDF_DFP_WRITEREF.html";"2052"
"472";"HDF_DFR8_ADDIMAGE";"Appends an 8-bit raster image to the specified HDF file.";"103";"HDF_DFR8_ADDIMAGE.html";"2228"
"473";"HDF_DFR8_GETIMAGE";"Retrieves an image and optionally, its palette, from an HDF file.";"103";"HDF_DFR8_GETIMAGE.html";"1994"
"474";"HDF_DFR8_GETINFO";"Retrieves information about the current 8-bit HDF image.";"103";"HDF_DFR8_GETINFO.html";"2237"
"475";"HDF_DFR8_LASTREF";"Returns the reference number of the most recently read or written 8-bit image in an HDF file.";"103";"HDF_DFR8_LASTREF.html";"2149"
"476";"HDF_DFR8_NIMAGES";"Returns the number of 8-bit images in the specified HDF file.";"103";"HDF_DFR8_NIMAGES.html";"2150"
"477";"HDF_DFR8_PUTIMAGE";"Writes an 8-bit raster image as the first image in an HDF file.";"103";"HDF_DFR8_PUTIMAGE.html";"2039"
"478";"HDF_DFR8_READREF";"Sets the reference number of the image to be read from an HDF file by the next call to HDF_DFR8_GETIMAGE.";"103";"HDF_DFR8_READREF.html";"2121"
"479";"HDF_DFR8_RESTART";"Causes the next call to HDF_DFR8_GETIMAGE to read from the first image in the HDF file.";"103";"HDF_DFR8_RESTART.html";"2317"
"480";"HDF_DFR8_SETPALETTE";"Sets the current palette to be used for subsequent images in an HDF file.";"103";"HDF_DFR8_SETPALETTE.html";"2009"
"481";"HDF_DUPDD";"Generates new references to existing data in an HDF file.";"103";"HDF_DUPDD.html";"2106"
"482";"HDF_EXISTS";"Returns True if the HDF scientific data format library is supported on the current IDL platform.";"103";"HDF_EXISTS.html";"2208"
"483";"HDF_GR_ATTRINFO";"Retrieves the name, data type, and number of values of the attribute for the HDF data object identified by the parameter obj_id.";"103";"HDF_GR_ATTRINFO.html";"2117"
"484";"HDF_GR_CREATE";"Creates an HDF GR raster image.";"103";"HDF_GR_CREATE.html";"2135"
"485";"HDF_GR_END";"Terminates the HDF GR interface session identified by the parameter gr_id.";"103";"HDF_GR_END.html";"2070"
"486";"HDF_GR_ENDACCESS";"Terminates access to the raster image identified by the parameter ri_id and disposes of the raster image identifier.";"103";"HDF_GR_ENDACCESS.html";"1810"
"487";"HDF_GR_FILEINFO";"Retrieves the number of raster images and global attributes for the HDF GR interface identified by the parameter gr_id.";"103";"HDF_GR_FILEINFO.html";"2010"
"488";"HDF_GR_FINDATTR";"Finds the index of an HDF data object's attribute given its attribute name.";"103";"HDF_GR_FINDATTR.html";"1842"
"489";"HDF_GR_GETATTR";"Obtains all values of the HDF GR attribute that is specified by attr_index and is attached to the object identified by the parameter obj_id.";"103";"HDF_GR_GETATTR.html";"2196"
"490";"HDF_GR_GETCHUNKINFO";"Retrieves chunking information about the HDF GR raster image identified by the parameter ri_id into the parameters dim_length and flag.";"103";"HDF_GR_GETCHUNKINFO.html";"2009"
"491";"HDF_GR_GETIMINFO";"Retrieves general information about an HDF GR raster image.";"103";"HDF_GR_GETIMINFO.html";"2125"
"492";"HDF_GR_GETLUTID";"Gets the identifier of the HDF GR palette attached to the raster image identified by the parameter ri_id.";"103";"HDF_GR_GETLUTID.html";"1926"
"493";"HDF_GR_GETLUTINFO";"Retrieves the number of pixel components, data type, interlace mode, and number of color lookup table entries of the palette identified by the parameter pal_id.";"103";"HDF_GR_GETLUTINFO.html";"1893"
"494";"HDF_GR_IDTOREF";"Returns the HDF reference number of the raster image identified by the parameter ri_id.";"103";"HDF_GR_IDTOREF.html";"2135"
"495";"HDF_GR_LUTTOREF";"Returns the HDF reference number of the palette identified by the parameter pal_id.";"103";"HDF_GR_LUTTOREF.html";"1953"
"496";"HDF_GR_NAMETOINDEX";"Returns the index of the raster image named gr_name for the HDF GR interface identified by the parameter gr_id.";"103";"HDF_GR_NAMETOINDEX.html";"1929"
"497";"HDF_GR_READIMAGE";"Reads the subsample of the HDF GR raster image specified by the parameter ri_id into the variable data.";"103";"HDF_GR_READIMAGE.html";"1966"
"498";"HDF_GR_READLUT";"Reads the palette specified by the parameter pal_id into the pal_data variable.";"103";"HDF_GR_READLUT.html";"2112"
"499";"HDF_GR_REFTOINDEX";"Returns the index of the HDF GR raster image specified by the parameter gr_ref.";"103";"HDF_GR_REFTOINDEX.html";"2220"
"500";"HDF_GR_SELECT";"Obtains the identifier of the HDF GR raster image specified by its index.";"103";"HDF_GR_SELECT.html";"2162"
"501";"HDF_GR_SETATTR";"Attaches the attribute to the HDF GR object specified by the parameter obj_id.";"103";"HDF_GR_SETATTR.html";"1915"
"502";"HDF_GR_SETCHUNK";"Makes the HDF GR raster image  a chunked raster image according to  chunking and compression information.";"103";"HDF_GR_SETCHUNK.html";"1992"
"503";"HDF_GR_SETCHUNKCACHE";"Allows the user to set the maximum number of chunks to be cached (maxcache).";"103";"HDF_GR_SETCHUNKCACHE.html";"1985"
"504";"HDF_GR_SETCOMPRESS";"Specifies the type of compression for the specified HDF GR raster image.";"103";"HDF_GR_SETCOMPRESS.html";"2126"
"505";"HDF_GR_SETEXTERNALFILE";"Causes the specified HDF GR raster image be written to the specified external file, at the specified offset.";"103";"HDF_GR_SETEXTERNALFILE.html";"2048"
"506";"HDF_GR_START";"Initializes the HDF GR interface for the specified file.";"103";"HDF_GR_START.html";"2168"
"507";"HDF_GR_WRITEIMAGE";"Writes the subsample of the raster image data stored in the variable data to the specified raster image.";"103";"HDF_GR_WRITEIMAGE.html";"2209"
"508";"HDF_GR_WRITELUT";"Writes a palette with the specified palette data and identifier.";"103";"HDF_GR_WRITELUT.html";"2355"
"509";"HDF_HDF2IDLTYPE";"Converts an HDF data type code into an IDL variable type code.";"103";"HDF_HDF2IDLTYPE.html";"2683"
"510";"HDF_IDL2HDFTYPE";"Converts an IDL variable type code into an HDF data type code.";"103";"HDF_IDL2HDFTYPE.html";"2448"
"511";"HDF_ISHDF";"Determines whether or not a specified file in an HDF file.";"103";"HDF_ISHDF.html";"2584"
"512";"HDF_LIB_INFO";"Returns information about the HDF Library being used by this version of IDL, or information about the version of HDF used to create a particular HDF file.";"103";"HDF_LIB_INFO.html";"2456"
"513";"HDF_NEWREF";"Returns the next available reference number for an HDF file.";"103";"HDF_NEWREF.html";"2159"
"514";"HDF_NUMBER";"Returns the number of tags in an HDF file or the number of references associated with a given tag.";"103";"HDF_NUMBER.html";"2245"
"515";"HDF_OPEN";"Opens or creates an HDF file for reading and/or writing.";"103";"HDF_OPEN.html";"4193"
"516";"HDF_PACKDATA";"Packs a set IDL variable into an array of raw byte data.";"103";"HDF_PACKDATA.html";"2155"
"517";"HDF_READ";"Extracts HDF, HDF-EOS, and NetCDF data and metadata into an output structure.";"103";"HDF_READ.html";"8486"
"518";"HDF_SD_ADDDATA";"Writes a hyperslab of values to an SD dataset.";"103";"HDF_SD_ADDDATA.html";"4002"
"519";"HDF_SD_ATTRFIND";"Locates the index of an HDF attribute given its name.";"103";"HDF_SD_ATTRFIND.html";"2883"
"520";"HDF_SD_ATTRINFO";"Reads or retrieves information about an SD attribute.";"103";"HDF_SD_ATTRINFO.html";"3769"
"521";"HDF_SD_ATTRSET";"Writes attributes to an open HDF SD dataset.";"103";"HDF_SD_ATTRSET.html";"3446"
"522";"HDF_SD_CREATE";"Creates and defines a Scientific Dataset (SD) for an HDF file.";"103";"HDF_SD_CREATE.html";"3636"
"523";"HDF_SD_DIMGET";"Retrieves information about an SD dataset dimension.";"103";"HDF_SD_DIMGET.html";"2747"
"524";"HDF_SD_DIMGETID";"Returns a dimension ID given a dataset's 'SDdataset_id' and a dimension number.";"103";"HDF_SD_DIMGETID.html";"2437"
"525";"HDF_SD_DIMSET";"Sets the scale and data strings for an SD dimension.";"103";"HDF_SD_DIMSET.html";"2712"
"526";"HDF_SD_END";"Closes the SD interface to an HDF file.";"103";"HDF_SD_END.html";"2852"
"527";"HDF_SD_ENDACCESS";"Closes an SD dataset interface.";"103";"HDF_SD_ENDACCESS.html";"2561"
"528";"HDF_SD_FILEINFO";"Retrieves the number of datasets and global attributes in an HDF file.";"103";"HDF_SD_FILEINFO.html";"3591"
"529";"HDF_SD_GETDATA";"Retrieves a hyperslab of values from an SD dataset.";"103";"HDF_SD_GETDATA.html";"3553"
"530";"HDF_SD_GETINFO";"Retrieves information about an SD dataset.";"103";"HDF_SD_GETINFO.html";"3071"
"531";"HDF_SD_IDTOREF";"Converts a SD data set ID into a SD data set reference number.";"103";"HDF_SD_IDTOREF.html";"2442"
"532";"HDF_SD_ISCOORDVAR";"Determines whether or not the specified dataset ID represents a NetCDF 'coordinate' variable.";"103";"HDF_SD_ISCOORDVAR.html";"2170"
"533";"HDF_SD_NAMETOINDEX";"Returns an SD dataset index given its name and SD interface ID.";"103";"HDF_SD_NAMETOINDEX.html";"3235"
"534";"HDF_SD_REFTOINDEX";"Returns a scientific dataset's index given its reference number and SD interface ID.";"103";"HDF_SD_REFTOINDEX.html";"2226"
"535";"HDF_SD_SELECT";"Returns an SD dataset ID given the current SD interface ID, and the zero-based SD dataset index.";"103";"HDF_SD_SELECT.html";"3301"
"536";"HDF_SD_SETCOMPRESS";"Compresses an existing HDF SD dataset or sets the compression method of a newly created HDF SD dataset.";"103";"HDF_SD_SETCOMPRESS.html";"2761"
"537";"HDF_SD_SETEXTFILE";"Moves data values from a dataset into an external file.";"103";"HDF_SD_SETEXTFILE.html";"2145"
"538";"HDF_SD_SETINFO";"Sets information about an SD dataset.";"103";"HDF_SD_SETINFO.html";"2518"
"539";"HDF_SD_START";"Opens or creates an HDF file and initializes the SD interface.";"103";"HDF_SD_START.html";"4966"
"540";"HDF_UNPACKDATA";"Unpacks an array of byte data into a number of IDL variables.";"103";"HDF_UNPACKDATA.html";"2219"
"541";"HDF_VD_ATTACH";"Accesses a VData with the given Idin an HDF file.";"103";"HDF_VD_ATTACH.html";"2445"
"542";"HDF_VD_ATTRFIND";"Returns an attribute's index number given the name of an attribute associated with the specified VData or VData/field pair.";"103";"HDF_VD_ATTRFIND.html";"2209"
"543";"HDF_VD_ATTRINFO";"Reads or retrieves information about a VData attribute or a VData field attribute from the currently attached HDF VData structure.";"103";"HDF_VD_ATTRINFO.html";"2210"
"544";"HDF_VD_ATTRSET";"Writes a VData attribute or a VData field attribute to the currently attached HDF VData structure.";"103";"HDF_VD_ATTRSET.html";"2453"
"545";"HDF_VD_DETACH";"Called when done accessing a VData in an HDF file.";"103";"HDF_VD_DETACH.html";"2483"
"546";"HDF_VD_FDEFINE";"Adds a new field specification for a VData in an HDF file.";"103";"HDF_VD_FDEFINE.html";"2158"
"547";"HDF_VD_FEXIST";"Determines whether the specified fields exist in the given HDF file.";"103";"HDF_VD_FEXIST.html";"2040"
"548";"HDF_VD_FIND";"Returns the reference number of a VData with the specified name in an HDF file.";"103";"HDF_VD_FIND.html";"2762"
"549";"HDF_VD_GET";"A general VData inquiry routine.";"103";"HDF_VD_GET.html";"2185"
"550";"HDF_VD_GETID";"Returns the VData reference number for the next VData in an HDF file after the specified VData_id.";"103";"HDF_VD_GETID.html";"2144"
"551";"HDF_VD_GETINFO";"A general VData inquiry routine.";"103";"HDF_VD_GETINFO.html";"2362"
"552";"HDF_VD_INSERT";"Adds a VData or VGroup to the contents of a VGroup in an HDF file.";"103";"HDF_VD_INSERT.html";"2251"
"553";"HDF_VD_ISATTR";"Determines whether or not a VData is storing an attribute.";"103";"HDF_VD_ISATTR.html";"2316"
"554";"HDF_VD_ISVD";"Determines if the object associated with Id is a VData in an HDF file.";"103";"HDF_VD_ISVD.html";"2194"
"555";"HDF_VD_ISVG";"Determines if the object associated with Id is a VGroup in an HDF file.";"103";"HDF_VD_ISVG.html";"2071"
"556";"HDF_VD_LONE";"Returns an array containing all VDatas in an HDF file that are not contained in another VData.";"103";"HDF_VD_LONE.html";"2127"
"557";"HDF_VD_NATTRS";"Returns the number of attributes associated with the specified VData or VData/field pair.";"103";"HDF_VD_NATTRS.html";"2181"
"558";"HDF_VD_READ";"Reads data from a VData in an HDF file.";"103";"HDF_VD_READ.html";"2649"
"559";"HDF_VD_SEEK";"Moves the read pointer within the specified VData in an HDF file to a specific record number. Note that the record number is zero-based.";"103";"HDF_VD_SEEK.html";"2206"
"560";"HDF_VD_SETINFO";"Specifies general information about a VData in an HDF file.";"103";"HDF_VD_SETINFO.html";"2272"
"561";"HDF_VD_WRITE";"Stores data in a VData in an HDF file.";"103";"HDF_VD_WRITE.html";"2476"
"562";"HDF_VG_ADDTR";"Adds a tag and reference to the specified VGroup in an HDF file.";"103";"HDF_VG_ADDTR.html";"2564"
"563";"HDF_VG_ATTACH";"Attaches (opens) a VGroup in an HDF file for reading or writing.";"103";"HDF_VG_ATTACH.html";"2627"
"564";"HDF_VG_DETACH";"Should be called when you are finished accessing a VGroup in an HDF file.";"103";"HDF_VG_DETACH.html";"2235"
"565";"HDF_VG_GETID";"Returns the VGroup ID for the next VGroup after the specified VGroup_id in an HDF file.";"103";"HDF_VG_GETID.html";"2394"
"566";"HDF_VG_GETINFO";"A general VGroup inquiry routine.";"103";"HDF_VG_GETINFO.html";"2340"
"567";"HDF_VG_GETNEXT";"Returns the reference number of the next object inside a VGroup in an HDF file.";"103";"HDF_VG_GETNEXT.html";"2305"
"568";"HDF_VG_GETTR";"Returns the tag/reference pair at the specified position within a VGroup in an HDF file.";"103";"HDF_VG_GETTR.html";"2194"
"569";"HDF_VG_GETTRS";"Returns the tag/reference pairs of the HDF file objects belonging to the specified Vgroup.";"103";"HDF_VG_GETTRS.html";"2188"
"570";"HDF_VG_INQTR";"Returns true if the specified tag and reference pair is linked to the specified VGroup in an HDF file.";"103";"HDF_VG_INQTR.html";"2205"
"571";"HDF_VG_INSERT";"Adds a VData or VGroup to the contents of a VGroup in an HDF file.";"103";"HDF_VG_INSERT.html";"2124"
"572";"HDF_VG_ISVD";"Returns true if the object associated with Id is a VData in an HDF file.";"103";"HDF_VG_ISVD.html";"2116"
"573";"HDF_VG_ISVG";"Returns true if the object associated the Id is a VGroup in an HDF file.";"103";"HDF_VG_ISVG.html";"2403"
"574";"HDF_VG_LONE";"Returns an array containing the IDs of all VGroups in an HDF file that are not contained in another VGroup.";"103";"HDF_VG_LONE.html";"2225"
"575";"HDF_VG_NUMBER";"Returns the number of HDF file objects in the specified VGroup.";"103";"HDF_VG_NUMBER.html";"2018"
"576";"HDF_VG_SETINFO";"Sets the name and class of a VGroup.";"103";"HDF_VG_SETINFO.html";"2259"
"577";"HDF-EOS Routines";;"1";"HDF-EOS_Routines.html";"4421"
"578";"EOS_EH_CONVANG";"Converts angles between three units: decimal degrees, radians, and packed degrees-minutes-seconds.";"138";"EOS_EH_CONVANG.html";"3145"
"579";"EOS_EH_GETVERSION";"Used to retrieve the HDF-EOS version string of an HDF-EOS file, which is returned in the version argument.";"138";"EOS_EH_GETVERSION.html";"2033"
"580";"EOS_EH_IDINFO";"Returns the HDF file IDs corresponding to the HDF-EOS file ID returned by EOS_SW_OPEN, EOS_GD_OPEN, or EOS_PT_OPEN.";"138";"EOS_EH_IDINFO.html";"2266"
"581";"EOS_EXISTS";"Determines whether the current HDF-EOS extensions are supported on the current platform.";"138";"EOS_EXISTS.html";"2506"
"582";"EOS_GD_ATTACH";"Attaches to the grid using the gridname parameter as the identifier.";"138";"EOS_GD_ATTACH.html";"2831"
"583";"EOS_GD_ATTRINFO";"Returns number type and number of elements (count) of a grid attribute.";"138";"EOS_GD_ATTRINFO.html";"2246"
"584";"EOS_GD_BLKSOMOFFSET";"Writes block SOM offset values.";"138";"EOS_GD_BLKSOMOFFSET.html";"2373"
"585";"EOS_GD_CLOSE";"Closes the HDF grid file.";"138";"EOS_GD_CLOSE.html";"2447"
"586";"EOS_GD_COMPINFO";"Returns the compression code and compression parameters for a given field.";"138";"EOS_GD_COMPINFO.html";"2224"
"587";"EOS_GD_CREATE";"Creates a grid within the file.";"138";"EOS_GD_CREATE.html";"2860"
"588";"EOS_GD_DEFBOXREGION";"Defines a longitude-latitude box region for a grid.";"138";"EOS_GD_DEFBOXREGION.html";"2139"
"589";"EOS_GD_DEFCOMP";"Sets the HDF field compression for subsequent grid field definitions.";"138";"EOS_GD_DEFCOMP.html";"2485"
"590";"EOS_GD_DEFDIM";"Defines dimensions that are used by the field definition routines (described subsequently) to establish the size of the field.";"138";"EOS_GD_DEFDIM.html";"2361"
"591";"EOS_GD_DEFFIELD";"Defines data fields to be stored in the grid.";"138";"EOS_GD_DEFFIELD.html";"2460"
"592";"EOS_GD_DEFORIGIN";"Defines the origin of the grid data.";"138";"EOS_GD_DEFORIGIN.html";"2290"
"593";"EOS_GD_DEFPIXREG";"Defines whether the pixel center or pixel corner is used when requesting the location of a given pixel.";"138";"EOS_GD_DEFPIXREG.html";"2162"
"594";"EOS_GD_DEFPROJ";"Defines the GCTP projection and projection parameters of the grid.";"138";"EOS_GD_DEFPROJ.html";"3799"
"595";"EOS_GD_DEFTILE";"Defines the tiling dimensions for fields defined following this function call.";"138";"EOS_GD_DEFTILE.html";"2352"
"596";"EOS_GD_DEFVRTREGION";"Subsets on a monotonic field or contiguous elements of a dimension.";"138";"EOS_GD_DEFVRTREGION.html";"2182"
"597";"EOS_GD_DETACH";"Detaches from the grid interface.";"138";"EOS_GD_DETACH.html";"2285"
"598";"EOS_GD_DIMINFO";"Retrieves the size of the specified dimension.";"138";"EOS_GD_DIMINFO.html";"2467"
"599";"EOS_GD_DUPREGION";"Copies the information stored in a current region or period to a new region or period and generates a new id.";"138";"EOS_GD_DUPREGION.html";"2232"
"600";"EOS_GD_EXTRACTREGION";"Reads data into the data buffer from a subsetted region as defined by EOS_GD_DEFBOXREGION.";"138";"EOS_GD_EXTRACTREGION.html";"2111"
"601";"EOS_GD_FIELDINFO";"Retrieves information on a specific data field.";"138";"EOS_GD_FIELDINFO.html";"2163"
"602";"EOS_GD_GETFILLVALUE";"Retrieves the fill value for the specified field.";"138";"EOS_GD_GETFILLVALUE.html";"2249"
"603";"EOS_GD_GETPIXELS";"Returns the pixel rows and columns for specified longitude/latitude pairs.";"138";"EOS_GD_GETPIXELS.html";"2423"
"604";"EOS_GD_GETPIXVALUES";"Reads data from a data field for the specified pixels.";"138";"EOS_GD_GETPIXVALUES.html";"2228"
"605";"EOS_GD_GRIDINFO";"Returns the number of rows, columns and the location, in meters, of the upper left and lower right corners of the grid image.";"138";"EOS_GD_GRIDINFO.html";"2172"
"606";"EOS_GD_INQATTRS";"Retrieves information about attributes defined in a grid.";"138";"EOS_GD_INQATTRS.html";"2161"
"607";"EOS_GD_INQDIMS";"Retrieves information about dimensions defined in a grid.";"138";"EOS_GD_INQDIMS.html";"2021"
"608";"EOS_GD_INQFIELDS";"Retrieves information about the data fields defined in grid.";"138";"EOS_GD_INQFIELDS.html";"2121"
"609";"EOS_GD_INQGRID";"Retrieves number and names of grids defined in HDF-EOS file.";"138";"EOS_GD_INQGRID.html";"2429"
"610";"EOS_GD_INTERPOLATE";"Performs bilinear interpolation on a grid field.";"138";"EOS_GD_INTERPOLATE.html";"2306"
"611";"EOS_GD_NENTRIES";"Returns the number of entries and descriptive string buffer size for a specified entity.";"138";"EOS_GD_NENTRIES.html";"2127"
"612";"EOS_GD_OPEN";"Creates or opens an HDF grid file.";"138";"EOS_GD_OPEN.html";"2651"
"613";"EOS_GD_ORIGININFO";"Retrieves the origin code.";"138";"EOS_GD_ORIGININFO.html";"2297"
"614";"EOS_GD_PIXREGINFO";"Retrieves the pixel registration code.";"138";"EOS_GD_PIXREGINFO.html";"3260"
"615";"EOS_GD_PROJINFO";"Retrieves the GCTP projection code, zone code, spheroid code and the projection parameters of the grid.";"138";"EOS_GD_PROJINFO.html";"2346"
"616";"EOS_GD_QUERY";"Returns information about a specified grid.";"138";"EOS_GD_QUERY.html";"2298"
"617";"EOS_GD_READATTR";"Reads attributes from the grid.";"138";"EOS_GD_READATTR.html";"2117"
"618";"EOS_GD_READFIELD";"Reads data from the grid field.";"138";"EOS_GD_READFIELD.html";"2540"
"619";"EOS_GD_READTILE";"Reads a single tile of data from a field.";"138";"EOS_GD_READTILE.html";"2114"
"620";"EOS_GD_REGIONINFO";"Returns information about a subsetted region for a particular field.";"138";"EOS_GD_REGIONINFO.html";"2058"
"621";"EOS_GD_SETFILLVALUE";"Sets the fill value for the specified field.";"138";"EOS_GD_SETFILLVALUE.html";"2220"
"622";"EOS_GD_SETTILECACHE";"Sets tile cache parameters.";"138";"EOS_GD_SETTILECACHE.html";"2098"
"623";"EOS_GD_TILEINFO";"Returns the tiling code, tiling rank, and tiling dimensions for a given field.";"138";"EOS_GD_TILEINFO.html";"2456"
"624";"EOS_GD_WRITEATTR";"Writes/updates attributes in the grid.";"138";"EOS_GD_WRITEATTR.html";"2050"
"625";"EOS_GD_WRITEFIELD";"Writes data to the grid field.";"138";"EOS_GD_WRITEFIELD.html";"2405"
"626";"EOS_GD_WRITEFIELDMETA";"Writes the field metadata for a grid field not defined by the Grid API.";"138";"EOS_GD_WRITEFIELDMETA.html";"1994"
"627";"EOS_GD_WRITETILE";"Writes a single tile of data to a field.";"138";"EOS_GD_WRITETILE.html";"2069"
"628";"EOS_PT_ATTACH";"Attaches to the point using the pointname parameter as the identifier.";"138";"EOS_PT_ATTACH.html";"2566"
"629";"EOS_PT_ATTRINFO";"Returns number type and number of elements (count) of a point attribute.";"138";"EOS_PT_ATTRINFO.html";"2125"
"630";"EOS_PT_BCKLINKINFO";"Returns the linkfield to the previous level.";"138";"EOS_PT_BCKLINKINFO.html";"2085"
"631";"EOS_PT_CLOSE";"Closes the HDF point file.";"138";"EOS_PT_CLOSE.html";"2119"
"632";"EOS_PT_CREATE";"Creates a new point structure.";"138";"EOS_PT_CREATE.html";"2332"
"633";"EOS_PT_DEFBOXREGION";"Defines an area of interest for a point.";"138";"EOS_PT_DEFBOXREGION.html";"2297"
"634";"EOS_PT_DEFLEVEL";"Defines a level within the point.";"138";"EOS_PT_DEFLEVEL.html";"2423"
"635";"EOS_PT_DEFLINKAGE";"Defines the linkfield between two levels.";"138";"EOS_PT_DEFLINKAGE.html";"2284"
"636";"EOS_PT_DEFTIMEPERIOD";"Defines a time period for a point.";"138";"EOS_PT_DEFTIMEPERIOD.html";"2020"
"637";"EOS_PT_DEFVRTREGION";"Allows the user to select those records within a point whose field values are within a given range.";"138";"EOS_PT_DEFVRTREGION.html";"2158"
"638";"EOS_PT_DETACH";"Detaches from a point data set.";"138";"EOS_PT_DETACH.html";"2172"
"639";"EOS_PT_EXTRACTPERIOD";"Reads data from the designated level fields into the data buffer from the subsetted time period.";"138";"EOS_PT_EXTRACTPERIOD.html";"2046"
"640";"EOS_PT_EXTRACTREGION";"Reads data from the designated level fields into the data buffer from the subsetted area of interest.";"138";"EOS_PT_EXTRACTREGION.html";"2153"
"641";"EOS_PT_FWDLINKINFO";"Returns the linkfield to the given level.";"138";"EOS_PT_FWDLINKINFO.html";"2037"
"642";"EOS_PT_GETLEVELNAME";"Returns the name of a level given the level number (0-based).";"138";"EOS_PT_GETLEVELNAME.html";"1904"
"643";"EOS_PT_GETRECNUMS";"Returns the record numbers in one level that are connected to a given set of records in a different level.";"138";"EOS_PT_GETRECNUMS.html";"2037"
"644";"EOS_PT_INQATTRS";"Retrieves information about the attributes defined in a point structure.";"138";"EOS_PT_INQATTRS.html";"2234"
"645";"EOS_PT_INQPOINT";"Retrieves the number and names of points defined in an HDF-EOS file.";"138";"EOS_PT_INQPOINT.html";"2024"
"646";"EOS_PT_LEVELINDX";"Returns the level index for a given level specified by name.";"138";"EOS_PT_LEVELINDX.html";"2028"
"647";"EOS_PT_LEVELINFO";"Returns information about the fields in a given level.";"138";"EOS_PT_LEVELINFO.html";"2209"
"648";"EOS_PT_NFIELDS";"Returns the number of fields in a level.";"138";"EOS_PT_NFIELDS.html";"2102"
"649";"EOS_PT_NLEVELS";"Returns the number of levels in a point.";"138";"EOS_PT_NLEVELS.html";"2148"
"650";"EOS_PT_NRECS";"Returns the number of records in a given level.";"138";"EOS_PT_NRECS.html";"2121"
"651";"EOS_PT_OPEN";"Creates or opens an HDF point file.";"138";"EOS_PT_OPEN.html";"2233"
"652";"EOS_PT_PERIODINFO";"Returns information about a subsetted time period for a particular fieldlist.";"138";"EOS_PT_PERIODINFO.html";"2256"
"653";"EOS_PT_PERIODRECS";"Returns the record numbers within a subsetted time period for a particular level.";"138";"EOS_PT_PERIODRECS.html";"1966"
"654";"EOS_PT_QUERY";"Returns information about a specified point.";"138";"EOS_PT_QUERY.html";"2353"
"655";"EOS_PT_READATTR";"Reads attributes.";"138";"EOS_PT_READATTR.html";"2126"
"656";"EOS_PT_READLEVEL";"Reads data from the specified fields and records of a single level in a point.";"138";"EOS_PT_READLEVEL.html";"2008"
"657";"EOS_PT_REGIONINFO";"Returns information about a subsetted area of interest for a particular fieldlist.";"138";"EOS_PT_REGIONINFO.html";"2188"
"658";"EOS_PT_REGIONRECS";"Returns the record numbers within a subsetted geographic region for a particular level.";"138";"EOS_PT_REGIONRECS.html";"2040"
"659";"EOS_PT_SIZEOF";"Returns information about specified fields in a point regardless of level.";"138";"EOS_PT_SIZEOF.html";"2285"
"660";"EOS_PT_UPDATELEVEL";"Updates the specified fields and records of a single level.";"138";"EOS_PT_UPDATELEVEL.html";"2044"
"661";"EOS_PT_WRITEATTR";"Writes/updates an attribute in a point.";"138";"EOS_PT_WRITEATTR.html";"2058"
"662";"EOS_PT_WRITELEVEL";"Writes (appends) full records to a level.";"138";"EOS_PT_WRITELEVEL.html";"2284"
"663";"EOS_QUERY";"Returns information about the makeup of an HDF-EOS file.";"138";"EOS_QUERY.html";"2398"
"664";"EOS_SW_ATTACH";"Attaches to the swath using the swathname parameter as the identifier.";"138";"EOS_SW_ATTACH.html";"2990"
"665";"EOS_SW_ATTRINFO";"Returns the number type and number of elements (count) of a swath attribute.";"138";"EOS_SW_ATTRINFO.html";"2313"
"666";"EOS_SW_CLOSE";"Closes the HDF swath file.";"138";"EOS_SW_CLOSE.html";"2483"
"667";"EOS_SW_COMPINFO";"Returns the compression code and compression parameters for a given field.";"138";"EOS_SW_COMPINFO.html";"2107"
"668";"EOS_SW_CREATE";"Creates a swath within the file.";"138";"EOS_SW_CREATE.html";"2497"
"669";"EOS_SW_DEFBOXREGION";"Defines a longitude-latitude box region for a swath.";"138";"EOS_SW_DEFBOXREGION.html";"2335"
"670";"EOS_SW_DEFCOMP";"Sets the HDF field compression for subsequent swath field definitions.";"138";"EOS_SW_DEFCOMP.html";"2145"
"671";"EOS_SW_DEFDATAFIELD";"Defines data fields to be stored in the swath.";"138";"EOS_SW_DEFDATAFIELD.html";"2056"
"672";"EOS_SW_DEFDIM";"Defines dimensions that are used by the field definition functions (described subsequently) to establish the size of the field.";"138";"EOS_SW_DEFDIM.html";"2378"
"673";"EOS_SW_DEFDIMMAP";"Defines monotonic mapping between the geolocation and data dimensions.";"138";"EOS_SW_DEFDIMMAP.html";"2120"
"674";"EOS_SW_DEFGEOFIELD";"Defines geolocation fields to be stored in the swath.";"138";"EOS_SW_DEFGEOFIELD.html";"2239"
"675";"EOS_SW_DEFIDXMAP";"Defines a nonregular mapping between the geolocation and       the data dimension.";"138";"EOS_SW_DEFIDXMAP.html";"2142"
"676";"EOS_SW_DEFTIMEPERIOD";"Defines a time period for a swath.";"138";"EOS_SW_DEFTIMEPERIOD.html";"2583"
"677";"EOS_SW_DEFVRTREGION";"Perform subsetting along the 'Track' dimension, this function allows the user to subset along any dimension.";"138";"EOS_SW_DEFVRTREGION.html";"2027"
"678";"EOS_SW_DETACH";"Detaches from the swath interface.";"138";"EOS_SW_DETACH.html";"2268"
"679";"EOS_SW_DIMINFO";"Retrieves the size of the specified dimension.";"138";"EOS_SW_DIMINFO.html";"2109"
"680";"EOS_SW_DUPREGION";"Copies the information stored in a current region or period to a new region or period and generates a new id.";"138";"EOS_SW_DUPREGION.html";"2072"
"681";"EOS_SW_EXTRACTPERIOD";"Reads data into the data buffer from the subsetted time period.";"138";"EOS_SW_EXTRACTPERIOD.html";"2126"
"682";"EOS_SW_EXTRACTREGION";"Reads data into the data buffer from the subsetted region.";"138";"EOS_SW_EXTRACTREGION.html";"2170"
"683";"EOS_SW_FIELDINFO";"Retrieves information on a specific data field.";"138";"EOS_SW_FIELDINFO.html";"2244"
"684";"EOS_SW_GETFILLVALUE";"Retrieves the fill value for the specified field.";"138";"EOS_SW_GETFILLVALUE.html";"2209"
"685";"EOS_SW_IDXMAPINFO";"Retrieves the size of the indexed array and the array of indexed elements of the specified geolocation mapping.";"138";"EOS_SW_IDXMAPINFO.html";"2393"
"686";"EOS_SW_INQATTRS";"Retrieves information about attributes defined in swath.";"138";"EOS_SW_INQATTRS.html";"2259"
"687";"EOS_SW_INQDATAFIELDS";"Retrieves information about all of the data fields defined in swath.";"138";"EOS_SW_INQDATAFIELDS.html";"2280"
"688";"EOS_SW_INQDIMS";"Retrieves information about all of the dimensions defined in swath.";"138";"EOS_SW_INQDIMS.html";"2341"
"689";"EOS_SW_INQGEOFIELDS";"Retrieves information about all of the geolocation fields defined in swath.";"138";"EOS_SW_INQGEOFIELDS.html";"2337"
"690";"EOS_SW_INQIDXMAPS";"Retrieves information about all of the indexed geolocation/data mappings defined in swath.";"138";"EOS_SW_INQIDXMAPS.html";"2261"
"691";"EOS_SW_INQMAPS";"Retrieves information about all of the (non-indexed) geolocation relations defined in swath.";"138";"EOS_SW_INQMAPS.html";"2215"
"692";"EOS_SW_INQSWATH";"Retrieves number and names of swaths defined in the HDF-EOS file.";"138";"EOS_SW_INQSWATH.html";"2467"
"693";"EOS_SW_MAPINFO";"Retrieves the offset and increment of the specified geolocation mapping.";"138";"EOS_SW_MAPINFO.html";"2168"
"694";"EOS_SW_NENTRIES";"Returns number of entries and descriptive string buffer size for a specified entity.";"138";"EOS_SW_NENTRIES.html";"2149"
"695";"EOS_SW_OPEN";"Creates or opens an HDF swath file.";"138";"EOS_SW_OPEN.html";"3176"
"696";"EOS_SW_PERIODINFO";"Returns information about a subsetted time period for a particular field.";"138";"EOS_SW_PERIODINFO.html";"2277"
"697";"EOS_SW_QUERY";"Returns information about a specified swath.";"138";"EOS_SW_QUERY.html";"2220"
"698";"EOS_SW_READATTR";"Reads attributes from a swath field.";"138";"EOS_SW_READATTR.html";"2249"
"699";"EOS_SW_READFIELD";"Reads data from a swath field.";"138";"EOS_SW_READFIELD.html";"2653"
"700";"EOS_SW_REGIONINFO";"Returns information about a subsetted region for a particular field.";"138";"EOS_SW_REGIONINFO.html";"2031"
"701";"EOS_SW_SETFILLVALUE";"Sets the fill value for the specified field.";"138";"EOS_SW_SETFILLVALUE.html";"1907"
"702";"EOS_SW_WRITEATTR";"Writes/updates attributes in a swath.";"138";"EOS_SW_WRITEATTR.html";"2116"
"703";"EOS_SW_WRITEDATAMETA";"Writes field metadata for an existing data field.";"138";"EOS_SW_WRITEDATAMETA.html";"1883"
"704";"EOS_SW_WRITEFIELD";"Writes data to a swath field";"138";"EOS_SW_WRITEFIELD.html";"3319"
"705";"EOS_SW_WRITEGEOMETA";"Writes field metadata for an existing geolocation field.";"138";"EOS_SW_WRITEGEOMETA.html";"1871"
"706";"HDF-EOS Overview";"An extension of NCSA (National Center for Supercomputing Applications) HDF and uses HDF calls as an underlying basis.";"1";"HDF-EOS_Overview.html";"5524"
"707";"H5A_CLOSE";"Closes the specified attribute and releases resources used by it.";"102";"H5A_CLOSE.html";"2328"
"708";"H5A_CREATE";"Creates a dataset as an attribute of another group or dataset.";"102";"H5A_CREATE.html";"2784"
"709";"H5A_DELETE";"Removes the attribute specified by its name from a dataset, group, or named datatype.";"102";"H5A_DELETE.html";"2310"
"710";"H5A_GET_NAME";"Retrieves an attribute name given the attribute identifier number.";"102";"H5A_GET_NAME.html";"2699"
"711";"H5A_GET_NUM_ATTRS";"Returns the number of attributes attached to a group, dataset, or a named datatype.";"102";"H5A_GET_NUM_ATTRS.html";"2712"
"712";"H5A_GET_SPACE";"Returns the identifier number of a copy of the dataspace for an attribute.";"102";"H5A_GET_SPACE.html";"2374"
"713";"H5A_GET_TYPE";"Returns the identifier number of a copy of the datatype for an attribute.";"102";"H5A_GET_TYPE.html";"2458"
"714";"H5A_OPEN_IDX";"Opens an existing attribute by the index of that attribute within an HDF5 file.";"102";"H5A_OPEN_IDX.html";"2812"
"715";"H5A_OPEN_NAME";"Opens an existing attribute by the name of that attribute within an HDF5 file.";"102";"H5A_OPEN_NAME.html";"3303"
"716";"H5A_READ";"Reads the data within an attribute, converting from the HDF5 file datatype into the HDF5 memory datatype, and finally into the corresponding IDL datatype.";"102";"H5A_READ.html";"3400"
"717";"H5A_WRITE";"Writes data to an attribute.";"102";"H5A_WRITE.html";"2654"
"718";"H5D_CLOSE";"Closes the specified dataset and releases its used resources.";"102";"H5D_CLOSE.html";"2761"
"719";"H5D_CREATE";"Creates a dataset at the specified location.";"102";"H5D_CREATE.html";"3742"
"720";"H5D_EXTEND";"Defines the number of dimensions and the size of each dimension.";"102";"H5D_EXTEND.html";"2707"
"721";"H5D_GET_SPACE";"Returns an identifier number for a copy of the dataspace for a dataset.";"102";"H5D_GET_SPACE.html";"3117"
"722";"H5D_GET_STORAGE_SIZE";"Returns the amount of storage in bytes required for a dataset.";"102";"H5D_GET_STORAGE_SIZE.html";"2693"
"723";"H5D_GET_TYPE";"Returns an identifier number for a copy of the datatype for a dataset.";"102";"H5D_GET_TYPE.html";"2638"
"724";"H5D_OPEN";"Opens an existing dataset within an HDF5 file.";"102";"H5D_OPEN.html";"5186"
"725";"H5D_READ";"Reads the data within a dataset, converting from the HDF5 file datatype into the HDF5 memory datatype, and finally into the corresponding IDL datatype.";"102";"H5D_READ.html";"5527"
"726";"H5D_WRITE";"Writes data to a dataset.";"102";"H5D_WRITE.html";"3400"
"727";"H5F_CLOSE";"Closes the specified file and releases resources used by it.";"102";"H5F_CLOSE.html";"3304"
"728";"H5F_CREATE";"The primary function for creating HDF5 files";"102";"H5F_CREATE.html";"4465"
"729";"H5F_IS_HDF5";"Determines if a file is in the HDF5 format.";"102";"H5F_IS_HDF5.html";"3608"
"730";"H5F_OPEN";"Opens an existing HDF5 file.";"102";"H5F_OPEN.html";"5695"
"731";"H5G_CLOSE";"Closes the specified group and releases resources used by it.";"102";"H5G_CLOSE.html";"2573"
"732";"H5G_CREATE";"Creates a new empty group and gives it a name.";"102";"H5G_CREATE.html";"2915"
"733";"H5G_GET_COMMENT";"Retrieves a comment string from a specified object.";"102";"H5G_GET_COMMENT.html";"2626"
"734";"H5G_GET_LINKVAL";"Returns the name of the object pointed to by a symbolic link.";"102";"H5G_GET_LINKVAL.html";"2403"
"735";"H5G_GET_MEMBER_NAME";"Retrieves the name of an object within a group, by its zero-based index.";"102";"H5G_GET_MEMBER_NAME.html";"3410"
"736";"H5G_GET_NMEMBERS";"Returns the number of objects within a group.";"102";"H5G_GET_NMEMBERS.html";"2930"
"737";"H5G_GET_NUM_OBJS";"Returns number of objects in the group specified by its identifier.";"102";"H5G_GET_NUM_OBJS.html";"2649"
"738";"H5G_GET_OBJINFO";"Retrieves information from a specified object.";"102";"H5G_GET_OBJINFO.html";"2709"
"739";"H5G_GET_OBJ_NAME_BY_IDX";"Returns a name of an object specified by an index.";"102";"H5G_GET_OBJ_NAME_BY_IDX.html";"2277"
"740";"H5G_LINK";"Creates a link of the specified type.";"102";"H5G_LINK.html";"2449"
"741";"H5G_MOVE";"Renames/moves an object within an HDF5 group or file.";"102";"H5G_MOVE.html";"2351"
"742";"H5G_OPEN";"Opens an existing group within an HDF5 file.";"102";"H5G_OPEN.html";"3426"
"743";"H5G_SET_COMMENT";"Sets a comment for a specified object.";"102";"H5G_SET_COMMENT.html";"2273"
"744";"H5G_UNLINK";"Removes the link to an object from a group.";"102";"H5G_UNLINK.html";"2459"
"745";"H5I_GET_FILE_ID";"Retrieves an identifier for the file containing the specified object.";"102";"H5I_GET_FILE_ID.html";"2417"
"746";"H5I_GET_TYPE";"Returns the object's type.";"102";"H5I_GET_TYPE.html";"2548"
"747";"H5R_CREATE";"Creates a reference to either an object or a dataspace region of a dataset.";"102";"H5R_CREATE.html";"2324"
"748";"H5R_DEREFERENCE";"Opens a reference and returns the object identifier.";"102";"H5R_DEREFERENCE.html";"2246"
"749";"H5R_GET_OBJECT_TYPE";"Returns the type of object that an object reference points to.";"102";"H5R_GET_OBJECT_TYPE.html";"2187"
"750";"H5R_GET_REGION";"Retrieves a dataspace associated with a region reference.";"102";"H5R_GET_REGION.html";"2349"
"751";"H5S_CLOSE";"Releases and terminates access to a dataspace.";"102";"H5S_CLOSE.html";"2371"
"752";"H5S_COPY";"Copies an existing dataspace.";"102";"H5S_COPY.html";"2344"
"753";"H5S_CREATE_SCALAR";"Creates a scalar dataspace.";"102";"H5S_CREATE_SCALAR.html";"2450"
"754";"H5S_CREATE_SIMPLE";"Creates a simple dataspace.";"102";"H5S_CREATE_SIMPLE.html";"3279"
"755";"H5S_GET_SELECT_BOUNDS";"Retrieves the coordinates of the bounding box containing the current dataspace selection.";"102";"H5S_GET_SELECT_BOUNDS.html";"2276"
"756";"H5S_GET_SELECT_ELEM_NPOINTS";"Determines the number of element points in the current dataspace selection.";"102";"H5S_GET_SELECT_ELEM_NPOI.html";"2343"
"757";"H5S_GET_SELECT_ELEM_POINTLIST";"Returns a list of the element points in the current dataspace selection.";"102";"H5S_GET_SELECT_ELEM_POIN.html";"2196"
"758";"H5S_GET_SELECT_HYPER_BLOCKLIST";"Returns a list of the hyperslab blocks in the current dataspace";"102";"H5S_GET_SELECT_HYPER_BLO.html";"2081"
"759";"H5S_GET_SELECT_HYPER_NBLOCKS";"Determines the number of hyperslab blocks in the current dataspace selection.";"102";"H5S_GET_SELECT_HYPER_NBL.html";"2290"
"760";"H5S_GET_SELECT_NPOINTS";"Determines the number of elements in a dataspace selection.";"102";"H5S_GET_SELECT_NPOINTS.html";"2491"
"761";"H5S_GET_SIMPLE_EXTENT_DIMS";"Returns the dimension sizes for a dataspace.";"102";"H5S_GET_SIMPLE_EXTENT_DI.html";"2681"
"762";"H5S_GET_SIMPLE_EXTENT_NDIMS";"Determines the number of dimensions (or rank) of a dataspace.";"102";"H5S_GET_SIMPLE_EXTENT_ND.html";"2272"
"763";"H5S_GET_SIMPLE_EXTENT_NPOINTS";"Determines the number of elements in a dataspace.";"102";"H5S_GET_SIMPLE_EXTENT_NP.html";"2418"
"764";"H5S_GET_SIMPLE_EXTENT_TYPE";"Returns the current class of a dataspace.";"102";"H5S_GET_SIMPLE_EXTENT_TY.html";"2263"
"765";"H5S_IS_SIMPLE";"Determines whether a dataspace is a simple dataspace.";"102";"H5S_IS_SIMPLE.html";"2208"
"766";"H5S_OFFSET_SIMPLE";"Sets the selection offset for a simple dataspace.";"102";"H5S_OFFSET_SIMPLE.html";"2107"
"767";"H5S_SELECT_ALL";"Selects the entire extent of a dataspace.";"102";"H5S_SELECT_ALL.html";"2632"
"768";"H5S_SELECT_ELEMENTS";"Selects array elements to be included in the selection for a dataspace.";"102";"H5S_SELECT_ELEMENTS.html";"2723"
"769";"H5S_SELECT_HYPERSLAB";"Procedure selects a hyperslab region to be included in the selection for a dataspace.";"102";"H5S_SELECT_HYPERSLAB.html";"3117"
"770";"H5S_SELECT_NONE";"Resets the dataspace selection region to include no elements.";"102";"H5S_SELECT_NONE.html";"2235"
"771";"H5S_SELECT_VALID";"Verifies that the selection is within the extent of a dataspace.";"102";"H5S_SELECT_VALID.html";"2237"
"772";"H5S_SET_EXTENT_NONE";"Removes the extent of a dataspace and sets the type to H5S_NO_CLASS.";"102";"H5S_SET_EXTENT_NONE.html";"2112"
"773";"H5S_SET_EXTENT_SIMPLE";"Sets or resets the extent of a dataspace.";"102";"H5S_SET_EXTENT_SIMPLE.html";"2510"
"774";"H5T_ARRAY_CREATE";"Creates an array datatype object.";"102";"H5T_ARRAY_CREATE.html";"2436"
"775";"H5T_CLOSE";"Releases the specified identifier and releases resources used by it.";"102";"H5T_CLOSE.html";"2572"
"776";"H5T_COMMIT";"Commits a transient datatype to a file, creating a new named datatype.";"102";"H5T_COMMIT.html";"2287"
"777";"H5T_COMMITTED";"Determines whether a datatype is a named datatype or a transient type.";"102";"H5T_COMMITTED.html";"2086"
"778";"H5T_COMPOUND_CREATE";"Creates a compound datatype object.";"102";"H5T_COMPOUND_CREATE.html";"2334"
"779";"H5T_COPY";"Copies an existing datatype.";"102";"H5T_COPY.html";"2529"
"780";"H5T_ENUM_CREATE";"Creates an enumeration datatype object.";"102";"H5T_ENUM_CREATE.html";"2362"
"781";"H5T_ENUM_GET_DATA";"Retrieves the name/value pairs from an enumeration datatype object.";"102";"H5T_ENUM_GET_DATA.html";"2185"
"782";"H5T_ENUM_INSERT";"Inserts a new member into an existing enumeration datatype.";"102";"H5T_ENUM_INSERT.html";"2385"
"783";"H5T_ENUM_NAMEOF";"Retrieves the name of a member of an enumeration datatype corresponding to the specified value.";"102";"H5T_ENUM_NAMEOF.html";"2618"
"784";"H5T_ENUM_SET_DATA";"Sets all the name/value pairs on an enumeration datatype object.";"102";"H5T_ENUM_SET_DATA.html";"2789"
"785";"H5T_ENUM_VALUEOF";"Retrieves the value of a member of an enumeration datatype corresponding to the specified name.";"102";"H5T_ENUM_VALUEOF.html";"2250"
"786";"H5T_ENUM_VALUES_TO_NAMES";"Converts values to the corresponding names of an enumeration datatype.";"102";"H5T_ENUM_VALUES_TO_NAMES.html";"2371"
"787";"H5T_EQUAL";"Determines whether two datatype identifiers refer to the same datatype.";"102";"H5T_EQUAL.html";"2264"
"788";"H5T_GET_ARRAY_DIMS";"Returns the dimension sizes for an array datatype object.";"102";"H5T_GET_ARRAY_DIMS.html";"2401"
"789";"H5T_GET_ARRAY_NDIMS";"Determines the number of dimensions (or rank) of an array datatype object.";"102";"H5T_GET_ARRAY_NDIMS.html";"2122"
"790";"H5T_GET_CLASS";"Returns the datatype's class.";"102";"H5T_GET_CLASS.html";"2398"
"791";"H5T_GET_CSET";"Returns the character set type of a string datatype.";"102";"H5T_GET_CSET.html";"2528"
"792";"H5T_GET_EBIAS";"Returns the exponent bias of a floating-point type.";"102";"H5T_GET_EBIAS.html";"2157"
"793";"H5T_GET_FIELDS";"Retrieves information about the positions and sizes of bit fields within a floating-point datatype.";"102";"H5T_GET_FIELDS.html";"2608"
"794";"H5T_GET_INPAD";"Returns the padding method for unused internal bits within a floating-point datatype.";"102";"H5T_GET_INPAD.html";"2498"
"795";"H5T_GET_MEMBER_CLASS";"Returns the datatype class of a compound datatype member.";"102";"H5T_GET_MEMBER_CLASS.html";"2289"
"796";"H5T_GET_MEMBER_INDEX";"Retrieves the index of a specified member of a compound or enumeration datatype.";"102";"H5T_GET_MEMBER_INDEX.html";"2183"
"797";"H5T_GET_MEMBER_NAME";"Retrieves the name of a compound or enumeration datatype member.";"102";"H5T_GET_MEMBER_NAME.html";"2383"
"798";"H5T_GET_MEMBER_OFFSET";"Returns the byte offset of a field within a compound datatype.";"102";"H5T_GET_MEMBER_OFFSET.html";"2370"
"799";"H5T_GET_MEMBER_TYPE";"Returns the datatype identifier for a specified member within a compound datatype.";"102";"H5T_GET_MEMBER_TYPE.html";"2298"
"800";"H5T_GET_MEMBER_VALUE";"Retrieves the value of an enumeration datatype member.";"102";"H5T_GET_MEMBER_VALUE.html";"2345"
"801";"H5T_GET_NMEMBERS";"Returns the number of fields in a compound datatype.";"102";"H5T_GET_NMEMBERS.html";"2537"
"802";"H5T_GET_NORM";"Returns the mantissa normalization of a floating-point datatype.";"102";"H5T_GET_NORM.html";"2767"
"803";"H5T_GET_OFFSET";"Returns the bit offset of the first significant bit in an atomic datatype.";"102";"H5T_GET_OFFSET.html";"2324"
"804";"H5T_GET_ORDER";"Returns the byte order of an atomic datatype.";"102";"H5T_GET_ORDER.html";"2339"
"805";"H5T_GET_PAD";"Returns the padding method of the least significant bit (lsb) and most significant bit (msb) of an atomic datatype.";"102";"H5T_GET_PAD.html";"2522"
"806";"H5T_GET_PRECISION";"Returns the precision in bits of an atomic datatype.";"102";"H5T_GET_PRECISION.html";"2477"
"807";"H5T_GET_SIGN";"Returns the sign type for an integer datatype.";"102";"H5T_GET_SIGN.html";"2496"
"808";"H5T_GET_SIZE";"Returns the size of a datatype in bytes.";"102";"H5T_GET_SIZE.html";"2526"
"809";"H5T_GET_STRPAD";"Returns the padding method for a string datatype.";"102";"H5T_GET_STRPAD.html";"2677"
"810";"H5T_GET_SUPER";"Returns the base datatype from which a datatype is derived.";"102";"H5T_GET_SUPER.html";"2470"
"811";"H5T_GET_TAG";"Retrieves a tag string from an opaque data type.";"102";"H5T_GET_TAG.html";"2431"
"812";"H5T_IDLTYPE";"Returns the IDL type code corresponding to a datatype.";"102";"H5T_IDLTYPE.html";"2456"
"813";"H5T_IDL_CREATE";"Creates a datatype object based on the IDL type of the supplied data.";"102";"H5T_IDL_CREATE.html";"3569"
"814";"H5T_INSERT";"Adds a new member to the end of a compound datatype.";"102";"H5T_INSERT.html";"2769"
"815";"H5T_MEMTYPE";"Returns the native memory datatype corresponding to a file datatype.";"102";"H5T_MEMTYPE.html";"2530"
"816";"H5T_OPEN";"Opens a named datatype.";"102";"H5T_OPEN.html";"2791"
"817";"H5T_REFERENCE_CREATE";"Creates a reference datatype object.";"102";"H5T_REFERENCE_CREATE.html";"2517"
"818";"H5T_SET_TAG";"Sets a tag string on an opaque data type.";"102";"H5T_SET_TAG.html";"2542"
"819";"H5T_STR_TO_VLEN";"Converts an IDL string array to an IDL_H5_VLEN array of strings.";"102";"H5T_STR_TO_VLEN.html";"2431"
"820";"H5T_VLEN_CREATE";"Creates a variable length array datatype object.";"102";"H5T_VLEN_CREATE.html";"2650"
"821";"H5T_VLEN_TO_STR";"Converts an IDL_H5_VLEN array of strings to an IDL string array.";"102";"H5T_VLEN_TO_STR.html";"2465"
"822";"H5_BROWSER";"Opens a GUI to view contents of an HDF5 file.";"102";"H5_BROWSER.html";"7839"
"823";"H5_CLOSE";"Flushes all data to disk, closes file identifiers, and cleans up memory.";"102";"H5_CLOSE.html";"3033"
"824";"H5_CREATE";"Creates and closes a new HDF5 file.";"102";"H5_CREATE.html";"4136"
"825";"H5_GET_LIBVERSION";"Returns the current version of the HDF5 library used by IDL.";"102";"H5_GET_LIBVERSION.html";"2468"
"826";"H5_OPEN";"Initializes the HDF5 library.";"102";"H5_OPEN.html";"3193"
"827";"H5_PARSE";"Recursively descends through an HDF5 file or group and creates an IDL structure containing object information and data.";"102";"H5_PARSE.html";"4893"
"828";"HDF5 Overview";;"1";"HDF5_Overview.html";"20107"
"829";"HDF5 Routines";"Hierarchical Data Format routines (version 5).";"102";"HDF5_Routines.html";"5359"
"830";"HDF Routines";"Hierarchical Data Format routines.";"103";"HDF_Routines.html";"3110"
"831";"HEAP_FREE";"Recursively frees all heap variables referenced by its input argument.";"76";"HEAP_FREE.html";"6331"
"832";"HEAP_GC";"Performs 'garbage collection' on heap variables.";"76";"HEAP_GC.html";"6191"
"833";"HEAP_NOSAVE";"Used to clear the save attribute of pointer or object heap variables.";"76";"HEAP_NOSAVE.html";"3752"
"834";"HEAP_REFCOUNT";"Returns the current reference count for a pointer or object reference.";"76";"HEAP_REFCOUNT.html";"4156"
"835";"HEAP_SAVE";"Used to query whether a pointer or object heap variable is savable. It can also be used to change the heap variable save attribute.";"76";"HEAP_SAVE.html";"4263"
"836";"HELP";"Provides information about the current IDL session.";"28";"HELP.html";"18682"
"837";"HILBERT";"Constructs a Hilbert transform.";"8";"HILBERT.html";"4802"
"838";"HISTOGRAM";"Computes the density function of an array.";"29";"HISTOGRAM.html";"50368"
"839";"HIST_2D";"Returns histogram of two variables.";"63";"HIST_2D.html";"14579"
"840";"HIST_EQUAL";"Histogram-equalizes an image.";"29";"HIST_EQUAL.html";"9286"
"841";"HLS";"Creates color table in Hue, Lightness, Saturation color system.";"18";"HLS.html";"3880"
"842";"HOUGH";"Returns the Hough transform of a two-dimensional image.";"29";"HOUGH.html";"7619"
"843";"HQR";"Returns all eigenvalues of an upper Hessenberg array.";"49";"HQR.html";"4842"
"844";"HSV";"Creates color table based on Hue and Saturation Value color system.";"18";"HSV.html";"4944"
"845";"H_EQ_CT";"Histogram-equalizes the color tables for an image or a region of the display.";"18";"H_EQ_CT.html";"5389"
"846";"H_EQ_INT";"Interactively histogram-equalizes the color tables of an image or a region of the display.";"18";"H_EQ_INT.html";"3770"
"847";"H Routines";;"1";"H_list.html";"3197"
"848";"I18N_MULTIBYTETOUTF8";"Converts multibyte to UTF8.";"87";"I18N_MULTIBYTETOUTF8.html";"3394"
"849";"I18N_MULTIBYTETOWIDECHAR";"Converts multibyte to UTF-16, wide-character (Unicode).";"87";"I18N_MULTIBYTETOWIDECHAR.html";"3087"
"850";"I18N_UTF8TOMULTIBYTE";"Converts UTF-8 to multibyte .";"87";"I18N_UTF8TOMULTIBYTE.html";"3518"
"851";"I18N_WIDECHARTOMULTIBYTE";"Converts UTF-16, wide-character (Unicode) to multibyte.";"87";"I18N_WIDECHARTOMULTIBYTE.html";"3282"
"852";"IBETA";"Computes the incomplete beta function.";"61";"IBETA.html";"4832"
"853";"ICONTOUR";"Creates an iTool and associated user interface (UI) configured to display and manipulate contour data. (iTools)";"41";"ICONTOUR.html";"7761"
"854";"ICONVERTCOORD";"Converts between iTool coordinate systems.";"41";"ICONVERTCOORD.html";"2798"
"855";"IDELETE";"Deletes a tool in the IDL Intelligent Tools system.";"41";"IDELETE.html";"2900"
"856";"IDENTITY";"Returns an identity array (an array with ones along the main diagonal and zeros elsewhere) of the specified dimensions.";"10";"IDENTITY.html";"6350"
"857";"IDLEXBR_ASSISTANT";"Launches the Export Bridge Assistant.";"25";"IDLEXBR_ASSISTANT.html";"2822"
"858";"IDLITSYS_CREATETOOL";"Creates an instance of the specified tool registered within the iTools system.";"41";"IDLITSYS_CREATETOOL.html";"2950"
"859";"IDL_BASE64";"Converts between byte arrays and MIME Base64 encoded scalar strings.";"87";"IDL_BASE64.html";"15623"
"860";"IDL_Container";"A container for other objects.";"172";"IDL_Container.html";"4241"
"861";"IDL_Container Object Class";;"172";"IDL_Container_Object_Cla.html";"2435"
"862";"IDL_Container Properties";;"172";"IDL_Container_Properties.html";"1407"
"863";"IDL_Container::Add";"Adds a child to the object.";"172";"IDL_Container__Add.html";"3199"
"864";"IDL_Container::Cleanup";"Performs all cleanup on the object.";"172";"IDL_Container__Cleanup.html";"2398"
"865";"IDL_Container::Count";"Returns the number of objects contained by the container object.";"172";"IDL_Container__Count.html";"3221"
"866";"IDL_Container::Get";"Returns an array of object references to objects in a container.";"172";"IDL_Container__Get.html";"3954"
"867";"IDL_Container::Init";"Initializes the object.";"172";"IDL_Container__Init.html";"2728"
"868";"IDL_Container::IsContained";"Returns true (1) if the specified object is in the container, or false (0) otherwise.";"172";"IDL_Container__IsContain.html";"2518"
"869";"IDL_Container::Move";"Moves an object from one position in a container to a new position.";"172";"IDL_Container__Move.html";"3001"
"870";"IDL_Container::Remove";"Removes an object from the container.";"172";"IDL_Container__Remove.html";"3575"
"871";"IDL_VALIDNAME";"Determines whether a string may be used as a valid IDL variable name or structure tag name.";"76";"IDL_VALIDNAME.html";"8043"
"872";"IELLIPSE";"Creates an ellipse annotation in an existing iTool.";"41";"IELLIPSE.html";"4333"
"873";"IF...THEN...ELSE";"Conditionally executes a statement or block of statements.";"83";"IF___THEN___ELSE.html";"86411"
"874";"IGAMMA";"Computes the incomplete gamma function.";"61";"IGAMMA.html";"5380"
"875";"IGETCURRENT";"Returns the identifier of the current tool in the iTool system.";"41";"IGETCURRENT.html";"3173"
"876";"IGETDATA";"Retrieves data from a specified iTools visualization.";"41";"IGETDATA.html";"2803"
"877";"IGETID";"Retrieves the full iTool object identifier string for an iTool visualization item based on a portion of the identifier.";"41";"IGETID.html";"3477"
"878";"IGETPROPERTY";"Retrieves a property value from an iTools visualization.";"41";"IGETPROPERTY.html";"2922"
"879";"IIMAGE";"Creates an iTool and associated user interface (UI) configured to display and manipulate image data.";"41";"IIMAGE.html";"9057"
"880";"IMAGE";"Displays image data in a graphics window.";"27";"IMAGE.html";"43972"
"881";"IMAGE_CONT Procedure";"Overlays an image with a contour plot.";"22";"IMAGE_CONT_Procedure.html";"5007"
"882";"IMAGE_STATISTICS";"Overlays an image with a contour plot.";"63";"IMAGE_STATISTICS.html";"8406"
"883";"IMAGINARY";"Returns the imaginary part of a complex value.";"45";"IMAGINARY.html";"8285"
"884";"IMAP";"Displays georeferenced data in an iTool.";"41";"IMAP.html";"5330"
"885";"INDGEN";"Return an integer array with each element set to its subscript.";"10";"INDGEN.html";"27291"
"886";"INTARR";"Creates an integer vector or array.";"10";"INTARR.html";"14244"
"887";"INTERPOL";"Performs linear interpolation on vectors.";"8";"INTERPOL.html";"39858"
"888";"INTERPOLATE";"Returns an array of interpolates.";"29";"INTERPOLATE.html";"93692"
"889";"INTERVAL_VOLUME";"Generates a tetrahedral mesh from volumetric data.";"11";"INTERVAL_VOLUME.html";"4222"
"890";"INT_2D";"Computes the double integral of a bivariate function.";"48";"INT_2D.html";"6556"
"891";"INT_3D";"Computes the triple integral of a trivariate function.";"48";"INT_3D.html";"3674"
"892";"INT_TABULATED";"Integrates a tabulated set of data.";"48";"INT_TABULATED.html";"14077"
"893";"INVERT";"Computes the inverse of a square array.";"17";"INVERT.html";"14284"
"894";"IOCTL";"Performs special functions on UNIX files.";"40";"IOCTL.html";"5658"
"895";"IOPEN";"Opens a file, reads data from the file, and adds one or more variables containing the data to IDL's current scope.";"41";"IOPEN.html";"5766"
"896";"IPLOT";"Creates an iTool and associated user interface (UI) configured to display and manipulate plot data.";"41";"IPLOT.html";"40185"
"897";"IPOLYGON";"Creates a polygon annotation in an existing iTool.";"41";"IPOLYGON.html";"3208"
"898";"IPOLYLINE";"Creates a line annotation in an existing iTool.";"41";"IPOLYLINE.html";"3539"
"899";"IPUTDATA";"Replaces the data in a specified iTools visualization without changing other properties of the visualization.";"41";"IPUTDATA.html";"2889"
"900";"IREGISTER";"Registers iTool object classes or other iTool functionality with the IDL Intelligent Tools system.";"41";"IREGISTER.html";"2973"
"901";"IRESET";"Resets the IDL iTools session.";"41";"IRESET.html";"4300"
"902";"IRESOLVE";"Resolves all IDL code within the iTools directory, as well as all other IDL code required for the iTools framework.";"41";"IRESOLVE.html";"3921"
"903";"IROTATE";"Rotates an iTools visualization.";"41";"IROTATE.html";"4314"
"904";"IR_FILTER";"Performs the infinite or finite impulse response filter on data.";"8";"IR_FILTER.html";"4494"
"905";"ISA";"Determines whether a variable is of a certain type, class, or structure name.";"76";"ISA.html";"11249"
"906";"ISAVE";"Saves the contents of the current iTool as an image file.";"41";"ISAVE.html";"3326"
"907";"ISCALE";"Scales an iTools visualization.";"41";"ISCALE.html";"3583"
"908";"ISETCURRENT";"Sets the current tool in the IDL Intelligent Tools system.";"41";"ISETCURRENT.html";"3200"
"909";"ISETPROPERTY";"Sets a property on one or more iTools visualizations.";"41";"ISETPROPERTY.html";"3139"
"910";"ISHFT";"Performs integer bit shift.";"55";"ISHFT.html";"6926"
"911";"ISOCONTOUR";"Interprets the contouring algorithm found in the IDLgrContour object.";"29";"ISOCONTOUR.html";"4692"
"912";"ISOSURFACE";"Returns topologically consistent triangles by using oriented tetrahedral decomposition.";"11";"ISOSURFACE.html";"5093"
"913";"ISURFACE";"Creates an iTool and associated user interface (UI) configured to display and manipulate surface data. (iTools)";"41";"ISURFACE.html";"5061"
"914";"ITEXT";"Creates a text annotation in an existing iTool.";"41";"ITEXT.html";"5333"
"915";"ITRANSLATE";"Translates an iTools visualization.";"41";"ITRANSLATE.html";"2852"
"916";"IVECTOR";"Creates an iTool and associated user interface (UI) configured to display and manipulate vector data. (iTools)";"11";"IVECTOR.html";"9772"
"917";"IVOLUME";"Creates an iTool and associated user interface (UI) configured to display and manipulate volume data. (iTools)";"11";"IVOLUME.html";"5967"
"918";"IZOOM";"Changes the zoom factor on an iTools visualization.";"41";"IZOOM.html";"3157"
"920";"I Routines";;"1";"I_list.html";"3167"
"921";"JOURNAL";"Logs IDL commands to a file.IDL.";"76";"JOURNAL.html";"8791"
"922";"JSON_PARSE";"Takes a JSON string (or file) and converts it into an IDL variable.";"73";"JSON_PARSE.html";"9753"
"923";"JSON_SERIALIZE";"Takes a HASH, LIST, or structure variable and converts it into a JSON string.";"73";"JSON_SERIALIZE.html";"5698"
"924";"JULDAY";"Returns Julian Day Number for given month, day, and year.";"19";"JULDAY.html";"26538"
"925";"J Routines";;"1";"J_list.html";"2730"
"926";"JIDLArray";"Wraps a Java array as an object usable by the Java-IDL Export bridge.";"140";"JIDLArray.html";"3720"
"927";"JIDLBoolean";"Wraps a boolean as a mutable object usable by the Java-IDL Export bridge.";"140";"JIDLBoolean.html";"2727"
"928";"JIDLBusyException";"An unchecked exception thrown when a call to IDL is not executed because the current IDL process is busy.";"140";"JIDLBusyException.html";"3343"
"929";"JIDLByte";"Wraps a byte as a mutable object usable by the Java-IDL Export bridge.";"140";"JIDLByte.html";"3609"
"930";"JIDLCanvas";"Wraps an IDL object of type IDLit-Window in a java.awt-Canvas providing direct rendering of the object from IDL.";"140";"JIDLCanvas.html";"3237"
"931";"JIDLChar";"Wraps a char as a mutable object usable by the Java-IDL Export bridge.";"140";"JIDLChar.html";"3068"
"932";"JIDLComponentListener";"The listener interface for receiving component events (expose, resize) on a JIDLCanvas.";"140";"JIDLComponentListener.html";"3276"
"933";"JIDLConst";"Contains constants used by the Java-IDL wrapper classes.";"140";"JIDLConst.html";"3541"
"934";"JIDLDouble";"Wraps a double as a mutable object usable by the Java-IDL Export bridge.";"140";"JIDLDouble.html";"3358"
"935";"JIDLException";"An unchecked exception thrown when a call to IDL encounters an error.";"140";"JIDLException.html";"3648"
"936";"JIDLFloat";"Wraps a float as a mutable object usable by the Java-IDL Export bridge.";"140";"JIDLFloat.html";"2903"
"937";"JIDLInteger";"Wraps an int as a mutable object usable by the Java-IDL Export bridge.";"140";"JIDLInteger.html";"3358"
"938";"JIDLKeyListener";"The listener interface for receiving keyboard events (key pressed, key released) on a JIDLCanvas.";"140";"JIDLKeyListener.html";"2968"
"939";"JIDLLong";"Wraps a long as a mutable object usable by the Java-IDL Export bridge.";"140";"JIDLLong.html";"3124"
"940";"JIDLMouseListener";"The listener interface for receiving mouse events from IDL (press, release, enter, and exit) on a JIDLCanvas.";"140";"JIDLMouseListener.html";"3127"
"941";"JIDLMouseMotionListener";"The listener interface for receiving mouse motion events from IDL (move and drag) on a JIDLCanvas.";"140";"JIDLMouseMotionListener.html";"2874"
"942";"JIDLMouseWheelListener";"The listener interface for receiving mouse wheel events on a JIDLCanvas.";"140";"JIDLMouseWheelListener.html";"3292"
"943";"JIDLNotifyListener";"The listener interface for receiving notify events from IDL.";"140";"JIDLNotifyListener.html";"3079"
"944";"JIDLNumber";"Wraps a primitive java number as a mutable object usable by the Java-IDL Export bridge.";"140";"JIDLNumber.html";"3396"
"945";"JIDLObject";"Wraps an IDL object.";"140";"JIDLObject.html";"3940"
"946";"JIDLObjectI";"Wrapped IDL objects must implement.";"140";"JIDLObjectI.html";"3774"
"947";"JIDLOutputListener";"The listener interface for receiving output events from IDL.";"140";"JIDLOutputListener.html";"3028"
"948";"JIDLProcessInitializer";"Controls the licensing mode of the IDL Process.";"140";"JIDLProcessInitializer.html";"3220"
"949";"JIDLShort";"Wraps a short as a mutable object usable by the Java-IDL Export bridge.";"140";"JIDLShort.html";"3508"
"950";"JIDLString";"Wraps a String as a mutable object usable by the Java-IDL Export bridge.";"140";"JIDLString.html";"3471"
"953";"KEYWORD_SET";"Returns True if given expression is defined and nonzero or an array.";"76";"KEYWORD_SET.html";"15158"
"954";"KRIG2D";"Interpolates set of points using kriging.";"47";"KRIG2D.html";"8606"
"955";"KURTOSIS";"Computes statistical kurtosis of n-element vector.";"63";"KURTOSIS.html";"5736"
"956";"KW_TEST";"Performs Kruskal-Wallis H-test.";"51";"KW_TEST.html";"3675"
"957";"K Routines";;"1";"K_list.html";"2678"
"958";"L64INDGEN";"Returns a 64-bit integer array with each element set to its subscript.";"10";"L64INDGEN.html";"4696"
"959";"LABEL_DATE";"Labels axes with dates. Use with [XYZ]TICKFORMAT keyword.";"22";"LABEL_DATE.html";"12984"
"960";"LABEL_REGION";"Consecutively labels all of the regions, or blobs, of a bi-level image with a unique region index.";"22";"LABEL_REGION.html";"8257"
"961";"LADFIT";"Fits paired data using least absolute deviation method.";"47";"LADFIT.html";"8217"
"962";"LAGUERRE";"Returns value of the associated Laguerre polynomial.";"61";"LAGUERRE.html";"5437"
"963";"LAPLACIAN";"Applies a Laplacian operator to a 2D image array.";"29";"LAPLACIAN.html";"6081"
"964";"LA_CHOLDC";"Computes the Cholesky factorization of an n-by-n symmetric positive-definite array.";"52";"LA_CHOLDC.html";"3986"
"965";"LA_CHOLMPROVE";"Uses Cholesky factorization to improve the solution to a system of linear equations.";"52";"LA_CHOLMPROVE.html";"3072"
"966";"LA_CHOLSOL";"Used in conjunction with LA_CHOLDC to solve a set of linear equations.";"52";"LA_CHOLSOL.html";"2939"
"967";"LA_DETERM";"Uses LU decomposition to compute the determinant of a square array.";"52";"LA_DETERM.html";"13575"
"968";"LA_EIGENPROBLEM";"Uses the QR algorithm to compute eigenvalues and eigenvectors of an array.";"52";"LA_EIGENPROBLEM.html";"4285"
"969";"LA_EIGENQL";"Computes selected eigenvalues and eigenvectors.";"52";"LA_EIGENQL.html";"4950"
"970";"LA_EIGENVEC";"Uses the QR algorithm to compute all of some eigenvectors of an array.";"52";"LA_EIGENVEC.html";"3880"
"971";"LA_ELMHES";"Reduces a real nonsymmetric or complex array to upper Hessenberg from.";"52";"LA_ELMHES.html";"3333"
"972";"LA_GM_LINEAR_MODEL";"Used to solve a general Gauss-Markov linear model problem.";"52";"LA_GM_LINEAR_MODEL.html";"3170"
"973";"LA_HQR";"Uses the multishift QR algorithm to compute all eigenvalues of an array.";"52";"LA_HQR.html";"4787"
"974";"LA_INVERT";"Uses LU decomposition to compute the inverse of a square array.";"52";"LA_INVERT.html";"5922"
"975";"LA_LEAST_SQUARES";"Used to solve linear least-squares problems.";"52";"LA_LEAST_SQUARES.html";"5682"
"976";"LA_LEAST_SQUARE_EQUALITY";"Used to solve linear least-squares problems.";"52";"LA_LEAST_SQUARE_EQUALITY.html";"3379"
"977";"LA_LINEAR_EQUATION";"Uses LU decomposition to sole a system of linear equations.";"52";"LA_LINEAR_EQUATION.html";"5760"
"978";"LA_LUDC";"Computes the LU decomposition of an array.";"52";"LA_LUDC.html";"4625"
"979";"LA_LUMPROVE";"Uses LU decomposition to improve the solution to a system of linear equations.";"52";"LA_LUMPROVE.html";"3174"
"980";"LA_LUSOL";"Used in conjunction with LA_LUDC to solve a set of linear equations.";"52";"LA_LUSOL.html";"3312"
"981";"LA_SVD";"Computes the singular value decomposition of an array.";"52";"LA_SVD.html";"6116"
"982";"LA_TRIDC";"Computes the LU decomposition of a tridiagonal array.";"52";"LA_TRIDC.html";"21880"
"983";"LA_TRIMPROVE";"Improves the solution to a system of linear equations with a tridiagonal array.";"52";"LA_TRIMPROVE.html";"3024"
"984";"LA_TRIQL";"Uses the QL and QR variants of the implicitly-shifted QR algorithm to compute the eigenvalues and eigenvectors of an array.";"52";"LA_TRIQL.html";"3300"
"985";"LA_TRIRED";"Reduces a real symmetric or complex Hermitian array to real tridiagonal from.";"52";"LA_TRIRED.html";"3139"
"986";"LA_TRISOL";"Used in conjunction with LA_TRIDC to solve a set of linear equations.";"52";"LA_TRISOL.html";"3033"
"987";"LEAST_SQUARES_FILTER";"Reduces degradation and noise in an image based on the mean and variance of the degradation and noise.";"29";"LEAST_SQUARES_FILTER.html";"5016"
"988";"LEEFILT";"Performs the Lee filter algorithm on an image array.";"8";"LEEFILT.html";"5942"
"989";"LEGEND";"Adds a legend to 2D or 3D plots.";"27";"LEGEND.html";"38722"
"990";"LEGENDRE";"Returns value of the associated Legendre polynomial.";"61";"LEGENDRE.html";"6069"
"991";"LINBCG";"Solves a set of sparse linear equations using the iterative biconjugate gradient method.";"53";"LINBCG.html";"4006"
"992";"LINDGEN";"Returns a longword integer array with each element set to its subscript.";"10";"LINDGEN.html";"9197"
"993";"LINFIT";"Fits by minimizing the Chi-square error statistic.";"47";"LINFIT.html";"36310"
"994";"LINKIMAGE";"Merges routines written in other languages with IDL at run-time.";"25";"LINKIMAGE.html";"5789"
"995";"LIST";"Creates a new list variable.";"76";"LIST.html";"43048"
"996";"LL_ARC_DISTANCE";"Returns the longitude and latitude of a point given arc distance and azimuth.";"44";"LL_ARC_DISTANCE.html";"3920"
"997";"LMFIT";"Does a non-linear least squares fit.";"47";"LMFIT.html";"12610"
"998";"LMGR";"Determines the type of license used by the current IDL session.";"76";"LMGR.html";"5598"
"999";"LNGAMMA";"Returns logarithm of the gamma function of X.";"61";"LNGAMMA.html";"4136"
"1000";"LNP_TEST";"Computes the Lomb Normalized Periodogram.";"51";"LNP_TEST.html";"5311"
"1001";"LOADCT";"Loads one of the predefined IDL color tables. (Direct Graphics)";"18";"LOADCT_Procedure.html";"30492"
"1002";"LOCALE_GET";"Returns the current locale of the operating platform.";"43";"LOCALE_GET.html";"2690"
"1003";"LOGICAL_AND";"Performs a logical AND operation on its arguments.";"76";"LOGICAL_AND.html";"4851"
"1004";"LOGICAL_OR";"Performs a logical OR operation on its arguments.";"76";"LOGICAL_OR.html";"3725"
"1005";"LOGICAL_TRUE";"Determines whether its arguments are non-zero (or non-NULL).";"76";"LOGICAL_TRUE.html";"3917"
"1006";"LON64ARR";"Returns a 64-bit integer vector or array.";"10";"LON64ARR.html";"5540"
"1007";"LONARR";"Returns a longword integer vector or array.";"10";"LONARR.html";"9363"
"1008";"LONG";"Converts argument to longword integer type.";"89";"LONG.html";"13397"
"1009";"LONG64";"Converts argument to 64-bit integer type.";"89";"LONG64.html";"6428"
"1010";"LSODE";"Advances a solution to a system of ordinary differential equations one time-step H.";"48";"LSODE.html";"6090"
"1011";"LUDC";"Replaces array with the LU decomposition.";"53";"LUDC.html";"4323"
"1012";"LUMPROVE";"Uses LU decomposition to iteratively improve an approximate solution.";"53";"LUMPROVE.html";"3278"
"1013";"LUSOL";"Solves a set of linear equations. Use with LUDC.";"53";"LUSOL.html";"4555"
"1014";"LU_COMPLEX";"Solves complex linear system using LU decomposition.";"53";"LU_COMPLEX.html";"2958"
"1015";"L Routines";;"1";"L_list.html";"2982"
"1016";"MACHAR";"Determines and returns machine-specific parameters affecting floating-point arithmetic.";"54";"MACHAR.html";"10485"
"1017";"MAKE_ARRAY";"Returns an array of the specified type, dimensions, and initialization.";"10";"MAKE_ARRAY.html";"47259"
"1018";"MAKE_DLL";"Compiles and links sharable libraries (DLLs).";"25";"MAKE_DLL.html";"6611"
"1019";"MAKE_RT";"Creates a stand-alone IDL runtime distribution for one or more platforms.";"76";"MAKE_RT.html";"6208"
"1020";"MAP";"Displays map data in a graphics window.";"27";"MAP.html";"20153"
"1021";"MAPCONTINENTS";"Overlays map boundaries on a map in a graphics window.";"27";"MAPCONTINENTS.html";"10736"
"1022";"MAPGRID";"Plots a map graticule (or grid) onto an existing IDL map graphic.";"27";"MAPGRID.html";"11032"
"1023";"MAP_2POINTS";"Returns distance, azimuth, and path relating to the great circle or rhumb line connecting two points on a sphere.";"44";"MAP_2POINTS.html";"7886"
"1024";"MAP_CONTINENTS Procedure";"Draws continental boundaries, filled continents, political boundaries, coastlines, and/or rivers, over an existing map projection established by MAP_SET. (Direct Graphics)";"44";"MAP_CONTINENTS_Procedure.html";"9589"
"1025";"MAP_GRID Procedure";"Draws the graticule of parallels and meridians (grid lines) over a map projection.";"44";"MAP_GRID_Procedure.html";"9365"
"1026";"MAP_IMAGE";"Warps an image to a Direct Graphics map projection.";"44";"MAP_IMAGE.html";"9668"
"1027";"MAP_PATCH";"Returns an image warped to fit the current map projection. (Use when map data is smaller than the display). (Direct Graphics)";"44";"MAP_PATCH.html";"4032"
"1028";"MAP_PROJ_FORWARD";"Draws parallels and meridians over a map projection.";"44";"MAP_PROJ_FORWARD.html";"9975"
"1029";"MAP_PROJ_IMAGE";"Warps an image from geographic coordinates to a specified map projection.";"44";"MAP_PROJ_IMAGE.html";"5475"
"1030";"MAP_PROJ_INFO Procedure";"Returns information about the current map and/or the available projections.";"44";"MAP_PROJ_INFO_Procedure.html";"2972"
"1031";"MAP_PROJ_INIT";"Returns information about current map and/or the available projections.";"44";"MAP_PROJ_INIT.html";"15672"
"1032";"MAP_PROJ_INVERSE";"Transforms map coordinates from Cartesian (X, Y) coordinates to longitude/latitude.";"44";"MAP_PROJ_INVERSE.html";"5326"
"1033";"MAP_SET Procedure";"Specifies a map projection.";"44";"MAP_SET_Procedure.html";"49522"
"1034";"MATRIX_MULTIPLY";"Calculates the IDL matrix-multiply operator (#) of two (possibly transposed) arrays.";"55";"MATRIX_MULTIPLY.html";"10244"
"1035";"MATRIX_POWER";"Computes the product of a matrix with itself.";"55";"MATRIX_POWER.html";"5427"
"1036";"MAX";"Returns the value of the largest element of Array.";"17";"MAX.html";"28304"
"1037";"MD_TEST";"Performs the Median Delta test.";"51";"MD_TEST.html";"3330"
"1038";"MEAN";"Computes the mean of a numeric vector.";"63";"MEAN.html";"35954"
"1039";"MEANABSDEV";"Computes the mean absolute deviation of a vector.";"63";"MEANABSDEV.html";"6173"
"1040";"MEAN_FILTER";"Applies mean filter noise reduction on a one- or multi-channel image.";"29";"MEAN_FILTER.html";"11573"
"1041";"MEDIAN";"Returns median value of an array or applies a median filter.";"8";"MEDIAN.html";"23668"
"1042";"MEMORY";"Returns information about dynamic memory currently in use by the IDL session.";"28";"MEMORY.html";"8314"
"1043";"MESH_CLIP";"Clips a polygonal mesh to an arbitrary plane in space and returns a polygonal mesh of the remaining portion.";"11";"MESH_CLIP.html";"3345"
"1044";"MESH_DECIMATE";"Reduces the density of geometry while preserving as much of the original data as possible.";"11";"MESH_DECIMATE.html";"4447"
"1045";"MESH_ISSOLID";"Computes various mesh properties and enables IDL to determine if a mesh encloses space (is a solid).";"11";"MESH_ISSOLID.html";"3383"
"1046";"MESH_MERGE";"Merges two polygonal meshes.";"11";"MESH_MERGE.html";"3764"
"1047";"MESH_NUMTRIANGLES";"Computes the number of triangles in a polygonal mesh.";"11";"MESH_NUMTRIANGLES.html";"3031"
"1048";"MESH_OBJ";"Generates a polygon mesh for various simple objects.";"11";"MESH_OBJ.html";"4483"
"1049";"MESH_SMOOTH";"Performs spatial smoothing on a polygon mesh.";"11";"MESH_SMOOTH.html";"4241"
"1050";"MESH_SURFACEAREA";"Computes various mesh properties to determine the mesh surface area, including integration of other properties interpolated on the surface of the mesh.";"11";"MESH_SURFACEAREA.html";"4125"
"1051";"MESH_VALIDATE";"Checks for NaN values in vertices, removes unused vertices, and combines close vertices.";"11";"MESH_VALIDATE.html";"3875"
"1052";"MESH_VOLUME";"Computes the volume that the mesh encloses.";"11";"MESH_VOLUME.html";"4174"
"1053";"MESSAGE";"Issues error and informational messages.";"23";"MESSAGE.html";"22722"
"1054";"MIN";"Returns the value of the smallest element of an array.";"17";"MIN.html";"25116"
"1055";"MIN_CURVE_SURF";"Interpolates points with a minimum curvature surface or a thin-plate-spline surface. Useful with CONTOUR.";"50";"MIN_CURVE_SURF.html";"7772"
"1056";"MK_HTML_HELP";"Converts text documentation headers to HTML files.";"28";"MK_HTML_HELP.html";"4000"
"1057";"MODIFYCT Procedure";"Saves modified color tables in the IDL color table file. (Direct Graphics)";"18";"MODIFYCT_Procedure.html";"6614"
"1058";"MOMENT";"Computes mean, variance, skewness, and kurtosis.";"63";"MOMENT.html";"19047"
"1059";"MORPH_CLOSE";"Applies closing operator to binary or grayscale image.";"29";"MORPH_CLOSE.html";"5393"
"1060";"MORPH_DISTANCE";"Estimates N-dimensional distance maps, which contain for each foreground pixel the distance to the nearest background pixel, using a given norm.";"29";"MORPH_DISTANCE.html";"6227"
"1061";"MORPH_GRADIENT";"Applies the morphological gradient operator to a grayscale image.";"29";"MORPH_GRADIENT.html";"4077"
"1062";"MORPH_HITORMISS";"Applies the hit-or-miss operator to a binary image.";"29";"MORPH_HITORMISS.html";"4104"
"1063";"MORPH_OPEN";"Applies the opening operator to a binary or grayscale image.";"29";"MORPH_OPEN.html";"5258"
"1064";"MORPH_THIN";"Performs a thinning operation on binary images.";"29";"MORPH_THIN.html";"3796"
"1065";"MORPH_TOPHAT";"Applies top-hat operator to a grayscale image.";"29";"MORPH_TOPHAT.html";"4245"
"1066";"MULTI Procedure";"Replicates current color table to enhance contrast. (Direct Graphics)";"18";"MULTI_Procedure.html";"3288"
"1067";"M_CORRELATE";"Computes multiple correlation coefficient.";"8";"M_CORRELATE.html";"5943"
"1069";"NetCDF Routines";"Network Common Data Format routines.";"101";"NCDF_Routines.html";"3518"
"1070";"NEWTON";"Solves nonlinear equations using Newton's method.";"57";"NEWTON.html";"5960"
"1071";"NOISE_HURL";"Introduces noise into an image by changing randomly selected pixels to random colors.";"29";"NOISE_HURL.html";"3027"
"1072";"NOISE_PICK";"Introduces noise into an image by picking randomly selected pixels to be replaced by a neighboring pixel from a random direction.";"29";"NOISE_PICK.html";"3153"
"1073";"NOISE_SCATTER";"Introduces noise into an image by applying normally distributed noise to the entire image.";"29";"NOISE_SCATTER.html";"4679"
"1074";"NOISE_SLUR";"Introduces noise into an image by selecting random pixels to be replaced by a neighboring pixel from a random location in the row above.";"29";"NOISE_SLUR.html";"2772"
"1075";"NORM";"Computes Euclidean norm of vector or Infinity norm of array.";"53";"NORM.html";"6125"
"1076";"N_ELEMENTS";"Returns the number of elements contained in an expression or variable.";"76";"N_ELEMENTS.html";"20766"
"1077";"N_PARAMS";"Returns the number of non-keyword parameters used in calling an IDL procedure or function.";"76";"N_PARAMS.html";"7155"
"1078";"N_TAGS";"Returns the number of tags in a structure.";"76";"N_TAGS.html";"7272"
"1079";"N Routines";;"1";"N_list.html";"2582"
"1080";"NetCDF Overview";;"1";"NCDF_Overview.html";"53086"
"1081";"NCDF_ATTCOPY";"Copies an attribute from one NetCDF file to another.";"101";"NCDF_ATTCOPY.html";"2942"
"1082";"NCDF_ATTDEL";"Deletes an attribute from a NetCDF file.";"101";"NCDF_ATTDEL.html";"2332"
"1083";"NCDF_ATTGET";"Retrieves the value of an attribute from a NetCDF file.";"101";"NCDF_ATTGET.html";"4974"
"1084";"NCDF_ATTINQ";"Returns a structure that contains information about a NetCDF attribute.";"101";"NCDF_ATTINQ.html";"5201"
"1085";"NCDF_ATTNAME";"Returns the name of an attribute in a NetCDF file given its ID.";"101";"NCDF_ATTNAME.html";"4277"
"1086";"NCDF_ATTPUT";"Creates an attribute in a NetCDF file.";"101";"NCDF_ATTPUT.html";"4713"
"1087";"NCDF_ATTRENAME";"Renames an attribute in a NetCDF file.";"101";"NCDF_ATTRENAME.html";"2229"
"1088";"NCDF_CLOSE";"Closes an open NetCDF file.";"101";"NCDF_CLOSE.html";"4969"
"1089";"NCDF_CONTROL";"Performs miscellaneous NetCDF operations.";"101";"NCDF_CONTROL.html";"8035"
"1090";"NCDF_CREATE";"Creates a new NetCDF file.";"101";"NCDF_CREATE.html";"10396"
"1091";"NCDF_DIMDEF";"Defines a dimension in a NetCDF file given its name and size.";"101";"NCDF_DIMDEF.html";"4460"
"1092";"NCDF_DIMID";"Returns the ID of a NetCDF dimension, given the name of the dimension.";"101";"NCDF_DIMID.html";"3096"
"1093";"NCDF_DIMIDSINQ";"Returns an array of dimension IDs for all dimensions in a given group (and optionally for the group's parents).";"101";"NCDF_DIMIDSINQ.html";"2669"
"1094";"NCDF_DIMINQ";"Retrieves the name and size of a dimension in a NetCDF file, given its ID.";"101";"NCDF_DIMINQ.html";"5050"
"1095";"NCDF_DIMRENAME";"Renames an existing dimension in a NetCDF file which has been opened for writing.";"101";"NCDF_DIMRENAME.html";"2359"
"1096";"NCDF_EXISTS";"Returns true if the Network Common Data Format (NetCDF) scientific data format library is supported on the current IDL platform.";"101";"NCDF_EXISTS.html";"2770"
"1097";"NCDF_FULLGROUPNAME";"Returns the full pathname of a specified group.";"101";"NCDF_FULLGROUPNAME.html";"2636"
"1098";"NCDF_GROUPDEF";"Creates a new empty group and assigns it a name.";"101";"NCDF_GROUPDEF.html";"3791"
"1099";"NCDF_GROUPNAME";"Returns the name of the specified group.";"101";"NCDF_GROUPNAME.html";"3673"
"1100";"NCDF_GROUPPARENT";"Returns the ID of a group's parent group.";"101";"NCDF_GROUPPARENT.html";"2676"
"1101";"NCDF_GROUPSINQ";"Returns an array of all the groups contained in the specified group.";"101";"NCDF_GROUPSINQ.html";"2738"
"1102";"NCDF_INQUIRE";"Returns a structure that contains information about an open NetCDF file.";"101";"NCDF_INQUIRE.html";"5456"
"1103";"NCDF_NCIDINQ";"Returns the ID of a group, given the group's name and parent group's ID.";"101";"NCDF_NCIDINQ.html";"2876"
"1104";"NCDF_OPEN";"Opens an existing NetCDF file.";"101";"NCDF_OPEN.html";"9514"
"1105";"NCDF_UNLIMDIMSINQ";"Returns the identifiers of the unlimited dimensions in a group.";"101";"NCDF_UNLIMDIMSINQ.html";"1395"
"1106";"NCDF_VARDEF";"Adds a new variable to an open NetCDF file in define mode.";"101";"NCDF_VARDEF.html";"17379"
"1107";"NCDF_VARGET";"Retrieves a hyperslab of values from a NetCDF variable.";"101";"NCDF_VARGET.html";"11191"
"1108";"NCDF_VARGET1";"Retrieves one element from a NetCDF variable.";"101";"NCDF_VARGET1.html";"2932"
"1109";"NCDF_VARID";"Returns the ID of a NetCDF variable.";"101";"NCDF_VARID.html";"5372"
"1110";"NCDF_VARIDSINQ";"Returns a group's variable IDs.";"101";"NCDF_VARIDSINQ.html";"2917"
"1111";"NCDF_VARINQ";"Returns a structure that contains information about a NetCDF variable, given its ID.";"101";"NCDF_VARINQ.html";"6097"
"1112";"NCDF_VARPUT";"Writes a hyperslab of values to a NetCDF variable.";"101";"NCDF_VARPUT.html";"12511"
"1113";"NCDF_VARRENAME";"Renames a NetCDF variable.";"101";"NCDF_VARRENAME.html";"2391"
"1114";"OBJARR";"Creates an array of object references.";"10";"OBJARR.html";"5988"
"1115";"OBJ_CLASS";"Determines the class name of an object.";"76";"OBJ_CLASS.html";"5761"
"1116";"OBJ_DESTROY";"Destroys an object reference.";"76";"OBJ_DESTROY.html";"6693"
"1117";"OBJ_HASMETHOD";"Determines whether an object class implements or inherits a specified method or methods.";"76";"OBJ_HASMETHOD.html";"3575"
"1118";"OBJ_ISA";"Determines inheritance relationship of an object.";"76";"OBJ_ISA.html";"4314"
"1119";"OBJ_NEW";"Creates an object reference.";"76";"OBJ_NEW.html";"10963"
"1120";"OBJ_VALID";"Verifies validity of object references.";"76";"OBJ_VALID.html";"5159"
"1121";"ONLINE_HELP";"Invokes online help viewer from programs.";"28";"ONLINE_HELP.html";"8767"
"1122";"ON_ERROR";"Designates the error recovery method.";"23";"ON_ERROR.html";"7503"
"1123";"ON_IOERROR";"Declares I/O error exception handler.";"23";"ON_IOERROR.html";"5257"
"1124";"OPENR/OPENU/OPENW";"Opens files for reading, updating, or writing.";"40";"OPEN.html";"55953"
"1125";"OPLOTERR Procedure";"Plots error bars over a previously drawn plot.";"22";"OPLOTERR_Procedure.html";"7829"
"1126";"OPLOT Procedure";"Plots vector data over a previously drawn plot.";"22";"OPLOT_Procedure.html";"31720"
"1127";"O Routines";;"1";"O_list.html";"2639"
"1128";"Obsolete Routines and Classes";;"1";"Obsolete_Routines.html";"4686"
"1129";"PARSE_URL";"Breaks a URL string into substrings.";"73";"PARSE_URL.html";"4906"
"1130";"PARTICLE_TRACE";"Traces the path of a massless particle through a vector field.";"11";"PARTICLE_TRACE.html";"5485"
"1131";"PATH_CACHE";"Controls IDL's path caching mechanism.";"76";"PATH_CACHE.html";"5866"
"1132";"PATH_SEP";"Returns the proper file path segment separator character for the current operating system.";"35";"PATH_SEP.html";"6950"
"1133";"PCOMP";"Computes principal components/derived variables.";"56";"PCOMP.html";"8591"
"1134";"PLOT";"Draws a line plot of vector arguments.";"27";"PLOT.html";"303862"
"1135";"PLOT3D";"Draws a 3D plot of vector arguments.";"27";"PLOT3D.html";"29249"
"1136";"PLOTERR Procedure";"plots individual data points with error bars.";"22";"PLOTERR_Procedure.html";"6474"
"1137";"PLOTS Procedure";"Plots vectors and points.";"22";"PLOTS_Procedure.html";"31153"
"1138";"PLOT_3DBOX Procedure";"Plots a function of two variables (e.g., Z=f(X, Y)) inside a 3-D box.";"22";"PLOT_3DBOX_Procedure.html";"4785"
"1139";"PLOT_FIELD Procedure";"Plots a 2-D field.";"22";"PLOT_FIELD_Procedure.html";"5012"
"1140";"PLOT Procedure";"Draws a graph of vector arguments.";"22";"PLOT_Procedure.html";"178208"
"1141";"PNT_LINE";"Returns the perpendicular distance between a point and a line.";"55";"PNT_LINE.html";"4603"
"1142";"POINT_LUN";"Sets or gets current position of the file pointer.";"40";"POINT_LUN.html";"8424"
"1143";"POLARPLOT";"Creates a plot using the polar coordinates R and Theta.";"27";"POLARPLOT.html";"13406"
"1144";"POLAR_CONTOUR Procedure";"Draws a contour plot from data in polar coordinates.";"22";"POLAR_CONTOUR_Procedure.html";"7079"
"1145";"POLAR_SURFACE Procedure";"Interpolates a surface from polar to rectangular coordinates.";"22";"POLAR_SURFACE_Procedure.html";"4050"
"1146";"POLY";"Interpolates a surface from polar coordinates (R, Theta, Z) to rectangular coordinates (X, Y, Z).";"22";"POLY.html";"8223"
"1147";"POLYFILLV";"Returns subscripts of pixels inside a polygon.";"22";"POLYFILLV.html";"7441"
"1148";"POLYFILL Procedure";"Fills the interior of a polygon.";"22";"POLYFILL_Procedure.html";"36466"
"1149";"POLYGON";"Adds a polygon annotation to an existing graphic.";"27";"POLYGON.html";"13784"
"1150";"POLYLINE";"Plots a series of lines as an annotation to an existing graphic.";"27";"POLYLINE.html";"8771"
"1151";"POLYSHADE";"Creates a shaded surface representation from a set of polygons. (Direct Graphics)";"11";"POLYSHADE_Procedure.html";"7162"
"1152";"POLYWARP";"Performs polynomial spatial warping.";"29";"POLYWARP.html";"5636"
"1153";"POLY_2D";"Performs polynomial warping of images.";"29";"POLY_2D.html";"8256"
"1154";"POLY_AREA";"Returns the area of a polygon given the coordinates of its vertices.";"55";"POLY_AREA.html";"4165"
"1155";"POLY_FIT";"Performs a least-square polynomial fit.";"47";"POLY_FIT.html";"29812"
"1156";"POPD";"Removes the top directory on the working directory stack maintained by PUSHD/POPD.";"74";"POPD.html";"4099"
"1157";"POWELL";"Minimizes a function using the Powell method.";"58";"POWELL.html";"5531"
"1158";"PREF_COMMIT";"Commits IDL preferences in the pending state.";"76";"PREF_COMMIT.html";"4113"
"1159";"PREF_GET";"Returns information about IDL preferences.";"76";"PREF_GET.html";"3892"
"1160";"PREF_SET";"Sets new values for IDL preferences.";"76";"PREF_SET.html";"6897"
"1161";"PREWITT";"Returns an approximation to the Prewitt edge enhancement operator for images.";"29";"PREWITT.html";"4567"
"1162";"PRIMES";"Computes the first K prime numbers.";"55";"PRIMES.html";"4435"
"1163";"PRINT/PRINTF";"Writes formatted output to screen or file.";"40";"PRINT.html";"49575"
"1164";"PRINTD";"Prints contents of the directory stack maintained by PUSHD/POPD.";"74";"PRINTD.html";"3778"
"1165";"PRO";"Defines a procedure.";"76";"PRO.html";"54520"
"1166";"PRODUCT";"Returns the product of elements within an array.";"55";"PRODUCT.html";"7058"
"1167";"PROFILE";"Extracts a profile from an image and returns the values of the image along the profile line marked by the user.";"22";"PROFILE.html";"8757"
"1168";"PROFILER";"Extracts a profile from an image.";"76";"PROFILER.html";"7030"
"1169";"PROFILES Procedure";"Interactively draws row or column profiles of an image in a separate window.";"22";"PROFILES_Procedure.html";"4337"
"1170";"PROJECT_VOL Procedure";"Returns a two-dimensional image that is the projection of a 3-D volume of data onto a plane (similar to an X-ray).";"22";"PROJECT_VOL_Procedure.html";"3767"
"1171";"PSAFM";"Converts Adobe Font Metrics file to IDL format.";"26";"PSAFM.html";"3074"
"1172";"PSEUDO";"Creates pseudo-color table based on Lightness, Hue, and Brightness system.";"18";"PSEUDO.html";"6178"
"1173";"PS_SHOW_FONTS";"Interactively examines image profiles.";"22";"PS_SHOW_FONTS.html";"4063"
"1174";"PTRARR";"Creates an array of pointers.";"10";"PTRARR.html";"6732"
"1175";"PTR_FREE";"Destroys a pointer.";"76";"PTR_FREE.html";"6753"
"1176";"PTR_NEW";"Creates a pointer.";"76";"PTR_NEW.html";"9005"
"1177";"PTR_VALID";"Verifies the validity of pointers.";"76";"PTR_VALID.html";"5321"
"1178";"PUSHD";"Pushes a directory to top of directory stack maintained by PUSHD/POPD.";"74";"PUSHD.html";"4410"
"1179";"P_CORRELATE";"Computes partial correlation coefficient.";"8";"P_CORRELATE.html";"6192"
"1180";"P Routines";;"1";"P_list.html";"3136"
"1182";"QGRID3";"Interpolates the dependent variable values to points in a regularly sampled volume.";"11";"QGRID3.html";"7405"
"1183";"QHULL";"Constructs convex hulls, Delaunay triangulations, and Voronoi diagrams.";"11";"QHULL.html";"14535"
"1184";"QROMB";"Evaluates integral over a closed interval.";"48";"QROMB.html";"8544"
"1185";"QROMO";"Evaluates integral over an open interval.";"48";"QROMO.html";"6115"
"1186";"QSIMP";"Evaluates integral using Simpson's rule.";"48";"QSIMP.html";"8250"
"1187";"QUERY_ASCII";"Obtains information about an ASCII file.";"39";"QUERY_ASCII.html";"5735"
"1188";"QUERY_BMP";"Obtains information about a BMP image file.";"36";"QUERY_BMP.html";"3097"
"1189";"QUERY_CSV";"Obtains information about a comma-separated values (CSV) file.";"39";"QUERY_CSV.html";"4519"
"1190";"QUERY_DICOM";"Tests file for compatibility with READ_DICOM.";"36";"QUERY_DICOM.html";"3256"
"1191";"QUERY_GIF";"Obtains information about a GIF image file.";"36";"QUERY_GIF.html";"3131"
"1192";"QUERY_IMAGE";"Determines if a file is recognized as an image file.";"36";"QUERY_IMAGE.html";"12702"
"1193";"QUERY_JPEG";"Obtains information about a JPEG image file.";"36";"QUERY_JPEG.html";"3635"
"1194";"QUERY_JPEG2000";"Obtains information about a JPEG 2000 image file.";"36";"QUERY_JPEG2000.html";"3033"
"1195";"QUERY_MRSID";"Obtains information about a MrSID image file.";"36";"QUERY_MRSID.html";"3133"
"1196";"QUERY_PICT";"Obtains information about a PICT image file.";"36";"QUERY_PICT.html";"2905"
"1197";"QUERY_PNG";"Obtains information about a PNG image file.";"36";"QUERY_PNG.html";"3955"
"1198";"QUERY_PPM";"Obtains information about a PPM image file.";"36";"QUERY_PPM.html";"3215"
"1199";"QUERY_SRF";"Obtains information about an SRF image file.";"36";"QUERY_SRF.html";"2898"
"1200";"QUERY_TIFF";"Obtains information about a TIFF image file.";"36";"QUERY_TIFF.html";"7808"
"1201";"QUERY_WAV";"Checks that the file is actually a .WAV file and that the READ_WAV function can read the data in the file.";"39";"QUERY_WAV.html";"3242"
"1202";"QUERY_* Routines";;"1";"QUERY___Routines.html";"5518"
"1203";"Q Routines";;"1";"Q_list.html";"2563"
"1204";"RADON";"Returns the Radon transform of a two-dimensional image.";"29";"RADON.html";"10528"
"1205";"RANDOMN";"Returns normally-distributed pseudorandom numbers.";"63";"RANDOMN.html";"21255"
"1206";"RANDOMU";"Returns uniformly-distributed pseudorandom numbers.";"63";"RANDOMU.html";"47034"
"1207";"RANKS";"Computes magnitude-based ranks.";"63";"RANKS.html";"3992"
"1208";"RDPIX Procedure";"Interactively displays the X position, Y position, and pixel value at the cursor.";"22";"RDPIX_Procedure.html";"5990"
"1209";"READ/READF";"Reads formatted input from keyboard or file.";"40";"READ.html";"52031"
"1210";"READS";"Reads formatted input from a string variable.";"40";"READS.html";"9318"
"1211";"READU";"Reads unformatted binary data from a file.";"40";"READU.html";"12041"
"1212";"READ_ASCII";"Reads data from an ASCII file.";"39";"READ_ASCII.html";"38543"
"1213";"READ_BINARY";"Reads the contents of a binary file using a passed template or basic command line keywords.";"39";"READ_BINARY.html";"18265"
"1214";"READ_BMP";"Reads Microsoft Windows bitmap file (.BMP).";"36";"READ_BMP.html";"6081"
"1215";"READ_CSV";"Reads data from an ASCII file containing comma-delimited data.";"39";"READ_CSV.html";"25181"
"1216";"READ_DICOM";"Reads an image from a DICOM file.";"36";"READ_DICOM.html";"5864"
"1217";"READ_GIF";"Reads GIF file (.GIF)";"36";"READ_GIF.html";"5256"
"1218";"READ_IMAGE";"Reads the image contents of a file and returns the image in an IDL variable.";"36";"READ_IMAGE.html";"12064"
"1219";"READ_INTERFILE";"Reads Interfile (v3.3) file.";"36";"READ_INTERFILE.html";"3601"
"1220";"READ_JPEG";"Reads JPEG file.";"36";"READ_JPEG.html";"18757"
"1221";"READ_JPEG2000";"Reads JPEG 2000 file.";"36";"READ_JPEG2000.html";"4120"
"1222";"READ_MRSID";"Reads MrSID file.";"36";"READ_MRSID.html";"4187"
"1223";"READ_PICT";"Reads Macintosh PICT (version 2) bitmap file.";"36";"READ_PICT.html";"3558"
"1224";"READ_PNG";"Reads Portable Network Graphics (PNG) file.";"36";"READ_PNG.html";"9161"
"1225";"READ_PPM";"Reads PGM (gray scale) or PPM (portable pixmap for color) file.";"36";"READ_PPM.html";"4621"
"1226";"READ_SPR";"Reads a row-indexed sparse matrix from a file.";"60";"READ_SPR.html";"3269"
"1227";"READ_SRF";"Reads Sun Raster Format file.";"36";"READ_SRF.html";"3832"
"1228";"READ_SYLK";"Reads Symbolic Link format spreadsheet file.";"39";"READ_SYLK.html";"3957"
"1229";"READ_TIFF";"Reads TIFF format file.";"36";"READ_TIFF.html";"31927"
"1230";"READ_WAV";"Reads the audio stream from the named .WAV file.";"39";"READ_WAV.html";"5222"
"1231";"READ_WAVE";"Reads Wavefront Advanced Visualizer file.";"39";"READ_WAVE.html";"3406"
"1232";"READ_X11_BITMAP";"Reads X11 bitmap file.";"36";"READ_X11_BITMAP.html";"3350"
"1233";"READ_XWD";"Reads X Windows Dump file.";"36";"READ_XWD.html";"3619"
"1234";"REAL_PART";"Returns the real part of a complex-valued argument.";"45";"REAL_PART.html";"8106"
"1235";"REBIN";"Resizes a vector or array by integer multiples.";"29";"REBIN.html";"27313"
"1236";"RECALL_COMMANDS";"Returns entries in IDL's command recall buffer.";"76";"RECALL_COMMANDS.html";"4014"
"1237";"RECON3";"Reconstructs a 3D representation of an object from 2D images.";"11";"RECON3.html";"4320"
"1238";"REDUCE_COLORS";"Reduces the number of colors used in an image by eliminating unused pixel values.";"18";"REDUCE_COLORS.html";"3466"
"1239";"REFORM";"Changes array dimensions without changing the total number of elements.";"17";"REFORM.html";"37413"
"1240";"REGION_GROW";"Perform region growing.";"29";"REGION_GROW.html";"9459"
"1241";"REGISTER_CURSOR";"Associates a given name with cursor information, used in conjunction with IDLgrWindow::SetCurrentCursor.";"76";"REGISTER_CURSOR.html";"3988"
"1242";"REGRESS";"Computes fit using multiple linear regression.";"47";"REGRESS.html";"20578"
"1243";"REPEAT...UNTIL";"Repeats statement(s) until expression evaluates to true. Subject is always executed at least once.";"83";"REPEAT___UNTIL.html";"13505"
"1244";"REPLICATE";"Creates an array of given dimensions, filled with specified value.";"10";"REPLICATE.html";"18292"
"1245";"REPLICATE_INPLACE";"Updates an array by replacing all or selected parts of it with a specified value.";"17";"REPLICATE_INPLACE.html";"8604"
"1246";"RESOLVE_ALL";"Compiles any uncompiled routines.";"76";"RESOLVE_ALL.html";"12561"
"1247";"RESOLVE_ROUTINE";"Compiles a routine.";"76";"RESOLVE_ROUTINE.html";"7417"
"1248";"RESTORE";"Restores IDL variables and routines in an IDL SAVE file.";"76";"RESTORE.html";"22200"
"1249";"RETALL";"Returns control to the main program level.";"76";"RETALL.html";"8462"
"1250";"RETURN";"Returns control to the next-higher program level.";"76";"RETURN.html";"18051"
"1251";"REVERSE";"Reverses the order of one dimension of an array.";"17";"REVERSE.html";"21056"
"1252";"RK4";"Solves differential equations using fourth-order Runge-Kutta method.";"48";"RK4.html";"7473"
"1253";"ROBERTS";"Returns an approximation of Roberts edge enhancement.";"29";"ROBERTS.html";"4982"
"1254";"ROT";"Rotates an image by any amount.";"17";"ROT.html";"38617"
"1255";"ROTATE";"Rotates/transposes an array in multiples of 90 degrees.";"17";"ROTATE.html";"35636"
"1256";"ROUND";"Returns the integer closest to its argument.";"55";"ROUND.html";"26043"
"1257";"ROUTINE_FILEPATH";"Returns the full path to a currently-compiled procedure or function (or a list of procedures and functions).";"76";"ROUTINE_FILEPATH.html";"21256"
"1258";"ROUTINE_INFO";"Provides information about compiled procedures and functions.";"76";"ROUTINE_INFO.html";"8628"
"1259";"RS_TEST";"Performs the Wilcoxon Rank-Sum test.";"51";"RS_TEST.html";"4793"
"1260";"R_CORRELATE";"Computes rank correlation.";"8";"R_CORRELATE.html";"12260"
"1261";"R_TEST";"Runs test for randomness.";"51";"R_TEST.html";"3310"
"1262";"R Routines";;"1";"R_list.html";"3001"
"1263";"SAVE";"Saves variables, system variables, and IDL routines in a file for later use.";"76";"SAVE.html";"32829"
"1264";"SAVGOL";"Returns coefficients of Savitzky-Golay smoothing filter.";"8";"SAVGOL.html";"8844"
"1265";"SCALE3D Procedure";"Scales the 3-D unit cube (a cube with the length of each side equal to 1) into the viewing area.";"22";"SCALE3D_Procedure.html";"3946"
"1266";"SCALE3 Procedure";"Sets up transformation and scaling parameters for basic 3-D viewing.";"22";"SCALE3_Procedure.html";"5203"
"1267";"SCOPE_LEVEL";"Returns the current routine's scope level.";"80";"SCOPE_LEVEL.html";"3168"
"1268";"SCOPE_TRACEBACK";"Returns the current interpreter call stack (the sequence of routine calls to the present point).";"80";"SCOPE_TRACEBACK.html";"3536"
"1269";"SCOPE_VARFETCH";"Returns variables outside the current routine's local scope.";"80";"SCOPE_VARFETCH.html";"6669"
"1270";"SCOPE_VARNAME";"Returns the names of variables outside current routine's local scope.";"80";"SCOPE_VARNAME.html";"5069"
"1271";"SEARCH2D";"Finds 'objects' or regions of similar data within a 2D array.";"29";"SEARCH2D.html";"4686"
"1272";"SEARCH3D";"Finds 'objects' or regions of similar data values within a volume.";"11";"SEARCH3D.html";"3662"
"1273";"SEM_CREATE";"Creates a reference to a semaphore in the current IDL process. Creates the semaphore itself if necessary.";"40";"SEM_CREATE.html";"6338"
"1274";"SEM_DELETE";"Destroys a reference to the specified semaphore in the current IDL process. Optionally destroys the semaphore itself.";"40";"SEM_DELETE.html";"4655"
"1275";"SEM_LOCK";"Attempts to gain the lock on an existing semaphore (created by a call to the SEM_CREATE function) for the current IDL process.";"40";"SEM_LOCK.html";"5589"
"1276";"SEM_RELEASE";"Releases the lock on the specified semaphore held by the current IDL process.";"40";"SEM_RELEASE.html";"3690"
"1277";"SETENV";"Adds or changes an environment string in the process environment.";"74";"SETENV.html";"7762"
"1278";"SET_PLOT Procedure";"Sets the output device used by the IDL Direct Graphics procedures.";"22";"SET_PLOT_Procedure.html";"12246"
"1279";"SET_SHADING Procedure";"Modifies the light source shading parameters that affect the output of SHADE_SURF and POLYSHADE.";"22";"SET_SHADING_Procedure.html";"5670"
"1280";"SFIT";"Performs polynomial fit to a surface.";"47";"SFIT.html";"9901"
"1281";"SHADE_SURF_IRR Procedure";"Creates a shaded-surface representation of an irregularly gridded elevation dataset. Given a 3-D volume and a contour value, SHADE_VOLUME produces a list of vertices and polygons describing the contour surface.";"22";"SHADE_SURF_IRR_Procedure.html";"3519"
"1282";"SHADE_SURF Procedure";"Creates a shaded-surface representation of a regular or nearly-regular gridded surface.";"22";"SHADE_SURF_Procedure.html";"11277"
"1283";"SHADE_VOLUME Procedure";"Given a 3-D volume and a contour value, produces a list of vertices and polygons describing the contour surface.";"22";"SHADE_VOLUME_Procedure.html";"16323"
"1284";"SHIFT";"Shifts elements of vectors or arrays by a specified number of elements.";"17";"SHIFT.html";"18246"
"1285";"SHIFT_DIFF";"Applies a shift-difference filter to an image.";"29";"SHIFT_DIFF.html";"4629"
"1286";"SHMDEBUG";"Print debugging information when a variable loses reference to an underlying shared memory segment.";"76";"SHMDEBUG.html";"4543"
"1287";"SHMMAP";"Maps anonymous shared memory, or local disk files, into the memory address space of the currently executing IDL process.";"40";"SHMMAP.html";"6581"
"1288";"SHMUNMAP";"Removes a memory segment previously created by SHMMAP from the system.";"40";"SHMUNMAP.html";"4110"
"1289";"SHMVAR";"Creates an IDL array variable that uses the memory from a current mapped memory segment created by the SHMMAP procedure.";"40";"SHMVAR.html";"4664"
"1290";"SHOW3 Procedure";"Combines an image, a surface plot of the image data, and a contour plot of the images data in a single tri-level display.";"22";"SHOW3_Procedure.html";"5356"
"1291";"SHOWFONT";"Displays a TrueType or vector font.";"26";"SHOWFONT.html";"5055"
"1292";"SIMPLEX";"Use the simplex method to solve linear programming problems.";"58";"SIMPLEX.html";"8595"
"1293";"SIN";"Returns the trigonometric sine of X.";"65";"SIN.html";"13160"
"1294";"SINDGEN";"Returns a string array with each element set to its subscript.";"10";"SINDGEN.html";"5338"
"1295";"SINH";"Returns the hyperbolic sine of X.";"65";"SINH.html";"4694"
"1296";"SIZE";"Returns array size and type information.";"17";"SIZE.html";"60842"
"1297";"SKEWNESS";"Computes statistical skewness of an n-element vector.";"63";"SKEWNESS.html";"5902"
"1298";"SKIP_LUN";"Reads data in an open file and moves the file pointer.";"40";"SKIP_LUN.html";"6118"
"1299";"SLICER3";"Interactive volume visualization tool. (Direct Graphics)";"11";"SLICER3.html";"6061"
"1300";"SLIDE_IMAGE Procedure";"Creates a scrolling graphics window for examining large images.";"22";"SLIDE_IMAGE_Procedure.html";"4358"
"1301";"SMOOTH";"Smooths with a boxcar average.";"8";"SMOOTH.html";"46352"
"1302";"SOBEL";"Returns an approximation of Sobel edge enhancement.";"29";"SOBEL.html";"7588"
"1303";"SOCKET";"Opens a client-side TCP/IP Internet socket as an IDL file unit.";"40";"SOCKET.html";"6003"
"1304";"SORT";"Returns indices of an array sorted in ascending order.";"17";"SORT.html";"62641"
"1305";"SPAWN";"Spawns child process for access to operating system.";"74";"SPAWN.html";"22474"
"1306";"SPHER_HARM";"Returns value of the spherical harmonic function.";"61";"SPHER_HARM.html";"5052"
"1307";"SPH_4PNT";"Returns center and radius of a sphere given 4 points.";"55";"SPH_4PNT.html";"3782"
"1308";"SPH_SCAT";"Performs spherical gridding.";"50";"SPH_SCAT.html";"4221"
"1309";"SPLINE";"Performs cubic spline interpolation.";"50";"SPLINE.html";"14086"
"1310";"SPLINE_P";"Performs parametric cubic spline interpolation.";"50";"SPLINE_P.html";"5500"
"1311";"SPL_INIT";"Establishes the type of interpolating spline.";"50";"SPL_INIT.html";"5643"
"1312";"SPL_INTERP";"Performs cubic spline interpolation (Numerical Recipes).";"50";"SPL_INTERP.html";"6752"
"1313";"SPRSAB";"Performs matrix multiplication on sparse matrices.";"60";"SPRSAB.html";"3447"
"1314";"SPRSAX";"Multiplies sparse matrix by a vector.";"60";"SPRSAX.html";"3655"
"1315";"SPRSIN";"Converts matrix to row-index sparse matrix.";"60";"SPRSIN.html";"4526"
"1316";"SPRSTP";"Constructs the transpose of a sparse matrix.";"60";"SPRSTP.html";"3165"
"1317";"SQRT";"Returns the square root of X.";"55";"SQRT.html";"10073"
"1318";"STANDARDIZE";"Computes standardized variables.";"56";"STANDARDIZE.html";"7291"
"1319";"STDDEV";"Computes the standard deviation of an n-element vector.";"63";"STDDEV.html";"25157"
"1320";"STOP";"Stops the execution of a running program or batch file.";"76";"STOP.html";"15930"
"1321";"STRARR";"Returns string array containing zero-length strings.";"10";"STRARR.html";"13869"
"1322";"STRCMP";"Compares two strings.";"87";"STRCMP.html";"10929"
"1323";"STRCOMPRESS";"Removes whitespace from a string.";"87";"STRCOMPRESS.html";"12229"
"1324";"STREAMLINE";"Draws a streamline plot.";"11";"STREAMLINE.html";"16741"
"1325";"STREAMLINE Procedure";"STREAMLINE Procedure = Generates the visualization graphics from a path. (Direct Graphics)";"22";"STREAMLINE_Procedure.html";"8725"
"1326";"STREGEX";"Performs regular expression matching.";"87";"STREGEX.html";"11643"
"1327";"STRETCH";"Stretches color table for contrast enhancement.";"18";"STRETCH.html";"7736"
"1328";"STRING";"Converts arguments to string type.";"87";"STRING.html";"44988"
"1329";"STRJOIN";"Collapses a string scalar or array into merged strings.";"87";"STRJOIN.html";"15715"
"1330";"STRLEN";"Returns the length of a string.";"87";"STRLEN.html";"8482"
"1331";"STRLOWCASE";"Converts a string to lower case.";"87";"STRLOWCASE.html";"8788"
"1332";"STRMATCH";"Compares search string against input string expression.";"87";"STRMATCH.html";"21463"
"1333";"STRMESSAGE";"Returns the text of a given error number.";"23";"STRMESSAGE.html";"5585"
"1334";"STRMID";"Extracts a substring from a string.";"87";"STRMID.html";"44491"
"1335";"STRPOS";"Finds first occurrence of a substring within a string.";"87";"STRPOS.html";"22529"
"1336";"STRPUT";"Inserts the contents of one string into another.";"87";"STRPUT.html";"8231"
"1337";"STRSPLIT";"Splits its input string argument into separate substrings, according to the specified pattern.";"87";"STRSPLIT.html";"44644"
"1338";"STRTRIM";"Removes leading and/or trailing blanks from string.";"87";"STRTRIM.html";"31487"
"1339";"STRUCT_ASSIGN";"Uses 'Relaxed Structure Assignment' to copy structures.";"76";"STRUCT_ASSIGN.html";"6110"
"1340";"STRUCT_HIDE";"Prevents the IDL HELP procedure from displaying information about structures or objects.";"28";"STRUCT_HIDE.html";"3507"
"1341";"STRUPCASE";"Converts a string to upper case.";"87";"STRUPCASE.html";"9113"
"1342";"SURFACE";"Draws a three-dimensional surface for a 2D array of data.";"27";"SURFACE.html";"25129"
"1343";"SURFACE Procedure";"Plots an array as a surface. (Direct Graphics)";"22";"SURFACE_Procedure.html";"23608"
"1344";"SURFR Procedure";"Sets up 3-D transformations.";"22";"SURFR_Procedure.html";"3937"
"1345";"SVDC";"Computes Singular Value Decomposition of an array.";"53";"SVDC.html";"8562"
"1346";"SVDFIT";"Multivariate least squares fit using SVD method.";"47";"SVDFIT.html";"9422"
"1347";"SVSOL";"Solves set of linear equations using back-substitution.";"53";"SVSOL.html";"4661"
"1348";"SWAP_ENDIAN";"Reverses the byte ordering of scalars, arrays or structures.";"76";"SWAP_ENDIAN.html";"7763"
"1349";"SWAP_ENDIAN_INPLACE";"Reverses the byte ordering of scalars, arrays or structures. Differs from the SWAP_ENDIAN function in that it alters the input data in place rather than making a copy.";"76";"SWAP_ENDIAN_INPLACE.html";"4872"
"1350";"SWITCH";"Selects one statement for execution, depending upon the value of an expression.";"83";"SWITCH.html";"9749"
"1351";"SYMBOL";"Adds a symbol (with an optional text label) to the current IDL graphic at the x,y location.";"27";"SYMBOL.html";"14917"
"1352";"SYSTIME";"Returns the current time as either a date/time string, as the number of seconds elapsed since 1 January 1970, or as a Julian date/time value.";"19";"SYSTIME.html";"23077"
"1353";"S_TEST";"Performs the Sign test.";"51";"S_TEST.html";"3438"
"1354";"S Routines";;"1";"S_list.html";"3263"
"15552";"ENVIPointCloudSpatialRef";"Spatial reference that can be associated with an ENVIPointCloud object.";"3";"ENVIPointCloudSpatialRef.html";"2210"
"1356";"T3D Procedure";"Implements three-dimensional transforms.";"22";"T3D_Procedure.html";"6567"
"1357";"TAG_NAMES";"Returns the names of tags in a structure.";"76";"TAG_NAMES.html";"11538"
"1358";"TAN";"Returns the tangent of X.";"65";"TAN.html";"6906"
"1359";"TANH";"Returns the hyperbolic tangent of X.";"65";"TANH.html";"5334"
"1360";"TEK_COLOR Procedure";"Loads color table based on Tektronix printer. (Direct Graphics)";"18";"TEK_COLOR_Procedure.html";"6335"
"1361";"TEMPORARY";"Returns a temporary copy of a variable, and sets the original variable to 'undefined'.";"76";"TEMPORARY.html";"9498"
"1362";"TETRA_CLIP";"Clips a tetrahedral mesh to an arbitrary plane in space and returns a tetrahedral mesh of the remaining portion.";"11";"TETRA_CLIP.html";"4221"
"1363";"TETRA_SURFACE";"Extracts a polygonal mesh as the exterior surface of a tetrahedral mesh.";"11";"TETRA_SURFACE.html";"3535"
"1364";"TETRA_VOLUME";"Computes properties of tetrahedral mesh array.";"11";"TETRA_VOLUME.html";"3530"
"1365";"TEXT";"Adds a text annotation to the current IDL graphic.";"27";"TEXT.html";"77602"
"1366";"THIN";"Returns the 'skeleton' of a bi-level image.";"29";"THIN.html";"5902"
"1367";"THREED Procedure";"Plots a 2D array as a pseudo 3D plot.";"22";"THREED_Procedure.html";"3435"
"1368";"TIMEGEN";"Returns an array of double-precision floating-point values that represent times in Julian dates.";"10";"TIMEGEN.html";"10958"
"1369";"TIME_TEST2";"Performs speed benchmarks for IDL.";"76";"TIME_TEST2.html";"3651"
"1370";"TM_TEST";"Performs t-means test.";"51";"TM_TEST.html";"5727"
"1371";"TOTAL";"Sums of the elements of an array.";"17";"TOTAL.html";"58215"
"1372";"TRACE";"Computes the trace of an array.";"53";"TRACE.html";"5187"
"1373";"TRANSPOSE";"Transposes an array.";"17";"TRANSPOSE.html";"28536"
"1374";"TRIANGULATE";"Constructs Delaunay triangulation of a planar set of points.";"50";"TRIANGULATE.html";"16105"
"1375";"TRIGRID";"Interpolates irregularly-gridded data to a regular grid from a triangulation.";"47";"TRIGRID.html";"11215"
"1376";"TRIQL";"Determines eigenvalues and eigenvectors of tridiagonal array.";"49";"TRIQL.html";"4135"
"1377";"TRIRED";"Reduces a real, symmetric array to tridiagonal form.";"49";"TRIRED.html";"4666"
"1378";"TRISOL";"Solves tridiagonal systems of linear equations.";"53";"TRISOL.html";"4386"
"1379";"TRI_SURF";"Interpolates gridded set of points with a smooth quintic surface.";"50";"TRI_SURF.html";"5189"
"1380";"TRUNCATE_LUN";"Truncates an open file at the location of the current file pointer.";"40";"TRUNCATE_LUN.html";"3924"
"1381";"TS_COEF";"Computes the coefficients for autoregressive time-series.";"8";"TS_COEF.html";"3986"
"1382";"TS_DIFF";"Computes the forward differences of a time-series.";"8";"TS_DIFF.html";"6173"
"1383";"TS_FCAST";"Computes future or past values of stationary time-series.";"8";"TS_FCAST.html";"4278"
"1384";"TS_SMOOTH";"Computes moving averages of a time-series.";"8";"TS_SMOOTH.html";"9938"
"1385";"TVCRS Procedure";"Manipulates the image display cursor.";"22";"TVCRS_Procedure.html";"3910"
"1386";"TVLCT Procedure";"Loads display color tables. (Direct Graphics)";"18";"TVLCT_Procedure.html";"11558"
"1387";"TVRD";"Returns the contents of the specified rectangular portion of the current graphics window or device.";"22";"TVRD.html";"13399"
"1388";"TVSCL Procedure";"Scales and displays an image.";"22";"TVSCL_Procedure.html";"22347"
"1389";"TV Procedure";"Displays an image.";"22";"TV_Procedure.html";"27986"
"1390";"TYPENAME";"Retrieves a variable's IDL type name, class name, or structure name.";"76";"TYPENAME.html";"7739"
"1391";"T_CVF";"Computes the cutoff value in a Student's t distribution.";"59";"T_CVT.html";"4706"
"1392";"T_PDF";"Computes Student's t distribution.";"59";"T_PDF.html";"6177"
"1393";"T Routines";;"1";"T_list.html";"3321"
"1394";"UINDGEN";"Returns unsigned integer array with each element set to its subscript.";"10";"UINDGEN.html";"4176"
"1395";"UINT";"Converts argument to unsigned integer type.";"89";"UINT.html";"8245"
"1396";"UINTARR";"Creates an unsigned integer vector or array.";"10";"UINTARR.html";"5943"
"1397";"UL64INDGEN";"Returns an unsigned 64-bit integer array with each element set to its subscript.";"10";"UL64INDGEN.html";"3972"
"1398";"ULINDGEN";"Returns an unsigned longword array with each element set to its subscript.";"10";"ULINDGEN.html";"3995"
"1399";"ULON64ARR";"Returns an unsigned 64-bit integer vector or array.";"10";"ULON64ARR.html";"4155"
"1400";"ULONARR";"Returns an unsigned longword integer vector or array.";"10";"ULONARR.html";"4751"
"1401";"ULONG";"Converts argument to unsigned longword integer type.";"89";"ULONG.html";"6394"
"1402";"ULONG64";"Converts argument to unsigned 64-bit integer type.";"89";"ULONG64.html";"5165"
"1403";"UNIQ";"Returns subscripts of the unique elements in an array.";"17";"UNIQ.html";"24719"
"1404";"UNSHARP_MASK";"Performs an unsharp-mask sharpening filter on a two-dimensional array or a truecolor image.";"29";"UNSHARP_MASK.html";"4863"
"1405";"USERSYM Procedure";"Defines the plotting symbol.";"22";"USERSYM_Procedure.html";"15428"
"1406";"U Routines";;"1";"U_list.html";"2493"
"1407";"VALUE_LOCATE";"Finds the intervals within a given monotonic vector that brackets a given set of one or more search values.";"50";"VALUE_LOCATE.html";"23332"
"1408";"VARIANCE";"Computes the statistical variance of an n-element vector.";"63";"VARIANCE.html";"11196"
"1409";"VECTOR";"Draws a plot of either vectors or wind barbs.";"11";"VECTOR.html";"20958"
"1410";"VECTOR_FIELD";"Places colored, oriented vectors of specified length at each vertex in an input vertex array.";"11";"VECTOR_FIELD.html";"5004"
"1411";"VELOVECT Procedure";"Produces a two-dimensional velocity field plot.";"22";"VELOVECT_Procedure.html";"7731"
"1412";"VEL Procedure";"Draws a velocity (flow) field with arrows. ";"22";"VEL_Procedure.html";"4753"
"1413";"VERT_T3D";"Transforms a 3D array by a 4x4 transformation matrix.";"11";"VERT_T3D.html";"3559"
"1414";"VOIGT";"Calculates intensity of atomic absorption line (Voight) profile.";"55";"VOIGT.html";"8141"
"1415";"VORONOI";"Computes Voronoi polygon given Delaunay triangulation.";"50";"VORONOI.html";"5200"
"1416";"VOXEL_PROJ";"Generates volume visualizations using voxel technique. (Direct Graphics)";"11";"VOXEL_PROJ.html";"4730"
"1417";"V Routines";;"1";"V_list.html";"2334"
"1418";"WAIT";"Suspends execution of an IDL program for a specified period";"76";"WAIT.html";"15343"
"1419";"WARP_TRI";"Warps an image using control points.";"29";"WARP_TRI.html";"4604"
"1420";"WATERSHED";"Applies the morphological watershed operator to a grayscale image.";"29";"WATERSHED.html";"5802"
"1421";"WDELETE Procedure";"Deletes IDL graphics windows.";"22";"WDELETE_Procedure.html";"7091"
"1422";"WF_DRAW Procedure";"Draws weather fronts of various types using parametric spline interpolation to smooth the lines.";"22";"WF_DRAW_Procedure.html";"3154"
"1423";"WHERE";"Returns subscripts of nonzero array elements.";"17";"WHERE.html";"78704"
"1424";"WHILE...DO";"Performs statement(s) as long as expression evaluates to true. Subject is never executed if condition is initially false.";"83";"WHILE___DO.html";"23956"
"1425";"WIDGET_BASE";"Creates base widget (containers for other widgets).";"91";"WIDGET_BASE.html";"15552"
"1426";"WIDGET_BUTTON";"Creates button widgets.";"91";"WIDGET_BUTTON.html";"10586"
"1427";"WIDGET_COMBOBOX";"Creates editable droplist widgets.";"91";"WIDGET_COMBOBOX.html";"10064"
"1428";"WIDGET_CONTROL";"Realizes, manages, and destroys widgets.";"91";"WIDGET_CONTROL.html";"18539"
"1429";"WIDGET_DISPLAYCONTEXTMENU";"Displays a context-sensitive menu.";"91";"WIDGET_DISPLAYCONTEXTMEN.html";"4075"
"1430";"WIDGET_DRAW";"Creates drawable widgets.";"91";"WIDGET_DRAW.html";"12714"
"1431";"WIDGET_DROPLIST";"Creates droplist widgets.";"91";"WIDGET_DROPLIST.html";"5976"
"1432";"WIDGET_EVENT";"Returns events for the widget hierarchy.";"91";"WIDGET_EVENT.html";"4632"
"1433";"WIDGET_INFO";"Obtains information about widgets.";"91";"WIDGET_INFO.html";"10095"
"1434";"WIDGET_LABEL";"Creates label widgets.";"91";"WIDGET_LABEL.html";"6025"
"1435";"WIDGET_LIST";"Creates list widgets.";"91";"WIDGET_LIST.html";"5913"
"1436";"WIDGET_PROPERTYSHEET";"Creates a property sheet widget, which exposes the properties of an IDL object in a graphical interface. This widget transparently handles property value changes.";"91";"WIDGET_PROPERTYSHEET.html";"4141"
"1437";"WIDGET_SLIDER";"Creates slider widgets.";"91";"WIDGET_SLIDER.html";"4938"
"1438";"WIDGET_TAB";"Creates tab widgets.";"91";"WIDGET_TAB.html";"4740"
"1439";"WIDGET_TABLE";"Creates table widgets.";"91";"WIDGET_TABLE.html";"7698"
"1440";"WIDGET_TEXT";"Creates text widgets.";"91";"WIDGET_TEXT.html";"9002"
"1441";"WIDGET_TREE";"Creates tree widgets.";"91";"WIDGET_TREE.html";"7980"
"1442";"WIDGET_TREE_MOVE";"Copies and moves tree widget nodes from one tree to another or within the same tree.";"91";"WIDGET_TREE_MOVE.html";"3154"
"1443";"WIDGET_WINDOW";"Creates a graphics widget.";"91";"WIDGET_WINDOW.html";"6676"
"1444";"WIENER_FILTER";"Reduces degradation and noise in an image by statistically comparing it with an undegraded image.";"29";"WIENER_FILTER.html";"5520"
"1445";"WINDOW";"Creates an empty graphics window.";"27";"WINDOW.html";"20404"
"1446";"WINDOW Procedure";"Creates a window for the display of graphics or text. (Direct Graphics)";"22";"WINDOW_Procedure.html";"22969"
"1447";"WRITEU";"Writes unformatted binary data to a file.";"40";"WRITEU.html";"9626"
"1448";"WRITE_BMP";"Creates a window for the display of graphics or text.";"36";"WRITE_BMP.html";"6539"
"1449";"WRITE_CSV";"Writes comma-separated-values file (.CSV).";"39";"WRITE_CSV.html";"19220"
"1450";"WRITE_GIF";"Writes GIF file (.GIF).";"36";"WRITE_GIF.html";"9081"
"1451";"WRITE_IMAGE";"Writes an image and its color table vectors, if any, to a file of a specified type.";"36";"WRITE_IMAGE.html";"6297"
"1452";"WRITE_JPEG";"Writes JPEG file.";"36";"WRITE_JPEG.html";"27444"
"1453";"WRITE_JPEG2000";"Writes JPEG 2000 file.";"36";"WRITE_JPEG2000.html";"4223"
"1454";"WRITE_NRIF";"Writes NCAR Raster Interchange Format rasterfile.";"36";"WRITE_NRIF.html";"3198"
"1455";"WRITE_PICT";"Writes Macintosh PICT (version 2) bitmap file.";"36";"WRITE_PICT.html";"3214"
"1456";"WRITE_PNG";"Writes Portable Network Graphics (PNG) file.";"36";"WRITE_PNG.html";"24840"
"1457";"WRITE_PPM";"Writes PPM (true-color) or PGM (gray scale) file.";"36";"WRITE_PPM.html";"4043"
"1458";"WRITE_SPR";"Writes row-indexed sparse array structure to a file.";"60";"WRITE_SPR.html";"3108"
"1459";"WRITE_SRF";"Writes Sun Raster File (SRF).";"36";"WRITE_SRF.html";"3425"
"1460";"WRITE_SYLK";"Writes SYLK (Symbolic Link) spreadsheet file.";"39";"WRITE_SYLK.html";"4208"
"1461";"WRITE_TIFF";"Writes TIFF file with 1 to 3 channels.";"36";"WRITE_TIFF.html";"20607"
"1462";"WRITE_WAV";"Writes the audio stream to the named .WAV file.";"39";"WRITE_WAV.html";"4619"
"1463";"WRITE_WAVE";"Writes Wavefront Advanced Visualizer (.WAV) file.";"39";"WRITE_WAVE.html";"3450"
"1464";"WSET Procedure";"Selects the current window.";"22";"WSET_Procedure.html";"5866"
"1465";"WSHOW Procedure";"Exposes or hides the designated window.";"22";"WSHOW_Procedure.html";"5858"
"1466";"WTN";"Returns wavelet transform of the input array.";"8";"WTN.html";"5180"
"1485";"W Routines";;"1";"W_list.html";"2739"
"1486";"XBM_EDIT";"Creates, edits bitmap icons for IDL widget button labels.";"91";"XBM_EDIT.html";"3273"
"1487";"XDISPLAYFILE";"Displays ASCII text file in scrolling text widget.";"35";"XDISPLAYFILE.html";"3925"
"1488";"XDXF";"Utility to display and interactively manipulate DXF objects.";"11";"XDXF.html";"4704"
"1489";"XFONT";"Creates modal widget to select and view an X Windows font.";"26";"XFONT.html";"3277"
"1490";"XINTERANIMATE";"Displays animated sequence of images.";"22";"XINTERANIMATE.html";"5854"
"1491";"XLOADCT Procedure";"Provides GUI to interactively select and load color tables. (Direct Graphics)";"18";"XLOADCT_Procedure.html";"9273"
"1492";"XMANAGER";"Provides event loop manager for IDL widgets.";"91";"XMANAGER.html";"8599"
"1493";"XMNG_TMPL";"Template for creating widgets.";"91";"XMNG_TMPL.html";"3142"
"1494";"XMTOOL";"Displays a tool for viewing XMANAGER widgets.";"91";"XMTOOL.html";"3397"
"1495";"XOBJVIEW";"Displays object viewer widget.";"11";"XOBJVIEW.html";"4864"
"1496";"XOBJVIEW_ROTATE";"Programmatically rotate the object currently displayed in XOBJVIEW.";"11";"XOBJVIEW_ROTATE.html";"3373"
"1497";"XOBJVIEW_WRITE_IMAGE";"Write the object currently displayed in XOBJVIEW to an image file.";"11";"XOBJVIEW_WRITE_IMAGE.html";"3065"
"1498";"XPALETTE Procedure";"Displays widget used to create and modify color tables. (Direct Graphics)";"18";"XPALETTE_Procedure.html";"5919"
"1499";"XPCOLOR Procedure";"Adjusts the value of the current Direct Graphics plotting color.";"22";"XPCOLOR_Procedure.html";"2975"
"1500";"XPLOT3D";"Utility for creating and interactively manipulating 3D plots.";"22";"XPLOT3D.html";"4722"
"1501";"XREGISTERED";"Returns registration status of a given widget.";"91";"XREGISTERED.html";"3755"
"1502";"XROI";"Utility for defining regions of interest, and obtaining geometry and statistical data about these ROIs.";"29";"XROI.html";"7325"
"1503";"XSQ_TEST";"Computes Chi-square goodness-of-fit test.";"51";"XSQ_TEST.html";"6915"
"1504";"XSURFACE Procedure";"Graphical interface to the SURFACE and SHADE_SURF commands.";"22";"XSURFACE_Procedure.html";"3583"
"1505";"XVAREDIT";"Provides widget-based editor for IDL variables.";"17";"XVAREDIT.html";"3851"
"1506";"XVOLUME";"Utility for viewing and interactively manipulating volumes and isosurfaces.";"11";"XVOLUME.html";"5663"
"1507";"XVOLUME_ROTATE";"Utility for rotating a volume displayed in XVOLUME.";"11";"XVOLUME_ROTATE.html";"3211"
"1508";"XVOLUME_WRITE_IMAGE";"Utility for writing a volume displayed in XVOLUME to an image file.";"11";"XVOLUME_WRITE_IMAGE.html";"2593"
"1509";"XYOUTS Procedure";"Draws text on currently-selected graphics device.";"22";"XYOUTS_Procedure.html";"53918"
"1510";"X Routines";;"1";"X_list.html";"2351"
"1511";"ZOOM_24 Procedure";"Zooms portions of true-color (24-bit) display.";"22";"ZOOM_24_Procedure.html";"3186"
"1512";"ZOOM Procedure";"Zooms portions of the display.";"22";"ZOOM_Procedure.html";"7481"
"1513";"Z Routines";;"1";"Z_list.html";"2106"
"1515";"ENVI";"Launches the ENVI application and returns an object reference to the application.";"154";"ENVI.html";"54543"
"1516";"ADAPT_FILT_DOIT";"Apply an adaptive filter.";"162";"ADAPT_FILT_DOIT.html";"6318"
"1517";"AIRSAR_HEADER_DOIT";"Read an Airborne Synthetic Aperture Radar (AIRSAR) header.";"162";"AIRSAR_HEADER_DOIT.html";"3076"
"1518";"AIRSAR_PED_HEIGHT_DOIT";"Calculate pedestal height images from an AIRSAR compressed stoked matrix.";"162";"AIRSAR_PED_HEIGHT_DOIT.html";"3243"
"1519";"AIRSAR_PHASE_IMAGE_DOIT";"Calculate phase images from an AIRSAR compressed stokes matrix.";"162";"AIRSAR_PHASE_IMAGE_DOIT.html";"3171"
"1520";"AIRSAR_POLSIG_DOIT";"Calculate polarization signatures from an AIRSAR compressed stokes matrix.";"162";"AIRSAR_POLSIG_DOIT.html";"2970"
"1521";"AIRSAR_SCATTER_DOIT";"Calculate scatter classification for an AIRSAR compressed stokes matrix.";"162";"AIRSAR_SCATTER_DOIT.html";"3122"
"1522";"AIRSAR_SYNTH_DOIT";"Synthesize AIRSAR images.";"162";"AIRSAR_SYNTH_DOIT.html";"3213"
"1523";"ASPECT_DOIT";"Make aspect corrections to Landsat Multispectral Scanner (MSS) image data.";"162";"ASPECT_DOIT.html";"3138"
"1524";"AUTO_WID_MNG";"Automatically perform event handling for an ENVI compound widget.";"161";"AUTO_WID_MNG.html";"5075"
"1525";"BAD_DATA_DOIT";"Remove bad data lines.";"162";"BAD_DATA_DOIT.html";"3366"
"1526";"CF_DOIT";"Create an output file to disk or memory from bands in the Available Bands List.";"162";"CF_DOIT.html";"8136"
"1527";"CLASS_CONFUSION_DOIT";"Compute a classification confusion matrix.";"162";"CLASS_CONFUSION_DOIT.html";"4501"
"1528";"CLASS_CS_DOIT";"Clump or sieve a classification image.";"162";"CLASS_CS_DOIT.html";"24640"
"1529";"CLASS_DOIT";"Perform supervised classification.";"162";"CLASS_DOIT.html";"8584"
"1530";"CLASS_MAJORITY_DOIT";"Perform majority analysis or minority analysis on a classification image.";"162";"CLASS_MAJORITY_DOIT.html";"3416"
"1531";"CLASS_RULE_DOIT";"Classify rule images.";"162";"CLASS_RULE_DOIT.html";"3255"
"1532";"CLASS_STATS_DOIT";"Calculate class statistics.";"162";"CLASS_STATS_DOIT.html";"6172"
"1533";"COM_CLASS_DOIT";"Combine classes.";"162";"COM_CLASS_DOIT.html";"4665"
"1534";"CONTINUUM_REMOVE_DOIT";"Perform Continuum Removal.";"162";"CONTINUUM_REMOVE_DOIT.html";"5098"
"1535";"CONVERT_DOIT";"Convert interleave type.";"162";"CONVERT_DOIT.html";"5032"
"1536";"CONVERT_INPLACE_DOIT";"Convert in place between storage types.";"162";"CONVERT_INPLACE_DOIT.html";"6778"
"1537";"CONV_DOIT";"Perform convolution filtering.";"162";"CONV_DOIT.html";"11295"
"1538";"CROSS_TRACK_CORRECTION_DOIT";"Remove variation in the cross-track illumination of an image.";"162";"CROSS_TRACK_CORRECTION_DOIT.html";"11329"
"1539";"DARK_SUB_DOIT";"Perform dark subtraction.";"162";"DARK_SUB_DOIT.html";"4196"
"1540";"DECOR_DOIT";"Perform saturation stretch.";"162";"DECOR_DOIT.html";"4222"
"1541";"DEM_BAD_DATA_DOIT";"Correct bad data points in digital elevation models (DEMs).";"162";"DEM_BAD_DATA_DOIT.html";"4525"
"1542";"DESKEW_DOIT";"Deskew MSS data.";"162";"DESKEW_DOIT.html";"3252"
"1543";"DESTRIPE_DOIT";"Destripe image data.";"162";"DESTRIPE_DOIT.html";"3491"
"1544";"DISP_GET_LOCATION";"Return the x,y location of a selected pixel.";"161";"DISP_GET_LOCATION.html";"4896"
"1545";"DISP_GOTO";"Move the cursor to a specified location.";"161";"DISP_GOTO.html";"4110"
"1546";"DISP_OUT_IMG";"Output to Postscript.";"161";"DISP_OUT_IMG.html";"4304"
"1547";"ENVI_ACE_DOIT";"Perform Adaptive Coherence Estimator target detection analysis.";"162";"ENVI_ACE_DOIT.html";"4700"
"1548";"ENVI_ADD_PROJECTION";"Add a projection to ENVI.";"160";"ENVI_ADD_PROJECTION.html";"38546"
"1549";"ENVI_ASSIGN_HEADER_VALUE";"Set user-defined header values.";"160";"ENVI_ASSIGN_HEADER_VALUE.html";"48077"
"15524";"ENVI::GetBroadcastChannel";"Returns an object reference to the system's broadcast channel.";"154";"ENVI__GetBroadcastChannel.html";"1867"
"15525";"ENVI::OpenPointCloud";"Opens one or more LAS (.las or .ntf), MrSID (.sid), text (.txt), Terrasolid (.bin), or single project files (.ini).";"3";"ENVI__OpenPointCloud.html";"2413"
"1551";"ENVI_AVHRR_CALIBRATE_DOIT";"Calibrate Advanced Very High Resolution Radiometer (AVHRR) data or compute AVHRR sea surface temperature (SST).";"162";"ENVI_AVHRR_CALIBRATE_DOIT.html";"5370"
"1552";"ENVI_AVHRR_GEOMETRY_DOIT";"Compute the AVHRR geometry (latitude and longitude), solar zenith angles, and sensor zenith angles for each pixel.";"162";"ENVI_AVHRR_GEOMETRY_DOIT.html";"3374"
"1553";"ENVI_AVHRR_WARP_DOIT";"Warp AVHRR data or resulting AVHRR data products.";"162";"ENVI_AVHRR_WARP_DOIT.html";"3796"
"1554";"ENVI_BANDMAX_SELECT_BANDS";"Perform the BandMax background suppression algorithm to derive a subset of significant bands using input target and background spectra.";"160";"ENVI_BANDMAX_SELECT_BANDS.html";"40931"
"1555";"ENVI_BATCH_EXIT";"Exit ENVI from the non-menu batch mode.";"157";"ENVI_BATCH_EXIT.html";"48404"
"1556";"ENVI_BATCH_INIT";"Initialize ENVI from the non-menu batch mode.";"157";"ENVI_BATCH_INIT.html";"48202"
"1557";"ENVI_BATCH_STATUS_WINDOW";"Enable and disable the ENVI batch status window.";"161";"ENVI_BATCH_STATUS_WINDOW.html";"4773"
"1558";"ENVI_BUFFER_ZONE_DOIT";"Create a buffer zone image from a classification image.";"162";"ENVI_BUFFER_ZONE_DOIT.html";"3499"
"1559";"ENVI_CAL_DOIT";"Spectrally calibrate images using flat field or internal average relative reflectance (IARR).";"162";"ENVI_CAL_DOIT.html";"4271"
"1560";"ENVI_CEM_DOIT";"Perform Constrained Energy Minimization target detection analysis.";"162";"ENVI_CEM_DOIT.html";"4141"
"1561";"ENVI_CENTER";"Return the centering offsets for a widget.";"161";"ENVI_CENTER.html";"4185"
"1562";"ENVI_CLOSE_DISPLAY";"Close a display group.";"161";"ENVI_CLOSE_DISPLAY.html";"3802"
"1563";"ENVI_CLOVER_DOIT";"Overlay classes.";"162";"ENVI_CLOVER_DOIT.html";"3243"
"1564";"ENVI_COLLECT_SPECTRA";"Perform Endmember Collection.";"161";"ENVI_COLLECT_SPECTRA.html";"5187"
"1565";"ENVI_COMPUTE_SUN_ANGLES";"Compute sun angles.";"160";"ENVI_COMPUTE_SUN_ANGLES.html";"50236"
"1566";"ENVI_CONVERT_FILE_COORDINATES";"Convert between map and pixel coordinates.";"160";"ENVI_CONVERT_FILE_COORDINATES.html";"48020"
"1567";"ENVI_CONVERT_FILE_MAP_PROJECTION";"Convert a file from its current map projection to an output projection.";"160";"ENVI_CONVERT_FILE_MAP_PROJECTION.html";"15296"
"1568";"ENVI_CONVERT_LIDAR_DATA_DOIT";"Read a light detection and ranging (LIDAR) data file in log ASCII standard (LAS) format and convert it to either an ENVI image file or an ENVI vector file (EVF).";"162";"ENVI_CONVERT_LIDAR_DATA_DOIT.html";"3596"
"1569";"ENVI_CONVERT_PROJECTION_COORDINATES";"Convert map coordinates between projections.";"160";"ENVI_CONVERT_PROJECTION_COORDINATES.html";"12057"
"1570";"ENVI_CREATE_ROI";"Create a new Region of Interest (ROI).";"160";"ENVI_CREATE_ROI.html";"41075"
"1571";"ENVI_CUBE_3D_DOIT";"Build a 3D image cube.";"162";"ENVI_CUBE_3D_DOIT.html";"3394"
"1572";"ENVI_DEFAULT_STRETCH_CREATE";"Return an ENVI default stretch structure.";"160";"ENVI_DEFAULT_STRETCH_CREATE.html";"40085"
"1573";"ENVI_DEFINE_MENU_BUTTON";"Add buttons to the ENVI menu system automatically from a user-defined routine in a .pro or .sav file within the save_add directory.";"161";"ENVI_DEFINE_MENU_BUTTON.html";"6284"
"1574";"ENVI_DEFINE_ROI";"Add pixels to an ROI.";"160";"ENVI_DEFINE_ROI.html";"78371"
"1575";"ENVI_DELETE_ROIS";"Delete ROIs.";"160";"ENVI_DELETE_ROIS.html";"43120"
"1576";"ENVI_DISPLAY_BANDS";"Display an image in a display group.";"161";"ENVI_DISPLAY_BANDS.html";"5177"
"1577";"ENVI_DISP_QUERY";"Return display group information.";"161";"ENVI_DISP_QUERY.html";"4500"
"1578";"ENVI_DOIT";"Interface for all of the ENVI Classic processing routines (those that end with _DOIT).";"162";"ENVI_DOIT.html";"9124"
"1579";"ENVI_ENTER_DATA";"Enter an image into memory as an ENVI file.";"160";"ENVI_ENTER_DATA.html";"16730"
"1580";"ENVI_ENVISAT_GEOREF_DOIT";"Georeference Advanced Along-Track Scanning Radiometer (AATSR)-, Advanced Synthetic Aperture Radar (ASAR)-, and Medium Resolution Imaging Spectrometer (MERIS)-format Environmental Satellite (ENVISAT) data.";"162";"ENVI_ENVISAT_GEOREF_DOIT.html";"3282"
"1581";"ENVI_EVF_CLOSE";"Close an EVF.";"160";"ENVI_EVF_CLOSE.html";"39568"
"1582";"ENVI_EVF_DEFINE_ADD_RECORD";"Add a record to a new EVF.";"160";"ENVI_EVF_DEFINE_ADD_RECORD.html";"6439"
"1583";"ENVI_EVF_DEFINE_CLOSE";"Close an EVF ID for editing.";"160";"ENVI_EVF_DEFINE_CLOSE.html";"44927"
"1584";"ENVI_EVF_DEFINE_INIT";"Create a new EVF ID.";"160";"ENVI_EVF_DEFINE_INIT.html";"3989"
"1585";"ENVI_EVF_INFO";"Return information about an EVF.";"160";"ENVI_EVF_INFO.html";"45534"
"1586";"ENVI_EVF_OPEN";"Open an EVF and return an EVF ID.";"160";"ENVI_EVF_OPEN.html";"5293"
"1587";"ENVI_EVF_READ_RECORD";"Read EVF records into an IDL variable.";"160";"ENVI_EVF_READ_RECORD.html";"45672"
"1588";"ENVI_EVF_TO_SHAPEFILE";"Output an EVF to shapefile format.";"160";"ENVI_EVF_TO_SHAPEFILE.html";"4462"
"15519";"IDL_Object::_overloadFunction";"Allows you to create function pointers in IDL.";"172";"IDL_Object_overloadFunction.html";"1227"
"1590";"ENVI_FILE_QUERY";"Return information about a data file.";"160";"ENVI_FILE_QUERY.html";"60671"
"1591";"ENVI_FILE_TYPE";"Translate between a file type code and description.";"160";"ENVI_FILE_TYPE.html";"6096"
"1592";"ENVI_FILTER_DOIT";"Build a Fast Fourier Transform (FFT) filter.";"162";"ENVI_FILTER_DOIT.html";"3272"
"1593";"ENVI_FX_EXAMPLEBASED_DOIT";"Automates the Example Based Feature Extraction workflow, using an imported training data file.";"162";"ENVI_FX_EXAMPLEBASED_DOIT.html";"6617"
"1594";"ENVI_FX_RULEBASED_DOIT";"Automates the Rule-Based Feature Extraction workflow, using an imported rule file.";"162";"ENVI_FX_RULEBASED_DOIT.html";"7066"
"1595";"ENVI_FX_SEGMENTONLY_DOIT";"Automates the Segment Only Feature Extraction workflow.";"162";"ENVI_FX_SEGMENTONLY_DOIT.html";"7424"
"1596";"ENVI_GEOREF_FROM_GLT_DOIT";"Georeference an associated image with the geographic lookup table (GLT) file output from GLT_DOIT.";"162";"ENVI_GEOREF_FROM_GLT_DOIT.html";"4884"
"1598";"ENVI_GET_DATA";"Return spatial image data from a file.";"160";"ENVI_GET_DATA.html";"14201"
"1599";"ENVI_GET_DISPLAY_NUMBERS";"Return a list of display numbers.";"161";"ENVI_GET_DISPLAY_NUMBERS.html";"3765"
"15520";"IDL_Object::_overloadMethod";"Allows you to create dynamic methods off of IDL objects.";"172";"IDL_Object_overloadMethod.html";"1314"
"1601";"ENVI_GET_HEADER_VALUE";"Return user-defined values.";"160";"ENVI_GET_HEADER_VALUE.html";"4514"
"1602";"ENVI_GET_IMAGE";"Return spatial image data from a display group.";"161";"ENVI_GET_IMAGE.html";"4129"
"1603";"ENVI_GET_MAP_INFO";"Return map information from a display group.";"160";"ENVI_GET_MAP_INFO.html";"7928"
"1604";"ENVI_GET_PATH";"Return the path where the current version of ENVI is installed.";"161";"ENVI_GET_PATH.html";"3959"
"1605";"ENVI_GET_PROJECTION";"Return projection information.";"160";"ENVI_GET_PROJECTION.html";"6461"
"1606";"ENVI_GET_RGB_TRIPLETS";"Return RGB triplets for graphics color index.";"160";"ENVI_GET_RGB_TRIPLETS.html";"4593"
"1607";"ENVI_GET_ROI";"Return ROI pixel addresses as 1D subscripts.";"160";"ENVI_GET_ROI.html";"4852"
"1608";"ENVI_GET_ROI_DATA";"Return image data associated with an ROI.";"160";"ENVI_GET_ROI_DATA.html";"7118"
"1609";"ENVI_GET_ROI_DIMS_PTR";"Return DIMS ROI pointer for use with the DIMS variable.";"160";"ENVI_GET_ROI_DIMS_PTR.html";"4298"
"1610";"ENVI_GET_ROI_IDS";"Return ROI IDs.";"160";"ENVI_GET_ROI_IDS.html";"49689"
"1611";"ENVI_GET_ROI_INFORMATION";"Return information associated with defined ROIs.";"160";"ENVI_GET_ROI_INFORMATION.html";"4353"
"1612";"ENVI_GET_SLICE";"Return a spectral slice from an image.";"160";"ENVI_GET_SLICE.html";"6077"
"1613";"ENVI_GET_STATISTICS";"Return values from an ENVI statistics file.";"160";"ENVI_GET_STATISTICS.html";"4775"
"1614";"ENVI_GET_TILE";"Return one spatial or spectral tile of image data.";"160";"ENVI_GET_TILE.html";"4223"
"1615";"ENVI_GLT_DOIT";"Build a GLT from input geometry.";"162";"ENVI_GLT_DOIT.html";"4952"
"1616";"ENVI_GRID_DOIT";"Convert irregularly gridded points to raster image.";"162";"ENVI_GRID_DOIT.html";"3689"
"1617";"ENVI_GS_SHARPEN_DOIT";"Perform Gram-Schmidt spectral sharpening.";"162";"ENVI_GS_SHARPEN_DOIT.html";"8588"
"1618";"ENVI_ICA_DOIT";"Perform forward Independent Components transform.";"162";"ENVI_ICA_DOIT.html";"4145"
"1619";"ENVI_ICA_INV_DOIT";"Perform inverse Independent Components transform.";"162";"ENVI_ICA_INV_DOIT.html";"3175"
"1620";"ENVI_INFO_WID";"Display text data in a 'report' widget.";"161";"ENVI_INFO_WID.html";"3797"
"1621";"ENVI_INIT_TILE";"Initialize tile processing and return the tile ID.";"160";"ENVI_INIT_TILE.html";"6604"
"1622";"ENVI_IO_ERROR";"Report input/output processing errors.";"161";"ENVI_IO_ERROR.html";"3405"
"1623";"ENVI_IS_GDB";"Test whether an ArcGIS' catalog path points to a geodatabase.";"160";"ENVI_IS_GDB.html";"4320"
"1624";"ENVI_LAYER_STACKING_DOIT";"Build a new multi-band file from georeferenced images of various pixel sizes, extents, and projections.";"162";"ENVI_LAYER_STACKING_DOIT.html";"9439"
"1625";"ENVI_MAP_INFO_CREATE";"Return map information.";"160";"ENVI_MAP_INFO_CREATE.html";"8792"
"1626";"ENVI_MASK_APPLY_DOIT";"Apply a mask to a file.";"162";"ENVI_MASK_APPLY_DOIT.html";"5721"
"1627";"ENVI_NEURAL_NET_DOIT";"Perform classification using a neural net method.";"162";"ENVI_NEURAL_NET_DOIT.html";"3798"
"1628";"ENVI_OPEN_DATA_FILE";"Open an external (non-ENVI) image file.";"160";"ENVI_OPEN_DATA_FILE.html";"13797"
"1629";"ENVI_OPEN_FILE";"Open an ENVI file.";"160";"ENVI_OPEN_FILE.html";"14619"
"1630";"ENVI_OPEN_GDB";"Open a raster dataset from a geodatabase.";"160";"ENVI_OPEN_GDB.html";"3534"
"1631";"ENVI_OSP_DOIT";"Perform Orthogonal Subspace Projection target detection analysis.";"162";"ENVI_OSP_DOIT.html";"3382"
"15521";"TS_LANCZOS";"Smoothly interpolates the input data over a Lanczos kernel and can be used as a low-pass filter.";"8";"TS_LANCZOS.html";"1364"
"1633";"ENVI_OUTPUT_TO_GDB";"Write a raster dataset to a geodatabase.";"160";"ENVI_OUTPUT_TO_GDB.html";"4751"
"1634";"ENVI_PC_SHARPEN_DOIT";"Perform principal components spectral sharpening.";"162";"ENVI_PC_SHARPEN_DOIT.html";"6217"
"1635";"ENVI_PICKFILE";"Use this widget to select a filename from disk.";"161";"ENVI_PICKFILE.html";"6096"
"1636";"ENVI_PLOT_DATA";"Create an x,y plot.";"160";"ENVI_PLOT_DATA.html";"4593"
"1637";"ENVI_PROJ_CREATE";"Create ENVI projection information.";"160";"ENVI_PROJ_CREATE.html";"26759"
"1638";"ENVI_QUAC_DOIT";"Automates the QUick Atmospheric Correction (QUAC) workflow.";"162";"ENVI_QUAC_DOIT.html";"4884"
"1639";"ENVI_QUERY_VERSION";"Return the current version of ENVI.";"157";"ENVI_QUERY_VERSION.html";"3907"
"1640";"ENVI_RADARSAT_GEOREF_DOIT";"Extract embedded geolocation points from a processed Radarsat file.";"162";"ENVI_RADARSAT_GEOREF_DOIT.html";"3620"
"1641";"ENVI_READ_COLS";"Read ASCII column data.";"160";"ENVI_READ_COLS.html";"4397"
"1642";"ENVI_REGISTER_DOIT";"Warp image data.";"162";"ENVI_REGISTER_DOIT.html";"5756"
"1643";"ENVI_REPORT_ERROR";"Report error message strings through the standard ENVI error reporting mechanism.";"161";"ENVI_REPORT_ERROR.html";"3418"
"1644";"ENVI_REPORT_INC";"Set the status report increment.";"161";"ENVI_REPORT_INC.html";"3665"
"1645";"ENVI_REPORT_INIT";"Initialize and end a status report.";"161";"ENVI_REPORT_INIT.html";"5042"
"1646";"ENVI_REPORT_STAT";"Update status report widget with percent complete.";"161";"ENVI_REPORT_STAT.html";"4549"
"1647";"ENVI_RESAMPLE_SPECTRA";"Spectrally resample individual spectra.";"160";"ENVI_RESAMPLE_SPECTRA.html";"4495"
"1648";"ENVI_RESTORE_ROIS";"Restore saved ROIs.";"160";"ENVI_RESTORE_ROIS.html";"4509"
"1649";"ENVI_RIGOROUS_ORTHO_DOIT";"Automates the ENVI Orthorectification Module workflow.";"162";"ENVI_RIGOROUS_ORTHO_DOIT.html";"5495"
"1650";"ENVI_ROI_TO_IMAGE_DOIT";"Create a classification image from ROIs.";"162";"ENVI_ROI_TO_IMAGE_DOIT.html";"3641"
"1651";"ENVI_RXD_DOIT";"Perform Reed-Xiaoli anomaly detection on a multispectral or hyperspectral image.";"162";"ENVI_RXD_DOIT.html";"3710"
"1652";"ENVI_SAVE_ROIS";"Save ROIs.";"160";"ENVI_SAVE_ROIS.html";"4110"
"1653";"ENVI_SEAWIFS_GEOMETRY_DOIT";"Calculate the geometry for Hierarchical Data Format (HDF) and Committee on Earth Observation Satellites (CEOS)-format Sea-viewing Wide Field-of-view Sensors (SeaWiFS) data.";"162";"ENVI_SEAWIFS_GEOMETRY_DOIT.html";"3152"
"1654";"ENVI_SEAWIFS_GEOREF_DOIT";"Georeference HDF and CEOS-format SeaWiFS data.";"162";"ENVI_SEAWIFS_GEOREF_DOIT.html";"3209"
"1655";"ENVI_SEGMENT_DOIT";"Segment a classification image into unique spatially contiguous 'blobs'.";"162";"ENVI_SEGMENT_DOIT.html";"4431"
"1656";"ENVI_SELECT";"Use this widget to select an open ENVI file or band.";"161";"ENVI_SELECT.html";"54395"
"1657";"ENVI_SENSOR_TYPE";"Translate between sensor type code and description.";"160";"ENVI_SENSOR_TYPE.html";"4871"
"1658";"ENVI_SETUP_HEAD";"Write an ENVI header file for an image.";"160";"ENVI_SETUP_HEAD.html";"9223"
"1659";"ENVI_SET_INHERITANCE";"Return the ENVI inheritance structure.";"160";"ENVI_SET_INHERITANCE.html";"4833"
"15522";"TS_SPECTROGRAM";"Generates a spectrogram of a given vector.";"8";"TS_SPECTROGRAM.html";"1961"
"1661";"ENVI_SPECTRAL_RESAMPLING_DOIT";"Spectrally resample image or spectral library files.";"162";"ENVI_SPECTRAL_RESAMPLING_DOIT.html";"4335"
"1662";"ENVI_STATS_DOIT";"Calculate statistics from a data file.";"162";"ENVI_STATS_DOIT.html";"7565"
"1663";"ENVI_SUBSPACE_BACKGROUND_STATS_DOIT";"Remove anomalous pixels prior to running statistics-based spectral detection methods.";"162";"ENVI_SUBSPACE_BACKGROUND_STATS_DOIT.html";"50598"
"1664";"ENVI_SUM_DATA_DOIT";"Calculate a number of statistical parameters on a set of bands.";"162";"ENVI_SUM_DATA_DOIT.html";"4783"
"1665";"ENVI_SVM_DOIT";"Perform supervised image classification using a support vector machine (SVM).";"162";"ENVI_SVM_DOIT.html";"5863"
"1666";"ENVI_SYNTHETIC_COLOR_DOIT";"Calculate synthetic color image.";"162";"ENVI_SYNTHETIC_COLOR_DOIT.html";"3019"
"1667";"ENVI_TCIMF_DOIT";"Perform Target-Constrained Interference-Minimized Filter target analysis.";"162";"ENVI_TCIMF_DOIT.html";"3349"
"11457";"COLOR_24_KPB";"Convert r, g, and b color value(s) to 24-bit color values. R, g, and b		should be integers in the range [0, 255]. If not, they are converted to LONGs 		and then truncated to that range. R, g, and b can be three scalars or three arrays...";"151";"color_24_kpb.html";"143"
"1669";"ENVI_THERMAL_CORRECT_DOIT";"Perform thermal infrared atmospheric correction.";"162";"ENVI_THERMAL_CORRECT_DOIT.html";"4069"
"1670";"ENVI_TILE_DONE";"Complete tile processing.";"160";"ENVI_TILE_DONE.html";"3219"
"1671";"ENVI_TOGGLE_CATCH";"Toggle the ENVI error catching mechanism on and off.";"161";"ENVI_TOGGLE_CATCH.html";"3107"
"1672";"ENVI_TRANSLATE_PROJECTION_NAME";"Convert projection names.";"160";"ENVI_TRANSLATE_PROJECTION_NAME.html";"3627"
"1673";"ENVI_TRANSLATE_PROJECTION_UNITS";"Translate projection units.";"160";"ENVI_TRANSLATE_PROJECTION_UNITS.html";"5074"
"1674";"ENVI_USER_DEFINED_ANNOTATION";"Create an ENVI annotation file or append items to an existing annotation file.";"160";"ENVI_USER_DEFINED_ANNOTATION.html";"5613"
"1675";"ENVI_VEG_INDEX_AVAILABLE_INDICES";"Determine the number of vegetation indices that you can calculate on an input data file.";"160";"ENVI_VEG_INDEX_AVAILABLE_INDICES.html";"6839"
"1676";"ENVI_VEG_INDEX_DOIT";"Calculate vegetation indices from a spectral input image.";"162";"ENVI_VEG_INDEX_DOIT.html";"13521"
"1677";"ENVI_VEG_SUPPRESS_DOIT";"Suppress vegetation spectral signatures.";"162";"ENVI_VEG_SUPPRESS_DOIT.html";"3367"
"1678";"ENVI_WRITE_COSMOSKYMED_METADATA";"Write the metadata from a COSMO-SkyMed data file to XML.";"160";"ENVI_WRITE_COSMOSKYMED_METADATA.html";"3126"
"1679";"ENVI_WRITE_DBF_FILE";"Output an EVF attribute file to DBF format.";"160";"ENVI_WRITE_DBF_FILE.html";"3822"
"1680";"ENVI_WRITE_ENVI_FILE";"Convert an IDL image array to an ENVI image.";"160";"ENVI_WRITE_ENVI_FILE.html";"11585"
"1681";"ENVI_WRITE_FILE_HEADER";"Write/re-write an ENVI header file to preserve changes to user-defined header values.";"160";"ENVI_WRITE_FILE_HEADER.html";"6587"
"1682";"ENVI_WRITE_STATISTICS";"Write an ENVI statistics file.";"160";"ENVI_WRITE_STATISTICS.html";"4431"
"1683";"ELINE_CAL_DOIT";"Perform empirical line calibration.";"162";"ELINE_CAL_DOIT.html";"4324"
"1684";"EMITTANCE_CALC_DOIT";"Convert emissivity.";"162";"EMITTANCE_CALC_DOIT.html";"4630"
"1685";"ENVI Procedure";"Restore base ENVI save files (.sav) for batch mode.";"157";"ENVI_Procedure.html";"50755"
"1686";"FFT_DOIT";"Perform FFT filtering.";"162";"FFT_DOIT.html";"3267"
"1687";"FFT_INV_DOIT";"Apply FFT filter and perform inverse FFT.";"162";"FFT_INV_DOIT.html";"3985"
"1688";"GAINOFF_DOIT";"Apply gain and offset to each input band.";"162";"GAINOFF_DOIT.html";"3583"
"1689";"GEN_IMAGE_DOIT";"Generate test images.";"162";"GEN_IMAGE_DOIT.html";"3191"
"1690";"HANDLE_VALUE";"Get and set handle values.";"157";"HANDLE_VALUE.html";"3949"
"1691";"HIST_EXPORT_DOIT";"Output images using an applied lookup table (LUT).";"162";"HIST_EXPORT_DOIT.html";"3330"
"1692";"MAGIC_MEM_CHECK";"Clear out the necessary memory cache for in-memory functions.";"157";"MAGIC_MEM_CHECK.html";"3595"
"1693";"MATCH_FILTER_DOIT";"Perform Matched Filtering.";"162";"MATCH_FILTER_DOIT.html";"3394"
"1694";"MATCH_FILTER_MT_DOIT";"Perform Mixture Tuned Matched Filtering (MTMF).";"162";"MATCH_FILTER_MT_DOIT.html";"3823"
"1695";"MATH_DOIT";"Perform Band Math.";"162";"MATH_DOIT.html";"7571"
"1696";"MNF_DOIT";"Perform MNF rotation.";"162";"MNF_DOIT.html";"4672"
"1698";"MORPH_DOIT";"Apply a morphological filter.";"162";"MORPH_DOIT.html";"3880"
"1699";"MOSAIC_DOIT";"Mosaic image bands or band combinations.";"162";"MOSAIC_DOIT.html";"6982"
"1700";"MUNSELL_DOIT";"Convert RGB image to Munsell coordinates.";"162";"MUNSELL_DOIT.html";"3134"
"1701";"MUNSELL_INV_DOIT";"Calculate RGB image from Munsell coordinates.";"162";"MUNSELL_INV_DOIT.html";"3001"
"1702";"NDVI_DOIT";"Create a normalized difference vegetation index (NDVI).";"162";"NDVI_DOIT.html";"5239"
"1703";"PC_ROTATE";"Calculate principal components rotation.";"162";"PC_ROTATE.html";"4877"
"1704";"PPI_DOIT";"Calculate Pixel Purity Index (PPI).";"162";"PPI_DOIT.html";"3458"
"1705";"RADAR_INC_ANGLE_DOIT";"Calculate incidence angle image from radar.";"162";"RADAR_INC_ANGLE_DOIT.html";"3173"
"1706";"RATIO_DOIT";"Calculate a band ratio.";"162";"RATIO_DOIT.html";"3165"
"1707";"RESIZE_DOIT";"Spatially resize data.";"162";"RESIZE_DOIT.html";"7278"
"1708";"RGB_GET_BANDS";"Display a dialog for selecting three bands from the Available Bands List.";"160";"RGB_GET_BANDS.html";"4514"
"1709";"RGB_ITRANS_DOIT";"Perform inverse color transform.";"162";"RGB_ITRANS_DOIT.html";"4405"
"1710";"RGB_TRANS_DOIT";"Perform forward color transform.";"162";"RGB_TRANS_DOIT.html";"3245"
"1711";"ROC_CURVE_DOIT";"Calculate receiver operating characteristic (ROC) curves.";"162";"ROC_CURVE_DOIT.html";"4305"
"1712";"ROI_THRESH_DOIT";"Create a threshold ROI.";"162";"ROI_THRESH_DOIT.html";"4956"
"1713";"ROTATE_DOIT";"Rotate images.";"162";"ROTATE_DOIT.html";"4480"
"1714";"RTV_DOIT";"Perform raster-to-vector conversion.";"162";"RTV_DOIT.html";"4053"
"1715";"SAT_STRETCH_DOIT";"Perform saturation stretch.";"162";"SAT_STRETCH_DOIT.html";"2959"
"1716";"SHARPEN_DOIT";"Perform image sharpening.";"162";"SHARPEN_DOIT.html";"4091"
"1717";"SIRC_HEADER_DOIT";"Read a Shuttle Imaging Radar-C (SIR-C) header.";"162";"SIRC_HEADER_DOIT.html";"2949"
"1718";"SIRC_MULTILOOK_DOIT";"Multilook SIR-C images.";"162";"SIRC_MULTILOOK_DOIT.html";"2997"
"1719";"SIRC_PED_HEIGHT_DOIT";"Calculate pedestal height images from a SIR-C compressed data products file.";"162";"SIRC_PED_HEIGHT_DOIT.html";"3010"
"1720";"SIRC_PHASE_IMAGE_DOIT";"Calculate phase images from a SIR-C compressed data products file.";"162";"SIRC_PHASE_IMAGE_DOIT.html";"3325"
"1721";"SIRC_POLSIG_DOIT";"Calculate polarization signatures from a SIR-C compressed data products file.";"162";"SIRC_POLSIG_DOIT.html";"3088"
"1722";"SIRC_SYNTH_DOIT";"Synthesize SIR-C images.";"162";"SIRC_SYNTH_DOIT.html";"2947"
"15523";"WGET";"Retrieves one or more URL files and saves them to a local directory.";"73";"WGET.html";"2494"
"1724";"SLT2GND_DOIT";"Convert slant-to-ground range.";"162";"SLT2GND_DOIT.html";"2832"
"1725";"SPECTRAL_FEATURE_DOIT";"Perform Spectral Feature Fitting (SFF).";"162";"SPECTRAL_FEATURE_DOIT.html";"2979"
"1726";"STRETCH_DOIT";"Perform a contrast stretch of image data.";"162";"STRETCH_DOIT.html";"3779"
"1727";"TASCAP_DOIT";"Create Tasseled Cap vegetation and soil indices.";"162";"TASCAP_DOIT.html";"4854"
"1728";"TEXTURE_COOCCUR_DOIT";"Calculate co-occurrence texture measures.";"162";"TEXTURE_COOCCUR_DOIT.html";"4521"
"1729";"TEXTURE_STATS_DOIT";"Calculate occurrence texture measures.";"162";"TEXTURE_STATS_DOIT.html";"3057"
"1730";"TIMS_CAL_DOIT";"Calibrate Thermal Infrared Multispectral Scanner (TIMS) data to radiance.";"162";"TIMS_CAL_DOIT.html";"2776"
"1731";"TMCAL_DOIT";"Calibrate Landsat MSS, TM, and ETM+ data to radiance or reflectance.";"162";"TMCAL_DOIT.html";"4212"
"1732";"TOPO_DOIT";"Perform topographic modeling of DEMs.";"162";"TOPO_DOIT.html";"6351"
"1733";"TOPO_FEATURE_DOIT";"Create a topographic feature classification image.";"162";"TOPO_FEATURE_DOIT.html";"3231"
"1734";"UNMIX_DOIT";"Perform Linear Spectral Unmixing.";"162";"UNMIX_DOIT.html";"5324"
"1735";"VAX_IEEE_DOIT";"Perform VAX Institute of Electrical and Electronic Engineers (IEEE) floating-point conversion.";"157";"VAX_IEEE_DOIT.html";"3218"
"1736";"WIDGET_AUTO_BASE";"Create a base widget for auto-managed events.";"161";"WIDGET_AUTO_BASE.html";"4950"
"1737";"WIDGET_EDIT";"Create a compound widget used to edit multiple values from lists.";"161";"WIDGET_EDIT.html";"4014"
"1738";"WIDGET_GEO";"Create a compound widget used to specify latitude and longitude values.";"161";"WIDGET_GEO.html";"4145"
"1739";"WIDGET_MAP";"Create a compound widget that allows you to input and edit map coordinates and projections.";"161";"WIDGET_MAP.html";"2965"
"1740";"WIDGET_MENU";"Create a widget with a menu of exclusive and non-exclusive items.";"161";"WIDGET_MENU.html";"4396"
"1741";"WIDGET_MULTI";"Create a widget used to select multiple items from a list.";"161";"WIDGET_MULTI.html";"4229"
"1742";"WIDGET_OUTF";"Create a menu used to select an output filename.";"161";"WIDGET_OUTF.html";"3972"
"1743";"WIDGET_OUTFM";"Create a menu used to select an output filename with the option to save the result to memory.";"161";"WIDGET_OUTFM.html";"4175"
"1744";"WIDGET_PARAM";"Create a widget used for entering numeric parameters.";"161";"WIDGET_PARAM.html";"4723"
"1745";"WIDGET_PMENU";"Create a widget with a drop-down list.";"161";"WIDGET_PMENU.html";"3996"
"1746";"WIDGET_RGB";"Create a widget used to modify an RGB color value with the option of using other color space models.";"161";"WIDGET_RGB.html";"3789"
"1747";"WIDGET_SLABEL";"Create a widget used to display a text message with scroll bars.";"161";"WIDGET_SLABEL.html";"4033"
"1748";"WIDGET_SLIST";"Create a widget with a list.";"161";"WIDGET_SLIST.html";"3418"
"1749";"WIDGET_SSLIDER";"Create a widget used to set a numeric value with a slider.";"161";"WIDGET_SSLIDER.html";"4573"
"1750";"WIDGET_STRING";"Create a widget used to enter a text string.";"161";"WIDGET_STRING.html";"3943"
"1751";"WIDGET_SUBSET";"Create a widget with a Spatial Subset button, which displays ENVI's Select Spatial Subset dialog.";"161";"WIDGET_SUBSET.html";"4659"
"1752";"WIDGET_TOGGLE";"Create a widget with a toggle button.";"161";"WIDGET_TOGGLE.html";"3905"
"1753";"ENVICoordSys";"Reference to an ENVICoordSys object.";"155";"ENVICoordSys.html";"5980"
"1754";"ENVIFIDToRaster";"Returns a reference to an ENVIRaster object, when given an ENVI Classic file ID.";"155";"ENVIFIDToRaster.html";"7850"
"1755";"ENVIRasterIterator::GetData";"Returns the data for the current tile.";"155";"ENVIRasterIterator__GetData.html";"4681"
"1756";"ENVIRasterIterator::Next";"Sets the next tile as the current tile and returns the tile data.";"155";"ENVIRasterIterator__Next.html";"4223"
"1757";"ENVIRasterIterator::Previous";"Sets the previous tile as the current tile and returns the tile data.";"155";"ENVIRasterIterator__Previous.html";"3821"
"1758";"ENVIRasterIterator::Reset";"Resets the iterator to the beginning of the tile list.";"155";"ENVIRasterIterator__Reset.html";"4046"
"1759";"ENVIRasterMetadata";"Reference to a raster metadata object.";"155";"ENVIRasterMetaData.html";"16477"
"1760";"ENVIRasterMetadata::AddItem";"Adds a user-defined metadata item.";"155";"ENVIRasterMetaData__AddItem.html";"10826"
"1761";"ENVIRasterMetadata::RemoveItem";"Removes a user-defined metadata item.";"155";"ENVIRasterMetaData__RemoveItem.html";"4206"
"1762";"ENVIRasterMetadata::UpdateItem";"Updates the value of an existing format-specific or user-defined metadata item.";"155";"ENVIRasterMetaData__UpdateItem.html";"4713"
"1763";"ENVIRasterSpatialRefPseudo";"Reference to the ENVIRasterSpatialRefPseudo object.";"155";"ENVIRasterSpatialRefPseudo.html";"4879"
"1764";"ENVIRasterSpatialRefRPC";"Reference to the ENVIRasterSpatialRefRPC object.";"155";"ENVIRasterSpatialRefRPC.html";"4242"
"1765";"ENVIRasterSpatialRefStandard";"Reference to the ENVIRasterSpatialRefStandard object.";"155";"ENVIRasterSpatialRefStandard.html";"5271"
"1766";"ENVIRasterToFID";"Returns a file ID (FID) for use with ENVI Classic programming routines.";"155";"ENVIRasterToFID.html";"8651"
"1767";"ENVIRaster::CreatePyramid";"Creates a pyramid file for an ENVIRaster.";"155";"ENVIRaster__CreatePyramid.html";"10037"
"1768";"ENVIRaster::CreateTileIterator";"Returns a reference to the ENVIRasterIterator.";"155";"ENVIRaster__CreateTileIterator.html";"5734"
"1769";"ENVIRaster::WriteMetadata";"Saves all metadata associated with the raster to disk.";"155";"ENVIRaster__WriteMetadata.html";"7412"
"1770";"ENVIUI";"Reference to a user interface object.";"156";"ENVIUI.html";"4490"
"1771";"ENVIUI::SelectCoordinateSystem";"Displays a dialog in which the user selects a coordinate system that is saved as a string variable.";"156";"ENVIUI__SelectCoordinateSystem.html";"3907"
"1772";"ENVIUI::SelectInputData";"Displays a dialog in which the user selects files for rasters or vectors.";"156";"ENVIUI__SelectInputData.html";"5065"
"1773";"ENVIVector";"Reference to a vector object.";"155";"ENVIVector.html";"5410"
"1774";"ENVIVectorLayer";"Reference to a vector layer object.";"156";"ENVIVectorLayer.html";"4714"
"1775";"ENVIVectorLayer::Close";"Closes the ENVIVectorLayer.";"156";"ENVIVectorLayer__Close.html";"3626"
"1776";"ENVIVectorLayer::GetView";"Returns the ENVIView where the layer resides.";"156";"ENVIVectorLayer__GetView.html";"3789"
"1777";"ENVIVectorLayer::MoveDown";"Moves the ENVIVectorLayer down one level in the layer order stack.";"156";"ENVIVectorLayer__MoveDown.html";"3603"
"1778";"ENVIVectorLayer::MoveToBottom";"Moves the ENVIVectorLayer to the bottom of the layer manager's order stack.";"156";"ENVIVectorLayer__MoveToBottom.html";"3658"
"1779";"ENVIVectorLayer::MoveToTop";"Moves the ENVIVectorLayer to the top of the layer order stack.";"156";"ENVIVectorLayer__MoveToTop.html";"3679"
"1780";"ENVIVectorLayer::MoveUp";"Moves the ENVIVectorLayer up one level in the layer order stack.";"156";"ENVIVectorLayer__MoveUp.html";"3771"
"1781";"ENVIVector::Close";"Closes the ENVIVector for reading and removes any layers displaying it.";"155";"ENVIVector__Close.html";"3974"
"1782";"ENVIView::Animate";"Controls animation actions between two layers.";"156";"ENVIView__Animate.html";"3940"
"1783";"ENVIView::ClearSnailTrail";"Clears all data in the overview snail trail and resets the snail trail.";"156";"ENVIView__ClearSnailTrail.html";"3609"
"1784";"ENVIView::GeoLink";"Links views geographically.";"156";"ENVIView__GeoLink.html";"32532"
"1785";"ENVIView::GetCenterLocation";"Returns the coordinates of the center of the view.";"156";"ENVIView__GetCenterLocation.html";"3790"
"1786";"ENVIView::GetExtent";"Returns the four corners of the current view in geographic, map, or data coordinates.";"156";"ENVIView__GetExtent.html";"5027"
"1787";"ENVIView::GoToLocation";"Centers the display over the location in the view.";"156";"ENVIView__GoToLocation.html";"4721"
"1788";"ENVIView::Reset";"Deletes all layers in the view and resets the map projection.";"156";"ENVIView__Reset.html";"3597"
"1789";"ENVIView::SetExtent";"Sets the view's extent around a four-cornered box.";"156";"ENVIView__SetExtent.html";"4384"
"1790";"ENVIView::Zoom";"Zooms in to the view.";"156";"ENVIView__Zoom.html";"7250"
"1791";"ENVI::AddExtension";"Adds a Toolbox entry inside a user-defined folder structure.";"154";"ENVI__AddExtension.html";"8442"
"1792";"ENVI::Close";"Exits the ENVI application and closes the window.";"154";"ENVI__Close.html";"5092"
"1793";"ENVI::CreateRaster";"Creates a new ENVIRaster that is ready for writing to a file.";"154";"ENVI__CreateRaster.html";"9432"
"1794";"ENVI::CreateRasterMetadata";"Creates a new, empty ENVIRasterMetadata object that is not associated with an ENVIRaster object.";"154";"ENVI__CreateRasterMetaData.html";"4181"
"1795";"ENVI::CreateRasterSpatialRef";"Creates a new ENVIRasterSpatialRefPseudo, ENVIRasterSpatialRefRPC, or ENVIRasterSpatialRefStandard object that is not associated with an ENVIRaster object.";"154";"ENVI__CreateRasterSpatialRef.html";"5640"
"1796";"ENVI::CreateView";"Creates and returns an object reference to a new ENVIView.";"154";"ENVI__CreateView.html";"5003"
"1797";"ENVI::ExportRaster";"Saves a raster to a specific format.";"154";"ENVI__ExportRaster.html";"12754"
"1798";"ENVI::GetOpenData";"Returns all ENVIRaster or ENVIVector objects currently open in the data manager.";"154";"ENVI__GetOpenData.html";"3907"
"1799";"ENVI::GetPreference";"Returns the current value of an ENVI preference setting.";"154";"ENVI__GetPreference.html";"4618"
"1800";"ENVI::GetTemporaryFilename";"Returns the full filepath of a file located in the temporary directory.";"154";"ENVI__GetTemporaryFilename.html";"7428"
"1801";"ENVI::GetView";"Returns the currently-selected ENVIView reference.";"154";"ENVI__GetView.html";"5157"
"1802";"ENVI::HideExtensionFiles";"Prevents specific and files from appearing in the Toolbox.";"154";"ENVI__HideExtensionFiles.html";"4645"
"1803";"ENVI::LogMessage";"Writes a custom message to the log file.";"154";"ENVI__LogMessage.html";"4662"
"1804";"ENVI::OpenRaster";"Creates a new ENVIRaster from a file or URI.";"154";"ENVI__OpenRaster.html";"21280"
"1805";"ENVI::OpenVector";"Creates a new ENVIVector from a file or URI.";"154";"ENVI__OpenVector.html";"5702"
"1806";"ENVI::Refresh";"Enables and disables the refresh (drawing) of the ENVI window.";"154";"ENVI__Refresh.html";"4305"
"1807";"ENVI::ReportError";"Issues an error message.";"154";"ENVI__ReportError.html";"4989"
"1808";"ENVI::Show";"Brings the ENVI application to the front and gives it focus.";"154";"ENVI__Show.html";"4068"
"1809";"Manage Errors";;"2";"ErrorHandling.html";"11897"
"1812";"Routines";;"2";"Routines.html";"7312"
"1813";"Syntax Styles";;"2";"SyntaxStyles.html";"4554"
"16435";"mggrellipsoid::_buildPoly";"Sets the vertex and connectivity arrays for the polygon used to represent the orb.";"147";"mggrellipsoid__define.html#mggrellipsoid::_buildPoly";"108"
"1816";"ENVIPortal";"Reference to a portal object.";"156";"enviPortal.html";"4050"
"1817";"ENVIPortal::Animate";"Controls various animation actions between layers displayed in the portal.";"156";"enviPortal__Animate.html";"4494"
"1818";"ENVIPortal::Close";"Closes the portal.";"156";"enviPortal__Close.html";"3463"
"1819";"ENVIRaster";"Reference to a raster object.";"155";"enviRaster.html";"15666"
"1820";"ENVIRasterIterator";"Reference to an object that allows you to iterate through the raster dataset by tiles.";"155";"enviRasterIterator.html";"7598"
"1821";"ENVIRasterLayer";"Reference to a raster layer object.";"156";"enviRasterLayer.html";"5288"
"1822";"ENVIRasterLayer::Close";"Closes the ENVIRasterLayer.";"156";"enviRasterLayer__Close.html";"4280"
"1823";"ENVIRasterLayer::GetView";"Returns the ENVIView where the layer resides.";"156";"enviRasterLayer__GetView.html";"3882"
"1824";"ENVIRasterLayer::MoveDown";"Moves the layer down one level in the order stack.";"156";"enviRasterLayer__MoveDown.html";"3634"
"1825";"ENVIRasterLayer::MoveToBottom";"Moves the layer to the bottom of the order stack.";"156";"enviRasterLayer__MoveToBottom.html";"3668"
"1826";"ENVIRasterLayer::MoveToTop";"Moves the layer to the top of the order stack.";"156";"enviRasterLayer__MoveToTop.html";"3920"
"1827";"ENVIRasterLayer::MoveUp";"Moves the layer up one level in the order stack.";"156";"enviRasterLayer__MoveUp.html";"3547"
"1828";"ENVIRaster::Close";"Closes the ENVIRaster for reading and removes any layers displaying it.";"155";"enviRaster__Close.html";"4583"
"1829";"ENVIRaster::GetData";"Returns the raster data (either all of the data or a subset).";"155";"enviRaster__GetData.html";"10060"
"1830";"ENVIRaster::Save";"Closes the ENVIRaster for writing and converts it to read-only mode.";"155";"enviRaster__Save.html";"7512"
"1831";"ENVIRaster::SetData";"Sets data on an ENVIRaster that is open for writing.";"155";"enviRaster__SetData.html";"7639"
"1832";"ENVIRaster::SetTile";"Sets the current tile with new data in conjunction with the ENVIRasterIterator object.";"155";"enviRaster__SetTile.html";"5353"
"1833";"ENVIView";"Reference to a view object.";"156";"enviView.html";"5716"
"1834";"ENVIView::Close";"Closes the view.";"156";"enviView__Close.html";"4005"
"1835";"ENVIView::CreateLayer";"Creates and returns a new ENVIRasterLayer or ENVIVectorLayer object.";"156";"enviView__CreateLayer.html";"6168"
"1836";"ENVIView::CreatePortal";"Creates and returns an object reference to a new ENVIPortal.";"156";"enviView__CreatePortal.html";"4208"
"1837";"ENVIView::GetLayer";"Returns the top-most layer in the view.";"156";"enviView__GetLayer.html";"4659"
"1838";"ENVIView::Pan";"Moves the center of the raster DeltaX units left or right and DeltaY units up or down.";"156";"enviView__Pan.html";"4651"
"1839";"ENVIView::Rotate";"Rotates the view by the specified angle (in degrees).";"156";"enviView__Rotate.html";"5888"
"1840";"ENVIView::Select";"Makes a view the active view.";"156";"enviView__Select.html";"3453"
"1843";"AD2XY";"Compute X and Y from native coordinates and a FITS astrometry structure";"119";"ad2xy.html";"2716"
"1844";"ADD_DISTORT";"Add the distortion parameters in an astrometry structure to a FITS header.";"119";"add_distort.html";"521"
"1845";"ADSTRING";"Return RA and Dec as character string(s) in sexigesimal format.";"119";"adstring.html";"38399"
"1846";"ADXY";"Use a FITS header to convert astronomical to pixel coordinates";"119";"adxy.html";"1234"
"1847";"AIRTOVAC";"Convert air wavelengths to vacuum wavelengths";"119";"airtovac.html";"485"
"1848";"AITOFF";"Convert longitude, latitude to X,Y using an AITOFF projection.";"119";"aitoff.html";"514"
"1849";"AITOFF_GRID";"Produce an overlay of latitude and longitude lines over a plot or image";"119";"aitoff_grid.html";"1218"
"1850";"AL_LEGEND";"Create an annotation legend for a plot.";"119";"al_legend.html";"8728"
"1851";"ALTAZ2HADEC";"Convert Horizon (Alt-Az) coordinates to Hour Angle and Declination.";"119";"altaz2hadec.html";"680"
"1852";"APER";"Compute concentric aperture photometry (adapted from DAOPHOT)";"119";"aper.html";"1746"
"1853";"ARCBAR";"Draw an arc bar on an image showing the astronomical plate scale";"119";"arcbar.html";"483"
"1854";"ARROWS";"To display 'weathervane' directional arrows on an astronomical image";"119";"arrows.html";"398"
"1855";"ASINH";"Return the inverse hyperbolic sine of the argument";"119";"asinh.html";"410"
"1856";"ASTDISP";"Print astronomical and pixel coordinates in a standard format";"119";"astdisp.html";"383"
"1857";"ASTRO";"Interactive utility for precession and coordinate conversion.";"119";"astro.html";"1226"
"1858";"ASTROLIB";"Add the non-standard system variables used by the IDL Astronomy Library";"119";"astrolib.html";"1481"
"1859";"AUTOHIST";"Draw a histogram using automatic bin-sizing.";"119";"autohist.html";"574"
"1860";"AVG";"Return the average value of an array, or 1 dimension of an array";"119";"avg.html";"1075"
"1861";"BARYVEL";"Calculates heliocentric and barycentric velocity components of Earth.";"119";"baryvel.html";"1111"
"1862";"BIWEIGHT_MEAN";"Calculate the center and dispersion (like mean and sigma) of a 	distribution using bisquare weighting.";"119";"biweight_mean.html";"419"
"1863";"BLINK";"To allow the user to alternatively examine two or more windows within	a single window.";"119";"blink.html";"1349"
"1864";"BLKSHIFT";"Shift a block of data to a new position in a file (possibly overlapping)";"119";"blkshift.html";"288"
"1865";"BOOST_ARRAY";"Append one array onto a destination array";"119";"boost_array.html";"470"
"1866";"BOXAVE";"Box-average a 1 or 2 dimensional array.";"119";"boxave.html";"358"
"1867";"BPRECESS";"Precess positions from J2000.0 (FK5) to B1950.0 (FK4)";"119";"bprecess.html";"366"
"1868";"BREAK_PATH";"Breaks up a path string into its component directories.";"119";"break_path.html";"303"
"1869";"BSORT";"Function to sort data into ascending order, like a simple bubble sort.";"119";"bsort.html";"924"
"1870";"CALZ_UNRED";"Deredden a galaxy spectrum using the Calzetti et al. (2000) recipe";"119";"calz_unred.html";"302"
"1871";"CCM_UNRED";"Deredden a flux vector using the CCM 1989 parameterization";"119";"ccm_unred.html";"581"
"1872";"CHECK_FITS";"Check that keywords in a FITS header array match the associated data";"119";"check_fits.html";"654"
"1873";"CHECKSUM32";"To compute the 32bit checksum of an array (ones-complement arithmetic)";"119";"checksum32.html";"346"
"1874";"CIC";"Interpolate an irregularly sampled field using Cloud in Cell method";"119";"cic.html";"383"
"1875";"CIRRANGE";"To force an angle into the range 0 &lt;= ang < 360.";"119";"cirrange.html";"294"
"1876";"CLEANPLOT";"Reset all plotting system variables (!P,!X,!Y,!Z) to their default values";"119";"cleanplot.html";"303"
"1877";"CNTRD";"Compute the centroid of a star using a derivative search";"119";"cntrd.html";"1112"
"1878";"CO_ABERRATION";"Calculate changes to Ra and Dec due to 'the effect of aberration',";"119";"co_aberration.html";"219"
"1879";"CO_NUTATE";"Calculate changes in RA and Dec due to nutation of the Earth's rotation";"119";"co_nutate.html";"222"
"1880";"CO_REFRACT";"Calculate correction to altitude due to atmospheric refraction.";"119";"co_refract.html";"276"
"1881";"COMPARE_STRUCT";"Compare all matching tag names and return differences";"119";"compare_struct.html";"812"
"1882";"CONCAT_DIR";"To concatenate directory and file names for current OS.";"119";"concat_dir.html";"401"
"1883";"CONS_DEC";"Obtain the X and Y coordinates of a line of constant declination";"119";"cons_dec.html";"204"
"1884";"CONS_RA";"Obtain the X and Y coordinates of a line of constant right ascension";"119";"cons_ra.html";"253"
"1885";"CONVOLVE";"Convolution of an image with a Point Spread Function (PSF)";"119";"convolve.html";"3093"
"1886";"COPY_STRUCT";"Copy all fields with matching tag names from one structure to another";"119";"copy_struct.html";"574"
"1887";"COPY_STRUCT_INX";"Copy matching tags & specified indices from one structure to another";"119";"copy_struct_inx.html";"235"
"1888";"CORREL_IMAGES";"Compute the 2-D cross-correlation function of two images";"119";"correl_images.html";"1130"
"1889";"CORREL_OPTIMIZE";"Find the optimal (x,y) pixel offset of image_B relative to image_A EXPLANATION'	Optimal offset is computed by means of maximizing the correlation 	function of the two images.";"119";"correl_optimize.html";"522"
"1890";"CORRMAT_ANALYZE";"Find the optimal (x,y) offset to maximize correlation of 2 images";"119";"corrmat_analyze.html";"913"
"1891";"COSMO_PARAM";"Derive full set of cosmological density parameters from a partial set";"119";"cosmo_param.html";"260"
"1892";"CR_REJECT";"General, iterative cosmic ray rejection using two or more input images.";"119";"cr_reject.html";"310"
"11462";"TOPOGRAPHY_BATHYMETRY_KPB";"This procedure creates a color table suitable for terrestrial topography 		and bathymetry. Elevation values are assumed to be in meters, and the		color table is designed to handle elevations from -11000 m to +8000 m.";"151";"topography_bathymetry_kpb.html";"54"
"1894";"CSPLINE";"Function to evaluate a natural cubic spline at specified data points";"119";"cspline.html";"310"
"1895";"CT2LST";"To convert from Local Civil Time to Local Mean Sidereal Time.";"119";"ct2lst.html";"680"
"1896";"CURS";"Selects an X windows cursor shape";"119";"curs.html";"297"
"1897";"CURVAL";"Cursor controlled display of image intensities and astronomical coords";"119";"curval.html";"287"
"1898";"DAO_VALUE";"Returns the value of a DAOPHOT point-spread function at a set of points.";"119";"dao_value.html";"210"
"1899";"DAOERF";"Calulates the intensity, and derivatives, of a 2-d Gaussian PSF";"119";"daoerf.html";"219"
"1900";"DATE";"Convert day-of-year to a DD-MMM-YYYY string";"119";"date.html";"651"
"1901";"DATE_CONV";"Procedure to perform conversion of dates to one of three possible formats.";"119";"date_conv.html";"1154"
"1902";"DAYCNV";"Converts Julian dates to Gregorian calendar dates";"119";"daycnv.html";"315"
"1903";"DB_ENT2EXT";"Convert a database entry to external (IEEE) data format";"119";"db_ent2ext.html";"201"
"1904";"DB_ENT2HOST";"Converts a database entry from external data format to host format.";"119";"db_ent2host.html";"230"
"1905";"DB_INFO";"Function to obtain information on opened data base file(s)";"119";"db_info.html";"252"
"1906";"DB_ITEM";"Returns the item numbers and other info. for an item name.";"119";"db_item.html";"244"
"1907";"DB_ITEM_INFO";"routine to return information on selected item(s) in the opened	data bases.";"119";"db_item_info.html";"288"
"1908";"DB_OR";"Combine two vectors of entry numbers, removing duplicate values.";"119";"db_or.html";"280"
"1909";"DB_TITLES";"Print database name and title. Called by DBHELP";"119";"db_titles.html";"266"
"1910";"DBBUILD";"Build a database by appending new values for every item.";"119";"dbbuild.html";"374"
"1911";"DBCIRCLE";"Find sources in a database within specified radius of specified center";"119";"dbcircle.html";"283"
"1912";"DBCLOSE";"procedure to close a data base file";"119";"dbclose.html";"234"
"1913";"DBCOMPARE";"Display two entries in an IDL database side by side in a column format";"119";"dbcompare.html";"322"
"1914";"DBCREATE";"Create a new data base (.dbf), index (.dbx) or description (.dbh) file";"119";"dbcreate.html";"321"
"1915";"DBDELETE";"Deletes specified entries from data base";"119";"dbdelete.html";"209"
"1916";"DBEDIT";"Interactively edit specified fields in an IDL database.";"119";"dbedit.html";"428"
"1917";"DBEDIT_BASIC";"Subroutine of DBEDIT_BASIC to edit a database on a dumb terminal.";"119";"dbedit_basic.html";"206"
"1918";"DBEXT";"Extract values of up to 12 items from an IDL database";"119";"dbext.html";"311"
"1919";"DBEXT_DBF";"Subroutine of DBEXT to extract values of up to 18 items from a database";"119";"dbext_dbf.html";"234"
"1920";"DBEXT_IND";"routine to read a indexed item values from index file";"119";"dbext_ind.html";"211"
"1921";"DBFIND";"Search data base for entries with specified characteristics";"119";"dbfind.html";"475"
"1922";"DBFIND_ENTRY";"Subroutine of DBFIND to perform an entry number search";"119";"dbfind_entry.html";"284"
"1923";"DBFIND_SORT";"Subroutine of DBFIND to perform a search using sorted values";"119";"dbfind_sort.html";"326"
"1924";"DBFPARSE";"Parse the search string supplied to DBFIND. Not a standalone routine";"119";"dbfparse.html";"207"
"1925";"DBGET";"Find entry numbers which contain specified values of a given item.";"119";"dbget.html";"347"
"1926";"DBHELP";"List available databases or items in the currently open database";"119";"dbhelp.html";"390"
"1927";"DBINDEX";"Procedure to create index file for data base";"119";"dbindex.html";"226"
"1928";"DBINDEX_BLK";"Subroutine of DBINDEX to create associated variable of correct datatype";"119";"dbindex_blk.html";"192"
"1929";"DBMATCH";"Find the entry number in a database for each element of item values";"119";"dbmatch.html";"240"
"1930";"DBOPEN";"Routine to open an IDL database";"119";"dbopen.html";"384"
"1931";"DBPRINT";"Procedure to print specified items from a list of database entries";"119";"dbprint.html";"266"
"1932";"DBPUT";"Procedure to place a new value for a specified item into	a data base file entry.";"119";"dbput.html";"282"
"1933";"DBRD";"procedure to read an entry from a data base file or from	linked multiple databases.";"119";"dbrd.html";"408"
"1934";"DBSEARCH";"Subroutine of DBFIND() to search a vector for specified values";"119";"dbsearch.html";"293"
"1935";"DBSORT";"Routine to sort list of entries in data base";"119";"dbsort.html";"320"
"1936";"DBTARGET";"Find sources in a database within specified radius of specified target";"119";"dbtarget.html";"213"
"1937";"DBTITLE";"function to create title line for routine dbprint";"119";"dbtitle.html";"264"
"1938";"DBUPDATE";"Update columns of data in a database -- inverse of DBEXT";"119";"dbupdate.html";"397"
"1939";"DBVAL";"procedure to extract value(s) of the specified item from	a data base file entry.";"119";"dbval.html";"413"
"1940";"DBWRT";"procedure to update or add a new entry to a data base";"119";"dbwrt.html";"388"
"1941";"DBXPUT";"routine to replace value of an item in a data base entry";"119";"dbxput.html";"210"
"1942";"DBXVAL";"Quickly return a value of the specified item number";"119";"dbxval.html";"220"
"1943";"DELVARX";"Delete up to 10 variables for memory management (can call from routines)";"119";"delvarx.html";"344"
"1944";"DEREDD";"Deredden stellar Stromgren parameters given for a value of E(b-y)";"119";"deredd.html";"346"
"1945";"DETABIFY";"Replaces tabs in character strings with appropriate number of spaces";"119";"detabify.html";"299"
"1946";"DIST_CIRCLE";"Form a square array where each value is its distance to a given center.";"119";"dist_circle.html";"344"
"1947";"DIST_ELLIPSE";"Create a mask array useful for elliptical aperture photemetry";"119";"dist_ellipse.html";"582"
"1948";"ECI2GEO";"Convert Earth-centered inertial coordinates to geographic spherical coords";"119";"eci2geo.html";"327"
"1949";"EQ2HOR";"Convert celestial (ra-dec) coords to local horizon coords (alt-az).";"119";"eq2hor.html";"883"
"1950";"EQPOLE";"Convert RA and Dec to X,Y using an equal-area polar projection.";"119";"eqpole.html";"313"
"1951";"EQPOLE_GRID";"Produce an equal area polar projection grid overlay";"119";"eqpole_grid.html";"294"
"1952";"EULER";"Transform between Galactic, celestial, and ecliptic coordinates.";"119";"euler.html";"678"
"1953";"EXPAND_TILDE";"Expand tilde in UNIX directory names";"119";"expand_tilde.html";"264"
"1954";"EXTAST";"Extract ASTrometry parameters from a FITS image header.";"119";"extast.html";"1026"
"1955";"EXTGRP";"Extract the group parameter information out of SXREAD output";"119";"extgrp.html";"311"
"1956";"F_FORMAT";"Choose a nice floating format for displaying an array of REAL data.";"119";"f_format.html";"431"
"1957";"FACTOR";"Find prime factors of a given number.";"119";"factor.html";"351"
"1958";"FDECOMP";"Routine to decompose file name(s) for any operating system.";"119";"fdecomp.html";"235"
"1959";"FILTER_IMAGE";"Identical to MEDIAN or SMOOTH but handle edges and allow iterations.";"119";"filter_image.html";"812"
"1960";"FIND";"Find positive brightness perturbations (i.e stars) in an image";"119";"find.html";"2265"
"1961";"FIND_ALL_DIR";"Finds all directories under a specified directory.";"119";"find_all_dir.html";"311"
"1962";"FIND_WITH_DEF";"Searches for files with a default path and extension.";"119";"find_with_def.html";"329"
"1963";"FINDPRO";"Find all locations of a procedure in the IDL !PATH";"119";"findpro.html";"2877"
"1964";"FITEXY";"Best straight-line fit to data with errors in both coordinates";"119";"fitexy.html";"1314"
"1965";"FITS_ADD_CHECKSUM";"Add or update the CHECKSUM and DATASUM keywords in a FITS header";"119";"fits_add_checksum.html";"382"
"1966";"FITS_ASCII_ENCODE";"Encode an unsigned longword as an ASCII string to insert in a FITS header";"119";"fits_ascii_encode.html";"307"
"1967";"FITS_CD_FIX";"Update obsolete representations of the CD matrix in a FITS header";"119";"fits_cd_fix.html";"225"
"1968";"FITS_CLOSE";"Close a FITS data file";"119";"fits_close.html";"386"
"1969";"FITS_HELP";"To print a summary of the primary data units and extensions in a FITS file.;";"119";"fits_help.html";"300"
"1970";"FITS_INFO";"Provide information about the contents of a FITS file";"119";"fits_info.html";"733"
"1971";"FITS_OPEN";"Opens a FITS (Flexible Image Transport System) data file.";"119";"fits_open.html";"1094"
"1972";"FITS_READ";"To read a FITS file.";"119";"fits_read.html";"2013"
"1973";"FITS_TEST_CHECKSUM";"Verify the values of the CHECKSUM and DATASUM keywords in a FITS header";"119";"fits_test_checksum.html";"317"
"1974";"FITS_WRITE";"To write a FITS primary data unit or extension.";"119";"fits_write.html";"1094"
"1975";"FITSDIR";"Display selected FITS keywords from the headers of FITS files.";"119";"fitsdir.html";"427"
"1976";"FITSRGB_TO_TIFF";"Combine separate red, green, and blue FITS images into TIFF format";"119";"fitsrgb_to_tiff.html";"353"
"1977";"FLEGENDRE";"Compute the first M terms in a Legendre polynomial expansion.";"119";"flegendre.html";"339"
"1978";"FLUX2MAG";"Convert from flux (ergs/s/cm^2/A) to magnitudes.";"119";"flux2mag.html";"310"
"1979";"FM_UNRED";"Deredden a flux vector using the Fitzpatrick (1999) parameterization";"119";"fm_unred.html";"708"
"1980";"FORPRINT";"Print a set of vectors by looping over each index value.";"119";"forprint.html";"1325"
"1981";"FREBIN";"Shrink or expand the size of an array an arbitary amount using interpolation";"119";"frebin.html";"1528"
"1982";"FTAB_DELROW";"Delete rows of data from a FITS ASCII or binary table extension";"119";"ftab_delrow.html";"288"
"1983";"FTAB_EXT";"Routine to extract columns from a FITS (binary or ASCII) table.";"119";"ftab_ext.html";"578"
"1984";"FTAB_HELP";"Describe the columns of a FITS binary or ASCII table extension(s).";"119";"ftab_help.html";"327"
"1985";"FTAB_PRINT";"Print the contents of a FITS (binary or ASCII) table extension.";"119";"ftab_print.html";"270"
"1986";"FTADDCOL";"Routine to add a field to a FITS ASCII table";"119";"ftaddcol.html";"316"
"1987";"FTCREATE";"Create a new (blank) FITS ASCII table and header with specified size.";"119";"ftcreate.html";"364"
"1988";"FTDELCOL";"Delete a column of data from a FITS table";"119";"ftdelcol.html";"265"
"1989";"FTDELROW";"Delete a row of data from a FITS table";"119";"ftdelrow.html";"258"
"1990";"FTGET";"Function to return value(s) from specified column in a FITS ASCII table";"119";"ftget.html";"811"
"1991";"FTHELP";"Routine to print a description of a FITS ASCII table extension";"119";"fthelp.html";"372"
"1992";"FTHMOD";"Procedure to modify header information for a specified field in a FITS table.";"119";"fthmod.html";"261"
"1993";"FTINFO";"Return an informational structure from a FITS ASCII table header.";"119";"ftinfo.html";"411"
"1994";"FTKEEPROW";"Subscripts (and reorders) a FITS table. A companion piece to FTDELROW.";"119";"ftkeeprow.html";"271"
"1995";"FTPRINT";"Procedure to print specified columns and rows of a FITS table";"119";"ftprint.html";"412"
"1996";"FTPUT";"Procedure to add or update a field in an FITS ASCII table";"119";"ftput.html";"642"
"1997";"FTSIZE";"Procedure to return the size of a FITS ASCII table.";"119";"ftsize.html";"261"
"1998";"FTSORT";"Sort a FITS ASCII table according to a specified field";"119";"ftsort.html";"299"
"1999";"FXADDPAR";"Add or modify a parameter in a FITS header array.";"119";"fxaddpar.html";"616"
"2000";"FXBADDCOL";"Adds a column to a binary table extension.";"119";"fxbaddcol.html";"260"
"2001";"FXBCLOSE";"Close a FITS binary table extension opened for read.";"119";"fxbclose.html";"282"
"2002";"FXBCOLNUM";"Returns a binary table column number.";"119";"fxbcolnum.html";"235"
"2003";"FXBCREATE";"Open a new binary table at the end of a FITS file.";"119";"fxbcreate.html";"415"
"2004";"FXBDIMEN";"Returns the dimensions for a column in a FITS binary table. Explanation : This procedure returns the dimensions associated with a column in a binary table opened for read with the command FXBOPEN. Use : Result = FXBDIMEN(UNIT,COL) Inputs : UNIT = Logical ";"119";"fxbdimen.html";"298"
"2005";"FXBFIND";"Find column keywords in a FITS binary table header.";"119";"fxbfind.html";"460"
"2006";"FXBFINDLUN";"Find logical unit number UNIT in FXBINTABLE common block.";"119";"fxbfindlun.html";"233"
"2007";"FXBFINISH";"Close a FITS binary table extension file opened for write.";"119";"fxbfinish.html";"232"
"2008";"FXBGROW";"Increase the number of rows in a binary table.";"119";"fxbgrow.html";"392"
"2009";"FXBHEADER";"Returns the header of an open FITS binary table.";"119";"fxbheader.html";"260"
"2010";"FXBHELP";"Prints short description of columns in a FITS binary table.";"119";"fxbhelp.html";"247"
"2011";"FXBHMAKE";"Create basic FITS binary table extension (BINTABLE) header.";"119";"fxbhmake.html";"348"
"2012";"FXBINTABLE";"Common block FXBINTABLE used by 'FXB' routines.";"119";"fxbintable.html";"298"
"2013";"FXBISOPEN";"Returns true if UNIT points to an open FITS binary table. Explanation : This procedure checks to see if the logical unit number given by the variable UNIT corresponds to a FITS binary table opened for read with the command FXBOPEN, and which has not yet b";"119";"fxbisopen.html";"262"
"2014";"FXBOPEN";"Open binary table extension in a disk FITS file for reading or updating";"119";"fxbopen.html";"500"
"2015";"FXBPARSE";"Parse the binary table extension header.";"119";"fxbparse.html";"229"
"2016";"FXBREAD";"Read a data array from a disk FITS binary table file.";"119";"fxbread.html";"289"
"2017";"FXBREADM";"Read multiple columns/rows from a disk FITS binary table file.";"119";"fxbreadm.html";"262"
"2018";"FXBSTATE";"Returns the state of a FITS binary table. Explanation : This procedure returns the state of a FITS binary table that was either opened for read with the command FXBOPEN, or for write with the command FXBCREATE. Use : Result = FXBSTATE(UNIT) Inputs : UNIT ";"119";"fxbstate.html";"222"
"2019";"FXBTDIM";"Parse TDIM-like kwywords.";"119";"fxbtdim.html";"249"
"2020";"FXBTFORM";"Returns information about FITS binary table columns.";"119";"fxbtform.html";"233"
"2021";"FXBWRITE";"Write a binary data array to a disk FITS binary table file.";"119";"fxbwrite.html";"257"
"2022";"FXBWRITM";"Write multiple columns/rows to a disk FITS binary table file.";"119";"fxbwritm.html";"437"
"2023";"FXFINDEND";"Find the end of a FITS file.";"119";"fxfindend.html";"231"
"2024";"FXHCLEAN";"Removes required keywords from FITS header.";"119";"fxhclean.html";"249"
"2025";"FXHMAKE";"Create a basic FITS header array.";"119";"fxhmake.html";"342"
"2026";"FXHMODIFY";"Modify a FITS header in a file on disk.";"119";"fxhmodify.html";"268"
"2027";"FXHREAD";"Reads a FITS header from an opened disk file.";"119";"fxhread.html";"262"
"2028";"FXMOVE";"Skip to a specified extension number or name in a FITS file";"119";"fxmove.html";"343"
"2029";"FXPAR";"Obtain the value of a parameter in a FITS header.";"119";"fxpar.html";"802"
"2030";"FXPARPOS";"Finds position to insert record into FITS header.";"119";"fxparpos.html";"225"
"2031";"FXPOSIT";"Return the unit number of a FITS file positioned at specified extension";"119";"fxposit.html";"589"
"2032";"FXREAD";"Read basic FITS files.";"119";"fxread.html";"440"
"2033";"FXWRITE";"Write a disk FITS file.";"119";"fxwrite.html";"251"
"2034";"GAL_FLAT";"Transforms the image of a galaxy so that the galaxy appears face-on";"119";"gal_flat.html";"248"
"2035";"GAL_UVW";"Calculate the Galactic space velocity (U,V,W) of star";"119";"gal_uvw.html";"694"
"2036";"GALAGE";"Determine the age of a galaxy given its redshift and a formation redshift.";"119";"galage.html";"326"
"2037";"GAUSSIAN";"Compute the 1-d Gaussian function and optionally the derivative";"119";"gaussian.html";"2056"
"2038";"GCIRC";"Computes rigorous great circle arc distances.";"119";"gcirc.html";"1343"
"2039";"GCNTRD";"Compute the stellar centroid by Gaussian fits to marginal X,Y, sums";"119";"gcntrd.html";"932"
"2040";"GEO2ECI";"Convert geographic spherical coordinates to Earth-centered inertial coords";"119";"geo2eci.html";"349"
"2041";"GEO2GEODETIC";"Convert from geographic/planetographic to geodetic coordinates";"119";"geo2geodetic.html";"257"
"2042";"GEO2MAG";"Convert from geographic to geomagnetic coordinates";"119";"geo2mag.html";"466"
"2043";"GEODETIC2GEO";"Convert from geodetic (or planetodetic) to geographic coordinates";"119";"geodetic2geo.html";"234"
"2044";"GET_COORDS";"Converts a string with angular coordinates to floating point values.";"119";"get_coords.html";"311"
"2045";"GET_DATE";"Return the (current) UTC date in CCYY-MM-DD format for FITS headers";"119";"get_date.html";"510"
"2046";"GET_EQUINOX";"Return the equinox value from a FITS header.";"119";"get_equinox.html";"291"
"2047";"GET_JULDATE";"Return the current Julian Date";"119";"get_juldate.html";"253"
"2048";"GET_PIPE_FILESIZE";"Determine the number of bytes in a unit opened as a pipe with SPAWN";"119";"get_pipe_filesize.html";"243"
"2049";"GETOPT";"Convert a string supplied by the user into a valid scalar or vector";"119";"getopt.html";"249"
"2050";"GETPRO";"Search !PATH for a procedure, and copy into user's working directory";"119";"getpro.html";"381"
"2051";"GETPSF";"To generate a point-spread function (PSF) from observed stars.";"119";"getpsf.html";"848"
"2052";"GETROT";"Return the rotation and plate scale of an image from its FITS header";"119";"getrot.html";"8704"
"2053";"GETTOK";"Retrieve the first part of a (vector) string up to a specified character";"119";"gettok.html";"807"
"2054";"GETWRD";"Return the n'th word from a text string.";"119";"getwrd.html";"243"
"2055";"GLACTC";"Convert between celestial and Galactic (or Supergalactic) coordinates.";"119";"glactc.html";"1607"
"2056";"GLACTC_PM";"Convert between celestial and Galactic (or Supergalactic) proper motion (also converts coordinates).";"119";"glactc_pm.html";"1006"
"2057";"GROUP";"Assign stars with non-overlapping PSF profiles into distinct groups";"119";"group.html";"237"
"2058";"GSSS_STDAST";"Insert the closest tangent projection astrometry into an GSSS Image";"119";"gsss_stdast.html";"266"
"2059";"GSSSADXY";"Converts RA and DEC (J2000) to (X,Y) for an STScI GuideStar image.";"119";"gsssadxy.html";"261"
"2060";"GSSSEXTAST";"Extract IDL astrometry structure from a ST Guide Star Survey FITS header";"119";"gsssextast.html";"254"
"2061";"GSSSXYAD";"Convert (X,Y) coordinates in a STScI Guide Star image to RA and Dec";"119";"gsssxyad.html";"289"
"2062";"HADEC2ALTAZ";"Converts Hour Angle and Declination to Horizon (alt-az) coordinates.";"119";"hadec2altaz.html";"233"
"2063";"HASTROM";"Transformation of an image to align it with a reference image";"119";"hastrom.html";"1762"
"2064";"HBOXAVE";"Box average an image array and update the FITS header array";"119";"hboxave.html";"251"
"2065";"HCONGRID";"CONGRID an image and update astrometry in a FITS header";"119";"hcongrid.html";"397"
"2066";"HEADFITS";"Read a FITS (primary or extension) header into a string array.";"119";"headfits.html";"767"
"2067";"HELIO";"Compute (low-precision) heliocentric coordinates for the planets.";"119";"helio.html";"516"
"2068";"HELIO_JD";"Convert geocentric (reduced) Julian date to heliocentric Julian date";"119";"helio_jd.html";"759"
"2069";"HELIO_RV";"Return the heliocentric radial velocity of a spectroscopic binary";"119";"helio_rv.html";"295"
"2070";"HERMITE";"To compute Hermite spline interpolation of a tabulated function.";"119";"hermite.html";"628"
"2071";"HEULER";"Change the coordinate system of a FITS header or astrometry structure";"119";"heuler.html";"395"
"2072";"HEXTRACT";"Extract a subimage from an array and update astrometry in FITS header";"119";"hextract.html";"754"
"2073";"HGREP";"Find a substring in a FITS header (or any other string array)";"119";"hgrep.html";"354"
"2074";"HISTOGAUSS";"Histograms data and overlays it with a Gaussian. Draws the mean, sigma, and number of points on the plot.";"119";"histogauss.html";"1034"
"2075";"HOR2EQ";"Converts local horizon coords (alt-az) of something to equatorial (ra-dec).";"119";"hor2eq.html";"1019"
"2076";"HOST_TO_IEEE";"Translate an IDL variable from host to IEEE representation";"119";"host_to_ieee.html";"272"
"2077";"HPRECESS";"Precess the astrometry in a FITS header to a new equinox";"119";"hprecess.html";"242"
"2078";"HPRINT";"Display a FITS header (or other string array)";"119";"hprint.html";"391"
"2079";"HREBIN";"Expand or contract a FITS image using (F)REBIN and update the header";"119";"hrebin.html";"583"
"2080";"HREVERSE";"Reverse an image about either dimension and update FITS astrometry";"119";"hreverse.html";"488"
"2081";"HROT";"Rotate an image and create new FITS header with updated astrometry.";"119";"hrot.html";"520"
"2082";"HROTATE";"Apply the IDL ROTATE function and update astrometry in a FITS header";"119";"hrotate.html";"528"
"2084";"IEEE_TO_HOST";"Translate an IDL variable from IEEE-754 to host representation";"119";"ieee_to_host.html";"273"
"2085";"IMCONTOUR";"Make a contour plot labeled with astronomical coordinates.";"119";"imcontour.html";"1248"
"2086";"IMDBASE";"Find the sources in an IDL database that are located on a given image.";"119";"imdbase.html";"381"
"2087";"IMF";"Compute an N-component power-law logarithmic initial mass function";"119";"imf.html";"261"
"2088";"IMLIST";"Display pixel values on an image surrounding a specified X,Y center.";"119";"imlist.html";"446"
"2089";"IRAFDIR";"Provide a brief description of the IRAF images on a directory";"119";"irafdir.html";"314"
"2090";"IRAFRD";"Read an IRAF (.imh) file into IDL image and header arrays.";"119";"irafrd.html";"325"
"2091";"IRAFWRT";"Write IDL data in IRAF (OIF) format (.imh and .pix files).";"119";"irafwrt.html";"447"
"2092";"IS_IEEE_BIG";"Determine if the current machine uses IEEE, big-endian numbers.";"119";"is_ieee_big.html";"226"
"2093";"ISARRAY";"Tests if the argument is an array.";"119";"isarray.html";"293"
"2094";"ISMEUV";"Compute the continuum interstellar EUV optical depth";"119";"ismeuv.html";"245"
"2095";"JDCNV";"Converts Gregorian dates to Julian days";"119";"jdcnv.html";"321"
"2096";"JPLEPHINTERP";"Interpolate position and motion of planetary bodies (JPL Ephemeris)";"119";"jplephinterp.html";"318"
"2097";"JPLEPHREAD";"Open and read JPL DE200 or DE405 Ephemeride FITS File";"119";"jplephread.html";"368"
"2098";"JPLEPHTEST";"Test JPLEPHTEST with JPL test data set";"119";"jplephtest.html";"773"
"2099";"JPRECESS";"Precess astronomical coordinates from B1950 to J2000";"119";"jprecess.html";"391"
"2100";"JULDATE";"Convert from calendar to Reduced Julian Date";"119";"juldate.html";"840"
"2101";"KSONE";"Compute the one-sided Kolmogorov-Smirnov statistic";"119";"ksone.html";"734"
"2102";"KSTWO";"Return the two-sided Kolmogorov-Smirnov statistic";"119";"kstwo.html";"1830"
"2103";"KUIPERONE";"Compute the one-sided Kuiper statistic (invariant Kolmogorov-Smirnov)";"119";"kuiperone.html";"316"
"2104";"KUIPERTWO";"Compute the two-sided Kuiper statistic (invariant Kolmogorov-Smirnov)";"119";"kuipertwo.html";"315"
"11455";"SCATTERPLOT";"Displays data as a collection of points, plotted using two-dimensional Cartesian coordinates.";"27";"scatterplot.html";"25022"
"2107";"LINEID_PLOT";"Plot spectrum with specified line identifications annotated at the	 top of the plot.";"119";"lineid_plot.html";"500"
"2108";"LINMIX_ERR";"Bayesian approach to linear regression with errors in both X and Y";"119";"linmix_err.html";"616"
"2109";"LINTERP";"Linearly interpolate tabulated 1-d data from one grid to a new one.";"119";"linterp.html";"1340"
"2110";"LIST_WITH_PATH";"Search for files in a specified directory path.";"119";"list_with_path.html";"250"
"2111";"LSF_ROTATE";"Create a 1-d convolution kernel to broaden a spectrum from a rotating star";"119";"lsf_rotate.html";"337"
"2112";"LUMDIST";"Calculate luminosity distance (in Mpc) of an object given its redshift";"119";"lumdist.html";"468"
"2113";"MAG2FLUX";"Convert from magnitudes to flux (ergs/s/cm^2/A).";"119";"mag2flux.html";"399"
"2114";"MAG2GEO";"Convert from geomagnetic to geographic coordinates";"119";"mag2geo.html";"307"
"2115";"MAKE_2D";"Change from 1-d indexing to 2-d indexing";"119";"make_2d.html";"274"
"2116";"MAKE_ASTR";"Build an astrometry structure from input parameter values";"119";"make_astr.html";"363"
"2117";"MATCH";"Routine to match values in two vectors.";"119";"match.html";"2201"
"2118";"MATCH2";"Routine to cross-match values in two vectors (including non-matches)";"119";"match2.html";"989"
"2119";"MAX_ENTROPY";"Deconvolution of data by Maximum Entropy analysis, given the PSF";"119";"max_entropy.html";"548"
"2120";"MAX_LIKELIHOOD";"Maximum likelihood deconvolution of an image or a spectrum.";"119";"max_likelihood.html";"395"
"2121";"MEANCLIP";"Computes an iteratively sigma-clipped mean on a data set";"119";"meanclip.html";"1472"
"2122";"MEDARR";"Compute the median at each pixel across a set of 2-d images";"119";"medarr.html";"337"
"2123";"MEDSMOOTH";"Median smoothing of a vector, including points near its ends.";"119";"medsmooth.html";"575"
"2124";"MINF_BRACKET";"Bracket a local minimum of a 1-D function with 3 points,";"119";"minf_bracket.html";"240"
"2125";"MINF_CONJ_GRAD";"Find the local minimum of a scalar function using conjugate gradient";"119";"minf_conj_grad.html";"299"
"2126";"MINF_PARABOL_D";"Minimize a function using a modified Brent's method with derivatives";"119";"minf_parabol_d.html";"199"
"2127";"MINF_PARABOLIC";"Minimize a function using Brent's method with parabolic interpolation";"119";"minf_parabolic.html";"261"
"2128";"MINMAX";"Return a 2 element array giving the minimum and maximum of an array";"119";"minmax.html";"328"
"2129";"MKHDR";"Make a minimal primary (or IMAGE extension) FITS header";"119";"mkhdr.html";"487"
"2130";"MLINMIX_ERR";"Bayesian approach to multiple linear regression with errors in X and Y";"119";"mlinmix_err.html";"1261"
"2131";"MMM";"Estimate the sky background in a stellar contaminated field.";"119";"mmm.html";"580"
"2132";"MODFITS";"Modify a FITS file by updating the header and/or data array.";"119";"modfits.html";"1081"
"2133";"MONTH_CNV";"Convert between a month name and the equivalent number EXPLANATION: (e.g., For example, converts from 'January' to 1 or vice-versa.";"119";"month_cnv.html";"298"
"2134";"MOONPOS";"To compute the RA and Dec of the Moon at specified Julian date(s).";"119";"moonpos.html";"552"
"2135";"MPHASE";"Return the illuminated fraction of the Moon at given Julian date(s)";"119";"mphase.html";"290"
"2136";"MRANDOMN";"Function to draw NRAND random deviates from a multivariate normal distribution with zero mean and covariance matrix COVAR. AUTHOR : Brandon C. Kelly, Steward Obs., Sept. 2004";"119";"mrandomn.html";"497"
"2137";"MRD_HREAD";"Reads a FITS header from an opened disk file or Unix pipe";"119";"mrd_hread.html";"459"
"2138";"MRD_SKIP";"Skip a number of bytes from the current location in a file or a pipe";"119";"mrd_skip.html";"258"
"2139";"MRD_STRUCT";"Return a structure as defined in the names and values data.";"119";"mrd_struct.html";"393"
"2140";"MRDFITS";"Read all standard FITS data types into arrays or structures.";"119";"mrdfits.html";"3037"
"2141";"MULTINOM";"SIMULATE MULTINOMIAL RANDOM VARIABLES AUTHOR : BRANDON C. KELLY, STEWARD OBS., APR 2006";"119";"multinom.html";"338"
"2142";"MULTIPLOT";"Create multiple plots with simple control over the gaps between plots. By default, the gap is zero but this can be set with the gap= keyword, or xgap=, ygap= for individual control over different axes. You can also place a single title along the x, y and ";"119";"multiplot.html";"1930"
"2143";"MWRFITS";"Write all standard FITS data types from input arrays or structures.";"119";"mwrfits.html";"2633"
"2144";"N_BYTES";"To return the total number of bytes in data element";"119";"n_bytes.html";"250"
"2146";"NGP";"Interpolate an irregularly sampled field using Nearest Grid Point";"119";"ngp.html";"272"
"2147";"NINT";"Nearest integer function.";"119";"nint.html";"500"
"2148";"NSTAR";"Simultaneous point spread function fitting (adapted from DAOPHOT)";"119";"nstar.html";"295"
"2149";"NULLTRIM";"Trim a string of all characters after and including the first null";"119";"nulltrim.html";"394"
"12178";"IDLnetJPIP::GetProperty";"Returns information describing the properties of an IDLnetJPIP object.";"73";"IDLnetJPIP_GetProperty.html";"2263"
"2151";"NUTATE";"Return the nutation in longitude and obliquity for a given Julian date";"119";"nutate.html";"401"
"2152";"OBSERVATORY";"Return longitude, latitude, altitude & time zones of an observatory";"119";"observatory.html";"457"
"2153";"ONE_ARROW";"Draws an arrow labeled with a single character on the current device";"119";"one_arrow.html";"358"
"2154";"ONE_RAY";"Draw a line with a specified starting point, length, and angle";"119";"one_ray.html";"284"
"2155";"OPLOTERROR";"Over-plot data points with accompanying X or Y error bars.";"119";"oploterror.html";"4100"
"2156";"ORDINAL";"Convert an integer to a correct English ordinal string:";"119";"ordinal.html";"338"
"2157";"PARTVELVEC";"Plot the velocity vectors of particles at their positions";"119";"partvelvec.html";"863"
"2158";"PCA";"Carry out a Principal Components Analysis (Karhunen-Loeve Transform)";"119";"pca.html";"2312"
"2159";"PENT";"Return the information entropy of a time series";"119";"pent.html";"272"
"2160";"PIXCOLOR";"Assign colors to specified pixel values in a color lookup table";"119";"pixcolor.html";"388"
"2161";"PIXWT";"Circle-rectangle overlap area computation.";"119";"pixwt.html";"424"
"2162";"PKFIT";"Subroutine of GETPSF to perform a one-star least-squares fit";"119";"pkfit.html";"445"
"2163";"PLANCK";"To calculate the Planck function in units of ergs/cm2/s/A";"119";"planck.html";"1015"
"2164";"PLANET_COORDS";"Find low or high precision RA and DEC for the planets given a date";"119";"planet_coords.html";"695"
"2165";"PLOTERROR";"Plot data points with accompanying X or Y error bars.";"119";"ploterror.html";"1959"
"2166";"PLOTHIST";"Plot the histogram of an array with the corresponding abcissa.";"119";"plothist.html";"4998"
"2167";"PLOTSYM";"Define useful plotting symbols not in the standard !PSYM definitions.";"119";"plotsym.html";"2953"
"2168";"POIDEV";"Generate a Poisson random deviate";"119";"poidev.html";"342"
"2169";"POLINT";"Interpolate a set of N points by fitting a polynomial of degree N-1";"119";"polint.html";"767"
"2170";"POLREC";"Convert 2-d polar coordinates to rectangular coordinates.";"119";"polrec.html";"349"
"2171";"POLY_SMOOTH";"Apply a least-squares (Savitzky-Golay) polynomial smoothing filter";"119";"poly_smooth.html";"1004"
"2172";"POLYLEG";"Evaluate a Legendre polynomial with specified coefficients.";"119";"polyleg.html";"276"
"2173";"POSANG";"Computes rigorous position angle of source 2 relative to source 1";"119";"posang.html";"359"
"2174";"POSITIVITY";"Map an image uniquely and smoothly into all positive values.";"119";"positivity.html";"232"
"2175";"PRECESS";"Precess coordinates from EQUINOX1 to EQUINOX2.";"119";"precess.html";"294"
"2176";"PRECESS_CD";"Precess the CD (coordinate description) matrix from a FITS header";"119";"precess_cd.html";"274"
"2177";"PRECESS_XYZ";"Precess equatorial geocentric rectangular coordinates.";"119";"precess_xyz.html";"215"
"2178";"PREMAT";"Return the precession matrix needed to go from EQUINOX1 to EQUINOX2.";"119";"premat.html";"214"
"2179";"PRIME";"Return an array with the specified number of prime numbers. EXPLANATATION: This procedure is similar to PRIMES in the standard IDL distribution, but stores results in a common block, and so is much faster";"119";"prime.html";"281"
"2180";"PRINT_STRUCT";"Print the tag values of an array of structures in nice column format.";"119";"print_struct.html";"488"
"2181";"PROB_KS";"Return the significance of the Kolmogoroff-Smirnov statistic";"119";"prob_ks.html";"337"
"2182";"PROB_KUIPER";"Return the significance of the Kuiper statistic";"119";"prob_kuiper.html";"212"
"11461";"PLOT_IMAGE_KPB";"This procedure plots an image and provides axes, titles, etc.";"151";"plot_image_kpb.html";"156"
"2184";"PSF_GAUSSIAN";"Create a 1-d, 2-d, or 3-d Gaussian with specified FWHM, center";"119";"psf_gaussian.html";"1880"
"2185";"PUTAST";"Put WCS astrometry parameters into a given FITS header.";"119";"putast.html";"705"
"2186";"QDCB_GRID";"Produce an overlay of latitude and longitude lines over a plot or image";"119";"qdcb_grid.html";"305"
"2187";"QGET_STRING";"To get a string from the keyboard without echoing it to the screen.";"119";"qget_string.html";"271"
"2189";"QTRAP";"Integrate using trapezoidal rule to specified accuracy.";"119";"qtrap.html";"362"
"2190";"QUADTERP";"Quadratic interpolation of X,Y vectors onto a new X grid";"119";"quadterp.html";"362"
"2191";"QUERYDSS";"Query the digital sky survey (DSS) on-line at the STSCI (or ESO) server";"119";"querydss.html";"341"
"2192";"QUERYGSC";"Query the Guide Star Catalog (GSC V2.3.2) at STScI by position";"119";"querygsc.html";"6107"
"2193";"QUERYSIMBAD";"Query the SIMBAD/NED/Vizier astronomical name resolver to obtain coordinates";"119";"querysimbad.html";"990"
"12177";"IDLnetJPIP::GetData";"Use this method to stream image data from a remote JPIP server, or to fetch any portion of the image.";"73";"IDLnetJPIP_GetData.html";"2799"
"2195";"QUERYVIZIER";"Query any catalog in the Vizier database by position";"119";"queryvizier.html";"315"
"2196";"RADEC";"To convert RA and Dec from decimal to sexigesimal units.";"119";"radec.html";"1860"
"2197";"RANDOMCHI";"GENERATE CHI-SQUARE DISTRIBUTED RANDOM VARIABLES. AUTHOR : BRANDON C. KELLY, STEWARD OBS., SEP 2005";"119";"randomchi.html";"229"
"2198";"RANDOMDIR";"GENERATE DIRICHLET-DISTRIBUTED RANDOM VARIABLES. AUTHOR : BRANDON C. KELLY, STEWARD OBS., APRIL 2006";"119";"randomdir.html";"283"
"2199";"RANDOMGAM";"GENERATE GAMMA-DISTRIBUTED RANDOM VARIABLES. AUTHOR : BRANDON C. KELLY, STEWARD OBS., APRIL 2006";"119";"randomgam.html";"249"
"2200";"RANDOMP";"Generates an array of random numbers distributed as a power law.";"119";"randomp.html";"258"
"2201";"RANDOMWISH";"ROUTINE TO DRAW RANDOM MATRICES FROM A WISHART DISTRIBUTION WITH DOF DEGREES OF FREEDOM AND SCALE MATRIX S. AUTHOR : BRANDON C. KELLY, STEWARD OBS., JULY 2006";"119";"randomwish.html";"223"
"2202";"RDFITS_STRUCT";"Read an entire FITS file (all extensions) into a single IDL structure.";"119";"rdfits_struct.html";"392"
"2203";"RDFLOAT";"Quickly read a numeric ASCII data file into IDL floating/double vectors.";"119";"rdfloat.html";"704"
"2204";"RDPLOT";"Like CURSOR but with a full-screen cursor and continuous readout option";"119";"rdplot.html";"1024"
"2205";"RDPSF";"Read the FITS file created by GETPSF in the DAOPHOT sequence";"119";"rdpsf.html";"303"
"2206";"READ_FMR";"Read a journal (ApJ, AJ) machine-readable table into IDL";"119";"read_fmr.html";"458"
"2207";"READ_KEY";"To read a keystroke and return its ASCII equivalent";"119";"read_key.html";"322"
"2208";"READCOL";"Read a free-format ASCII file with columns of data into IDL vectors";"119";"readcol.html";"4091"
"2209";"READFITS";"Read a FITS file into IDL data and header variables.";"119";"readfits.html";"5032"
"2210";"READFMT";"Quickly read a fixed format ASCII data file into IDL variables.";"119";"readfmt.html";"987"
"2211";"RECPOL";"Convert 2-d rectangular coordinates to polar coordinates.";"119";"recpol.html";"402"
"2213";"REM_DUP";"Function to remove duplicate values from a vector.";"119";"rem_dup.html";"374"
"2214";"REMCHAR";"Remove all appearances of character (char) from string (st)";"119";"remchar.html";"446"
"2215";"REMOVE";"Contract a vector or up to 25 vectors by removing specified elements";"119";"remove.html";"544"
"2216";"REPCHR";"Replace all occurrences of one character with another in a text string.";"119";"repchr.html";"468"
"2217";"REPSTR";"Replace all occurences of one substring by another.";"119";"repstr.html";"918"
"2218";"RESISTANT_MEAN";"Outlier-resistant determination of the mean and standard deviation.";"119";"resistant_mean.html";"972"
"2219";"RINTER";"Cubic interpolation of an image at a set of reference points.";"119";"rinter.html";"401"
"2220";"ROB_CHECKFIT";"Used by ROBUST_... routines to determine the quality of a fit and to	return biweights.";"119";"rob_checkfit.html";"226"
"2221";"ROBUST_LINEFIT";"An outlier-resistant two-variable linear regression.";"119";"robust_linefit.html";"630"
"2222";"ROBUST_POLY_FIT";"An outlier-resistant polynomial fit.";"119";"robust_poly_fit.html";"1098"
"2223";"ROBUST_SIGMA";"Calculate a resistant estimate of the dispersion of a distribution.";"119";"robust_sigma.html";"908"
"12611";"CGCHANGEMAPPROJECTION";"This function warps a map projected image from one map projection to another, using Map_Proj_Image to do the warping.";"118";"cgchangemapprojection.html";"573"
"12609";"CGCBAR2KML";"This program creates a KML file that can be opened in Google Earth to display a color bar as a ScreenOverlay.";"118";"cgcbar2kml.html";"255"
"12610";"CGCENTERTLB";"This is a utility routine to position a widget program on the display at an arbitrary location.";"118";"cgcentertlb.html";"295"
"12608";"CGASPECT";"The purpose of this function is to calculate a position in a graphics window with a specified aspect ratio (ysize/xsize).";"118";"cgaspect.html";"151"
"12606";"CGADDTOPATH";"Adds a directory to the beginning of the !PATH system variable.";"118";"cgaddtopath.html";"155"
"2234";"SELECT_W";"Create a non-exclusive widget menu of items";"119";"select_w.html";"222"
"16434";"mggreasing__define";"Define instance variables.";"147";"mggreasing__define.html#mggreasing__define";"73"
"2236";"SIGMA_FILTER";"Replace pixels more than a specified pixels deviant from its neighbors";"119";"sigma_filter.html";"401"
"2237";"SIGRANGE";"Selects the most significant data range in an image.";"119";"sigrange.html";"242"
"2238";"SIXLIN";"Compute linear regression coefficients by six different methods.";"119";"sixlin.html";"1269"
"2239";"SIXTY";"Converts a decimal number to sexigesimal.";"119";"sixty.html";"323"
"2241";"SKY";"Determine the sky level in an image";"119";"sky.html";"341"
"2242";"SKYADJ_CUBE";"Sky adjust the planes of a datacube.";"119";"skyadj_cube.html";"206"
"2243";"SPEC_DIR";"Complete a file specification by appending the default disk or directory";"119";"spec_dir.html";"250"
"2244";"SPHDIST";"Angular distance between points on a sphere.";"119";"sphdist.html";"277"
"2245";"SRCOR";"Correlate the source positions found on two lists.";"119";"srcor.html";"632"
"2246";"ST_DISKREAD";"Read HST FITS formatted disk files and reconstruct GEIS (STSDAS) files.";"119";"st_diskread.html";"325"
"2247";"STARAST";"Compute astrometric solution using positions of 2 or 3 reference stars";"119";"starast.html";"21000"
"2248";"STORE_ARRAY";"Insert array INSERT into the array DESTINATION";"119";"store_array.html";"234"
"2249";"STR_INDEX";"Get indices of a substring (SUBSTR) in string.";"119";"str_index.html";"293"
"2250";"STRCOMPRESS2";"Remove blanks around specified characters in a string";"119";"strcompress2.html";"272"
"2251";"STRN";"Convert a number to a string and remove padded blanks.";"119";"strn.html";"484"
"2252";"STRNUMBER";"Function to determine if a string is a valid numeric value.";"119";"strnumber.html";"378"
"2254";"SUBSTAR";"Subtract a scaled point spread function at specified star position(s).";"119";"substar.html";"407"
"2255";"SUNPOS";"To compute the RA and Dec of the Sun at a given date.";"119";"sunpos.html";"588"
"2256";"SUNSYMBOL";"Return the Sun symbol as a subscripted postscript character string";"119";"sunsymbol.html";"914"
"2257";"SXADDHIST";"Procedure to add HISTORY (or COMMENT) line(s) to a FITS header";"119";"sxaddhist.html";"298"
"2258";"SXADDPAR";"Add or modify a parameter in a FITS header array.";"119";"sxaddpar.html";"1502"
"2259";"SXDELPAR";"Procedure to delete a keyword parameter(s) from a FITS header";"119";"sxdelpar.html";"373"
"2260";"SXGINFO";"Return information on all group parameters in an STSDAS header.";"119";"sxginfo.html";"215"
"2261";"SXGPAR";"Obtain group parameter value in SDAS/FITS file";"119";"sxgpar.html";"227"
"2262";"SXGREAD";"Read group parameters from a Space Telescope STSDAS image file";"119";"sxgread.html";"211"
"2263";"SXHCOPY";"Copies selected portions of one header to another";"119";"sxhcopy.html";"248"
"2264";"SXHMAKE";"Create a basic STSDAS header file from an IDL data array";"119";"sxhmake.html";"230"
"2265";"SXHREAD";"Procedure to read a STSDAS header from disk.";"119";"sxhread.html";"247"
"2266";"SXHWRITE";"Procedure to write an STSDAS or FITS header to disk as a *.hhh file.";"119";"sxhwrite.html";"192"
"2267";"SXMAKE";"Create a basic ST header file from an IDL array prior to writing data.";"119";"sxmake.html";"339"
"2268";"SXOPEN";"Open a Space Telescope formatted (STSDAS) header file.";"119";"sxopen.html";"354"
"2269";"SXPAR";"Obtain the value of a parameter in a FITS header";"119";"sxpar.html";"1785"
"2270";"SXREAD";"Read a Space Telescope STSDAS image file";"119";"sxread.html";"241"
"2271";"SXWRITE";"Write a group of data and parameters in ST format	to a STSDAS data file.";"119";"sxwrite.html";"241"
"12174";"IDLnetJPIP";"Provides the ability to stream JPEG2000 imagery from a remote JPIP server to an IDL client, over a network.";"73";"IDLnetJPIP.html";"2849"
"2273";"T_APER";"Driver procedure (for APER) to compute concentric aperture photometry.";"119";"t_aper.html";"223"
"2274";"T_FIND";"Driver procedure (for FIND) to locate stars in an image.";"119";"t_find.html";"254"
"2275";"T_GETPSF";"Driver procedure (for GETPSF) to generate a PSF from isolate stars.";"119";"t_getpsf.html";"237"
"2276";"T_GROUP";"Driver procedure (for GROUP) to place stars in non-overlapping groups.";"119";"t_group.html";"238"
"2277";"T_NSTAR";"Driver procedure (for NSTAR) for simultaneous PSF fitting.";"119";"t_nstar.html";"247"
"2278";"T_SUBSTAR";"Driver procedure (for SUBSTAR) to subtract scaled PSF values";"119";"t_substar.html";"206"
"12171";"H5_PUT";"Writes a new dataset to either a new or existing HDF5 file.";"102";"H5_PUT.html";"1457"
"12172";"H5_PUTDATA";"Writes a new dataset to either a new or existing HDF5 file.";"102";"H5_PUTDATA.html";"3335"
"12170";"H5_LIST";"Lists all of the groups and datasets found in an HDF5 file.";"102";"H5_LIST.html";"4586"
"12168";"GRIB_PUTDATA";"Adds a new record to an existing GRIB file.";"104";"GRIB_PUTDATA.html";"2217"
"12167";"GRIB_LIST";"Lists the records in a file or all of the keys in a record.";"104";"GRIB_LIST.html";"2579"
"12166";"GRIB_GETDATA";"Returns the key/value pairs associated with a requested record in the form of an ordered hash.";"104";"GRIB_GETDATA.html";"3006"
"12162";"UNITVECANG";"Convert unit vector to longitude and (co)latitude (RA/Dec)";"143";"unitvecang.html";"45"
"12163";"SKYMAP__DEFINE";"This class creates a smoothed sky map from an irregularly spaced set of measurements. The default smoothing kernel is a gaussian. The class also implements sigma clipping. The smoothed map is evaluated according to m(x,y) = sum( w_i v...";"146";"skymap__define.html";"49"
"2296";"TABINV";"To find the effective index of a function value in an ordered vector.";"119";"tabinv.html";"247"
"12159";"ANGUNITVEC";"Convert longitude and (co)latitude (RA/Dec) to unit vector";"143";"angunitvec.html";"237"
"12156";"RHOTHETA";"Calculate the separation and position angle of a binary star";"119";"rhotheta.html";"140"
"12155";"READ_IPAC_VAR";"Read an IPAC ascii table from a variable into an IDL structure. Used by query_irsa_cat.pro.";"119";"read_ipac_var.html";"51"
"2305";"TAG_EXIST";"To test whether a tag name exists in a structure.";"119";"tag_exist.html";"2020"
"2306";"TBDELCOL";"Delete a column of data from a FITS binary table";"119";"tbdelcol.html";"238"
"2307";"TBDELROW";"Delete specified row or rows of data from a FITS binary table";"119";"tbdelrow.html";"264"
"2308";"TBGET";"Return value(s) from specified column in a FITS binary table";"119";"tbget.html";"523"
"2309";"TBHELP";"Routine to print a description of a FITS binary table header";"119";"tbhelp.html";"243"
"2310";"TBINFO";"Return an informational IDL structure from a FITS binary table header.";"119";"tbinfo.html";"323"
"2311";"TBPRINT";"Procedure to print specified columns & rows of a FITS binary table";"119";"tbprint.html";"382"
"2312";"TBSIZE";"Procedure to return the size of a FITS binary table.";"119";"tbsize.html";"350"
"2313";"TDB2TDT";"Relativistic clock corrections due to Earth motion in solar system";"119";"tdb2tdt.html";"269"
"2314";"TEN";"Converts a sexigesimal number or string to decimal.";"119";"ten.html";"270"
"2315";"TENV";"Converts sexigesimal number or string vector to decimal.";"119";"tenv.html";"798"
"2316";"TEXTCLOSE";"Close a text outpu file previously opened with TEXTOPEN";"119";"textclose.html";"303"
"2317";"TEXTOPEN";"Open a device specified by TEXTOUT with unit !TEXTUNIT";"119";"textopen.html";"396"
"2318";"TIC_ONE";"Determine the position of the first tic mark for astronomical images.";"119";"tic_one.html";"306"
"2319";"TICLABELS";"Create tic labels for labeling astronomical images.";"119";"ticlabels.html";"232"
"2320";"TICPOS";"Specify distance between tic marks for astronomical coordinate overlays";"119";"ticpos.html";"270"
"2321";"TICS";"Compute a nice increment between tic marks for astronomical images.";"119";"tics.html";"228"
"2322";"TO_HEX";"Translate a non-negative decimal integer to a hexadecimal string";"119";"to_hex.html";"374"
"2323";"TRANSFORM_COEFF";"Compute new polynomial coefficients under a linear transformation";"119";"transform_coeff.html";"254"
"2324";"TRAPZD";"Compute the nth stage of refinement of an extended trapezoidal rule.";"119";"trapzd.html";"260"
"2325";"TSC";"Interpolate an irregularly sampled field using a Triangular Shaped Cloud";"119";"tsc.html";"633"
"2326";"TSUM";"Trapezoidal summation of the area under a curve.";"119";"tsum.html";"1495"
"2327";"TVBOX";"Draw a box(es) or rectangle(s) of specified width";"119";"tvbox.html";"951"
"2328";"TVCIRCLE";"Draw circle(s) of specified radius at specified position(s)";"119";"tvcircle.html";"1681"
"2329";"TVELLIPSE";"Draw an ellipse on the current graphics device.";"119";"tvellipse.html";"1013"
"2330";"TVLASER";"Prints screen or image array onto a Postscript file or printer. Information from FITS header is optionally used for labeling.";"119";"tvlaser.html";"372"
"2331";"TVLIST";"Cursor controlled listing of image pixel values in a window.";"119";"tvlist.html";"443"
"2332";"UNZOOM_XY";"Converts X, Y position on the image display to the the X,Y position on the corresponding image array. (These positions are identical only for an unroamed, unzoomed image with with pixel (0,0) of the image placed at position (0,0) on the TV.)";"119";"unzoom_xy.html";"215"
"2333";"UPDATE_DISTORT";"Update SIP nonlinear distortion coefficients for a linear transformation";"119";"update_distort.html";"182"
"2334";"UVBYBETA";"Derive dereddened colors, metallicity, and Teff from Stromgren colors.";"119";"uvbybeta.html";"432"
"2335";"VACTOAIR";"Convert vacuum wavelengths to air wavelengths";"119";"vactoair.html";"370"
"2336";"VALID_NUM";"Check if a string is a valid number representation.";"119";"valid_num.html";"361"
"2337";"VECT";"Print a set of numbers as a string with delimiters included";"119";"vect.html";"361"
"2338";"VSYM";"Create 'Mongo'-like polygonal plot symbols";"119";"vsym.html";"303"
"2339";"WCS_DEMO";"Demonstrate the basic capabilities of procedures WCSSPH2XY & WCSXY2SPH";"119";"wcs_demo.html";"267"
"2340";"WCS_GETPOLE";"Compute the coordinates of the native pole for a non-polar projection";"119";"wcs_getpole.html";"306"
"2341";"WCS_ROTATE";"Rotate between standard (e.g. celestial) and native coordinates";"119";"wcs_rotate.html";"389"
"2342";"WCSSPH2XY";"Convert spherical coordinates to x and y (map) angular coordinates";"119";"wcssph2xy.html";"8743"
"2343";"WCSXY2SPH";"Convert x and y (map) coordinates to spherical coordinates";"119";"wcsxy2sph.html";"433"
"2344";"WEBGET";"Use the IDL SOCKET procedure to get data from http servers";"119";"webget.html";"2017"
"2345";"WFPC2_METRIC";"Compute the distortion in a WFPC2 image and optionally return coordinates EPLANATION: Uses the distortion solution of Anderson & King (2003, PASP, 115, 113) Pixel 424, 424 on each chip remains fixed, and other pixel positions are mapped to remove nonlinea";"119";"wfpc2_metric.html";"179"
"2346";"WFPC2_READ";"Read WFPC2 images in either FITS or STSDAS format into IDL variables.";"119";"wfpc2_read.html";"249"
"2348";"WHERE_TAG";"Like WHERE but works on structure tag names";"119";"where_tag.html";"323"
"2349";"WHERENAN";"Find the indices of all big-endian NaN values in an array. OBSOLETE";"119";"wherenan.html";"1276"
"2350";"WRITEFITS";"Write IDL array and header variables to a disk FITS file.";"119";"writefits.html";"3440"
"2351";"XDISPSTR";"Display a string array in a text widget with a simple search capability.";"119";"xdispstr.html";"237"
"2352";"XMEDSKY";"Subtract sky from an image as a 1-D function of X";"119";"xmedsky.html";"273"
"2353";"XY2AD";"Compute R.A. and Dec from X and Y and a FITS astrometry structure";"119";"xy2ad.html";"652"
"2354";"XYAD";"Use a FITS header to convert pixel (X,Y) to world coordinates";"119";"xyad.html";"1093"
"2355";"XYXY";"To use a pair of headers to convert X/Y positions from one frame	to another.";"119";"xyxy.html";"517"
"2356";"XYZ";"Calculate geocentric X,Y, and Z and velocity coordinates of the Sun";"119";"xyz.html";"454"
"2357";"YDN2MD";"Convert from year and day number of year to month and day of month.";"119";"ydn2md.html";"284"
"2358";"YMD2DN";"Convert from year, month, day to day number of year.";"119";"ymd2dn.html";"294"
"2359";"ZANG";"Determine the angular size of an object as a function of redshift";"119";"zang.html";"308"
"2360";"ZBRENT";"Find the zero of a 1-D function up to specified tolerance.";"119";"zbrent.html";"1212"
"2361";"ZENPOS";"Return the zenith RA and Dec in radians for a given Julian date.";"119";"zenpos.html";"261"
"2362";"ZOOM_XY";"Converts X, Y position on the image array to the the X,Y position in the current window. (These positions are identical only for an unroamed, zoomed image with with pixel (0,0) of the image placed at position (0,0) on the TV.)";"119";"zoom_xy.html";"251"
"2363";"ZPARCHECK";"Routine to check user parameters to a procedure";"119";"zparcheck.html";"284"
"12153";"QUERY_IRSA_CAT";"Query a catalog in the NASA/IPAC Infrared Science Archive (IRSA) database by position or resolvable target name.";"119";"query_irsa_cat.html";"6539"
"2492";"Overview of IDL Program Types";;"135";"Overview_of_IDL_Program.html";"6090"
"2491";"Monitoring Variable Values";;"135";"Monitoring_Variable_Valu.html";"10490"
"2490";"Math Errors";;"135";"Math_Errors.html";"41721"
"2489";"Keyword Inheritance";;"135";"Keyword_Inheritance.html";"9344"
"2488";"Jump Statements";;"135";"Jump_Statements.html";"11634"
"2487";"Interrupting or Aborting Execution";;"135";"Interrupting_or_Aborting.html";"25635"
"2486";"File and Path Specifications";;"135";"File_and_Path_Specificat.html";"5910"
"2485";"Executing SAVE Files";;"135";"Executing_SAVE_Files.html";"24630"
"2484";"Determining if a Keyword is Set";;"135";"Determining_if_a_Keyword.html";"10873"
"2483";"Definition of True and False";;"135";"Definition_of_True_and_F.html";"8735"
"2482";"Defining a Procedure";;"135";"Defining_a_Procedure.html";"19880"
"2481";"Defining a Function";;"135";"Defining_a_Function.html";"25763"
"2480";"Creating SAVE Files of Program Files";;"135";"Creating_SAVE_Files_of_P.html";"24702"
"2479";"Creating Custom Error Messages";;"135";"Creating_Custom_Error_Me.html";"8790"
"2478";"Creating Video";;"135";"CreatingVideo.html";"17482"
"2477";"Creating Widget Applications";;"135";"Creating_Widget_Applications.html";"3953"
"17028";"ENVIUI::SelectROI";"Displays a dialog for selecting regions of interest (ROIs).";"156";"ENVIUI__SelectROI.html";"103"
"2475";"Controlling the IDL Thread Pool";;"135";"Controlling_the_IDL_Thre.html";"7292"
"2474";"Controlling and Recovering from Errors";;"135";"Controlling_and_Recoveri.html";"39092"
"2473";"Compound Statements";;"135";"Compound_Statements.html";"5682"
"2472";"Command Line Tips and Tricks";;"135";"Command_Line_Tips_and_Tr.html";"19276"
"2471";"CASE Versus SWITCH";;"135";"CASE_Versus_SWITCH.html";"13962"
"2470";"Automatic Compilation and Execution";;"135";"Automatic_Compilation_an.html";"16935"
"2468";"Thread Pool Keywords";;"135";"tpoolkeyw.html";"4931"
"2467";"Special Characters";;"135";"specchars.html";"8326"
"2466";"Reserved Words";;"135";"reswords.html";"4357"
"2465";"Windows Runtime Preferences";;"135";"prefs_win_rt.html";"5327"
"2464";"General Graphics Preferences";;"135";"prefs_graphics.html";"3447"
"2463";"X Window System Graphics Preferences";;"135";"prefs_gr_x.html";"5462"
"2462";"Windows Graphics Preferences";;"135";"prefs_gr_win.html";"6295"
"2461";"General User Environment Preferences";;"135";"prefs_general.html";"9418"
"2460";"Directory and Search Path Preferences";;"135";"prefs_directory.html";"23236"
"2459";"!CPU Settings Preferences";;"135";"prefs_cpu.html";"5238"
"2458";"Using TrueType Fonts";;"135";"Using_TrueType_Fonts.html";"33078"
"2457";"Using Hershey Vector Fonts";;"135";"Using_Hershey_Vector_Fon.html";"27942"
"2456";"Using Device Fonts";;"135";"Using_Device_Fonts.html";"19717"
"2455";"Setting Preferences";;"135";"Setting_Preferences.html";"5306"
"2454";"IDL Environment System Variables";;"135";"IDL_Environment_System_V.html";"608"
"2453";"Formatting Command Examples";;"135";"Formatting_Command_Examp.html";"8666"
"2452";"Error Handling System Variables";;"135";"Error_Handling_System_Va.html";"395"
"2451";"Embedded Formatting Commands";;"135";"Embedded_Formatting_Comm.html";"19774"
"2450";"Constant System Variables";;"135";"Constant_System_Variable.html";"1043"
"2449";"About IDL System Preferences";;"135";"About_IDL_System_Prefere.html";"8960"
"2448";"Contact Us";;"135";"ContactUs.html";"9306"
"2447";"About IDL";;"135";"AboutIDL.html";"5325"
"2493";"Overview of Program Control";;"135";"Overview_of_Program_Cont.html";"6340"
"2494";"Overview of SAVE Files";;"135";"Overview_of_SAVE_Files.html";"5756"
"2495";"Parameter Passing";;"135";"Parameter_Passing_Mechan.html";"9324"
"2496";"Parameters";;"135";"Parameters.html";"9176"
"2497";"Recognizing Potential Naming Conflicts";;"135";"Recognizing_Potential_Na.html";"7870"
"2498";"Routines that Use the Thread Pool";;"135";"Routines_that_Use_the_Th.html";"2633"
"2499";"Saving Variables from an IDL Session";;"135";"Saving_Variables_from_an.html";"6170"
"2500";"The IDL Thread Pool";;"135";"The__Thread_Pool.html";"6423"
"2501";"Use System Functions and Procedures";;"135";"Use_System_Functions_and.html";"330"
"2502";"Using Keyword Parameters";;"135";"Using_Keyword_Parameters.html";"20416"
"2503";"Virtual Memory";;"135";"Virtual_Memory.html";"20479"
"2504";"Arrays";;"135";"Arrays.html";"10181"
"2505";"Character Encoding";;"135";"Character_Encoding.html";"6929"
"2506";"Accuracy and Floating Point Operations";;"135";"Accuracy_and_Floating_Po.html";"7968"
"2507";"Array Subscript Ranges";;"135";"Array_Subscript_Ranges.html";"74192"
"2508";"Arrays of Structures";;"135";"Arrays_of_Structures.html";"17787"
"2509";"Assignment Operations and Arrays";;"135";"Assignment_Operations_an.html";"15875"
"2510";"Assignment and Compound Assignment";;"135";"Assignment_and_Compound.html";"10419"
"2511";"Automatic Garbage Collection";;"135";"Automatic_Garbage_Collec.html";"9813"
"2512";"Bitwise Operators";;"135";"Bitwise_Operators.html";"44618"
"2513";"Case Folding";;"135";"Case_Folding.html";"27875"
"2514";"Columns, Rows, and Array Majority";;"135";"Columns__Rows__and_Array.html";"16409"
"2515";"Combining Array Subscripts";;"135";"Combining_Array_Subscrip.html";"13016"
"2516";"Comparing Strings";;"135";"Comparing_Strings.html";"10642"
"2517";"Compound Data Types";;"135";"Compound_Data_Types.html";"5923"
"2518";"Concatenating Arrays";;"135";"Concatenating_Arrays.html";"24278"
"2519";"Conditionally Altering Array Elements";;"135";"Conditionally_Altering_A.html";"14734"
"2520";"Creating and Defining Structures";;"135";"Creating_and_Defining_St.html";"31735"
"2521";"Dangling References";;"135";"Dangling_References.html";"5617"
"2522";"Data Type and Structure of Expressions";;"135";"Data_Type_and_Structure.html";"7701"
"2523";"Date/Time Data";;"135";"Date_Time_Data.html";"15225"
"2524";"Defining and Using Constants";;"135";"Defining_and_Using_Const.html";"479591"
"2525";"Dynamic Data Typing";;"135";"Dynamic_Data_Typing.html";"5618"
"2526";"File Unit Manipulations";;"135";"File_Unit_Manipulations.html";"563"
"2527";"Finding the Length of a String";;"135";"Finding_the_Length_of_a.html";"10273"
"2529";"Freeing Pointers";;"135";"Freeing_Pointers.html";"3532"
"2530";"IDL Data Types";;"135";"IDL_Data_Types.html";"99817"
"2531";"IDL Pointers";;"135";"IDL_Pointers.html";"17148"
"2532";"Learning About Regular Expressions";;"135";"Learning_About_Regular_E.html";"7824"
"2533";"Logical Operators";;"135";"Logical_Operators.html";"27299"
"2534";"Manipulating Arrays";;"135";"Manipulating_Arrays.html";"22541"
"2535";"Mathematical Operators";;"135";"Mathematical_Operators.html";"41563"
"2536";"Matrix Operators";;"135";"Matrix_Operators.html";"60400"
"2537";"Minimum and Maximum Operators";;"135";"Minimum_and_Maximum_Oper.html";"7992"
"2538";"Operations on Pointers";;"135";"Operations_on_Pointers.html";"22367"
"2539";"Operator Precedence";;"135";"Operator_Precedence.html";"12599"
"2540";"Other Operators";;"135";"Other_Operators.html";"9651"
"2541";"Pointer Examples";;"135";"Pointer_Examples.html";"5852"
"2542";"Reading and Writing FORTRAN Data";;"135";"Reading_and_Writing_FORT.html";"54433"
"2543";"Relational Operators";;"135";"Relational_Operators.html";"35387"
"2544";"Relaxed Structure Assignment";;"135";"Relaxed_Structure_Assign.html";"16214"
"2545";"String Operations";;"135";"String_Operations.html";"23880"
"2546";"Structure References";;"135";"Structure_References.html";"30286"
"2547";"Substrings";;"135";"Substrings.html";"12306"
"2548";"The Null Variable";;"135";"The_Null_Variable.html";"36992"
"2549";"Type Conversion Functions";;"135";"Type_Conversion_Function.html";"8499"
"2550";"Understanding Array Subscripts";;"135";"Understanding_Array_Subs.html";"20728"
"2551";"Understanding (LUNs)";;"135";"Understanding__LUNs_.html";"4850"
"2552";"Using Arrays as Array Subscripts";;"135";"Using_Arrays_as_Array_Su.html";"20558"
"2553";"Using Explicitly Formatted Input/Output";;"135";"Using_Explicitly_Formatt.html";"29189"
"2554";"Using HELP with Structures";;"135";"Using_HELP_with_Structur.html";"5935"
"2555";"Using Scalar Values as Array Subscripts";;"135";"Using_Scalar_Values_as_A.html";"12771"
"2556";"About Button Widgets";;"135";"About_Button_Widgets.html";"6710"
"2557";"About Draw Widgets";;"135";"About_Draw_Widgets.html";"7006"
"2558";"About Property Sheet Widgets";;"135";"About_Property_Sheet_Wid.html";"4531"
"2559";"About Runtime Distributions";;"135";"About_Runtime_Distributi.html";"4216"
"2560";"About Tab Widgets";;"135";"About_Tab_Widgets.html";"6139"
"2561";"About Table Widgets";;"135";"About_Table_Widgets.html";"5191"
"2562";"About Tree Widgets";;"135";"About_Tree_Widgets.html";"4877"
"2563";"About Widget Applications";;"135";"About_Widget_Application.html";"6104"
"2564";"About Widgets";;"135";"About_Widgets.html";"6456"
"2565";"Accessing Draw Widget Events";;"135";"Accessing_Draw_Widget_Ev.html";"6127"
"2566";"Bitmap Button Labels";;"135";"Bitmap_Button_Labels.html";"7395"
"2567";"Changing Properties";;"135";"Changing_Properties.html";"4261"
"2568";"Context Events in Draw Widgets";;"135";"Context_Events_in_Draw_W.html";"3329"
"2569";"Creating Menus";;"135";"Creating_Menus.html";"10025"
"2570";"Creating a Compound Widget";;"135";"Creating_a_Compound_Widg.html";"6246"
"2571";"Debugging Widget Applications";;"135";"Debugging_Widget_Applica.html";"4510"
"2572";"Default Table Size";;"135";"Default_Table_Size.html";"5135"
"2573";"Dragging and Dropping Tree Nodes";;"135";"Dragging_and_Dropping_Tr.html";"11301"
"2574";"Draw Widget Example";;"135";"Draw_Widget_Example.html";"7184"
"2575";"Enhancing Widget Application Usability";;"135";"Enhancing_Widget_Applica.html";"8184"
"2576";"Example: A Simple Tab Widget";;"135";"Example__A_Simple_Tab_Wi.html";"5735"
"2577";"Example: A Simple Tree";;"135";"Example__A_Simple_Tree.html";"5211"
"2578";"Example: A Simple Widget Application";;"135";"Example__A_Simple_Widget.html";"7293"
"2579";"Example: Compound Widget";;"135";"Example__Compound_Widget.html";"7501"
"2580";"Example: Event Processing and User Values";;"135";"Example__Event_Processin.html";"6276"
"2581";"Example: Retrieving Values";;"135";"Example__Retrieving_Valu.html";"5070"
"2582";"Example: Single Data Type Data in a Table Widget";;"135";"Example__Single_Data_Typ.html";"6007"
"2583";"Example: Structure Data in a Table Widget";;"135";"Example__Structure_Data.html";"7682"
"2584";"Exclusive and Non-Exclusive Buttons";;"135";"Exclusive_and_Non_Exclus.html";"7204"
"2585";"GUI Programming";;"135";"GUI_programming.html";"505"
"2586";"Implementing Drag and Drop Functionality";;"135";"Implementing_Drag_and_Dr.html";"6662"
"2587";"Making a Tree Entry Visible";;"135";"Making_a_Tree_Entry_Visi.html";"4997"
"2588";"Managing Application State";;"135";"Managing_Application_Sta.html";"5496"
"2589";"Manipulating Widgets";;"135";"Manipulating_Widgets.html";"7538"
"2590";"Multiple Properties Example";;"135";"Multiple_Properties_Exam.html";"4573"
"2591";"Positioning Tree Nodes";;"135";"Positioning_Tree_Nodes.html";"7965"
"2592";"Property Sheet Example";;"135";"Property_Sheet_Example.html";"5095"
"2593";"Property Sheet Sizing";;"135";"Property_Sheet_Sizing.html";"4664"
"2594";"Providing Help Within the User Interface";;"135";"Providing_Help_Within_th.html";"3646"
"2595";"Registering Properties";;"135";"Registering_Properties.html";"4303"
"2596";"Replacing the Default Bitmaps";;"135";"Replacing_the_Default_Bi.html";"7370"
"2597";"Scrolling Draw Widgets";;"135";"Scrolling_Draw_Widgets.html";"8137"
"2598";"Selecting Properties";;"135";"Selecting_Properties.html";"4465"
"2599";"Setting the Tree Selection State";;"135";"Setting_the_Tree_Selecti.html";"4693"
"2600";"Tab Sizing and Multiline Behavior";;"135";"Tab_Sizing_and_Multiline.html";"4912"
"2601";"Table Widget Cell Attributes";;"135";"Table_Widget_Cell_Attrib.html";"6377"
"2602";"Table Widget Data Retrieval";;"135";"Table_Widget_Data_Retrie.html";"4618"
"2603";"Table Widget Data Types";;"135";"Table_Widget_Data_Types.html";"4626"
"2604";"Table Widget Edit Mode";;"135";"Table_Widget_Edit_Mode.html";"5439"
"2605";"Table Widget Selection Modes";;"135";"Table_Widget_Selection_M.html";"5353"
"2606";"Tips on Creating Widget Applications";;"135";"Tips_on_Creating_Widget.html";"5694"
"2607";"Tooltips";;"135";"Tooltips.html";"5193"
"2608";"Tree Widget Drag and Drop Examples";;"135";"Tree_Widget_Drag_and_Dro.html";"5765"
"2609";"Types of Tree Widgets";;"135";"Types_of_Tree_Widgets.html";"4407"
"2610";"Types of Widgets";;"135";"Types_of_Widgets.html";"4244"
"2611";"User Interface Options in IDL";;"135";"User_Interface_Options_i.html";"4588"
"2612";"User-defined Properties";;"135";"User_defined_Properties.html";"4738"
"2613";"Using_Direct_Graphics_in";;"135";"Using_Direct_Graphics_in.html";"3370"
"2614";"Using Multiple Widget Hierarchies";;"135";"Using_Multiple_Widget_Hi.html";"5932"
"2615";"Using Object Graphics in Draw Widgets";;"135";"Using_Object_Graphics_in.html";"3937"
"2616";"Using Tree Widget Checkboxes";;"135";"Using_Tree_Widget_Checkboxes.html";"6793"
"2617";"Widget Application Techniques";;"135";"Widget_Application_Techniques.html";"6340"
"2618";"Widget Application Lifecycle";;"135";"Widget_Application_Lifec.html";"4514"
"2619";"Widget Event Processing";;"135";"Widget_Event_Processing.html";"9671"
"2620";"Widget Programming Concepts";;"135";"Widget_Programming_Conce.html";"12628"
"2621";"Widget User Values";;"135";"Widget_User_Values.html";"4895"
"2622";"Working With Widget IDs";;"135";"Working_With_Widget_IDs.html";"6976"
"2623";"Working with Widget Events";;"135";"Working_with_Widget_Even.html";"9741"
"2624";"Callable IDL Applications";;"135";"CallableIDLApplicationsIntro.html";"6038"
"2625";"Creating a Callable IDL Application Distribution";;"135";"CreatingCallableIDLApplicationDistribution.html";"5695"
"2626";"Licensing Options for Callable IDL Applications";;"135";"LicensingOptionsCallable.html";"5565"
"2627";"Preferences for Callable IDL Applications";;"135";"PreferencesCallableIDLApplications.html";"4156"
"2628";"Starting a Callable IDL Application";;"135";"StartingCallableIDLApplication.html";"4753"
"2629";"Creating a Distribution Using MAKE_RT";;"135";"CreatingDistributionUsingMAKE_RT.html";"11528"
"2630";"Create a Runtime Distribution";;"135";"CreatingRuntimeDistributionIntro.html";"5868"
"2631";"Distributing Runtime Applications on Removable Media";;"135";"DistributingRuntimeApplicationsOnRemovableMedia.html";"26067"
"2632";"Runtime Application Launch Scripts";;"135";"RuntimeApplicationLaunchScripts.html";"8488"
"2633";"Working with the manifest_rt.txt File";;"135";"WorkingWithManifestFile.html";"5871"
"2634";"Distributing IDL Applications";;"135";"DistributingIDLApplications.html";"5696"
"2635";"Creating an Application Distribution";;"135";"CreatingApplicationDistributionRuntime.html";"5269"
"2636";"Distributing Runtime Mode Applications";;"135";"DistributingRuntimeModeApplicationsIntro.html";"7656"
"2637";"Installing Your Application";;"135";"InstallingYourApplication.html";"4774"
"2638";"Licensing Options for Runtime Mode Applications";;"135";"LicensingOptions.html";"28944"
"2639";"Limitations of Runtime Applications";;"135";"LimitationsRuntimeApplications.html";"5464"
"2640";"Preferences for Runtime Applications";;"135";"PreferencesRuntimeApplications.html";"5193"
"2641";"Runtime Mode Applications";;"135";"RuntimeModeApplicationsIntro.html";"2021"
"2642";"Starting a Runtime Application";;"135";"StartingRuntimeApplication.html";"7771"
"2643";"Limitations of Virtual Machine Applications";;"135";"LimitationsOfVirtualMachineApplications.html";"7888"
"2644";"Preferences for Virtual Machine Applications";;"135";"PreferencesVirtualMachineApplications.html";"6026"
"2645";"Starting a Virtual Machine Application";;"135";"StartingVirtualMachineApplication.html";"10604"
"2646";"Virtual Machine Applications";;"135";"VirtualMachineApplicationsIntro.html";"25618"
"2647";"Environment Variables";;"135";"Environment_Variables.html";"11103"
"2648";"Error Handling";;"135";"Error_Handling.html";"0"
"2649";"Extending ENVI with IDL";;"135";"Extending_ENVI_with_IDL.html";"6168"
"2650";"Fonts and Colors";;"135";"Fonts_and_Colors.html";"6351"
"2651";"IDL Features to Help You Develop Code";;"135";"IDL_Features_to_Help_You_Develop_Code.html";"10036"
"2652";"Procedures, Functions, SAVE Files";;"135";"IDL_Program_Types.html";"7743"
"2653";"IDL Compile Order";;"135";"ChangingCompileOrder.html";"6118"
"2654";"Creating IDL Projects";;"135";"CreatingProjects.html";"7933"
"2655";"ENVI Extension Wizard";;"135";"ENVIExtensionWizard.html";"7282"
"2656";"IDL Build Properties";;"135";"IDLBuildProperties.html";"7053"
"2657";"IDL Project Properties";;"135";"IDLProjectProperties.html";"6069"
"2658";"IDL Path Management with Projects";;"135";"PathManagementWithProjects.html";"5047"
"2659";"Building IDL Projects";;"135";"ProjectBuildConcepts.html";"8056"
"2660";"Running IDL Projects";;"135";"ProjectRunConcepts.html";"7202"
"2661";"Projects";;"135";"Projects.html";"5818"
"2662";"Internationalizing Code";;"135";"Internationalizing_Code.html";"9688"
"2663";"Managing IDL Paths";;"135";"Managing_IDL_Paths.html";"30487"
"2664";"Operators";;"135";"Operators.html";"7550"
"2665";"IDL Syntax";;"135";"IDL_Syntax.html";"11747"
"2666";"Running the Example Code";;"135";"Running_the_Example_Code.html";"260"
"2667";"Program Control";;"135";"Program_Control.html";"6545"
"2670";"Using Breakpoints";;"135";"Using_Breakpoints.html";"2019"
"2671";"Variables";;"135";"Variables.html";"6624"
"2672";"Workspaces";;"135";"Workspaces.html";"7208"
"2673";"DICOM Attributes";;"135";"DICOMAttributes.html";"10610"
"2674";"Value Representations";;"135";"ValueRepresentations.html";"8150"
"2675";"Compliance with the DICOM Standard";;"135";"ComplianceWithDICOMStandard.html";"4803"
"2676";"DICOM Platform Support and Licensing";;"135";"DICOMPlatformSupportLicensing.html";"8687"
"2677";"Expanded DICOM Functionality in IDL";;"135";"ExpandedDICOMFunctionality.html";"7098"
"2683";"IDLffDicomExCfg::Cleanup";"Performs all cleanup on the object.";"7";"IDLffDicomExCfg__Cleanup.html";"4943"
"2684";"IDLffDicomExCfg::Commit";"Commits changes made to the object and saves them to the underlying configuration file.";"7";"IDLffDicomExCfg__Commit.html";"4943"
"2685";"IDLffDicomExCfg::Echo";"Lets you test the network connection to a remote machine that supports Query SCP or Storage SCP service types.";"7";"IDLffDicomExCfg__Echo.html";"5898"
"2686";"IDLffDicomExCfg::GetApplicationEntities";"Returns an array of structures containing the definitions of all the application entities defined or all the application entities of a specified service type.";"7";"IDLffDicomExCfg__GetApplicationEntities.html";"3928"
"2687";"IDLffDicomExCfg::GetApplicationEntity";"Returns a structure containing the parameters for a specific Application Entity.";"7";"IDLffDicomExCfg__GetApplicationEntity.html";"4455"
"2688";"IDLffDicomExCfg::GetServiceLists";"Returns an array of strings containing the names of the service lists that can be assigned to an Application Entity.";"7";"IDLffDicomExCfg__GetServiceLists.html";"4223"
"2689";"IDLffDicomExCfg::GetServiceTypes";"Returns an array of strings containing the list of service types that can be assigned to an Application Entity.";"7";"IDLffDicomExCfg__GetServiceTypes.html";"4124"
"2690";"IDLffDicomExCfg::GetValue";"Returns the value for the specified parameter.";"7";"IDLffDicomExCfg__GetValue.html";"4219"
"2691";"IDLffDicomExCfg::Init";"Initializes the object.";"7";"IDLffDicomExCfg__Init.html";"4613"
"2692";"IDLffDicomExCfg::IsDirty";"Used to determine if configuration values have been changed since the configuration file was read into the configuration object.";"7";"IDLffDicomExCfg__IsDirty.html";"4189"
"2693";"IDLffDicomExCfg::RemoveApplicationEntity";"Marks a specified Application Entity for removal from the collection of application entities.";"7";"IDLffDicomExCfg__RemoveApplicationEntity.html";"3813"
"2694";"IDLffDicomExCfg::SetApplicationEntity";"Defines a new Application Entity or modifies the definition of an existing Application Entity.";"7";"IDLffDicomExCfg__SetApplicationEntity.html";"4018"
"2695";"IDLffDicomExCfg::SetValue";"Sets the value for the specified parameter.";"7";"IDLffDicomExCfg__SetValue.html";"4263"
"2696";"IDLffDicomExCfg::StorageScpService";"Used to start, stop or check the status of the local IDL Storage SCP service.";"7";"IDLffDicomExCfg__StorageScpService.html";"4907"
"2697";"IDLffDicomEx Overview";;"7";"IDLffDicomExOverview.html";"6681"
"2698";"IDLffDicomEx Properties";;"7";"IDLffDicomExProperties.html";"5520"
"2699";"IDLffDicomExQuery Properties";;"7";"IDLffDicomExQuery_Properties.html";"3625"
"2701";"IDLffDicomExQuery::Cleanup";"Performs all cleanup on the object.";"7";"IDLffDicomExQuery__Cleanup.html";"4102"
"2702";"IDLffDicomExQuery::ClearProperties";"Used to reset the values of all properties of the IDLffDicomExQuery object to their default values.";"7";"IDLffDicomExQuery__ClearProperties.html";"3859"
"2703";"IDLffDicomExQuery::GetProperty";"Retrieves the value of a property or group of properties for the object.";"7";"IDLffDicomExQuery__GetProperty.html";"4004"
"2704";"IDLffDicomExQuery::Init";"Initializes the object.";"7";"IDLffDicomExQuery__Init.html";"4706"
"2705";"IDLffDicomExQuery::Query";"Used to query a remote Query/Retrieve SCP Application Entity.";"7";"IDLffDicomExQuery__Query.html";"4473"
"2706";"IDLffDicomExQuery::QueryModelsSupported";"Used to determine what Query/Retrieve services are supported by Query/Retrieve SCP Application Entity defined by the QUERY_SCP property.";"7";"IDLffDicomExQuery__QueryModelsSupported.html";"4323"
"2707";"IDLffDicomExQuery::Retrieve";"Moves a DICOM file or files from a source node to a destination node.";"7";"IDLffDicomExQuery__Retrieve.html";"4884"
"2708";"IDLffDicomExQuery::SetProperty";"Sets the value of a property or group of properties for the object.";"7";"IDLffDicomExQuery__SetProperty.html";"3964"
"2710";"IDLffDicomExStorScu Properties";;"7";"IDLffDicomExStorScuProperties.html";"4247"
"2711";"IDLffDicomExStorScu::Cleanup";"Performs all cleanup on the object.";"7";"IDLffDicomExStorScu__Cleanup.html";"3904"
"2712";"IDLffDicomExStorScu::ClearProperties";"Resets the values of all properties of the IDLffDicomExStorScu object to their default values.";"7";"IDLffDicomExStorScu__ClearProperties.html";"4350"
"2713";"IDLffDicomExStorScu::GetProperty";"Retrieves the value of a property or group of properties for the object.";"7";"IDLffDicomExStorScu__GetProperty.html";"3949"
"2714";"IDLffDicomExStorScu::Init";"Initializes the object.";"7";"IDLffDicomExStorScu__Init.html";"4400"
"2715";"IDLffDicomExStorScu::Send";"Transfers DICOM files to a remote Storage SCP node.";"7";"IDLffDicomExStorScu__Send.html";"9514"
"2716";"IDLffDicomExStorScu::SetProperty";"Sets the value of a property or group of properties for the object.";"7";"IDLffDicomExStorScu__SetProperty.html";"4029"
"2717";"IDLffDicomEx::AddGroup";"Creates a series of repeating tags within a sequence.";"7";"IDLffDicomEx__AddGroup.html";"5850"
"2718";"IDLffDicomEx::AddPrivateGroup";"Creates a group within a private sequence.";"7";"IDLffDicomEx__AddPrivateGroup.html";"5156"
"2719";"IDLffDicomEx::AddPrivateSequence";"Creates a new private sequence.";"7";"IDLffDicomEx__AddPrivateSequence.html";"9020"
"2720";"IDLffDicomEx::AddSequence";"Creates a new sequence.";"7";"IDLffDicomEx__AddSequence.html";"5608"
"2721";"IDLffDicomEx::ChangeTransferSyntax";"Changes the transfer syntax of the IDLffDicomEx object and its associated pixel data.";"7";"IDLffDicomEx__ChangeTransferSyntax.html";"5723"
"2722";"IDLffDicomEx::Cleanup";"Performs all cleanup on the object.";"7";"IDLffDicomEx__Cleanup.html";"4318"
"2723";"IDLffDicomEx::Commit";"Writes changes to the underlying DICOM file.";"7";"IDLffDicomEx__Commit.html";"4737"
"2724";"IDLffDicomEx::CopyTags";"Copies all the tags from the source object to the destination object beginning with the DICOM attribute tag specified by the Start_Tag and copying up to the Stop_Tag.";"7";"IDLffDicomEx__CopyTags.html";"5067"
"2725";"IDLffDicomEx::EnumerateTags";"Returns an array of structures representing the contents of the DICOM file.";"7";"IDLffDicomEx__EnumerateTags.html";"5342"
"2726";"IDLffDicomEx::GetDescription";"Returns the description associated with a public DICOM attribute specified by a standard DICOM attribute tag.";"7";"IDLffDicomEx__GetDescription.html";"4492"
"2727";"IDLffDicomEx::GetPixelData";"Returns the uncompressed pixel data from the DICOM image file.";"7";"IDLffDicomEx__GetPixelData.html";"5824"
"2728";"IDLffDicomEx::GetPrivateVR";"Returns the Value Representation (VR) of a private DICOM attribute.";"7";"IDLffDicomEx__GetPrivateVR.html";"4727"
"2729";"IDLffDicomEx::GetPrivateValue";"Returns the value of a private DICOM attribute using a private code defined by the author of the private tag, a group number and part of the element tag instead of a standard DICOM attribute tag.";"7";"IDLffDicomEx__GetPrivateValue.html";"4444"
"2730";"IDLffDicomEx::GetPrivateValueCount";"Returns the number of values contained in the value field of a private DICOM attribute.";"7";"IDLffDicomEx__GetPrivateValueCount.html";"4638"
"2731";"IDLffDicomEx::GetPrivateValueLength";"Returns the length of all values or of a specified value (in bytes) in a private DICOM attribute.";"7";"IDLffDicomEx__GetPrivateValueLength.html";"4541"
"2732";"IDLffDicomEx::GetProperty";"Retrieves the value of a property or group of properties for the object.";"7";"IDLffDicomEx__GetProperty.html";"4624"
"2733";"IDLffDicomEx::GetVR";"Returns the Value Representation (VR) of a DICOM attribute.";"7";"IDLffDicomEx__GetVR.html";"4491"
"2734";"IDLffDicomEx::GetValue";"Returns the value of a DICOM attribute specified by a standard DICOM attribute tag.";"7";"IDLffDicomEx__GetValue.html";"4995"
"2735";"IDLffDicomEx::GetValueCount";"Returns the number of values in a DICOM attribute specified by a standard DICOM attribute tag.";"7";"IDLffDicomEx__GetValueCount.html";"4274"
"2736";"IDLffDicomEx::GetValueLength";"Returns the length of all values or of a specified value (in bytes) in a standard DICOM attribute.";"7";"IDLffDicomEx__GetValueLength.html";"4581"
"2737";"IDLffDicomEx::Init";"Initializes the object.";"7";"IDLffDicomEx__Init.html";"20407"
"2738";"IDLffDicomEx::QueryPrivateValue";"Checks a DICOM file for the presence of a specified private attribute.";"7";"IDLffDicomEx__QueryPrivateValue.html";"4779"
"2739";"IDLffDicomEx::QueryValue";"Checks a DICOM file for the presence of a specified attribute.";"7";"IDLffDicomEx__QueryValue.html";"5042"
"2740";"IDLffDicomEx::SetPixelData";"Writes pixel data to the DICOM image file.";"7";"IDLffDicomEx__SetPixelData.html";"9297"
"2741";"IDLffDicomEx::SetPrivateValue";"Allows you to add and alter private attributes including items contained in sequences.";"7";"IDLffDicomEx__SetPrivateValue.html";"5429"
"2742";"IDLffDicomEx::SetProperty";"Sets the value of a property or group of properties for the object.";"7";"IDLffDicomEx__SetProperty.html";"4392"
"2743";"IDLffDicomEx::SetValue";"Allows you to add and alter attributes including items contained in sequences.";"7";"IDLffDicomEx__SetValue.html";"5901"
"2744";"About the Storage SCP Service";;"135";"AboutStorageSCPServer.html";"6172"
"2745";"Build or Modify a Custom Query";;"135";"BuildOrModifyCustomQuery.html";"4666"
"2746";"Completing Required Setup Tasks";;"135";"CompletingRequiredSetup.html";"3532"
"2747";"Configure Query SCU Service Properties";;"135";"ConfigureQuerySCUServiceProperties.html";"4492"
"2748";"Configuring an Application Entity";;"135";"ConfiguringApplicationEntity.html";"4422"
"2749";"Configuring Your System to Receive Files";;"135";"ConfiguringSystemToReceiveFiles.html";"5639"
"2750";"DICOM Network Services User Interface";;"135";"DICOMUserInterface.html";"6636"
"2751";"Default Application Entities";;"135";"DefaultApplicationEntities.html";"4514"
"2752";"Defining a Machine to Be Queried";;"135";"DefiningMachineToBeQueried.html";"5803"
"2753";"Defining a New Application Entity";;"135";"DefiningNewApplicationEntity.html";"4428"
"2754";"Defining the Remote Storage SCP Node";;"135";"DefiningRemoteStorageSCPNode.html";"5784"
"2755";"Deleting an Application Entity";;"135";"DeletingApplicationEntity.html";"4555"
"2756";"Determining Configuration Parameters";;"135";"DeterminingConfigurationParameters.html";"4703"
"2757";"Local Versus System Configuration";;"135";"LocalVersusSystemConfiguration.html";"5214"
"2758";"Managing the Storage SCP Service";;"135";"ManagingStorageSCPService.html";"5123"
"2759";"Modifying an Application Entity";;"135";"ModifyingApplicationEntity.html";"4108"
"2760";"Overview of DICOM Network Services";;"135";"Overview.html";"9437"
"2761";"Query the Remote Node";;"135";"QueryRemoteNode.html";"10396"
"2762";"Querying a Remote Machine";;"135";"QueryingRemoteMachine.html";"4836"
"2763";"Retrieve Files from a Remote Node";;"135";"RetrieveFilesFromRemoteNode.html";"4309"
"2764";"Returning Connection Status with Echo";;"135";"ReturningConnectionStatusWithEcho.html";"5567"
"2765";"Sending Files to a Remote Destination";;"135";"SendingFilesToRemoteDestination.html";"5411"
"2766";"Sending Files to a Remote Machine";;"135";"SendingFilesToRemoteMachine.html";"4689"
"2767";"Starting the DICOM Network Services Utility in Local Mode";;"135";"StartingInLocalMode.html";"4338"
"2768";"Starting the DICOM Network Services Utility in System Mode";;"135";"StartingInSystemMode.html";"5339"
"2769";"Starting the Network Services Utility";;"135";"StartingNetworkServer.html";"4735"
"2770";"Starting and Stopping the Service Outside the Utility";;"135";"StartingStoppingServiceOutsideUtility.html";"3076"
"2771";"Storage SCP Service Log Files";;"135";"StorageSCPServiceLogFiles.html";"8579"
"2772";"Storage SCP Service Permissions";;"135";"StorageSCPServicePermissions.html";"3482"
"2773";"Troubleshooting a Retrieval Operation";;"135";"TroubleshootingRetrievalOperation.html";"6044"
"2774";"Troubleshooting a Send Operation";;"135";"TroubleshootingSendOperation.html";"3141"
"2775";"Color Tables in Direct Graphics";;"135";"Color_tables_in_direct_graphics.html";"8609"
"2776";"Coordinate Conversions";;"135";"Coordinate_Conversions.html";"2784"
"2777";"Programming with Direct Graphics";;"135";"DG_Programming.html";"330"
"2778";"Fonts in IDL Direct Graphics";;"135";"Fonts_in_IDL_Direct_Grap.html";"2814"
"2779";"Direct Graphics System Variables";;"135";"Graphics_System_Variable.html";"439"
"2780";"Keywords Accepted by the IDL Devices";;"135";"Keywords_Accepted_by_the.html";"263153"
"2781";"Loading a Default Color Table";;"135";"Loading_a_Default_Color.html";"3688"
"2782";"Multi-Monitor Configurations";;"135";"Multi_Monitor_Configurat.html";"3968"
"2783";"Supported Devices";;"135";"Supported_Devices.html";"31309"
"2784";"Direct Graphics Keywords";;"135";"graphkeyw.html";"133140"
"2785";"IDL Graphics vs. Direct Graphics";;"135";"intro.html";"481"
"2787";"File Formats";;"135";"File_Formats.html";"8581"
"2788";"Graphics Examples";;"135";"visualize.html";"45199"
"2789";"Getting Started";;"135";"Getting_Started.html";"17164"
"2791";"Axes";;"135";"Axes.html";"11710"
"2793";"Filled Contours";;"135";"contourFill.html";"11728"
"2794";"Graphics Annotations";;"135";"Displaying_graphics_annotations.html";"12758"
"2796";"Binary Image Data";;"135";"ImageFromData.html";"10278"
"2797";"Contours on an Image";;"135";"ImageWithContour.html";"37425"
"2798";"Map Boundaries";;"135";"MappingContinents.html";"6831"
"2799";"Saving Graphics";;"135";"SaveImage.html";"24766"
"2800";"Save Images as KML Files";;"135";"SaveKML.html";"11035"
"2801";"Viewing an Image";;"135";"ViewAnImage.html";"13464"
"2802";"Map Images";;"135";"image_map.html";"8863"
"2803";"Map with Contours";;"135";"mapContour.html";"9577"
"2804";"Map Projections";;"135";"mapProjections.html";"39487"
"2805";"Fast Fourier Transform (FFT) Background";;"135";"BackgroundFastFourierTransform.html";"27337"
"2806";"Detect Edges";;"135";"DetectEdges.html";"15245"
"2807";"Apply Directional Filters";;"135";"DirectionalFilters.html";"11146"
"2808";"Fast Fourier Transform";;"135";"FFTReduceBackgroundNoise.html";"28043"
"2809";"High Pass Filtering";;"135";"HighPassFilter.html";"8714"
"2810";"Image Filters";;"135";"Image_Filters.html";"8307"
"2811";"Image Types";;"135";"Image_Types.html";"11647"
"2812";"Apply Laplacian Filters";;"135";"LaplacianFilters.html";"9535"
"2813";"Low Pass Filtering";;"135";"LowPassFilter.html";"11284"
"2814";"Noise Filter";"Introduces noise into an image by selecting random pixels to be replaced by a neighboring pixel from a random location in the row above.";"135";"RemovingNoise.html";"8240"
"2815";"Resize Image Arrays";;"135";"ResizingImageArrays.html";"13786"
"2816";"Sharpen Images";;"135";"SharpenImages.html";"10133"
"2817";"Shift Image Arrays";;"135";"ShiftingImageArrays.html";"9368"
"2818";"Smooth Images";;"135";"SmoothImages.html";"12515"
"2819";"Scale and Rotate  Images";;"135";"Zoom_and_Rotate_an_Image.html";"10450"
"2820";"Add Graphics to a Widget Application";;"135";"IncludeGraphicInApp.html";"8023"
"2821";"Creating Keyboard Event Functions";;"135";"KeyboardEventFunctions.html";"4202"
"2822";"Legends";;"135";"Legend_add.html";"21850"
"2823";"Creating Mouse Event Functions";;"135";"MouseEventFunctions.html";"7518"
"2824";"Multiple Graphics in One Window";;"135";"MultiViz.html";"32814"
"2825";"Line Plots";;"135";"LinePlot.html";"17078"
"11456";"Scatterplots";;"135";"Scatterplots.html";"17902"
"2828";"BARPLOT Shading and Stacking";;"135";"barplot_more_examples.html";"7083"
"2829";"Error Plots";;"135";"errorPlots.html";"8577"
"2830";"Two-Dimensional Plots";;"135";"plot_2d.html";"13206"
"2831";"Three-Dimensional Plots";;"135";"plot_3d.html";"22971"
"2833";"Creating Selection Change Event Handlers";;"135";"Selection_Change_Event_Handler.html";"2504"
"11458";"COLOR_BAR_24_KPB";"Plot a 24-bit color bar.";"151";"color_bar_24_kpb.html";"185"
"2835";"Surface with Contour Lines";;"135";"surfaceContour.html";"19522"
"2836";"Global Digital Elevation Model";;"135";"surface_world.html";"6258"
"2837";"Using IDL Graphics";;"135";"Using_IDL_Graphics.html";"22221"
"2841";"Draw Multi-Sided Shapes";;"135";"polygons.html";"8863"
"2842";"Draw Lines and Arrows";;"135";"polylines.html";"8186"
"2843";"Change Graphics Properties";;"135";"propChanges.html";"11938"
"2844";"Text and Symbols";;"135";"text_annotations.html";"11603"
"2845";"Mathematical Symbols and Greek Letters";;"135";"titles_tex_syntax.html";"24492"
"2846";"IDL Concepts";;"135";"IDL_Concepts.html";"10397"
"2847";"Close Method";;"135";"Close_Method.html";"11456"
"2848";"ConvertCoord Method";;"135";"ConvertCoord_Method.html";"8533"
"2849";"CopyWindow Method";;"135";"CopyWindow_Method.html";"7767"
"2850";"Delete Method";;"135";"Delete_Method.html";"9448"
"2851";"Erase Method";;"135";"Erase_Method.html";"8681"
"2852";"Formatting IDL Graphics Symbols and Lines";;"135";"FormattingSymsAndLines.html";"75807"
"2853";"GetData Method";;"135";"GetData_Method.html";"10205"
"2854";"GetSelect Method";;"135";"GetSelect_Method.html";"5966"
"2855";"GetValueAtLocation Method";;"135";"GetValueAtLocation_Method.html";"5652"
"2856";"HitTest Method";;"135";"HitTestMethod.html";"5182"
"2858";"Legend Add Method";;"135";"LegendAdd_Method.html";"8254"
"2859";"Legend Remove Method";;"135";"LegendRemove_Method.html";"16685"
"2860";"MapForward Method";;"135";"MapForward_Method.html";"7676"
"2861";"MapInverse Method";;"135";"MapInverse_Method.html";"5868"
"2862";"Order Method";;"135";"Order_Method.html";"6259"
"2863";"Print Method";;"135";"Print_Method.html";"6691"
"2864";"Refresh Method";;"135";"Refresh_Method.html";"10177"
"2865";"Rotate Method";;"135";"Rotate_Method.html";"11617"
"2866";"Save Method";;"135";"Save_Method.html";"24027"
"2867";"Scale Method";;"135";"Scale_Method.html";"8793"
"2868";"Select Method";;"135";"Select_Method.html";"6685"
"2869";"SetCurrent Method";;"135";"SetCurrent_Method.html";"7745"
"2870";"SetData Method";;"135";"SetData_Method.html";"7326"
"2871";"Show Method";;"135";"Show_Method.html";"6319"
"2872";"Translate Method";;"135";"Translate_Method.html";"8320"
"2873";"IDL Programming";;"135";"IDL_Programming.html";"62052"
"2874";"IDL Feature Support";;"135";"IDLFeatureSupport.html";"5802"
"2875";"IDL Execution Options";;"135";"IDL_execution_options.html";"9869"
"2876";"Code Comments";;"135";"Code_Comments.html";"19614"
"2877";"Formatting IDLdoc Comment Blocks";;"135";"Formatting_IDLdoc_Commen.html";"9396"
"2878";"Advanced Code Commenting with IDLdoc";;"135";"IDLdoc.html";"5362"
"2879";"IDLdoc Comment Tags";;"135";"IDLdoc_Comment_Tags.html";"8087"
"2880";"IDLdoc Resources";;"135";"IDLdoc_Resources.html";"6441"
"2881";"Using IDLdoc to Generate Documentation";;"135";"Using_IDLdoc_to_Generate.html";"7785"
"2882";"Copyright Acknowledgments";;"135";"copyrights.html";"510"
"2883";"Legal Notices";;"135";"legal_notices.html";"401"
"2884";"Loading Default Color Tables";;"135";"LoadingDefaultColorTables.html";"69288"
"2885";"IDLanROI";"Represents a region of interest used for analysis.";"67";"IDLanROI.html";"4947"
"2886";"IDLanROIGroup";"Analytical representation of a group of regions of interest.";"67";"IDLanROIGroup.html";"3238"
"2887";"IDLanROIGroup Properties";;"67";"IDLanROIGroup_Properties.html";"2188"
"2888";"IDLanROIGroup::Add";"Adds a child to the object.";"67";"IDLanROIGroup__Add.html";"2647"
"2889";"IDLanROIGroup::Cleanup";"Performs all cleanup on the object.";"67";"IDLanROIGroup__Cleanup.html";"1996"
"2890";"IDLanROIGroup::ComputeMask";"Prepares a two-dimensional mask for this group of regions.";"67";"IDLanROIGroup__ComputeMa.html";"3607"
"2891";"IDLanROIGroup::ComputeMesh";"Triangulates a surface mesh with optional capping from the stack of regions contained within this group.";"67";"IDLanROIGroup__ComputeMe.html";"2575"
"2892";"IDLanROIGroup::ContainsPoints";"Determines whether the given points (in data coordinates) are contained within this region group.";"67";"IDLanROIGroup__ContainsP.html";"2859"
"2893";"IDLanROIGroup::GetProperty";"Retrieves the value of a property or group of properties for the object.";"67";"IDLanROIGroup__GetProper.html";"2227"
"2894";"IDLanROIGroup::Init";"Initializes the object.";"67";"IDLanROIGroup__Init.html";"2326"
"2895";"IDLanROIGroup::Rotate";"Modifies the vertices for all regions within the group by applying a rotation.";"67";"IDLanROIGroup__Rotate.html";"2156"
"2896";"IDLanROIGroup::Scale";"Modifies the vertices for the region by applying a scale.";"67";"IDLanROIGroup__Scale.html";"2085"
"2897";"IDLanROIGroup::Translate";"Modifies the vertices of all regions within the group by applying a translation.";"67";"IDLanROIGroup__Translate.html";"2163"
"2898";"IDLanROI Properties";;"67";"IDLanROI_Properties.html";"3214"
"2899";"IDLanROI::AppendData";"Appends vertices to the region.";"67";"IDLanROI__AppendData.html";"2204"
"2900";"IDLanROI::Cleanup";"Performs all cleanup on the object.";"67";"IDLanROI__Cleanup.html";"2412"
"2901";"IDLanROI::ComputeGeometry";"Computes the geometrical values for area, perimeter, and/or centroid of the region.";"67";"IDLanROI__ComputeGeometr.html";"3429"
"2902";"IDLanROI::ComputeMask";"Prepares a two-dimensional mask for the region.";"67";"IDLanROI__ComputeMask.html";"4998"
"2903";"IDLanROI::ContainsPoints";"Determines whether the given data coordinates are contained within the closed polygon region.";"67";"IDLanROI__ContainsPoints.html";"3326"
"2904";"IDLanROI::GetProperty";"Retrieves the value of a property or group of properties for the object.";"67";"IDLanROI__GetProperty.html";"2440"
"2905";"IDLanROI::Init";"Initializes the object.";"67";"IDLanROI__Init.html";"2796"
"2906";"IDLanROI::RemoveData";"Removes vertices from the region.";"67";"IDLanROI__RemoveData.html";"2038"
"2907";"IDLanROI::ReplaceData";"Replaces vertices in the region with alternate values.";"67";"IDLanROI__ReplaceData.html";"2342"
"2908";"IDLanROI::Rotate";"Modifies the vertices for the region by applying a rotation.";"67";"IDLanROI__Rotate.html";"4691"
"2909";"IDLanROI::Scale";"Modifies the vertices for the region by applying a scale.";"67";"IDLanROI__Scale.html";"2140"
"2910";"IDLanROI::SetProperty";"Sets the value of a property or group of properties for the object.";"67";"IDLanROI__SetProperty.html";"1949"
"2911";"IDLanROI::Translate";"Modifies the vertices for the region by applying a translation.";"67";"IDLanROI__Translate.html";"2265"
"2912";"Analysis Object Classes";;"135";"objects_an.html";"966"
"2914";"IDLffDICOM Properties";;"7";"IDLffDICOM_Properties.html";"3240"
"2915";"IDLffDICOM::Cleanup";"Performs all cleanup on the object.";"7";"IDLffDICOM__Cleanup.html";"2772"
"2916";"IDLffDICOM::DumpElements";"Dumps a description of the DICOM data elements of the IDLffDICOM object to the screen or to a file.";"7";"IDLffDICOM__DumpElements.html";"3083"
"2917";"IDLffDICOM::GetChildren";"Used to find the member element references of a DICOM sequence.";"7";"IDLffDICOM__GetChildren.html";"3130"
"2918";"IDLffDICOM::GetDescription";"Takes optional DICOM group and element arguments and returns an array of STRING descriptions.";"7";"IDLffDICOM__GetDescripti.html";"2927"
"2919";"IDLffDICOM::GetElement";"Takes optional DICOM group and/or element arguments and returns an array of DICOM Element numbers for those parameters.";"7";"IDLffDICOM__GetElement.html";"2930"
"2920";"IDLffDICOM::GetGroup";"Takes optional DICOM group and/or element arguments and returns an array of DICOM Group numbers for those parameters.";"7";"IDLffDICOM__GetGroup.html";"3036"
"2921";"IDLffDICOM::GetLength";"Takes optional DICOM group and/or element arguments and returns an array of LONGs.";"7";"IDLffDICOM__GetLength.html";"3159"
"2922";"IDLffDICOM::GetParent";"Used to find the parent references of a set of elements in a DICOM sequence.";"7";"IDLffDICOM__GetParent.html";"3223"
"2923";"IDLffDICOM::GetPreamble";"Returns the preamble of a DICOM v3.0 Part 10 file.";"7";"IDLffDICOM__GetPreamble.html";"3013"
"2924";"IDLffDICOM::GetReference";"Takes optional DICOM group and/or element arguments and returns an array of references to matching elements in the object.";"7";"IDLffDICOM__GetReference.html";"3000"
"2925";"IDLffDICOM::GetVR";"Takes optional DICOM group and/or element arguments and returns an array of VR (Value Representation) STRINGs for those parameters.";"7";"IDLffDICOM__GetVR.html";"2823"
"2926";"IDLffDICOM::GetValue";"Takes optional DICOM group and/or element arguments and returns an array of POINTERs to the values of the elements matching those parameters.";"7";"IDLffDICOM__GetValue.html";"3909"
"2927";"IDLffDICOM::Init";"Initializes the object.";"7";"IDLffDICOM__Init.html";"2985"
"2928";"IDLffDICOM::Read";"Opens and reads from the specified disk file, places the information into the DICOM object, then closes the file.";"7";"IDLffDICOM__Read.html";"3300"
"2929";"IDLffDICOM::Reset";"Removes all of the elements from the IDLffDICOM object, leaving the object otherwise intact.";"7";"IDLffDICOM__Reset.html";"2800"
"2930";"IDLffDXF";"Object that contains geometry, connectivity, and attributes for graphics primitives.";"39";"IDLffDXF.html";"3832"
"2931";"IDLffDXF Properties";;"39";"IDLffDXF_Properties.html";"1898"
"2932";"IDLffDXF::Cleanup";"Performs all cleanup on the object.";"39";"IDLffDXF__Cleanup.html";"2756"
"2933";"IDLffDXF::GetContents";"Returns a description of the content of the DXF file.";"39";"IDLffDXF__GetContents.html";"2987"
"2934";"IDLffDXF::GetEntity";"Returns an array of data for the requested entity type.";"39";"IDLffDXF__GetEntity.html";"3417"
"2935";"IDLffDXF::GetPalette";"Returns the current color table in the object.";"39";"IDLffDXF__GetPalette.html";"2486"
"2936";"IDLffDXF::Init";"Initializes the object.";"39";"IDLffDXF__Init.html";"2413"
"2937";"IDLffDXF::PutEntity";"Inserts an entity into the DXF object.";"39";"IDLffDXF__PutEntity.html";"2506"
"2938";"IDLffDXF::Read";"Reads a file, parsing the DXF object information contained in the file, and inserts it into itself.";"39";"IDLffDXF__Read.html";"2589"
"2939";"IDLffDXF::RemoveEntity";"Removes the specified entity or entities from the DXF object.";"39";"IDLffDXF__RemoveEntity.html";"2379"
"2940";"IDLffDXF::Reset";"Removes all the entities from the DXF object.";"39";"IDLffDXF__Reset.html";"2437"
"2941";"IDLffDXF::SetPalette";"Sets the current color table in the object.";"39";"IDLffDXF__SetPalette.html";"2585"
"2942";"IDLffDXF::Write";"Writes a file for the DXF entity information this object contains.";"39";"IDLffDXF__Write.html";"2505"
"2943";"IDLffJPEG2000";"Contains the data for one or more JPEG2000 files.";"36";"IDLffJPEG2000.html";"3860"
"2944";"IDLffJPEG2000 Properties";;"36";"IDLffJPEG2000_Properties.html";"3540"
"2945";"IDLffJPEG2000::Cleanup";"Performs all cleanup on the object.";"36";"IDLffJPEG2000__Cleanup.html";"2424"
"2946";"IDLffJPEG2000::GetData";"Returns image data from the IDLffJPEG2000 object.";"36";"IDLffJPEG2000__GetData.html";"2574"
"2947";"IDLffJPEG2000::GetProperty";"Retrieves the value of a property or group of properties for the object.";"36";"IDLffJPEG2000__GetProper.html";"2466"
"2948";"IDLffJPEG2000::GetTileProperty";"Returns information describing the properties of a tile in an IDLffJPEG2000 object in the supplied variable-keyword pairs.";"36";"IDLffJPEG2000__GetTilePr.html";"2668"
"2949";"IDLffJPEG2000::GetUUID";"Allows you to get the data field from the specified UUID box.";"36";"IDLffJPEG2000__GetUUID.html";"2421"
"2950";"IDLffJPEG2000::Init";"Initializes the object.";"36";"IDLffJPEG2000__Init.html";"2604"
"2951";"IDLffJPEG2000::SetData";"Writes data to the IDLffJPEG2000 object.";"36";"IDLffJPEG2000__SetData.html";"2519"
"2952";"IDLffJPEG2000::SetProperty";"Sets the value of a property or group of properties for the object.";"36";"IDLffJPEG2000__SetProper.html";"2452"
"2953";"IDLffJPEG2000::SetUUID";"Allows you to add UUID boxes when creating a new JPEG2000 file.";"36";"IDLffJPEG2000__SetUUID.html";"2234"
"2954";"IDLffLangCat";"Finds and loads an XML language catalog.";"43";"IDLffLangCat.html";"3002"
"2955";"IDLffLangCat Properties";;"43";"IDLffLangCat_Properties.html";"2162"
"2956";"IDLffLangCat::AppendCatalog";"Adds keys from a file or files to those used to build the language catalog.";"43";"IDLffLangCat__AppendCata.html";"2019"
"2957";"IDLffLangCat::Cleanup";"Performs all cleanup on the object.";"43";"IDLffLangCat__Cleanup.html";"1784"
"2958";"IDLffLangCat::GetProperty";"Retrieves the value of a property or group of properties for the object.";"43";"IDLffLangCat__GetPropert.html";"2181"
"2959";"IDLffLangCat::Init";"Initializes the object.";"43";"IDLffLangCat__Init.html";"1852"
"2960";"IDLffLangCat::Query";"Returns the string or string array that corresponds to all supplied key values.";"43";"IDLffLangCat__Query.html";"2005"
"2961";"IDLffLangCat::SetProperty";"Sets the value of a property or group of properties for the object.";"43";"IDLffLangCat__SetPropert.html";"1875"
"2962";"IDLffMJPEG2000";"Provides the ability to read and write Motion JPEG2000 (MJ2) files.";"98";"IDLffMJPEG2000.html";"2866"
"2963";"IDLffMJPEG2000 Properties";;"98";"IDLffMJPEG2000_Propertie.html";"2525"
"2964";"IDLffMJPEG2000::Cleanup";"Performs all cleanup on the object.";"98";"IDLffMJPEG2000__Cleanup.html";"2036"
"2965";"IDLffMJPEG2000::Commit";"Shuts down the background processing thread and closes the MJ2 file that is being written.";"98";"IDLffMJPEG2000__Commit.html";"3457"
"2966";"IDLffMJPEG2000::GetData";"Returns data for a specified frame (or component, tile or region of a frame) from an MJ2 file.";"98";"IDLffMJPEG2000__GetData.html";"2292"
"2967";"IDLffMJPEG2000::GetProperty";"Retrieves the value of a property or group of properties for the object.";"98";"IDLffMJPEG2000__GetPrope.html";"2416"
"2968";"IDLffMJPEG2000::GetSequentialData";"Returns the frame index number and retrieves the associated frame data from the frame buffer.";"98";"IDLffMJPEG2000__GetSeque.html";"2457"
"2969";"IDLffMJPEG2000::Init";"Initializes the object.";"98";"IDLffMJPEG2000__Init.html";"2528"
"2970";"IDLffMJPEG2000::ReleaseSequentialData";"Releases a frame from the frame buffer during animation playback.";"98";"IDLffMJPEG2000__ReleaseS.html";"2334"
"2971";"IDLffMJPEG2000::SetData";"Starts a background processing thread and adds frame data to an MJ2 file that is being created.";"98";"IDLffMJPEG2000__SetData.html";"2452"
"2972";"IDLffMJPEG2000::SetProperty";"Sets the value of a property or group of properties for the object.";"98";"IDLffMJPEG2000__SetPrope.html";"2305"
"2973";"IDLffMJPEG2000::StartSequentialReading";"Initiates a sequential playback of a large number of frames.";"98";"IDLffMJPEG2000__StartSeq.html";"2389"
"2974";"IDLffMJPEG2000::StopSequentialReading";"Releases the frame buffer memory and shuts down the background processing thread, if it is still running.";"98";"IDLffMJPEG2000__StopSequ.html";"2364"
"2975";"IDLffMrSID";"Allows you to query and load image data from a MrSID image file.";"36";"IDLffMrSID.html";"2880"
"2976";"IDLffMrSID Properties";;"36";"IDLffMrSID_Properties.html";"2315"
"2977";"IDLffMrSID::Cleanup";"Performs all cleanup on the object.";"36";"IDLffMrSID__Cleanup.html";"2283"
"2978";"IDLffMrSID::GetDimsAtLevel";"Used to retrieve the dimensions of the image at a given level.";"36";"IDLffMrSID__GetDimsAtLev.html";"2398"
"2979";"IDLffMrSID::GetImageData";"Extracts and returns the image data from the MrSID file at the specified level and location.";"36";"IDLffMrSID__GetImageData.html";"2477"
"2980";"IDLffMrSID::GetProperty";"Retrieves the value of a property or group of properties for the object.";"36";"IDLffMrSID__GetProperty.html";"2474"
"2981";"IDLffMrSID::Init";"Initializes the object.";"36";"IDLffMrSID__Init.html";"2296"
"2982";"IDLffShape";"Contains geometry, connectivity and attributes for graphics primitives accessed from ESRI Shapefiles.";"39";"IDLffShape.html";"9700"
"2983";"IDLffShape Properties";;"39";"IDLffShape_Properties.html";"3958"
"2984";"IDLffShape::AddAttribute";"Adds an attribute definition to a Shapefile.";"39";"IDLffShape__AddAttribute.html";"3677"
"2985";"IDLffShape::Cleanup";"Performs all cleanup on the object.";"39";"IDLffShape__Cleanup.html";"2139"
"2986";"IDLffShape::Close";"Closes a Shapefile.";"39";"IDLffShape__Close.html";"2623"
"2987";"IDLffShape::DestroyEntity";"Frees memory associated with the entity structure.";"39";"IDLffShape__DestroyEntit.html";"2418"
"2988";"IDLffShape::GetAttributes";"Retrieves the attributes for the entities you specify from a Shapefile.";"39";"IDLffShape__GetAttribute.html";"3865"
"2989";"IDLffShape::GetEntity";"Returns the entities you specify from a Shapefile.";"39";"IDLffShape__GetEntity.html";"4664"
"2990";"IDLffShape::GetProperty";"Retrieves the value of a property or group of properties for the object.";"39";"IDLffShape__GetProperty.html";"2810"
"2991";"IDLffShape::Init";"Initializes the object.";"39";"IDLffShape__Init.html";"2706"
"2992";"IDLffShape::Open";"Opens a specified Shapefile.";"39";"IDLffShape__Open.html";"4218"
"2993";"IDLffShape::PutEntity";"Inserts an entity into the Shapefile object.";"39";"IDLffShape__PutEntity.html";"3044"
"2994";"IDLffShape::SetAttributes";"Sets the attributes for a specified entity in a Shapefile object.";"39";"IDLffShape__SetAttribute.html";"2760"
"2995";"IDLffVideoWrite";"Creates a video file with an optional soundtrack.";"98";"IDLffVideoWrite.html";"11889"
"2996";"IDLffXLMDOMNodeIterator Properties";;"39";"IDLffXLMDOMNodeIterator.html";"1237"
"2997";"IDLffXMLDOMAttr";"Represents an attribute that is part of an element object in an XML document.";"39";"IDLffXMLDOMAttr.html";"2606"
"2998";"IDLffXMLDOMAttr Properties";;"39";"IDLffXMLDOMAttr_Properti.html";"1211"
"2999";"IDLffXMLDOMAttr::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLDOMAttr__Cleanup.html";"2044"
"3000";"IDLffXMLDOMAttr::GetName";"Returns the name of the attribute node.";"39";"IDLffXMLDOMAttr__GetName.html";"2069"
"3001";"IDLffXMLDOMAttr::GetSpecified";"Returns a scalar integer indicating how the value of the attribute node was set.";"39";"IDLffXMLDOMAttr__GetSpec.html";"2134"
"3002";"IDLffXMLDOMAttr::GetValue";"Returns the value of the attribute node.";"39";"IDLffXMLDOMAttr__GetValu.html";"2072"
"3003";"IDLffXMLDOMAttr::Init";"Initializes the object.";"39";"IDLffXMLDOMAttr__Init.html";"1937"
"3004";"IDLffXMLDOMAttr::SetValue";"Sets the value of the attribute node, using the Value argument.";"39";"IDLffXMLDOMAttr__SetValu.html";"2198"
"3005";"IDLffXMLDOMCDATASection";"Used to escape blocks of text in an XML document containing characters that would otherwise be regarded as markup.";"39";"IDLffXMLDOMCDATASection.html";"2432"
"3006";"IDLffXMLDOMCDATASection Properties";;"39";"IDLffXMLDOMCDATASection1.html";"125"
"3007";"IDLffXMLDOMCDATASection::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLDOMCDATASection_.html";"4"
"3008";"IDLffXMLDOMCDATASection::Init";"Initializes the object.";"39";"IDLffXMLDOMCDATASection_1.html";"2057"
"3009";"IDLffXMLDOMCharacterData";"Extension of the IDLffXMLDOMNode class that supplies a set of methods for accessing character data in the XML DOM tree.";"39";"IDLffXMLDOMCharacterData.html";"2856"
"3010";"IDLffXMLDOMCharacterData Properties";;"39";"IDLffXMLDOMCharacterData1.html";"1152"
"3011";"IDLffXMLDOMCharacterData::SetData";"Sets the node's character data to a string.";"39";"IDLffXMLDOMCharacterData10.html";"2315"
"3012";"IDLffXMLDOMCharacterData::SubstringData";"Returns a string composed of a substring of the node's character data.";"39";"IDLffXMLDOMCharacterData11.html";"1999"
"3013";"IDLffXMLDOMCharacterData::AppendData";"Appends a string to the character data in the node.";"39";"IDLffXMLDOMCharacterData2.html";"2421"
"3014";"IDLffXMLDOMCharacterData::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLDOMCharacterData3.html";"2116"
"3015";"IDLffXMLDOMCharacterData::DeleteData";"Deletes a number of characters from the character data in the node, starting at an offset.";"39";"IDLffXMLDOMCharacterData4.html";"2183"
"3016";"IDLffXMLDOMCharacterData::GetData";"Returns the character data in the node.";"39";"IDLffXMLDOMCharacterData5.html";"2533"
"3017";"IDLffXMLDOMCharacterData::GetLength";"Returns the number of characters in the node.";"39";"IDLffXMLDOMCharacterData6.html";"2327"
"3018";"IDLffXMLDOMCharacterData::Init";"Initializes the object.";"39";"IDLffXMLDOMCharacterData7.html";"2251"
"3019";"IDLffXMLDOMCharacterData::InsertData";"Inserts a string in the node's character data at a specified offset.";"39";"IDLffXMLDOMCharacterData8.html";"2284"
"3020";"IDLffXMLDOMCharacterData::ReplaceData";"Replaces a number of characters, starting at an offset in the node's character data, with a string.";"39";"IDLffXMLDOMCharacterData9.html";"2534"
"3021";"IDLffXMLDOMComment";"Represents the content of an XML comment (characters between '<!--' and '-->').";"39";"IDLffXMLDOMComment.html";"2592"
"3022";"IDLffXMLDOMComment Properties";;"39";"IDLffXMLDOMComment_Prope.html";"1175"
"3023";"IDLffXMLDOMComment::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLDOMComment__Clea.html";"2047"
"3024";"IDLffXMLDOMComment::Init";"Initializes the object.";"39";"IDLffXMLDOMComment__Init.html";"2124"
"3025";"IDLffXMLDOMDocument";"Represents the entire XML document as the root of the XML document tree and by providing the primary access to the document's data.";"39";"IDLffXMLDOMDocument.html";"4206"
"3026";"IDLffXMLDOMDocumentFragment";"Represents a document fragment in an XML document.";"39";"IDLffXMLDOMDocumentFragm.html";"2943"
"3027";"IDLffXMLDOMDocumentFragment Properties";;"39";"IDLffXMLDOMDocumentFragm1.html";"1233"
"3028";"IDLffXMLDOMDocumentFragment::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLDOMDocumentFragm2.html";"1829"
"3029";"IDLffXMLDOMDocumentFragment::Init";"Initializes the object.";"39";"IDLffXMLDOMDocumentFragm3.html";"2005"
"3030";"IDLffXMLDOMDocumentType";"References a DocumentType node in an XML document.";"39";"IDLffXMLDOMDocumentType.html";"2629"
"3031";"IDLffXMLDOMDocumentType Properties";;"39";"IDLffXMLDOMDocumentType1.html";"119"
"3032";"IDLffXMLDOMDocumentType::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLDOMDocumentType_.html";"4"
"3033";"IDLffXMLDOMDocumentType::GetEntities";"Returns the general entities, both external and internal, declared in the DTD.";"39";"IDLffXMLDOMDocumentType_1.html";"1989"
"3034";"IDLffXMLDOMDocumentType::GetName";"Returns the name of the DTD.";"39";"IDLffXMLDOMDocumentType_2.html";"2079"
"3035";"IDLffXMLDOMDocumentType::GetNotations";"Returns the notations declared in the DTD.";"39";"IDLffXMLDOMDocumentType_3.html";"2001"
"3036";"IDLffXMLDOMDocumentType::Init";"Initializes the object.";"39";"IDLffXMLDOMDocumentType_4.html";"2013"
"3037";"IDLffXMLDOMDocument Properties";;"39";"IDLffXMLDOMDocument_Prop.html";"2242"
"3038";"IDLffXMLDOMDocument::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLDOMDocument__Cle.html";"2048"
"3039";"IDLffXMLDOMDocument::CreateAttribute";"Creates and names an attribute node that is owned by the document.";"39";"IDLffXMLDOMDocument__Cre.html";"2293"
"3040";"IDLffXMLDOMDocument::CreateCDATASection";"Creates a CDATASection node that is owned by the document and stores a string in the CDATASection node.";"39";"IDLffXMLDOMDocument__Cre1.html";"2332"
"3041";"IDLffXMLDOMDocument::CreateComment";"Creates a comment node that is owned by the document and stores a string in the comment node.";"39";"IDLffXMLDOMDocument__Cre2.html";"2374"
"3042";"IDLffXMLDOMDocument::CreateDocumentFragment";"Creates a document-fragment node that is owned by the document.";"39";"IDLffXMLDOMDocument__Cre3.html";"2301"
"3043";"IDLffXMLDOMDocument::CreateElement";"Creates an element node that is owned by the document and sets the element's name to a tag name.";"39";"IDLffXMLDOMDocument__Cre4.html";"2355"
"3044";"IDLffXMLDOMDocument::CreateEntityReference";"Creates and names an entity reference node that is owned by the document.";"39";"IDLffXMLDOMDocument__Cre5.html";"2232"
"3045";"IDLffXMLDOMDocument::CreateNodeIterator";"Used to create an instance of an IDLffXMLDOMNodeIterator object.";"39";"IDLffXMLDOMDocument__Cre6.html";"6646"
"3046";"IDLffXMLDOMDocument::CreateProcessingInstruction";"Creates a processing-instruction node that is owned by the document and stores two strings in the processing-instruction node.";"39";"IDLffXMLDOMDocument__Cre7.html";"2326"
"3047";"IDLffXMLDOMDocument::CreateTextNode";"Creates a text node that is owned by the document and stores a string in the text node.";"39";"IDLffXMLDOMDocument__Cre8.html";"2348"
"3048";"IDLffXMLDOMDocument::CreateTreeWalker";"Used to create an instance of an IDLffXMLDOMTreeWalker object.";"39";"IDLffXMLDOMDocument__Cre9.html";"2933"
"3049";"IDLffXMLDOMDocument::GetDoctype";"Creates an instance of IDLffXMLDOMDocumentType and returns its object reference.";"39";"IDLffXMLDOMDocument__Get.html";"2176"
"3050";"IDLffXMLDOMDocument::GetDocumentElement";"Creates an instance of an IDLffXMLDOMElement and returns its object reference.";"39";"IDLffXMLDOMDocument__Get1.html";"2716"
"3051";"IDLffXMLDOMDocument::GetElementsByTagName";"Creates an IDLffXMLDOMNodeList object containing all element nodes in the document tree with the specified tag name and returns an object reference to the IDLffXMLDOMNodeList object.";"39";"IDLffXMLDOMDocument__Get2.html";"2505"
"3052";"IDLffXMLDOMDocument::GetProperty";"Retrieves the value of a property or group of properties for the object.";"39";"IDLffXMLDOMDocument__Get3.html";"2447"
"3053";"IDLffXMLDOMDocument::Init";"Initializes the object.";"39";"IDLffXMLDOMDocument__Ini.html";"2527"
"3054";"IDLffXMLDOMDocument::Load";"Loads XML data from the source specified by the FILENAME keyword.";"39";"IDLffXMLDOMDocument__Loa.html";"5087"
"3055";"IDLffXMLDOMDocument::Save";"Serializes the current DOM document belonging to this document object and writes it to the output source specified by the FILENAME keyword.";"39";"IDLffXMLDOMDocument__Sav.html";"2174"
"3056";"IDLffXMLDOMDocument::SetProperty";"Sets the value of a property or group of properties for the object.";"39";"IDLffXMLDOMDocument__Set.html";"2316"
"3057";"IDLffXMLDOMElement";"References an element node in an XML document.";"39";"IDLffXMLDOMElement.html";"3040"
"3058";"IDLffXMLDOMElement Properties";;"39";"IDLffXMLDOMElement_Prope.html";"1272"
"3059";"IDLffXMLDOMElement::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLDOMElement__Clea.html";"2081"
"3060";"IDLffXMLDOMElement::GetAttribute";"Returns the value of the attribute specified by Name.";"39";"IDLffXMLDOMElement__GetA.html";"2245"
"3061";"IDLffXMLDOMElement::GetAttributeNode";"Creates an IDLffXMLDOMAttr object and returns its object reference.";"39";"IDLffXMLDOMElement__GetA1.html";"2482"
"3062";"IDLffXMLDOMElement::GetElementsByTagName";"Creates an IDLffXMLDOMNodeList object containing all descendant element nodes in the document tree with the specified tag name and returns an object reference to the IDLffXMLDOMNodeList object.";"39";"IDLffXMLDOMElement__GetE.html";"2312"
"3063";"IDLffXMLDOMElement::GetTagName";"Returns the name of the element.";"39";"IDLffXMLDOMElement__GetT.html";"2369"
"3064";"IDLffXMLDOMElement::Init";"Initializes the object.";"39";"IDLffXMLDOMElement__Init.html";"2473"
"3065";"IDLffXMLDOMElement::RemoveAttribute";"Removes a specified attribute from the element node.";"39";"IDLffXMLDOMElement__Remo.html";"2306"
"3066";"IDLffXMLDOMElement::RemoveAttributeNode";"Removes a specified attribute node from the element node.";"39";"IDLffXMLDOMElement__Remo1.html";"1876"
"3067";"IDLffXMLDOMElement::SetAttribute";"Adds a new attribute to or updates an existing attribute in the element node.";"39";"IDLffXMLDOMElement__SetA.html";"2330"
"3068";"IDLffXMLDOMElement::SetAttributeNode";"Adds an attribute node to the element node.";"39";"IDLffXMLDOMElement__SetA1.html";"1945"
"3069";"IDLffXMLDOMEntity";"References an entity, either parsed or unparsed, in an XML document.";"39";"IDLffXMLDOMEntity.html";"2466"
"3070";"IDLffXMLDOMEntityReference";"References an entity reference node in an XML document.";"39";"IDLffXMLDOMEntityReferen.html";"2419"
"3071";"IDLffXMLDOMEntityReference Properties";;"39";"IDLffXMLDOMEntityReferen1.html";"1171"
"3072";"IDLffXMLDOMEntityReference::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLDOMEntityReferen2.html";"2011"
"3073";"IDLffXMLDOMEntityReference::Init";"Initializes the object.";"39";"IDLffXMLDOMEntityReferen3.html";"1822"
"3074";"IDLffXMLDOMEntity Properties";;"39";"IDLffXMLDOMEntity_Proper.html";"1183"
"3075";"IDLffXMLDOMEntity::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLDOMEntity__Clean.html";"1922"
"3076";"IDLffXMLDOMEntity::GetNotationName";"Returns the name of the notation for the entity.";"39";"IDLffXMLDOMEntity__GetNo.html";"1991"
"3077";"IDLffXMLDOMEntity::GetPublicId";"Returns the public ID of the entity, if it is specified.";"39";"IDLffXMLDOMEntity__GetPu.html";"1987"
"3078";"IDLffXMLDOMEntity::GetSystemId";"Returns the system ID of the entity, if it is specified.";"39";"IDLffXMLDOMEntity__GetSy.html";"2327"
"3079";"IDLffXMLDOMEntity::Init";"Initializes the object.";"39";"IDLffXMLDOMEntity__Init.html";"1971"
"3080";"IDLffXMLDOMNamedNodeMap";"Container for IDLffXMLDOM nodes that uses node names to access the nodes.";"39";"IDLffXMLDOMNamedNodeMap.html";"2859"
"3081";"IDLffXMLDOMNamedNodeMap Properties";;"39";"IDLffXMLDOMNamedNodeMap1.html";"133"
"3082";"IDLffXMLDOMNamedNodeMap::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLDOMNamedNodeMap_.html";"4"
"3083";"IDLffXMLDOMNamedNodeMap::GetLength";"Returns the number of nodes in the named node map.";"39";"IDLffXMLDOMNamedNodeMap_1.html";"2245"
"3084";"IDLffXMLDOMNamedNodeMap::GetNamedItem";"Returns an object reference to an instance of a subclass of IDLffXMLDOMNode that refers to the node from the named node map that corresponds to the supplied name.";"39";"IDLffXMLDOMNamedNodeMap_2.html";"1997"
"3085";"IDLffXMLDOMNamedNodeMap::Init";"Initializes the object.";"39";"IDLffXMLDOMNamedNodeMap_3.html";"1983"
"3086";"IDLffXMLDOMNamedNodeMap::Item";"Returns an object reference to an instance of a subclass of IDLffXMLDOMNode that refers to the node from the named node map that corresponds to an index.";"39";"IDLffXMLDOMNamedNodeMap_4.html";"2244"
"3087";"IDLffXMLDOMNamedNodeMap::RemoveNamedItem";"Removes the node from the named node map that corresponds to a name.";"39";"IDLffXMLDOMNamedNodeMap_5.html";"2098"
"3088";"IDLffXMLDOMNamedNodeMap::SetNamedItem";"Adds a node to the named node map.";"39";"IDLffXMLDOMNamedNodeMap_6.html";"1941"
"3089";"IDLffXMLDOMNode";"Abstract class used as a superclass for other IDLffXMLDOM node classes.";"39";"IDLffXMLDOMNode.html";"3575"
"3090";"IDLffXMLDOMNodeIterator";"Allows iterative navigation of the XML DOM tree.";"39";"IDLffXMLDOMNodeIterator.html";"2476"
"3091";"IDLffXMLDOMNodeIterator::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLDOMNodeIterator_.html";"2047"
"3092";"IDLffXMLDOMNodeIterator::Init";"Initializes the object.";"39";"IDLffXMLDOMNodeIterator_1.html";"2240"
"3093";"IDLffXMLDOMNodeIterator::NextNode";"Creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object.";"39";"IDLffXMLDOMNodeIterator_2.html";"1993"
"3094";"IDLffXMLDOMNodeIterator::PreviousNode";"Creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object.";"39";"IDLffXMLDOMNodeIterator_3.html";"2188"
"3095";"IDLffXMLDOMNodeList";"Container for IDLffXMLDOM nodes.";"39";"IDLffXMLDOMNodeList.html";"2803"
"3096";"IDLffXMLDOMNodeList Properties";;"39";"IDLffXMLDOMNodeList_Prop.html";"1432"
"3097";"IDLffXMLDOMNodeList::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLDOMNodeList__Cle.html";"2076"
"3098";"IDLffXMLDOMNodeList::GetLength";"Returns the number of nodes in the node list.";"39";"IDLffXMLDOMNodeList__Get.html";"2551"
"3099";"IDLffXMLDOMNodeList::Init";"Initializes the object.";"39";"IDLffXMLDOMNodeList__Ini.html";"2343"
"3100";"IDLffXMLDOMNodeList::Item";"Returns an object reference to an instance of a subclass of IDLffXMLDOMNode that refers to an indexed node from the node list.";"39";"IDLffXMLDOMNodeList__Ite.html";"2428"
"3101";"IDLffXMLDOMNode Properties";;"39";"IDLffXMLDOMNode_Properti.html";"1291"
"3102";"IDLffXMLDOMNode::AppendChild";"Adds a new node to the end of the calling node's children list.";"39";"IDLffXMLDOMNode__AppendC.html";"2200"
"3103";"IDLffXMLDOMNode::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLDOMNode__Cleanup.html";"2174"
"3104";"IDLffXMLDOMNode::CloneNode";"Creates a copy of the calling node (i.e., an instance of an IDLffXMLDOMNode subclass) and returns the object reference to the cloned node.";"39";"IDLffXMLDOMNode__CloneNo.html";"2241"
"3105";"IDLffXMLDOMNode::GetAttributes";"Creates an instance of an IDLffXMLDOMNamedNodeMap and returns an object reference to that object.";"39";"IDLffXMLDOMNode__GetAttr.html";"2339"
"3106";"IDLffXMLDOMNode::GetChildNodes";"Creates an instance of an IDLffXMLDOMNodeList object, which can then be used to access the child nodes.";"39";"IDLffXMLDOMNode__GetChil.html";"2476"
"3107";"IDLffXMLDOMNode::GetFirstChild";"Creates an instance of one of the IDLffXMLDOMNode subclasses and returns an object reference to that object, which refers to the first child of the calling node in the DOM tree.";"39";"IDLffXMLDOMNode__GetFirs.html";"3256"
"3108";"IDLffXMLDOMNode::GetLastChild";"Creates an instance of one of the IDLffXMLDOMNode subclasses and returns an object reference to that object, which refers to the last child of the calling node in the DOM tree.";"39";"IDLffXMLDOMNode__GetLast.html";"2056"
"3109";"IDLffXMLDOMNode::GetNextSibling";"Creates an instance of one of the IDLffXMLDOMNode subclasses and returns an object reference to that object, which refers to the next sibling of the calling node in the DOM tree.";"39";"IDLffXMLDOMNode__GetNext.html";"2363"
"3110";"IDLffXMLDOMNode::GetNodeName";"Returns the name of the node, depending on the calling node's subclass type.";"39";"IDLffXMLDOMNode__GetNode.html";"2353"
"3111";"IDLffXMLDOMNode::GetNodeType";"Returns the subclass type of the calling node.";"39";"IDLffXMLDOMNode__GetNode1.html";"2528"
"3112";"IDLffXMLDOMNode::GetNodeValue";"Returns the value of the calling node, depending on its subclass type.";"39";"IDLffXMLDOMNode__GetNode2.html";"3103"
"3113";"IDLffXMLDOMNode::GetOwnerDocument";"Returns an object reference to the IDLffXMLDOMDocument used to create the node.";"39";"IDLffXMLDOMNode__GetOwne.html";"2295"
"3114";"IDLffXMLDOMNode::GetParentNode";"Creates an instance of one of the IDLffXMLDOMNode subclasses and returns an object reference to that object, which refers to the parent node in the DOM tree.";"39";"IDLffXMLDOMNode__GetPare.html";"2451"
"3115";"IDLffXMLDOMNode::GetPreviousSibling";"Creates an instance of one of the IDLffXMLDOMNode subclasses and returns an object reference to that object, which refers to the previous sibling of the calling node in the DOM tree.";"39";"IDLffXMLDOMNode__GetPrev.html";"2161"
"3116";"IDLffXMLDOMNode::HasChildNodes";"Returns a value indicating whether the calling node has children.";"39";"IDLffXMLDOMNode__HasChil.html";"2389"
"3117";"IDLffXMLDOMNode::Init";"Initializes the object.";"39";"IDLffXMLDOMNode__Init.html";"2119"
"3118";"IDLffXMLDOMNode::InsertBefore";"Inserts a new node into the calling node's children list at the location before a reference node.";"39";"IDLffXMLDOMNode__InsertB.html";"2037"
"3119";"IDLffXMLDOMNode::RemoveChild";"Removes an existing child node from the calling node's child list.";"39";"IDLffXMLDOMNode__RemoveC.html";"2046"
"3120";"IDLffXMLDOMNode::ReplaceChild";"Replaces an existing child node with a new child node into the calling node's child list.";"39";"IDLffXMLDOMNode__Replace.html";"2290"
"3121";"IDLffXMLDOMNode::SetNodeValue";"Sets the node's value to the contents of a string.";"39";"IDLffXMLDOMNode__SetNode.html";"2341"
"3122";"IDLffXMLDOMNotation";"Represents a notation in the XML DTD.";"39";"IDLffXMLDOMNotation.html";"2544"
"3123";"IDLffXMLDOMNotation Properties";;"39";"IDLffXMLDOMNotation_Prop.html";"1184"
"3124";"IDLffXMLDOMNotation::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLDOMNotation__Cle.html";"2188"
"3125";"IDLffXMLDOMNotation::GetPublicID";"Returns the public ID of the notation.";"39";"IDLffXMLDOMNotation__Get.html";"2385"
"3126";"IDLffXMLDOMNotation::GetSystemID";"Returns the system ID of the notation.";"39";"IDLffXMLDOMNotation__Get1.html";"2125"
"3127";"IDLffXMLDOMNotation::Init";"Initializes the object.";"39";"IDLffXMLDOMNotation__Ini.html";"2088"
"3128";"IDLffXMLDOMProcessingInstruction";"Represents a processing instruction in an XML document.";"39";"IDLffXMLDOMProcessingIns.html";"2547"
"3129";"IDLffXMLDOMProcessingInstruction Properties";;"39";"IDLffXMLDOMProcessingIns1.html";"1173"
"3130";"IDLffXMLDOMProcessingInstruction::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLDOMProcessingIns2.html";"2215"
"3131";"IDLffXMLDOMProcessingInstruction::GetData";"Returns the content of the processing instruction.";"39";"IDLffXMLDOMProcessingIns3.html";"2102"
"3132";"IDLffXMLDOMProcessingInstruction::GetTarget";"Returns the target of the processing instruction.";"39";"IDLffXMLDOMProcessingIns4.html";"1955"
"3133";"IDLffXMLDOMProcessingInstruction::Init";"Initializes the object.";"39";"IDLffXMLDOMProcessingIns5.html";"2208"
"3134";"IDLffXMLDOMProcessingInstruction::SetData";"Sets the content of the processing instruction.";"39";"IDLffXMLDOMProcessingIns6.html";"1867"
"3135";"IDLffXMLDOMText";"References a text node in the XML document.";"39";"IDLffXMLDOMText.html";"2630"
"3136";"IDLffXMLDOMText Properties";;"39";"IDLffXMLDOMText_Properti.html";"1280"
"3137";"IDLffXMLDOMText::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLDOMText__Cleanup.html";"2012"
"3138";"IDLffXMLDOMText::Init";"Initializes the object.";"39";"IDLffXMLDOMText__Init.html";"1932"
"3139";"IDLffXMLDOMText::IsIgnorableWhitespace";"Indicates whether the text node contains ignorable whitespace.";"39";"IDLffXMLDOMText__IsIgnor.html";"2374"
"3140";"IDLffXMLDOMText::SplitText";"Breaks a text node into two nodes, splitting the text at the specified offset.";"39";"IDLffXMLDOMText__SplitTe.html";"2120"
"3141";"IDLffXMLDOMTreeWalker";"Allows tree-walking navigation of the XML DOM tree.";"39";"IDLffXMLDOMTreeWalker.html";"2655"
"3142";"IDLffXMLDOMTreeWalker Properties";;"39";"IDLffXMLDOMTreeWalker_Pr.html";"1261"
"3143";"IDLffXMLDOMTreeWalker::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLDOMTreeWalker__C.html";"2584"
"3144";"IDLffXMLDOMTreeWalker::FirstChild";"Creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object.";"39";"IDLffXMLDOMTreeWalker__F.html";"2194"
"3145";"IDLffXMLDOMTreeWalker::GetCurrentNode";"Creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object.";"39";"IDLffXMLDOMTreeWalker__G.html";"2364"
"3146";"IDLffXMLDOMTreeWalker::Init";"Initializes the object.";"39";"IDLffXMLDOMTreeWalker__I.html";"2130"
"3147";"IDLffXMLDOMTreeWalker::LastChild";"Creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object.";"39";"IDLffXMLDOMTreeWalker__L.html";"2273"
"3148";"IDLffXMLDOMTreeWalker::NextNode";"Creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object.";"39";"IDLffXMLDOMTreeWalker__N.html";"2298"
"3149";"IDLffXMLDOMTreeWalker::NextSibling";"Creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object.";"39";"IDLffXMLDOMTreeWalker__N1.html";"2462"
"3150";"IDLffXMLDOMTreeWalker::ParentNode";"Creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object.";"39";"IDLffXMLDOMTreeWalker__P.html";"2389"
"3151";"IDLffXMLDOMTreeWalker::PreviousNode";"Creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object.";"39";"IDLffXMLDOMTreeWalker__P1.html";"2254"
"3152";"IDLffXMLDOMTreeWalker::PreviousSibling";"Creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object.";"39";"IDLffXMLDOMTreeWalker__P2.html";"2192"
"3153";"IDLffXMLDOMTreeWalker::SetCurrentNode";"Sets the tree walker's current node to the specified node.";"39";"IDLffXMLDOMTreeWalker__S.html";"2139"
"3154";"IDLffXMLDOM Classes";;"39";"IDLffXMLDOM_Classes.html";"3173"
"3155";"IDLffXMLSAX";"Represents an XML SAX level 2 parser.";"39";"IDLffXMLSAX.html";"5460"
"3156";"IDLffXMLSAX Properties";;"39";"IDLffXMLSAX_Properties.html";"2442"
"3157";"IDLffXMLSAX::AttributeDecl";"Called when the parser detects an <!ATTLIST ...> declaration in a DTD.";"39";"IDLffXMLSAX__AttributeDe.html";"2577"
"3158";"IDLffXMLSAX::Characters";"Called when the parser detects text in the parsed document.";"39";"IDLffXMLSAX__Characters.html";"2339"
"3159";"IDLffXMLSAX::Cleanup";"Performs all cleanup on the object.";"39";"IDLffXMLSAX__Cleanup.html";"2391"
"3160";"IDLffXMLSAX::Comment";"Called when the parser detects a comment section of the form <!-- ... --> .";"39";"IDLffXMLSAX__Comment.html";"2418"
"3161";"IDLffXMLSAX::ElementDecl";"Called when the parser detects an <!ELEMENT ...> declaration in the DTD.";"39";"IDLffXMLSAX__ElementDecl.html";"2291"
"3162";"IDLffXMLSAX::EndCDATA";"Called when the parser detects the end of a <![CDATA[...]]> text section.";"39";"IDLffXMLSAX__EndCDATA.html";"2184"
"3163";"IDLffXMLSAX::EndDTD";"Called when the parser detects the end of a Document Type Definition (DTD).";"39";"IDLffXMLSAX__EndDTD.html";"2468"
"3164";"IDLffXMLSAX::EndDocument";"Called when the parser detects the end of the XML document.";"39";"IDLffXMLSAX__EndDocument.html";"2484"
"3165";"IDLffXMLSAX::EndElement";"Called when the parser detects the end of an element.";"39";"IDLffXMLSAX__EndElement.html";"2212"
"3166";"IDLffXMLSAX::EndEntity";"Called when the parser detects the end of an internal or external entity expansion.";"39";"IDLffXMLSAX__EndEntity.html";"2109"
"3167";"IDLffXMLSAX::EndPrefixMapping";"Called when a previously declared prefix mapping goes out of scope.";"39";"IDLffXMLSAX__EndPrefixMa.html";"2191"
"3168";"IDLffXMLSAX::Error";"Called when the parser detects an error that is not expected to be fatal.";"39";"IDLffXMLSAX__Error.html";"2485"
"3169";"IDLffXMLSAX::ExternalEntityDecl";"Called when the parser detects an <!ENTITY ...> declarations in the DTD for a parsed external entity.";"39";"IDLffXMLSAX__ExternalEnt.html";"2134"
"3170";"IDLffXMLSAX::FatalError";"Called when the parser detects a fatal error.";"39";"IDLffXMLSAX__FatalError.html";"2514"
"3171";"IDLffXMLSAX::GetProperty";"Retrieves the value of a property or group of properties for the object.";"39";"IDLffXMLSAX__GetProperty.html";"2219"
"3172";"IDLffXMLSAX::IgnorableWhitespace";"Called when the parser detects whitespace that separates elements in an element content model.";"39";"IDLffXMLSAX__IgnorableWh.html";"2231"
"3173";"IDLffXMLSAX::Init";"Initializes the object.";"39";"IDLffXMLSAX__Init.html";"2403"
"3174";"IDLffXMLSAX::InternalEntityDecl";"Called when the parser detects an <!ENTITY ...> declaration in a DTD for (parsed) internal entities.";"39";"IDLffXMLSAX__InternalEnt.html";"2184"
"3175";"IDLffXMLSAX::NotationDecl";"Called when the parser detects a <!NOTATION ...> declaration in a DTD.";"39";"IDLffXMLSAX__NotationDec.html";"2292"
"3176";"IDLffXMLSAX::ParseFile";"Parses the specified XML file.";"39";"IDLffXMLSAX__ParseFile.html";"3162"
"3177";"IDLffXMLSAX::ProcessingInstruction";"Called when the parser detects a processing instruction.";"39";"IDLffXMLSAX__ProcessingI.html";"2266"
"3178";"IDLffXMLSAX::SetProperty";"Sets the value of a property or group of properties for the object.";"39";"IDLffXMLSAX__SetProperty.html";"2578"
"3179";"IDLffXMLSAX::SkippedEntity";"Called when the parser skips an entity and validation is not being performed.";"39";"IDLffXMLSAX__SkippedEnti.html";"1997"
"3180";"IDLffXMLSAX::StartCDATA";"Called when the parser detects the beginning of a <![CDATA[...]]> text section.";"39";"IDLffXMLSAX__StartCDATA.html";"2208"
"3181";"IDLffXMLSAX::StartDTD";"Called when the parser detects the beginning of a Document Type Definition (DTD).";"39";"IDLffXMLSAX__StartDTD.html";"2438"
"3182";"IDLffXMLSAX::StartDocument";"Called when the parser begins processing a document, and before any data is processed.";"39";"IDLffXMLSAX__StartDocume.html";"2085"
"3183";"IDLffXMLSAX::StartElement";"Called when the parser detects the beginning of an element.";"39";"IDLffXMLSAX__StartElemen.html";"2130"
"3184";"IDLffXMLSAX::StartEntity";"Called when the parser detects the start of an internal or external entity expansion.";"39";"IDLffXMLSAX__StartEntity.html";"2125"
"3185";"IDLffXMLSAX::StartPrefixmapping";"Called when the parser detects the beginning of a namespace declaration.";"39";"IDLffXMLSAX__StartPrefix.html";"2253"
"3186";"IDLffXMLSAX::StopParsing";"Halt the operation and cause the ParseFile method to return.";"39";"IDLffXMLSAX__StopParsing.html";"1985"
"3187";"IDLffXMLSAX::UnparsedEntityDecl";"Called when the parser detects an <!ENTITY ...> declaration that includes the NDATA keyword, indicating that the entity is not meant to be parsed.";"39";"IDLffXMLSAX__UnparsedEnt.html";"1931"
"3188";"IDLffXMLSAX::Warning";"Called when the parser detects a problem during processing.";"39";"IDLffXMLSAX__Warning.html";"2341"
"3189";"File Format Object Classes";;"135";"objects_ff.html";"969"
"3190";"IDLgrAxis";"Represents a single vector that may include a set of tick marks, tick labels, and a title.";"71";"IDLgrAxis.html";"4733"
"3191";"IDLgrAxis Properties";;"71";"IDLgrAxis_Properties.html";"3804"
"3192";"IDLgrAxis::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrAxis__Cleanup.html";"2274"
"3193";"IDLgrAxis::GetCTM";"Returns the graphics transform matrix from the current object upward through the graphics tree.";"71";"IDLgrAxis__GetCTM.html";"2769"
"3194";"IDLgrAxis::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrAxis__GetProperty.html";"2239"
"3195";"IDLgrAxis::Init";"Initializes the object.";"71";"IDLgrAxis__Init.html";"2379"
"3196";"IDLgrAxis::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrAxis__SetProperty.html";"2119"
"3197";"IDLgrBuffer";"An in-memory, off-screen destination object.";"69";"IDLgrBuffer.html";"3111"
"3198";"IDLgrBuffer Properties";;"69";"IDLgrBuffer_Properties.html";"2339"
"3199";"IDLgrBuffer::Cleanup";"Performs all cleanup on the object.";"69";"IDLgrBuffer__Cleanup.html";"2004"
"3200";"IDLgrBuffer::Draw";"Draws the given picture to this graphics destination.";"69";"IDLgrBuffer__Draw.html";"2144"
"3201";"IDLgrBuffer::Erase";"Erases this graphics destination.";"69";"IDLgrBuffer__Erase.html";"2278"
"3202";"IDLgrBuffer::GetContiguousPixels";"Returns an array of long integers whose length is equal to the number of colors available in the index color mode (that is, the value of the N_COLORS property).";"69";"IDLgrBuffer__GetContiguo.html";"2546"
"3203";"IDLgrBuffer::GetDeviceInfo";"Returns information which allows IDL applications to intelligently make decisions for optimal performance.";"69";"IDLgrBuffer__GetDeviceIn.html";"2087"
"3204";"IDLgrBuffer::GetFontnames";"Returns the list of available fonts that can be used in IDLgrFont objects.";"69";"IDLgrBuffer__GetFontname.html";"2032"
"3205";"IDLgrBuffer::GetProperty";"Retrieves the value of a property or group of properties for the object.";"69";"IDLgrBuffer__GetProperty.html";"2227"
"3206";"IDLgrBuffer::GetTextDimensions";"Retrieves the dimensions of a text or axis object that will be rendered in a window.";"69";"IDLgrBuffer__GetTextDime.html";"2281"
"3207";"IDLgrBuffer::Init";"Initializes the object.";"69";"IDLgrBuffer__Init.html";"2494"
"3208";"IDLgrBuffer::PickData";"Maps a point in the two-dimensional device space of the buffer to a point in the three-dimensional data space of an object tree.";"69";"IDLgrBuffer__PickData.html";"2076"
"3209";"IDLgrBuffer::QueryRequiredTiles";"Used in conjunction with an IDLgrImage object that supports tiling.";"69";"IDLgrBuffer__QueryRequir.html";"2418"
"3210";"IDLgrBuffer::Read";"Reads an image from a buffer.";"69";"IDLgrBuffer__Read.html";"2380"
"3211";"IDLgrBuffer::Select";"Returns a list of objects selected at a specified location.";"69";"IDLgrBuffer__Select.html";"2151"
"3212";"IDLgrBuffer::SetProperty";"Sets the value of a property or group of properties for the object.";"69";"IDLgrBuffer__SetProperty.html";"2231"
"3213";"IDLgrClipboard";"A destination object representing the native clipboard.";"69";"IDLgrClipboard.html";"3434"
"3214";"IDLgrClipboard Properties";;"69";"IDLgrClipboard_Propertie.html";"2380"
"3215";"IDLgrClipboard::Cleanup";"Performs all cleanup on the object.";"69";"IDLgrClipboard__Cleanup.html";"2335"
"3216";"IDLgrClipboard::Draw";"Draws the given picture to this graphics destination.";"69";"IDLgrClipboard__Draw.html";"3130"
"3217";"IDLgrClipboard::GetContiguousPixels";"Returns an array of long integers whose length is equal to the number of colors available in the index color mode (that is, the value of the N_COLORS property).";"69";"IDLgrClipboard__GetConti.html";"2323"
"3218";"IDLgrClipboard::GetDeviceInfo";"Returns information which allows IDL applications to intelligently make decisions for optimal performance.";"69";"IDLgrClipboard__GetDevic.html";"2110"
"3219";"IDLgrClipboard::GetFontnames";"Returns the list of available fonts that can be used in IDLgrFont objects.";"69";"IDLgrClipboard__GetFontn.html";"1999"
"3220";"IDLgrClipboard::GetProperty";"Retrieves the value of a property or group of properties for the object.";"69";"IDLgrClipboard__GetPrope.html";"2365"
"3221";"IDLgrClipboard::GetTextDimensions";"Retrieves the dimensions of a text or axis object that will be rendered in the clipboard buffer.";"69";"IDLgrClipboard__GetTextD.html";"2476"
"3222";"IDLgrClipboard::Init";"Initializes the object.";"69";"IDLgrClipboard__Init.html";"2379"
"3224";"IDLgrClipboard::QueryRequiredTiles";"Used in conjunction with an IDLgrImage object that supports tiling.";"69";"IDLgrClipboard__QueryReq.html";"2263"
"3225";"IDLgrClipboard::SetProperty";"Sets the value of a property or group of properties for the object.";"69";"IDLgrClipboard__SetPrope.html";"2407"
"3226";"IDLgrColorbar";"Consists of a color-ramp with an optional framing box and annotation axis.";"71";"IDLgrColorbar.html";"3597"
"3227";"IDLgrColorbar Properties";;"71";"IDLgrColorbar_Properties.html";"3137"
"3228";"IDLgrColorbar::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrColorbar__Cleanup.html";"2324"
"3229";"IDLgrColorbar::ComputeDimensions";"Retrieves the dimensions of a colorbar object for the given destination object.";"71";"IDLgrColorbar__ComputeDi.html";"2422"
"3230";"IDLgrColorbar::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrColorbar__GetProper.html";"2472"
"3231";"IDLgrColorbar::Init";"Initializes the object.";"71";"IDLgrColorbar__Init.html";"2286"
"3232";"IDLgrColorbar::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrColorbar__SetProper.html";"2303"
"3233";"IDLgrContour";"Draws a contour plot from data stored in a rectangular array or from a set of unstructured points.";"71";"IDLgrContour.html";"3745"
"3234";"IDLgrContour Properties";;"71";"IDLgrContour_Properties.html";"4330"
"3235";"IDLgrContour::AdjustLabelOffsets";"Adjusts the offsets at which contour labels are positioned.";"71";"IDLgrContour__AdjustLabe.html";"2559"
"3236";"IDLgrContour::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrContour__Cleanup.html";"2243"
"3237";"IDLgrContour::GetCTM";"Returns the 4 x 4 double-precision floating-point graphics transform matrix from the current object upward through the graphics tree.";"71";"IDLgrContour__GetCTM.html";"2217"
"3238";"IDLgrContour::GetLabelInfo";"Retrieves information about the labels for a contour.";"71";"IDLgrContour__GetLabelIn.html";"2412"
"3239";"IDLgrContour::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrContour__GetPropert.html";"2514"
"3240";"IDLgrContour::Init";"Initializes the object.";"71";"IDLgrContour__Init.html";"2385"
"3241";"IDLgrContour::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrContour__SetPropert.html";"2649"
"3242";"IDLgrFilterChain";"Executes a sequence of image filtering shader objects according to their container order.";"72";"IDLgrFilterChain.html";"2285"
"3243";"IDLgrFilterChain Properties";;"72";"IDLgrFilterChain_Propert.html";"2301"
"3244";"IDLgrFilterChain::Cleanup";"Performs all cleanup on the object.";"72";"IDLgrFilterChain__Cleanu.html";"2004"
"3245";"IDLgrFilterChain::GetProperty";"Retrieves the value of a property or group of properties for the object.";"72";"IDLgrFilterChain__GetPro.html";"2134"
"3246";"IDLgrFilterChain::Init";"Initializes the object.";"72";"IDLgrFilterChain__Init.html";"2028"
"3247";"IDLgrFilterChain::SetProperty";"Sets the value of a property or group of properties for the object.";"72";"IDLgrFilterChain__SetPro.html";"2116"
"3248";"IDLgrFont";"represents a typeface, style, weight, and point size that may be associated with text objects.";"71";"IDLgrFont.html";"4481"
"3249";"IDLgrFont Properties";;"71";"IDLgrFont_Properties.html";"2434"
"3250";"IDLgrFont::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrFont__Cleanup.html";"2337"
"3251";"IDLgrFont::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrFont__GetProperty.html";"2299"
"3252";"IDLgrFont::Init";"Initializes the object.";"71";"IDLgrFont__Init.html";"2376"
"3253";"IDLgrFont::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrFont__SetProperty.html";"2358"
"3254";"IDLgrImage";"Creates an image object that represents a mapping from a 2D array of data values to a 2D array of pixel colors.";"71";"IDLgrImage.html";"7095"
"3255";"IDLgrImage Properties";;"71";"IDLgrImage_Properties.html";"4353"
"3256";"IDLgrImage::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrImage__Cleanup.html";"2424"
"3257";"IDLgrImage::DeleteTileData";"Removes tile data from the cache.";"71";"IDLgrImage__DeleteTileDa.html";"2557"
"3258";"IDLgrImage::GetCTM";"Returns the 4 x 4 double-precision floating-point graphics transform matrix from the current object upward through the graphics tree.";"71";"IDLgrImage__GetCTM.html";"2685"
"3259";"IDLgrImage::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrImage__GetProperty.html";"2345"
"3260";"IDLgrImage::Init";"Initializes the object.";"71";"IDLgrImage__Init.html";"2957"
"3261";"IDLgrImage::ReadFilteredData";"returns image data after a shader program (contained in an IDLgrShader object or object subclassed from IDLgrShader) has been applied, or after one or more shaders (contained in an IDLgrFilterChain object) have been applied.";"71";"IDLgrImage__ReadFiltered.html";"2305"
"3262";"IDLgrImage::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrImage__SetProperty.html";"2635"
"3263";"IDLgrImage::SetTileData";"Stores tile data in the IDLgrImage tile data cache.";"71";"IDLgrImage__SetTileData.html";"3300"
"3264";"IDLgrImage::TileDataLoaded";"Tests whether a specified image tile has data loaded.";"71";"IDLgrImage__TileDataLoad.html";"2302"
"3265";"IDLgrLegend";"Provides a simple interface for displaying a legend.";"71";"IDLgrLegend.html";"3348"
"3266";"IDLgrLegend Properties";;"71";"IDLgrLegend_Properties.html";"2398"
"3267";"IDLgrLegend::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrLegend__Cleanup.html";"2137"
"3268";"IDLgrLegend::ComputeDimensions";"Retrieves the dimensions of a legend object for the given destination object.";"71";"IDLgrLegend__ComputeDime.html";"2072"
"3269";"IDLgrLegend::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrLegend__GetProperty.html";"2363"
"3270";"IDLgrLegend::Init";"Initializes the object.";"71";"IDLgrLegend__Init.html";"2304"
"3271";"IDLgrLegend::Remove";"Removes an object from the container.";"71";"IDLgrLegend__Remove.html";"2299"
"3272";"IDLgrLegend::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrLegend__SetProperty.html";"2327"
"3273";"IDLgrLight";"Represents a source of illumination for three-dimensional graphic objects.";"71";"IDLgrLight.html";"3846"
"3274";"IDLgrLight Properties";;"71";"IDLgrLight_Properties.html";"2493"
"3275";"IDLgrLight::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrLight__Cleanup.html";"1991"
"3276";"IDLgrLight::GetCTM";"Returns the 4-by-4 double-precision floating-point graphics transform matrix from the current object upward through the graphics tree.";"71";"IDLgrLight__GetCTM.html";"2332"
"3277";"IDLgrLight::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrLight__GetProperty.html";"2354"
"3278";"IDLgrLight::Init";"Initializes the object.";"71";"IDLgrLight__Init.html";"2244"
"3279";"IDLgrLight::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrLight__SetProperty.html";"2272"
"3280";"IDLgrModel";"Animates the display of objects by displaying a single object in the collection of objects contained in the model when the RENDER_METHOD property is set.";"70";"IDLgrModel.html";"5403"
"3281";"IDLgrModel Properties";;"70";"IDLgrModel_Properties.html";"3295"
"3282";"IDLgrModel::Add";"Adds a child to the object.";"70";"IDLgrModel__Add.html";"47231"
"3283";"IDLgrModel::Cleanup";"Performs all cleanup on the object.";"70";"IDLgrModel__Cleanup.html";"2423"
"3284";"IDLgrModel::Draw";"Draws the specified picture to the specified graphics destination.";"70";"IDLgrModel__Draw.html";"2637"
"3285";"IDLgrModel::GetByName";"Finds contained objects by name.";"70";"IDLgrModel__GetByName.html";"2970"
"3286";"IDLgrModel::GetCTM";"Returns the 4-by-4 double-precision floating-point graphics transform matrix from the current object upward through the graphics tree.";"70";"IDLgrModel__GetCTM.html";"2682"
"3287";"IDLgrModel::GetProperty";"Retrieves the value of a property or group of properties for the object.";"70";"IDLgrModel__GetProperty.html";"2498"
"3288";"IDLgrModel::Init";"Initializes the object.";"70";"IDLgrModel__Init.html";"2736"
"3290";"IDLgrModel::Reset";"Sets the current transform matrix for the model object to the identity matrix.";"70";"IDLgrModel__Reset.html";"2630"
"3291";"IDLgrModel::Rotate";"Rotates the model about the specified axis by the specified angle.";"70";"IDLgrModel__Rotate.html";"2751"
"3292";"IDLgrModel::Scale";"Scales the model by the specified scaling factors.";"70";"IDLgrModel__Scale.html";"3024"
"3293";"IDLgrModel::SetProperty";"Sets the value of a property or group of properties for the object.";"70";"IDLgrModel__SetProperty.html";"2514"
"3294";"IDLgrModel::Translate";"Translates the model by the specified translation offsets.";"70";"IDLgrModel__Translate.html";"2647"
"3295";"IDLgrPDF";"A destination object that outputs to a PDF file.";"69";"IDLgrPDF.html";"2888"
"3296";"IDLgrPalette";"Represents a color lookup table that maps indices to red, green, and blue values.";"71";"IDLgrPalette.html";"4977"
"3297";"IDLgrPalette Properties";;"71";"IDLgrPalette_Properties.html";"2728"
"3298";"IDLgrPalette::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrPalette__Cleanup.html";"2175"
"3299";"IDLgrPalette::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrPalette__GetPropert.html";"2358"
"3300";"IDLgrPalette::GetRGB";"Returns the RGB values contained in the palette at the given index.";"71";"IDLgrPalette__GetRGB.html";"2616"
"3301";"IDLgrPalette::Init";"Initializes the object.";"71";"IDLgrPalette__Init.html";"2878"
"3302";"IDLgrPalette::LoadCT";"Loads one of the IDL predefined color tables into an IDLgrPalette object.";"71";"IDLgrPalette__LoadCT.html";"2826"
"3303";"IDLgrPalette::NearestColor";"Returns the index of the color in the palette that best matches the given RGB values.";"71";"IDLgrPalette__NearestCol.html";"2341"
"3304";"IDLgrPalette::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrPalette__SetPropert.html";"2187"
"3305";"IDLgrPalette::SetRGB";"Sets the color values at a specified index in the palette to the specified Red, Green and Blue values.";"71";"IDLgrPalette__SetRGB.html";"2318"
"3306";"IDLgrPattern";"Describes which pixels are filled and which are left blank when an area is filled.";"71";"IDLgrPattern.html";"3379"
"3307";"IDLgrPattern Properties";;"71";"IDLgrPattern_Properties.html";"2437"
"3308";"IDLgrPattern::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrPattern__Cleanup.html";"2227"
"3309";"IDLgrPattern::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrPattern__GetPropert.html";"2245"
"3310";"IDLgrPattern::Init";"Initializes the object.";"71";"IDLgrPattern__Init.html";"2485"
"3311";"IDLgrPattern::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrPattern__SetPropert.html";"2334"
"3312";"IDLgrPlot";"Creates set of polylines connecting data points in 2D space.";"71";"IDLgrPlot.html";"4506"
"3313";"IDLgrPlot Properties";;"71";"IDLgrPlot_Properties.html";"3654"
"3314";"IDLgrPlot::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrPlot__Cleanup.html";"2331"
"3315";"IDLgrPlot::GetCTM";"Returns the 4-by-4 double-precision floating-point graphics transform matrix from the current object upward through the graphics tree.";"71";"IDLgrPlot__GetCTM.html";"2220"
"3316";"IDLgrPlot::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrPlot__GetProperty.html";"2251"
"3317";"IDLgrPlot::GetVertexAttributeData";"Retrieves the data associated with a named attribute variable containing per-vertex attribute data.";"71";"IDLgrPlot__GetVertexAttr.html";"2314"
"3318";"IDLgrPlot::Init";"Initializes the object.";"71";"IDLgrPlot__Init.html";"2229"
"3319";"IDLgrPlot::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrPlot__SetProperty.html";"2449"
"3320";"IDLgrPlot::SetVertexAttributeData";"Passes a set of per-vertex attribute data to a vertex shader program.";"71";"IDLgrPlot__SetVertexAttr.html";"2398"
"3321";"IDLgrPolygon";"Represents one or more polygons that share a given set of vertices and rendering attributes.";"71";"IDLgrPolygon.html";"4803"
"3322";"IDLgrPolygon Properties";;"71";"IDLgrPolygon_Properties.html";"4884"
"3323";"IDLgrPolygon::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrPolygon__Cleanup.html";"2142"
"3324";"IDLgrPolygon::GetCTM";"Returns the 4-by-4 double-precision floating-point graphics transform matrix from the current object upward through the graphics tree.";"71";"IDLgrPolygon__GetCTM.html";"2170"
"3325";"IDLgrPolygon::GetMultiTextureCoord";"Returns the texture coordinates associated with a given Unit.";"71";"IDLgrPolygon__GetMultiTe.html";"2278"
"3326";"IDLgrPolygon::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrPolygon__GetPropert.html";"2364"
"3327";"IDLgrPolygon::GetVertexAttributeData";"Retrieves the data associated with a named attribute variable containing per-vertex attribute data.";"71";"IDLgrPolygon__GetVertexA.html";"2284"
"3328";"IDLgrPolygon::Init";"Initializes the object.";"71";"IDLgrPolygon__Init.html";"2626"
"3329";"IDLgrPolygon::SetMultiTextureCoord";"Passes texture coordinates to a shader program when the shader program applies more than one texture to an object.";"71";"IDLgrPolygon__SetMultiTe.html";"2325"
"3330";"IDLgrPolygon::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrPolygon__SetPropert.html";"2390"
"3331";"IDLgrPolygon::SetVertexAttributeData";"Passes a set of per-vertex attribute data to a vertex shader program";"71";"IDLgrPolygon__SetVertexA.html";"7330"
"3332";"IDLgrPolyline";"Represents one or more polylines that share a set of vertices and rendering attributes.";"71";"IDLgrPolyline.html";"4603"
"3333";"IDLgrPolyline Properties";;"71";"IDLgrPolyline_Properties.html";"3076"
"3334";"IDLgrPolyline::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrPolyline__Cleanup.html";"2180"
"3335";"IDLgrPolyline::GetCTM";"Returns the 4-by-4 double-precision floating-point graphics transform matrix from the current object upward through the graphics tree.";"71";"IDLgrPolyline__GetCTM.html";"1962"
"3336";"IDLgrPolyline::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrPolyline__GetProper.html";"2345"
"3337";"IDLgrPolyline::GetVertexAttributeData";"Retrieves the data associated with a named attribute variable containing per-vertex attribute data.";"71";"IDLgrPolyline__GetVertex.html";"2245"
"3338";"IDLgrPolyline::Init";"Initializes the object.";"71";"IDLgrPolyline__Init.html";"2403"
"3339";"IDLgrPolyline::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrPolyline__SetProper.html";"2355"
"3340";"IDLgrPolyline::SetVertexAttributeData";"Passes a set of per-vertex attribute data to a vertex shader program.";"71";"IDLgrPolyline__SetVertex.html";"2631"
"3341";"IDLgrPrinter";"Represents a hardcopy graphics destination.";"69";"IDLgrPrinter.html";"4254"
"3342";"IDLgrPrinter Properties";;"69";"IDLgrPrinter_Properties.html";"2481"
"3343";"IDLgrPrinter::Cleanup";"Performs all cleanup on the object.";"69";"IDLgrPrinter__Cleanup.html";"2210"
"3344";"IDLgrPrinter::Draw";"Draws the given picture to this graphics destination.";"69";"IDLgrPrinter__Draw.html";"2597"
"3345";"IDLgrPrinter::GetContiguousPixels";"Returns an array of long integers whose length is equal to the number of colors available in the index color mode (that is, the value of the N_COLORS property).";"69";"IDLgrPrinter__GetContigu.html";"2390"
"3346";"IDLgrPrinter::GetFontnames";"Returns the list of available fonts that can be used in IDLgrFont objects.";"69";"IDLgrPrinter__GetFontnam.html";"2229"
"3347";"IDLgrPrinter::GetProperty";"Retrieves the value of a property or group of properties for the object.";"69";"IDLgrPrinter__GetPropert.html";"2385"
"3348";"IDLgrPrinter::GetTextDimensions";"Retrieves the dimensions of a text or axis object that will be rendered in a window.";"69";"IDLgrPrinter__GetTextDim.html";"2427"
"3349";"IDLgrPrinter::Init";"Initializes the object.";"69";"IDLgrPrinter__Init.html";"2324"
"3350";"IDLgrPrinter::NewDocument";"Closes the current document (a page or group of pages), which causes any pending output to be sent to the printer, finishing the printer job.";"69";"IDLgrPrinter__NewDocumen.html";"2265"
"3351";"IDLgrPrinter::NewPage";"Issues a new page command to the printer.";"69";"IDLgrPrinter__NewPage.html";"2474"
"3353";"IDLgrPrinter::QueryRequiredTiles";"Used in conjunction with an IDLgrImage object that supports tiling.";"69";"IDLgrPrinter__QueryRequi.html";"2349"
"3354";"IDLgrPrinter::SetProperty";"Sets the value of a property or group of properties for the object.";"69";"IDLgrPrinter__SetPropert.html";"2162"
"3355";"IDLgrROI";"Object graphics representation of a region of interest.";"71";"IDLgrROI.html";"4316"
"3356";"IDLgrROIGroup";"Object Graphics representation of a group of regions of interest.";"71";"IDLgrROIGroup.html";"2809"
"3357";"IDLgrROIGroup Properties";;"71";"IDLgrROIGroup_Properties.html";"2758"
"3358";"IDLgrROIGroup::Add";"Adds a child to the object.";"71";"IDLgrROIGroup__Add.html";"2322"
"3359";"IDLgrROIGroup::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrROIGroup__Cleanup.html";"2175"
"3360";"IDLgrROIGroup::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrROIGroup__GetProper.html";"2299"
"3361";"IDLgrROIGroup::Init";"Initializes the object.";"71";"IDLgrROIGroup__Init.html";"2380"
"3362";"IDLgrROIGroup::PickRegion";"Picks a region within the group which, when projected onto the given destination device, is nearest to the given 2-D device coordinate.";"71";"IDLgrROIGroup__PickRegio.html";"2079"
"3363";"IDLgrROIGroup::Remove";"Removes an object from the container.";"71";"IDLgrROIGroup__Remove.html";"2151"
"3364";"IDLgrROIGroup::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrROIGroup__SetProper.html";"2357"
"3365";"IDLgrROI Properties";;"71";"IDLgrROI_Properties.html";"2690"
"3366";"IDLgrROI::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrROI__Cleanup.html";"2189"
"3367";"IDLgrROI::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrROI__GetProperty.html";"2359"
"3368";"IDLgrROI::Init";"Initializes the object.";"71";"IDLgrROI__Init.html";"2433"
"3369";"IDLgrROI::PickVertex";"Picks a vertex of the region which, when projected onto the given destination device, is nearest to the given 2-D device coordinate.";"71";"IDLgrROI__PickVertex.html";"2131"
"3370";"IDLgrROI::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrROI__SetProperty.html";"2266"
"3371";"IDLgrScene";"Represents the entire scene to be drawn and serves as a container of IDLgrView or IDLgrViewgroup objects.";"70";"IDLgrScene.html";"3493"
"3372";"IDLgrScene Properties";;"70";"IDLgrScene_Properties.html";"2477"
"3373";"IDLgrScene::Add";"Adds a child to the object.";"70";"IDLgrScene__Add.html";"2733"
"3374";"IDLgrScene::Cleanup";"Performs all cleanup on the object.";"70";"IDLgrScene__Cleanup.html";"2257"
"3375";"IDLgrScene::GetByName";"Finds contained objects by name.";"70";"IDLgrScene__GetByName.html";"2476"
"3376";"IDLgrScene::GetProperty";"Retrieves the value of a property or group of properties for the object.";"70";"IDLgrScene__GetProperty.html";"2279"
"3377";"IDLgrScene::Init";"Initializes the object.";"70";"IDLgrScene__Init.html";"2362"
"3379";"IDLgrScene::SetProperty";"Sets the value of a property or group of properties for the object.";"70";"IDLgrScene__SetProperty.html";"2281"
"3380";"IDLgrShader";"Provides access to the hardware-based processing power available on some modern graphics cards.";"72";"IDLgrShader.html";"6806"
"3381";"IDLgrShaderBytscl";"Lets you quickly perform a BYTSCL operation on the image data.";"72";"IDLgrShaderBytscl.html";"2382"
"3382";"IDLgrShaderBytscl Properties";;"72";"IDLgrShaderBytscl_Proper.html";"2467"
"3383";"IDLgrShaderBytscl::Cleanup";"Performs all cleanup on the object.";"72";"IDLgrShaderBytscl__Clean.html";"2175"
"3384";"IDLgrShaderBytscl::GetProperty";"Retrieves the value of a property or group of properties for the object.";"72";"IDLgrShaderBytscl__GetPr.html";"2131"
"3385";"IDLgrShaderBytscl::Init";"Initializes the object.";"72";"IDLgrShaderBytscl__Init.html";"2256"
"3386";"IDLgrShaderBytscl::SetProperty";"Sets the value of a property or group of properties for the object.";"72";"IDLgrShaderBytscl__SetPr.html";"2396"
"3387";"IDLgrShaderConvol3";"Performs general 3x3 convolution operations.";"72";"IDLgrShaderConvol3.html";"2306"
"3388";"IDLgrShaderConvol3 Properties";;"72";"IDLgrShaderConvol3_Prope.html";"2157"
"3389";"IDLgrShaderConvol3::Cleanup";"Performs all cleanup on the object.";"72";"IDLgrShaderConvol3__Clea.html";"1874"
"3390";"IDLgrShaderConvol3::GetProperty";"Retrieves the value of a property or group of properties for the object.";"72";"IDLgrShaderConvol3__GetP.html";"2215"
"3391";"IDLgrShaderConvol3::Init";"Initializes the object.";"72";"IDLgrShaderConvol3__Init.html";"2173"
"3392";"IDLgrShaderConvol3::SetProperty";"Sets the value of a property or group of properties for the object.";"72";"IDLgrShaderConvol3__SetP.html";"2118"
"3393";"IDLgrShader Properties";;"72";"IDLgrShader_Properties.html";"2558"
"3394";"IDLgrShader::Cleanup";"Performs all cleanup on the object.";"72";"IDLgrShader__Cleanup.html";"2315"
"3395";"IDLgrShader::Filter";"Provides a way to implement a software-based fallback for an image filtering shader program when the graphics card hardware does not support shading language.";"72";"IDLgrShader__Filter.html";"2731"
"3396";"IDLgrShader::GetProperty";"Retrieves the value of a property or group of properties for the object.";"72";"IDLgrShader__GetProperty.html";"2137"
"3397";"IDLgrShader::GetUniformVariable";"Returns the value of a named uniform variable.";"72";"IDLgrShader__GetUniformV.html";"2287"
"3398";"IDLgrShader::Init";"Initializes the object.";"72";"IDLgrShader__Init.html";"2257"
"3399";"IDLgrShader::SetProperty";"Sets the value of a property or group of properties for the object.";"72";"IDLgrShader__SetProperty.html";"2243"
"3400";"IDLgrShader::SetUniformVariable";"Assigns a value to a named uniform variable.";"72";"IDLgrShader__SetUniformV.html";"2532"
"3401";"IDLgrSurface";"Represents a shaded or vector representation of a mesh grid.";"71";"IDLgrSurface.html";"3389"
"3402";"IDLgrSurface Properties";;"71";"IDLgrSurface_Properties.html";"2817"
"3403";"IDLgrSurface::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrSurface__Cleanup.html";"2168"
"3404";"IDLgrSurface::GetCTM";"Returns the 4-by-4 double-precision floating-point graphics transform matrix from the current object upward through the graphics tree.";"71";"IDLgrSurface__GetCTM.html";"2123"
"3405";"IDLgrSurface::GetMultiTextureCoord";"Returns the texture coordinates associated with a given Unit.";"71";"IDLgrSurface__GetMultiTe.html";"2149"
"3406";"IDLgrSurface::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrSurface__GetPropert.html";"2228"
"3407";"IDLgrSurface::GetVertexAttributeData";"Retrieves the data associated with a named attribute variable containing per-vertex attribute data.";"71";"IDLgrSurface__GetVertexA.html";"2267"
"3408";"IDLgrSurface::Init";"Initializes the object.";"71";"IDLgrSurface__Init.html";"2447"
"3409";"IDLgrSurface::SetMultiTextureCoord";"Passes texture coordinates to a shader program when the shader program applies more than one texture to an object.";"71";"IDLgrSurface__SetMultiTe.html";"2529"
"3410";"IDLgrSurface::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrSurface__SetPropert.html";"2427"
"3411";"IDLgrSurface::SetVertexAttributeData";"Passes a set of per-vertex attribute data to a vertex shader program.";"71";"IDLgrSurface__SetVertexA.html";"2227"
"3412";"IDLgrSymbol";"Represents a graphical element that is plotted relative to a particular position.";"71";"IDLgrSymbol.html";"4126"
"3413";"IDLgrSymbol Properties";;"71";"IDLgrSymbol_Properties.html";"2627"
"3414";"IDLgrSymbol::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrSymbol__Cleanup.html";"2156"
"3415";"IDLgrSymbol::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrSymbol__GetProperty.html";"2369"
"3416";"IDLgrSymbol::Init";"Initializes the object.";"71";"IDLgrSymbol__Init.html";"2711"
"3417";"IDLgrSymbol::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrSymbol__SetProperty.html";"2453"
"3418";"IDLgrTessellator";"Decomposes a polygon description into a set of triangles to convert complex and/or concave polygons into a convex form suitable for drawing with the IDLgrPolygon object.";"72";"IDLgrTessellator.html";"3137"
"3419";"IDLgrTessellator Properties";;"72";"IDLgrTessellator_Propert.html";"1305"
"3420";"IDLgrTessellator::AddPolygon";"Adds a polygon to the tessellator object.";"72";"IDLgrTessellator__AddPol.html";"2360"
"3421";"IDLgrTessellator::Cleanup";"Performs all cleanup on the object.";"72";"IDLgrTessellator__Cleanu.html";"2170"
"3422";"IDLgrTessellator::Reset";"Resets the object's internal state.";"72";"IDLgrTessellator__Reset.html";"2095"
"3423";"IDLgrTessellator::Tessellate";"Performs the actual tessellation.";"72";"IDLgrTessellator__Tessel.html";"7416"
"3424";"IDLgrText";"Represents one or more text strings that share common rendering attributes.";"71";"IDLgrText.html";"4388"
"3425";"IDLgrTextEdit";"Extension of the IDLgrText object class that provides several methods that allow modification of the existing text strings.";"71";"IDLgrTextEdit.html";"2677"
"3426";"IDLgrTextEdit Properties";;"71";"IDLgrTextEdit_Properties.html";"1279"
"3427";"IDLgrTextEdit::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrTextEdit__Cleanup.html";"2232"
"3428";"IDLgrTextEdit::Delete";"Removes text from a string at the current cursor position.";"71";"IDLgrTextEdit__Delete.html";"2250"
"3429";"IDLgrTextEdit::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrTextEdit__GetProper.html";"2310"
"3430";"IDLgrTextEdit::Init";"Initializes the object.";"71";"IDLgrTextEdit__Init.html";"2479"
"3431";"IDLgrTextEdit::Insert";"Inserts text at the current cursor position.";"71";"IDLgrTextEdit__Insert.html";"2637"
"3432";"IDLgrTextEdit::MoveCursor";"Moves the cursor one space in the direction indicated by the direction argument.";"71";"IDLgrTextEdit__MoveCurso.html";"2158"
"3433";"IDLgrTextEdit::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrTextEdit__SetProper.html";"2663"
"3434";"IDLgrText Properties";;"71";"IDLgrText_Properties.html";"4186"
"3435";"IDLgrText::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrText__Cleanup.html";"2238"
"3436";"IDLgrText::GetCTM";"Returns the 4-by-4 double-precision floating-point graphics transform matrix from the current object upward through the graphics tree.";"71";"IDLgrText__GetCTM.html";"2058"
"3437";"IDLgrText::GetIndexAtCoord";"Returns the index of the character in the string closest to a specified screen coordinate.";"71";"IDLgrText__GetIndexAtCoo.html";"2175"
"3438";"IDLgrText::GetIndexRelativeTo";"Returns the index of the character in the string closest to a given coordinate.";"71";"IDLgrText__GetIndexRelat.html";"2152"
"3439";"IDLgrText::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrText__GetProperty.html";"2202"
"3440";"IDLgrText::Init";"Initializes the object.";"71";"IDLgrText__Init.html";"2478"
"3441";"IDLgrText::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrText__SetProperty.html";"2323"
"3442";"IDLgrVRML";"Saves the contents of an Object Graphics hierarchy into a VRML 2.0 format file.";"69";"IDLgrVRML.html";"11156"
"3443";"IDLgrVRML Properties";;"69";"IDLgrVRML_Properties.html";"2431"
"3444";"IDLgrVRML::Cleanup";"Performs all cleanup on the object.";"69";"IDLgrVRML__Cleanup.html";"2243"
"3445";"IDLgrVRML::Draw";"Draws the given picture to this graphics destination.";"69";"IDLgrVRML__Draw.html";"2276"
"3446";"IDLgrVRML::GetDeviceInfo";"Returns information which allows IDL applications to intelligently make decisions for optimal performance.";"69";"IDLgrVRML__GetDeviceInfo.html";"2352"
"3447";"IDLgrVRML::GetFontnames";"Returns the list of available fonts that can be used in IDLgrFont objects.";"69";"IDLgrVRML__GetFontnames.html";"2278"
"3448";"IDLgrVRML::GetProperty";"Retrieves the value of a property or group of properties for the object.";"69";"IDLgrVRML__GetProperty.html";"2438"
"3449";"IDLgrVRML::GetTextDimensions";"Retrieves the dimensions of a text or axis object that will be rendered in a window.";"69";"IDLgrVRML__GetTextDimens.html";"2451"
"3450";"IDLgrVRML::Init";"Initializes the object.";"69";"IDLgrVRML__Init.html";"2406"
"3452";"IDLgrVRML::SetProperty";"Sets the value of a property or group of properties for the object.";"69";"IDLgrVRML__SetProperty.html";"2278"
"3453";"IDLgrView";"Represents a rectangular area in which graphics objects are drawn.";"70";"IDLgrView.html";"5545"
"3454";"IDLgrView Properties";;"70";"IDLgrView_Properties.html";"6100"
"3455";"IDLgrView::Add";"Adds a child to the object.";"70";"IDLgrView__Add.html";"2656"
"3456";"IDLgrView::Cleanup";"Performs all cleanup on the object.";"70";"IDLgrView__Cleanup.html";"2340"
"3457";"IDLgrView::GetByName";"Finds contained objects by name.";"70";"IDLgrView__GetByName.html";"2347"
"3458";"IDLgrView::GetProperty";"Retrieves the value of a property or group of properties for the object.";"70";"IDLgrView__GetProperty.html";"2265"
"3459";"IDLgrView::Init";"Initializes the object.";"70";"IDLgrView__Init.html";"2490"
"3461";"IDLgrView::SetProperty";"Sets the value of a property or group of properties for the object.";"70";"IDLgrView__SetProperty.html";"1309"
"3462";"IDLgrViewgroup";"Represents a simple container object, very similar to the IDLgrScene object, but can contain objects without a Draw method in addition to IDLgrView objects.";"70";"IDLgrViewgroup.html";"2776"
"3463";"IDLgrViewgroup Properties";;"70";"IDLgrViewgroup_Propertie.html";"2152"
"3464";"IDLgrViewgroup::Add";"Adds a child to the object.";"70";"IDLgrViewgroup__Add.html";"2312"
"3465";"IDLgrViewgroup::Cleanup";"Performs all cleanup on the object.";"70";"IDLgrViewgroup__Cleanup.html";"2028"
"3466";"IDLgrViewgroup::GetByName";"Finds contained objects by name.";"70";"IDLgrViewgroup__GetByNam.html";"2356"
"3467";"IDLgrViewgroup::GetProperty";"Retrieves the value of a property or group of properties for the object.";"70";"IDLgrViewgroup__GetPrope.html";"2289"
"3468";"IDLgrViewgroup::Init";"Initializes the object.";"70";"IDLgrViewgroup__Init.html";"2161"
"3470";"IDLgrViewgroup::SetProperty";"Sets the value of a property or group of properties for the object.";"70";"IDLgrViewgroup__SetPrope.html";"2207"
"3471";"IDLgrVolume";"Represents a mapping from a 3D array of data to a 3D array of voxel colors, which, when drawn, are projected to two dimensions.";"71";"IDLgrVolume.html";"3871"
"3472";"IDLgrVolume Properties";;"71";"IDLgrVolume_Properties.html";"3278"
"3473";"IDLgrVolume::Cleanup";"Performs all cleanup on the object.";"71";"IDLgrVolume__Cleanup.html";"2024"
"3474";"IDLgrVolume::ComputeBounds";"Computes the smallest bounding box that contains all voxels whose opacity lookup is greater than a given opacity value.";"71";"IDLgrVolume__ComputeBoun.html";"2207"
"3475";"IDLgrVolume::GetCTM";"Returns the 4-by-4 double-precision floating-point graphics transform matrix from the current object upward through the graphics tree.";"71";"IDLgrVolume__GetCTM.html";"2086"
"3476";"IDLgrVolume::GetProperty";"Retrieves the value of a property or group of properties for the object.";"71";"IDLgrVolume__GetProperty.html";"2266"
"3477";"IDLgrVolume::GetVertexAttributeData";"Retrieves the data associated with a named attribute variable containing per-vertex attribute data.";"71";"IDLgrVolume__GetVertexAttributeData.html";"2211"
"3478";"IDLgrVolume::Init";"Initializes the object.";"71";"IDLgrVolume__Init.html";"2130"
"3479";"IDLgrVolume::PickVoxel";"Computes the coordinates of the voxel projected to a location specified by the 2-D device coordinates point, [xi, yi], and the current Z-buffer.";"71";"IDLgrVolume__PickVoxel.html";"1931"
"3480";"IDLgrVolume::SetProperty";"Sets the value of a property or group of properties for the object.";"71";"IDLgrVolume__SetProperty.html";"2359"
"3481";"IDLgrVolume::SetVertexAttributeData";"Passes a set of per-vertex attribute data to a vertex shader program.";"71";"IDLgrVolume__SetVertexAttributeData.html";"1997"
"3482";"IDLgrWindow";"Represents an on-screen area on a display device that serves as a graphics destination.";"69";"IDLgrWindow.html";"5429"
"3483";"IDLgrWindow Properties";;"69";"IDLgrWindow_Properties.html";"3631"
"3484";"IDLgrWindow::Cleanup";"Performs all cleanup on the object.";"69";"IDLgrWindow__Cleanup.html";"2422"
"3485";"IDLgrWindow::Draw";"Draws the specified scene or view object to this graphics destination.";"69";"IDLgrWindow__Draw.html";"2992"
"3486";"IDLgrWindow::Erase";"Erases the entire contents of the window and initializes the depth buffer.";"69";"IDLgrWindow__Erase.html";"2443"
"3487";"IDLgrWindow::GetContiguousPixels";"Returns an array of long integers whose length is equal to the number of colors available in the index color mode (that is, the value of the N_COLORS property).";"69";"IDLgrWindow__GetContiguo.html";"2225"
"3488";"IDLgrWindow::GetDeviceInfo";"Returns information which allows IDL applications to intelligently make decisions for optimal performance.";"69";"IDLgrWindow__GetDeviceIn.html";"3219"
"3489";"IDLgrWindow::GetDimensions";"Returns a two-element vector, [width, height], representing the visible dimensions (in pixel units) of this window.";"69";"IDLgrWindow__GetDimensio.html";"2559"
"3490";"IDLgrWindow::GetFontnames";"Returns the list of available fonts that can be used in IDLgrFont objects.";"69";"IDLgrWindow__GetFontname.html";"2149"
"3491";"IDLgrWindow::GetProperty";"Retrieves the value of a property or group of properties for the object.";"69";"IDLgrWindow__GetProperty.html";"2376"
"3492";"IDLgrWindow::GetTextDimensions";"Retrieves the dimensions of a text or axis object that will be rendered in a window.";"69";"IDLgrWindow__GetTextDime.html";"2254"
"3493";"IDLgrWindow::Iconify";"Iconifies or de-iconifies the window.";"69";"IDLgrWindow__Iconify.html";"2410"
"3494";"IDLgrWindow::Init";"Initializes the object.";"69";"IDLgrWindow__Init.html";"2555"
"3495";"IDLgrWindow::OnEnter";"Handles notification from the window that a mouse enter event has occurred.";"69";"IDLgrWindow__OnEnter.html";"2384"
"3496";"IDLgrWindow::OnExit";"Handles notification from the window that a mouse exit event has occurred.";"69";"IDLgrWindow__OnExit.html";"2270"
"3497";"IDLgrWindow::OnExpose";"Handles notification from the window that an expose event has occurred.";"69";"IDLgrWindow__OnExpose.html";"2161"
"3498";"IDLgrWindow::OnKeyboard";"Handles notification from the window that a keyboard event has occurred.";"69";"IDLgrWindow__OnKeyboard.html";"2344"
"3499";"IDLgrWindow::OnMouseDown";"Handles notification from the window that a mouse-down event has occurred.";"69";"IDLgrWindow__OnMouseDown.html";"2538"
"3500";"IDLgrWindow::OnMouseMotion";"Handles notification from the window that a mouse-motion event has occurred.";"69";"IDLgrWindow__OnMouseMoti.html";"2557"
"3501";"IDLgrWindow::OnMouseUp";"Handles notification from the window that a mouse-up event has occurred.";"69";"IDLgrWindow__OnMouseUp.html";"2328"
"3502";"IDLgrWindow::OnResize";"Handles notification from the window that a resize event has occurred.";"69";"IDLgrWindow__OnResize.html";"2267"
"3503";"IDLgrWindow::OnWheel";"Handles notification (from the native window device) that a mouse wheel event has occurred.";"69";"IDLgrWindow__OnWheel.html";"2311"
"3504";"IDLgrWindow::PickData";"Maps a point in the two-dimensional device space of the window to a point in the three-dimensional data space of an object tree.";"69";"IDLgrWindow__PickData.html";"2552"
"3505";"IDLgrWindow::QueryRequiredTiles";"Used in conjunction with an IDLgrImage object that supports tiling.";"69";"IDLgrWindow__QueryRequir.html";"2300"
"3506";"IDLgrWindow::Read";"Reads an image from a window.";"69";"IDLgrWindow__Read.html";"2402"
"3507";"IDLgrWindow::Select";"Returns a list of objects selected at a specified location.";"69";"IDLgrWindow__Select.html";"2405"
"3508";"IDLgrWindow::SetCurrentCursor";"Sets the current cursor image to be used while positioned over a drawing area.";"69";"IDLgrWindow__SetCurrentC.html";"2959"
"3509";"IDLgrWindow::SetCurrentZoom";"Sets the CURRENT_ZOOM property and sets the ZOOM_NSTEP property to the closest integer multiple of ZOOM_BASE that results in the specified zoom factor.";"69";"IDLgrWindow__SetCurrentZ.html";"2048"
"3510";"IDLgrWindow::SetProperty";"Sets the value of a property or group of properties for the object.";"69";"IDLgrWindow__SetProperty.html";"2250"
"3511";"IDLgrWindow::Show";"Exposes or hides a window.";"69";"IDLgrWindow__Show.html";"2062"
"3512";"IDLgrWindow::ZoomIn";"Increments the value of the ZOOM_NSTEP property and updates the value of the CURRENT_ZOOM property to reflect the product of the ZOOM_BASE and ZOOM_NSTEP properties.";"69";"IDLgrWindow__ZoomIn.html";"2321"
"3513";"IDLgrWindow::ZoomOut";"Decrements the value of the ZOOM_NSTEP property and updates the value of the CURRENT_ZOOM property to reflect the product of the ZOOM_BASE and ZOOM_NSTEP properties.";"69";"IDLgrWindow__ZoomOut.html";"2109"
"3514";"Graphics Object Classes";;"135";"objects_gr.html";"868"
"3515";"IDLgrTessellator::Init";"Initializes the object.";"72";"objects_gr1.html";"1314"
"3516";"Modifying Object Properties";;"135";"Object_Properties.html";"8578"
"3517";"Registered Properties";;"135";"Registered_Properties.html";"17455"
"3518";"Using the Class Reference";;"135";"Using_the_Class_Referenc.html";"4381"
"3519";"IDL_IDLBridge";"Creates and controls a synchronous or an asynchronous slave IDL process that can operate sequentially or in parallel with the main IDL process.";"76";"IDL_IDLBridge.html";"17518"
"3520";"IDL_IDLBridge Properties";;"76";"IDL_IDLBridge_Properties.html";"5932"
"3521";"IDL_IDLBridge::Abort";"Causes the asynchronous operation currently being executed by the child IDL process to abort, returning the child to the idle state.";"76";"IDL_IDLBridge__Abort.html";"3086"
"3522";"IDL_IDLBridge::Cleanup";"Performs all cleanup on the object.";"76";"IDL_IDLBridge__Cleanup.html";"3441"
"3523";"IDL_IDLBridge::Execute";"Causes the child IDL process to execute a given IDL command.";"76";"IDL_IDLBridge__Execute.html";"5341"
"3524";"IDL_IDLBridge::GetProperty";"Retrieves the value of a property or group of properties for the object.";"76";"IDL_IDLBridge__GetProper.html";"2671"
"3525";"IDL_IDLBridge::GetVar";"Copies the value of a variable from the child process to the parent process.";"76";"IDL_IDLBridge__GetVar.html";"3775"
"3526";"IDL_IDLBridge::Init";"Initializes the object.";"76";"IDL_IDLBridge__Init.html";"3052"
"3527";"IDL_IDLBridge::OnCallback";"Called automatically when an asynchronous command ends.";"76";"IDL_IDLBridge__OnCallbac.html";"4578"
"3528";"IDL_IDLBridge::SetProperty";"Sets the value of a property or group of properties for the object.";"76";"IDL_IDLBridge__SetProper.html";"2762"
"3529";"IDL_IDLBridge::SetVar";"Copies the value of a variable from the parent IDL process to the $MAIN$ level of the child process under the given name.";"76";"IDL_IDLBridge__SetVar.html";"3964"
"3530";"IDL_IDLBridge::Status";"Queries the state of an IDL_IDLBridge object.";"76";"IDL_IDLBridge__Status.html";"4184"
"3531";"IDL_Object";"A parent class that allows your object class to overload the behavior of one or more of IDL's standard operators.";"172";"IDL_Object.html";"6419"
"15323";"IDL_Object::_overloadPound";"Defines the behavior of the matrix multiplication (#) operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadPound.html";"1315"
"15321";"IDL_Object::_overloadPlusPlus";;"172";"IDL_Object_overloadPlusPlus.html";"1504"
"15322";"IDL_Object::_overloadPostIncrementCopy";;"172";"IDL_Object_overloadPostIncrementCopy.html";"1258"
"15320";"IDL_Object::_overloadPlus";"Defines the behavior of the addition (+) operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadPlus.html";"1325"
"15319";"IDL_Object::_overloadOR";"Defines the behavior of the bitwise OR operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadOR.html";"1240"
"15318";"IDL_Object::_overloadNOT";"Defines the behavior of the bitwise NOT operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadNOT.html";"1317"
"15317";"IDL_Object::_overloadNE";"Defines the behavior of the relational not-equal (NE) operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadNE.html";"1405"
"15316";"IDL_Object::_overloadMinusUnary";"Defines the behavior of the negation (unary -) operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadMinusUnary.html";"1311"
"15315";"IDL_Object::_overloadMinusMinus";;"172";"IDL_Object_overloadMinusMinus.html";"1599"
"15314";"IDL_Object::_overloadMinus";"Defines the behavior of the subtraction (-) operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadMinus.html";"1264"
"15313";"IDL_Object::_overloadMOD";"Defines the behavior of the MOD operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadMOD.html";"1428"
"15312";"IDL_Object::_overloadLessThan";"Defines the behavior of the minimum (<) operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadLessThan.html";"1235"
"15311";"IDL_Object::_overloadLT";"Defines the behavior of the relational less-than (LT) operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadLT.html";"1271"
"15310";"IDL_Object::_overloadLE";"Defines the behavior of the relational less-than-or-equal (LE) operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadLE.html";"1303"
"15308";"IDL_Object::_overloadImpliedPrint";"Returns a variable of any type to be printed out.";"172";"IDL_Object_overloadImpliedPrint.html";"1332"
"15309";"IDL_Object::_overloadIsTrue";"Defines the behavior of instances of objects that inherit from the IDL_Object class when a 'truth test' operation is applied.";"172";"IDL_Object_overloadIsTrue.html";"1182"
"15307";"IDL_Object::_overloadHelp";"Returns a scalar string or array of strings containing the 'help' information for the object.";"172";"IDL_Object_overloadHelp.html";"1297"
"15305";"IDL_Object::_overloadGT";"Defines the behavior of the relational greater-than (GT) operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadGT.html";"1461"
"15306";"IDL_Object::_overloadGreaterThan";"Defines the behavior of the maximum (>) operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadGreaterThan.html";"1235"
"15303";"IDL_Object::_overloadForeach";"Retrieves the value of the next object element.";"172";"IDL_Object_overloadForeach.html";"1359"
"15304";"IDL_Object::_overloadGE";"Defines the behavior of the relational greater-than-or-equal (GE) operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadGE.html";"1238"
"15302";"IDL_Object::_overloadEQ";"Defines the behavior of the relational equality (EQ) operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadEQ.html";"1393"
"15301";"IDL_Object::_overloadCaret";"Defines the behavior of the exponentiation (^) operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadCaret.html";"1351"
"15300";"IDL_Object::_overloadBracketsRightSide";"Defines the behavior of the array subscript ([]) operator (used on the right side of the equals sign) for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadBracketsRightSide.html";"1416"
"15299";"IDL_Object::_overloadBracketsLeftSide";"Defines the behavior of the array subscript ([]) operator (used on the left side of the equals sign) for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadBracketsLeftSide.html";"1219"
"15298";"IDL_Object::_overloadAsterisk";"Defines the behavior of the multiplication (*) operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadAsterisk.html";"1281"
"15297";"IDL_Object::_overloadAND";"Defines the behavior of the bitwise AND operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadAND.html";"1355"
"3561";"IDL_Savefile";"Provides complete query and restore capabilities for IDL SAVE files.";"76";"IDL_Savefile.html";"5842"
"3562";"IDL_Savefile Properties";;"76";"IDL_Savefile_Properties.html";"1566"
"3563";"IDL_Savefile::Cleanup";"Performs all cleanup on the object.";"76";"IDL_Savefile__Cleanup.html";"2791"
"3564";"IDL_Savefile::Contents";"Returns a structure variable of type IDL_SAVEFILE_CONTENTS containing information about the associated SAVE file and its contents.";"76";"IDL_Savefile__Contents.html";"3037"
"3565";"IDL_Savefile::Init";"Initializes the object.";"76";"IDL_Savefile__Init.html";"2564"
"3566";"IDL_Savefile::Names";"Returns names, or heap variable identifiers, of items contained within the SAVE file.";"76";"IDL_Savefile__Names.html";"3152"
"3567";"IDL_Savefile::Restore";"Selectively restores individual items from the associated SAVE file.";"76";"IDL_Savefile__Restore.html";"4587"
"3568";"IDL_Savefile::Size";"Returns the size and type information for the specified variable, system variable, or heap variable in the SAVE file associated with the savefile object, if no keywords are set.";"76";"IDL_Savefile__Size.html";"3456"
"3569";"IDLcomIDispatch";"Creates an IDL object that encapsulates a COM object.";"25";"IDLcomIDispatch.html";"3053"
"3570";"IDLcomIDispatch Properties";;"25";"IDLcomIDispatch_Properti.html";"2660"
"3571";"IDLcomIDispatch::GetProperty";"Retrieves the value of a property or group of properties for the object.";"25";"IDLcomIDispatch__GetProp.html";"2394"
"3572";"IDLcomIDispatch::Init";"Initializes the object.";"25";"IDLcomIDispatch__Init.html";"2584"
"3573";"IDLcomIDispatch::SetProperty";"Sets the value of a property or group of properties for the object.";"25";"IDLcomIDispatch__SetProp.html";"2655"
"3575";"IDLdbDatabase::Cleanup";"Performs all cleanup on the object.";"6";"IDLdbDatabase__Cleanup.html";"1762"
"3576";"IDLdbDatabase::Connect";"Connect to the data source associated with a database object.";"6";"IDLdbDatabase__Connect.html";"2250"
"3577";"IDLdbDatabase::ExecuteSQL";"Execute an SQL statement.";"6";"IDLdbDatabase__ExecuteSQ.html";"2690"
"3578";"IDLdbDatabase::GetDatasources";"Returns an array of available datasources.";"6";"IDLdbDatabase__GetDataso.html";"2180"
"3579";"IDLdbDatabase::GetProperty";"Retrieves the value of a property or group of properties for the object.";"6";"IDLdbDatabase__GetProper.html";"1963"
"3580";"IDLdbDatabase::GetTables";"Returns a list of available tables in the datasource.";"6";"IDLdbDatabase__GetTables.html";"2108"
"3581";"IDLdbDatabase::Init";"Initializes the object.";"6";"IDLdbDatabase__Init.html";"2170"
"3582";"IDLdbDatabase::SetProperty";"Sets the value of a property or group of properties for the object.";"6";"IDLdbDatabase__SetProper.html";"1824"
"3584";"IDLdbRecordset::AddRecord";"Adds a record to a recordset.";"6";"IDLdbRecordset__AddRecor.html";"2840"
"3585";"IDLdbRecordset::Cleanup";"Performs all cleanup on the object.";"6";"IDLdbRecordset__Cleanup.html";"1958"
"3586";"IDLdbRecordset::CurrentRecord";"Requests the current record number in a recordset.";"6";"IDLdbRecordset__CurrentR.html";"2063"
"3587";"IDLdbRecordset::DeleteRecord";"Delete the current record from a recordset.";"6";"IDLdbRecordset__DeleteRe.html";"2118"
"3588";"IDLdbRecordset::GetField";"Get the value of a field from the current record in the recordset.";"6";"IDLdbRecordset__GetField.html";"2436"
"3589";"IDLdbRecordset::GetProperty";"Retrieves the value of a property or group of properties for the object.";"6";"IDLdbRecordset__GetPrope.html";"2065"
"3590";"IDLdbRecordset::GetRecord";"Retrieve the value of the current record in an IDL DataMiner anonymous structure.";"6";"IDLdbRecordset__GetRecor.html";"2513"
"3591";"IDLdbRecordset::Init";"Initializes the object.";"6";"IDLdbRecordset__Init.html";"1919"
"3592";"IDLdbRecordset::MoveCursor";"Move the cursor in a given recordset.";"6";"IDLdbRecordset__MoveCurs.html";"1965"
"3593";"IDLdbRecordset::NFields";"Returns the number of fields in the recordset.";"6";"IDLdbRecordset__NFields.html";"1905"
"3594";"IDLdbRecordset::SetField";"Set the value of a field in the current record of a recordset.";"6";"IDLdbRecordset__SetField.html";"2031"
"3595";"IDLitComponent";"Base component from which all iTool components should subclass.";"41";"IDLitComponent.html";"3844"
"3596";"IDLitComponent Properties";;"41";"IDLitComponent_Propertie.html";"2587"
"3597";"IDLitComponent::Cleanup";"Performs all cleanup on the object.";"41";"IDLitComponent__Cleanup.html";"2327"
"3598";"IDLitComponent::EditUserDefProperty";"Defines the interface that is displayed when a user selects the 'Edit' button on a user-defined property in the property sheet interface.";"41";"IDLitComponent__EditUser.html";"2392"
"3599";"IDLitComponent::GetFullIdentifier";"Navigates the iTool object container hierarchy of the object on which it is called and retrieves the fully-qualified object identifier.";"41";"IDLitComponent__GetFullI.html";"2585"
"3600";"IDLitComponent::GetProperty";"Retrieves the value of a property or group of properties for the object.";"41";"IDLitComponent__GetPrope.html";"2525"
"3601";"IDLitComponent::GetPropertyAttribute";"Retrieves property attribute values for a registered property.";"41";"IDLitComponent__GetPrope1.html";"2892"
"3602";"IDLitComponent::GetPropertyByIdentifier";"Retrieves the value of an IDLitComponent property.";"41";"IDLitComponent__GetPrope2.html";"2320"
"3603";"IDLitComponent::Init";"Initializes the object.";"41";"IDLitComponent__Init.html";"2358"
"3604";"IDLitComponent::NotifyBridge";"Used to broadcast a notification message to the Export Bridge object that is wrapping the IDLitComponent object.";"41";"IDLitComponent__NotifyBr.html";"2605"
"3605";"IDLitComponent::QueryProperty";"Checks whether a property identifier is registered, or retrieves a list of all registered properties.";"41";"IDLitComponent__QueryPro.html";"2355"
"3606";"IDLitComponent::RegisterProperty";"Registers a property as belonging to the component.";"41";"IDLitComponent__Register.html";"6010"
"3607";"IDLitComponent::Restore";"Performs any transitional work required after an object of this class has been restored from a SAVE file, to ensure that its state is appropriate for the current version.";"41";"IDLitComponent__Restore.html";"2332"
"3608";"IDLitComponent::SetProperty";"Sets the value of a property or group of properties for the object.";"41";"IDLitComponent__SetPrope.html";"2414"
"3609";"IDLitComponent::SetPropertyAttribute";"Sets one or more property attributes for a registered property.";"41";"IDLitComponent__SetPrope1.html";"2836"
"3610";"IDLitComponent::SetPropertyByIdentifier";"Sets the value of an IDLitComponent property.";"41";"IDLitComponent__SetPrope2.html";"2698"
"3611";"IDLitComponent::UpdateComponentVersion";"Updates the value of the COMPONENT_VERSION property for the specified object to match the version associated with the current release of IDL.";"41";"IDLitComponent__UpdateCo.html";"2073"
"3612";"IDLitWindow";"Base class for all windows within the iTools framework.";"41";"IDLitWindow.html";"2238"
"3613";"IDLitWindow Methods";;"41";"IDLitWindowMethods.html";"2457"
"3614";"IDLjavaObject";"An IDL object encapsulating a Java object. IDL provides data type and other translation services, allowing IDL programs to access the Java object's methods and properties using standard IDL syntax.";"25";"IDLjavaObject.html";"3871"
"3615";"IDLjavaObject Properties";;"25";"IDLjavaObject_Properties.html";"2277"
"3616";"IDLjavaObject::GetProperty";"Retrieves the value of a property or group of properties for the object.";"25";"IDLjavaObject__GetProper.html";"3060"
"3617";"IDLjavaObject::Init";"Initializes the object.";"25";"IDLjavaObject__Init.html";"2128"
"3618";"IDLjavaObject::SetProperty";"Sets the value of a property or group of properties for the object.";"25";"IDLjavaObject__SetProper.html";"2896"
"3619";"IDLsysMonitorInfo";"Contains information about the display monitor or monitors attached to your system. Use this object to obtain information about the monitor(s) when building applications that use multiple monitors.";"74";"IDLsysMonitorInfo.html";"3390"
"3620";"IDLsysMonitorInfo Properties";;"74";"IDLsysMonitorInfo_Proper.html";"2537"
"3621";"IDLsysMonitorInfo::Cleanup";"Performs all cleanup on the object.";"74";"IDLsysMonitorInfo__Clean.html";"2593"
"3622";"IDLsysMonitorInfo::GetMonitorNames";"Retrieves, into an array, the X Window System Display name strings associated with each monitor on the system.";"74";"IDLsysMonitorInfo__GetMo.html";"2524"
"3623";"IDLsysMonitorInfo::GetNumberOfMonitors";"Retrieves the number of monitors available on the system.";"74";"IDLsysMonitorInfo__GetNu.html";"2891"
"3624";"IDLsysMonitorInfo::GetPrimaryMonitorIndex";"Retrieves the index of the monitor that is considered the system's primary monitor.";"74";"IDLsysMonitorInfo__GetPr.html";"2705"
"3625";"IDLsysMonitorInfo::GetProperty";"Retrieves the value of a property or group of properties for the object.";"74";"IDLsysMonitorInfo__GetPr1.html";"2375"
"3626";"IDLsysMonitorInfo::GetRectangles";"Retrieves the monitor coordinate rectangles.";"74";"IDLsysMonitorInfo__GetRe.html";"2434"
"3627";"IDLsysMonitorInfo::GetResolutions";"Retrieves the monitor resolutions (pixel sizes) as a [2, n] single-precision floating-point array in terms of centimeters per pixel";"74";"IDLsysMonitorInfo__GetRe1.html";"2193"
"3628";"IDLsysMonitorInfo::Init";"Initializes the object.";"74";"IDLsysMonitorInfo__Init.html";"2555"
"3629";"IDLsysMonitorInfo::IsExtendedDesktop";"Returns a Boolean value (0 or 1 as an IDL integer) that indicates if the display system is configured as an extended desktop across two or more monitors.";"74";"IDLsysMonitorInfo__IsExt.html";"2258"
"3630";"IDLsysMonitorInfo::SetProperty";"Sets the value of a property or group of properties for the object.";"74";"IDLsysMonitorInfo__SetPr.html";"2655"
"3631";"TrackBall";"Translates widget events from a draw widget into transformations that emulate a virtual trackball (for transforming object graphics in three dimensions).";"72";"TrackBall.html";"45654"
"3632";"TrackBall Properties";;"72";"TrackBall_Properties.html";"2716"
"3633";"TrackBall::Init";"Initializes the object.";"72";"TrackBall__Init.html";"5410"
"3634";"TrackBall::Reset";"Resets the state of the TrackBall object.";"72";"TrackBall__Reset.html";"2710"
"3635";"TrackBall::Update";"Updates the state of the TrackBall object based on the information contained in the input widget event structure.";"72";"TrackBall__Update.html";"3778"
"3636";"Miscellaneous Object Classes";;"135";"objects_misc.html";"934"
"3637";"About Network Objects";;"135";"About_Network_Objects.html";"1105"
"3638";"IDLnetOGCWCS";"Provides the ability to query and return data from and Open Geospatial Consortium Web Coverage Service server.";"73";"IDLnetOGCWCS.html";"3420"
"3639";"IDLnetOGCWCS Properties";;"73";"IDLnetOGCWCS_Properties.html";"2970"
"3640";"IDLnetOGCWCS::Cleanup";"Performs all cleanup on the object.";"73";"IDLnetOGCWCS__Cleanup.html";"2295"
"3641";"IDLnetOGCWCS::DescribeCoverage";"Retrieves an XML file containing one or more descriptive coverage offerings from a remote OGC WCS server, writes the file to disk, and parses the file contents before returning.";"73";"IDLnetOGCWCS__DescribeCo.html";"2610"
"3642";"IDLnetOGCWCS::GetCapabilities";"Retrieves an XML file containing coverage offering briefs from a remote OGC WCS server, writes the file to disk, and parses the file contents before returning.";"73";"IDLnetOGCWCS__GetCapabil.html";"3166"
"3643";"IDLnetOGCWCS::GetCoverage";"Retrieves a data file from a remote OGC WCS server, and writes the file to disk.";"73";"IDLnetOGCWCS__GetCoverag.html";"4459"
"3644";"IDLnetOGCWCS::GetCoverageOffering";"Returns a complex structure that contains the details of a single coverage offering, that was returned by  IDLnetOGCWCS::DescribeCoverage.";"73";"IDLnetOGCWCS__GetCoverag1.html";"4455"
"3645";"IDLnetOGCWCS::GetCoverageOfferingBriefs";"Provides access to the coverage offering briefs that were returned and parsed by the IDLnetOGCWCS::GetCapabilities method.";"73";"IDLnetOGCWCS__GetCoverag2.html";"2643"
"3646";"IDLnetOGCWCS::GetProperty";"Retrieves the value of a property or group of properties for the object.";"73";"IDLnetOGCWCS__GetPropert.html";"2691"
"3647";"IDLnetOGCWCS::GetServiceSection";"Returns the values found in the Service section of the XML file returned by IDLnetOGCWCS::GetCapabilities.";"73";"IDLnetOGCWCS__GetService.html";"2500"
"3648";"IDLnetOGCWCS::Init";"Initializes the object.";"73";"IDLnetOGCWCS__Init.html";"2546"
"3649";"IDLnetOGCWCS::ParseUrl";"Breaks down a given, valid URL to a remote WCS server into component parts and sets the corresponding IDLnetOGCWCS properties";"73";"IDLnetOGCWCS__ParseUrl.html";"3491"
"3650";"IDLnetOGCWCS::SetProperty";"Sets the value of a property or group of properties for the object.";"73";"IDLnetOGCWCS__SetPropert.html";"2307"
"3651";"IDLnetOGCWMS";"Provides the ability to query and return data from and Open Geospatial Consortium Web Map Service server.";"73";"IDLnetOGCWMS.html";"4259"
"3652";"IDLnetOGCWMS Properties";;"73";"IDLnetOGCWMS_Properties.html";"3152"
"3653";"IDLnetOGCWMS::Cleanup";"Performs all cleanup on the object.";"73";"IDLnetOGCWMS__Cleanup.html";"2514"
"3654";"IDLnetOGCWMS::GetCapabilities";"Retrieves an XML file containing layers describing geographic information from a remote OGC WMS server, writes the file to disk, and parses the file contents before returning.";"73";"IDLnetOGCWMS__GetCapabil.html";"3036"
"3655";"IDLnetOGCWMS::GetFeatureInfo";"Retrieves a feature information file from a remote OGC WMS server and writes the file to disk.";"73";"IDLnetOGCWMS__GetFeature.html";"3115"
"3656";"IDLnetOGCWMS::GetLayers";"Provides access to the layer details that were returned and parsed by the IDLnetOGCWMS::GetCapabilities method.";"73";"IDLnetOGCWMS__GetLayers.html";"3387"
"3657";"IDLnetOGCWMS::GetMap";"Retrieves a map file from a remote OGC WMS server, and writes the file to disk.";"73";"IDLnetOGCWMS__GetMap.html";"4050"
"3658";"IDLnetOGCWMS::GetProperty";"Retrieves the value of a property or group of properties for the object.";"73";"IDLnetOGCWMS__GetPropert.html";"2770"
"3659";"IDLnetOGCWMS::GetServiceSection";"Returns the values found in the Service section of the XML file returned by the IDLnetOGCWMS::GetCapabilities method.";"73";"IDLnetOGCWMS__GetService.html";"2582"
"3660";"IDLnetOGCWMS::Init";"Initializes the object.";"73";"IDLnetOGCWMS__Init.html";"2445"
"3661";"IDLnetOGCWMS::ParseUrl";"Breaks down a given, valid URL to a remote WCS server into component parts and sets the corresponding IDLnetOGCWCS properties.";"73";"IDLnetOGCWMS__ParseUrl.html";"2507"
"3662";"IDLnetOGCWMS::SetProperty";"Sets the value of a property or group of properties for the object.";"73";"IDLnetOGCWMS__SetPropert.html";"2705"
"3663";"IDLnetURL";"Allows IDL to act as a client to an HTTP or FTP server.";"73";"IDLnetURL.html";"21536"
"3664";"IDLnetURL Properties";;"73";"IDLnetURL_Properties.html";"5541"
"3665";"IDLnetURL::Cleanup";"Performs all cleanup on the object.";"73";"IDLnetURL__Cleanup.html";"2934"
"3666";"IDLnetURL::CloseConnections";"Closes all the existing connections to remote HTTP and FTP servers.";"73";"IDLnetURL__CloseConnecti.html";"2753"
"3667";"IDLnetURL::FtpCommand";"Used to execute FTP commands, delete files, make directories, delete directories, and change directories on the remote FTP server.";"73";"IDLnetURL__FtpCommand.html";"4148"
"3668";"IDLnetURL::Get";"Retrieves a resource from a remote HTTP or FTP server and writes it to disk, a memory buffer, or an array of strings.";"73";"IDLnetURL__Get.html";"7495"
"3669";"IDLnetURL::GetFtpDirList";"Retrieves a list of files (returned as an array of strings) available from a remote FTP server on a particular path.";"73";"IDLnetURL__GetFtpDirList.html";"20494"
"3670";"IDLnetURL::GetProperty";"Retrieves the value of a property or group of properties for the object.";"73";"IDLnetURL__GetProperty.html";"3158"
"3671";"IDLnetURL::Init";"Initializes the object.";"73";"IDLnetURL__Init.html";"3320"
"3672";"IDLnetURL::Put";"Sends a file or a buffer of data to a remote HTTP or FTP server.";"73";"IDLnetURL__Put.html";"6469"
"3673";"IDLnetURL::SetProperty";"Sets the value of a property or group of properties for the object.";"73";"IDLnetURL__SetProperty.html";"2728"
"3674";"Network Object Classes";;"135";"objects_network.html";"860"
"3675";"Object Class and Method Reference";;"135";"ref_part2.html";"5259"
"3676";"Acting on Objects Using Methods";;"135";"Acting_on_Objects_Using.html";"6163"
"3677";"Color and Destination Objects";;"135";"Color_and_Destination_Ob.html";"5546"
"3678";"Color in Object Graphics";;"135";"Color_in_Object_Graphics.html";"3913"
"3679";"Controlling Object Transparency";;"135";"Controlling_Object_Trans.html";"5611"
"3680";"Controlling the Depth of Objects in a View";;"135";"Controlling_the_Depth_of.html";"4792"
"3681";"Creating Custom Objects";;"135";"Creating_Custom_Objects.html";"5463"
"3682";"Creating Custom Object Method Routines";;"135";"Creating_Custom_Object_M_1.html";"6393"
"3683";"Creating Objects";;"135";"Creating_Objects.html";"4789"
"3684";"Creating Operator Overloading Methods";;"135";"Creating_Operator_Overlo.html";"7931"
"3685";"Creating an Object Class Structure";;"135";"Creating_an_Object_Class_1.html";"8672"
"3686";"Creating an Object Graphics Display";;"135";"Creating_an_Object_Graph.html";"5716"
"3687";"Destination Objects";;"135";"Destination_Objects.html";"4748"
"3688";"Destroying Objects";;"135";"Destroying_Objects.html";"7377"
"3689";"Display Objects";;"135";"Display_Objects.html";"5679"
"3690";"Example: Adding Object Color Values";;"135";"Example__Adding_Object_C.html";"5467"
"3691";"Example: Modifying an Object Data Array using Operator Overloading";;"135";"Example__Modifying_an_Ob.html";"4729"
"3692";"Example: Overloading Array Indexing Syntax";;"135";"Example__Overloading_Arr.html";"7232"
"3693";"Example: Overloading the SIZE and N_ELEMENTS Functions";;"135";"Example__Overloading_the1.html";"4915"
"3694";"Example: Overloading the HELP and PRINT/PRINTF Procedures";;"135";"Example__Overloading_the2.html";"6628"
"3695";"How IDL Interprets Color Values";;"135";"How_IDL_Interprets_Color.html";"5328"
"3696";"Method Overriding";;"135";"Method_Overriding_1.html";"6098"
"3697";"Object Examples";;"135";"Object_Examples.html";"6094"
"3698";"Object Graphics Display Hierarchy";;"135";"Object_Graphics_Display.html";"5896"
"3699";"Object Operator Overloading Overview";;"135";"Object_Operator_Overload.html";"6665"
"3701";"Overloadable Operators";;"135";"Overloadable_Operators.html";"4997"
"3702";"Overloaded Operator Precedence";;"135";"Overloaded_Operator_Prec.html";"4723"
"3703";"Overloading the Array Indexing Operator";;"135";"Overloading_the_Array_In.html";"7902"
"3704";"Overloading the HELP and PRINT/PRINTF Procedures";;"135";"Overloading_the_HELP_and.html";"4774"
"3705";"Overloading the SIZE and N_ELEMENTS Functions";;"135";"Overloading_the_SIZE_and.html";"5372"
"3706";"Overview of Object Graphics Classes";;"135";"Overview_of_Object_Graph.html";"6396"
"3707";"Palette Objects";;"135";"Palette_Objects.html";"6742"
"3708";"Performance Tuning Object Graphics";;"135";"Performance_Tuning_Objec.html";"8180"
"3709";"Rendering Objects";;"135";"Rendering_Objects.html";"8192"
"3710";"Replicating Non-Overloaded Behavior in Overloaded Operator Methods";;"135";"Replicating_Non_Overload.html";"4927"
"3711";"Returning Object Instances from Overloaded Methods";;"135";"Returning_Object_Instanc.html";"15909"
"3712";"Specifying Object Color";;"135";"Specifying_Object_Color.html";"5703"
"3713";"The Object Lifecycle";;"135";"The_Object_Lifecycle_1.html";"8934"
"3714";"Using IDL Operators with Objects";;"135";"Using_IDL_Operators_with.html";"5032"
"3715";"Visualization Objects";;"135";"Visualization_Objects.html";"7685"
"3716";"Other Topics";;"135";"OtherTopics.html";"5939"
"3717";"Advanced Math and Statistics";;"135";"AdvancedMathStats.html";"18228"
"3718";"DataMiner";;"135";"DataMiner.html";"6592"
"3720";"IDL Bridges";;"135";"IDL_Bridges.html";"6537"
"3721";"iTools Help";;"135";"iTools_books.html";"26745"
"3722";"Hardware and Operating System Requirements";;"135";"PlatformSupportTable.html";"9595"
"3723";"ProgrammingConcepts";;"135";"ProgrammingConcepts.html";"401"
"3724";"ProgrammingTasks";;"135";"ProgrammingTasks.html";"300"
"3725";"Starting IDL";;"135";"StartingIDL.html";"19596"
"3727";"What's New in IDL 8.4";;"135";"Whats_New_8_4.html";"36613"
"3728";"What's New in IDL 8.0";;"135";"WhatsNew_in_8_0.html";"10602"
"3729";"What's New in IDL 8.1";;"135";"WhatsNew_in_8_1.html";"7578"
"3731";"IDL Routines";;"135";"ref_part1.html";"11857"
"3734";"Documentation Center";"Explore IDL, ENVI and other Harris Geospatial product help and tutorials online now.";"4";"home.html";"312270"
"3736";"404 - Page not found";"404";"4";"404.html";"10933483"
"3741";"DIALOG_DBCONNECT";"Connect to the DBMS via the standard ODBC dialog boxes.";"6";"DIALOG_DBCONNECT.html";"2426"
"3742";"DB_EXISTS";"Determine if the database functionality is available.";"6";"DB_EXISTS.html";"2451"
"3743";"IDLdbDatabase";"Represents a connection to a datasource.";"6";"IDLdbDatabase.html";"2918"
"3744";"IDLdbRecordset";"Contains a database table or the results from an SQL query.";"6";"IDLdbRecordset.html";"2582"
"3745";"IDLffDicomEx";"Access, read from, and write to DICOM files.";"7";"IDLffDicomEx.html";"6091"
"3746";"IDLffDicomExCfg";"Set and retrieve the values of IDL DICOM Network Service configuration parameters.";"7";"IDLffDicomExCfg.html";"4878"
"3747";"IDLffDicomExQuery";"Query the contents of a remote DICOM node.";"7";"IDLffDicomExQuery.html";"4381"
"3748";"IDLffDicomExStorScu";"Implements a local DICOM Storage SCU.";"7";"IDLffDicomExStorScu.html";"4531"
"3749";"DICOMEX_GETCONFIGFILEPATH";"Returns the location of the local or system configuration file associated with Application Entities defined in the DICOM Network Services utility";"7";"DICOMEX_GETCONFIGFILEPAT.html";"5324"
"3750";"DICOMEX_GETSTORSCPDIR";"Return the location of the directory associated with the Storage SCP Service.";"7";"DICOMEX_GETSTORSCPDIR.html";"4559"
"3751";"DICOMEX_NET";"Launch the DICOM Network Services utility.";"7";"DICOMEX_NET.html";"5094"
"3752";"IDLffDICOM";"Object that contains the data for one or more images embedded in a DICOM Part 10 file.";"7";"IDLffDICOM.html";"6146"
"3753";"WV_APPLET";"Runs the IDL Wavelet Toolkit graphical user interface.";"139";"WV_APPLET.html";"3777"
"3754";"WV_CWT";"Returns the one-dimensional continuous wavelet transform of the input array.";"139";"WV_CWT.html";"4413"
"3755";"WV_CW_WAVELET";"Select and display wavelet functions.";"139";"WV_CW_WAVELET.html";"2773"
"3756";"WV_DENOISE";"Uses the wavelet transform to filter (or de-noise) a multi-dimensional array.";"139";"WV_DENOISE.html";"3529"
"3757";"WV_DWT";"Returns the multi-dimensional discrete wavelet transform of the input Array.";"139";"WV_DWT.html";"3492"
"3758";"WV_FN_COIFLET";"Constructs wavelet coefficients for the Coiflet wavelet function.";"139";"WV_FN_COIFLET.html";"2510"
"3759";"WV_FN_DAUBECHIES";"Constructs wavelet coefficients for the Daubechies wavelet function.";"139";"WV_FN_DAUBECHIES.html";"2826"
"3760";"WV_FN_GAUSSIAN";"Constructs wavelet coefficients for the Gaussian wavelet function.";"139";"WV_FN_GAUSSIAN.html";"2529"
"3761";"WV_FN_HAAR";"Constructs wavelet coefficients for the Haar wavelet function.";"139";"WV_FN_HAAR.html";"2817"
"3762";"WV_FN_MORLET";"Constructs wavelet coefficients for the Morlet wavelet function.";"139";"WV_FN_MORLET.html";"3405"
"3763";"WV_FN_PAUL";"Constructs wavelet coefficients for the Paul wavelet function.";"139";"WV_FN_PAUL.html";"2267"
"3764";"WV_FN_SYMLET";"Constructs wavelet coefficients for the Symlet wavelet function.";"139";"WV_FN_SYMLET.html";"2342"
"3765";"WV_IMPORT_DATA";"Add a variable to the currently active WV_APPLET widget from the IDL> command prompt.";"139";"WV_IMPORT_DATA.html";"2180"
"3766";"WV_IMPORT_WAVELET";"Add wavelet functions to the currently-active Wavelet Toolkit(s).";"139";"WV_IMPORT_WAVELET.html";"2204"
"3767";"WV_PLOT3D_WPS";"Graphical user interface for three-dimensional visualization of the wavelet power spectrum.";"139";"WV_PLOT3D_WPS.html";"2313"
"3768";"WV_PLOT_MULTIRES";"Graphical user interface for multiresolution analysis.";"139";"WV_PLOT_MULTIRES.html";"2054"
"3769";"WV_PWT";"Partial wavelet transform of the input vector A.";"139";"WV_PWT.html";"2467"
"3770";"WV_TOOL_DENOISE";"Graphical user interface for wavelet filtering and denoising.";"139";"WV_TOOL_DENOISE.html";"2080"
"3771";"IMSL_AIRY_AI";"Evaluates the Airy function.";"141";"IMSL_AIRY_AI.html";"2750"
"3772";"IMSL_AIRY_BI";"Evaluates the Airy function of the second kind.";"141";"IMSL_AIRY_BI.html";"1894"
"3773";"IMSL_ALLBEST";"Selects the best multiple linear regression models.";"141";"IMSL_ALLBEST.html";"1859"
"3774";"IMSL_ANOVA1";"Analyzes one-way classification model.";"141";"IMSL_ANOVA1.html";"2185"
"3775";"IMSL_ANOVABALANCED";"Balanced fixed, random, or mixed model.";"141";"IMSL_ANOVABALANCED.html";"1518"
"3776";"IMSL_ANOVAFACT";"Analyzes a balanced factorial design with fixed effects.";"141";"IMSL_ANOVAFACT.html";"2273"
"3777";"IMSL_ANOVANESTED";"Nested random mode.";"141";"IMSL_ANOVANESTED.html";"1692"
"3778";"IMSL_ARMA";"Computes method-of-moments or least-squares estimates of parameters for a nonseasonal ARMA model.";"141";"IMSL_ARMA.html";"2932"
"3779";"IMSL_AUTOCORRELATION";"Sample autocorrelation function.";"141";"IMSL_AUTOCORRELATION.html";"2838"
"3780";"IMSL_BESSI";"Evaluates a modified Bessel function of the first kind with real order and real or complex parameters.";"141";"IMSL_BESSI.html";"1965"
"3781";"IMSL_BESSI_EXP";"Evaluates the exponentially scaled modified Bessel function of the first kind of orders zero and one.";"141";"IMSL_BESSI_EXP.html";"1565"
"3782";"IMSL_BESSJ";"Evaluates a Bessel function of the first kind with real order and real or complex parameters.";"141";"IMSL_BESSJ.html";"1913"
"3783";"IMSL_BESSK";"Evaluates a modified Bessel function of the second kind with real order and real or complex parameters.";"141";"IMSL_BESSK.html";"1760"
"3784";"IMSL_BESSK_EXP";"Evaluates the exponentially scaled modified Bessel function of the third kind of orders zero and one.";"141";"IMSL_BESSK_EXP.html";"1680"
"3785";"IMSL_BESSY";"Evaluates a Bessel function of the second kind with real order and real or complex parameters.";"141";"IMSL_BESSY.html";"1705"
"3786";"IMSL_BETA";"Evaluates the real beta function B(x,y).";"141";"IMSL_BETA.html";"1690"
"3787";"IMSL_BETACDF";"Evaluates the beta probability distribution function.";"141";"IMSL_BETACDF.html";"2501"
"3788";"IMSL_BETAI";"Evaluates the real incomplete beta function.";"141";"IMSL_BETAI.html";"1570"
"3789";"IMSL_BINOMIALCDF";"Evaluates the binomial distribution function.";"141";"IMSL_BINOMIALCDF.html";"2376"
"3790";"IMSL_BINOMIALCOEF";"Evaluate binomial coefficient.";"141";"IMSL_BINOMIALCOEF.html";"2518"
"3791";"IMSL_BINOMIALPDF";"Evaluates the binomial probability function.";"141";"IMSL_BINOMIALPDF.html";"1942"
"3792";"IMSL_BINORMALCDF";"Evaluates the bivariate normal distribution function.";"141";"IMSL_BINORMALCDF.html";"2232"
"3793";"IMSL_BOXCOXTRANS";"Perform Box-Cox transformation";"141";"IMSL_BOXCOXTRANS.html";"1794"
"3794";"IMSL_BSINTERP";"Computes a one- or two-dimensional spline interpolant.";"141";"IMSL_BSINTERP.html";"2453"
"3795";"IMSL_BSKNOTS";"Computes the knots for a spline interpolant.";"141";"IMSL_BSKNOTS.html";"2400"
"3796";"IMSL_BSLSQ";"Computes a one- or two-dimensional, least-squares spline approximation.";"141";"IMSL_BSLSQ.html";"2959"
"3797";"IMSL_CAT_GLM";"Generalized linear models.";"141";"IMSL_CAT_GLM.html";"2070"
"3798";"IMSL_CHFAC";"Computes the Cholesky factor, L, of a real or complex symmetric positive definite matrix A, such that A = LLT.";"141";"IMSL_CHFAC.html";"2197"
"3799";"IMSL_CHISQCDF";"Evaluates the chi-squared distribution function. Using a keyword, the inverse of the chi-squared distribution can be evaluated.";"141";"IMSL_CHISQCDF.html";"2743"
"3800";"IMSL_CHISQTEST";"Performs a chi-squared goodness-of-fit test.";"141";"IMSL_CHISQTEST.html";"2093"
"3801";"IMSL_CHNNDFAC";"Computes the Cholesky factorization of the real matrix A such that A = RTR = LLT.";"141";"IMSL_CHNNDFAC.html";"1957"
"3802";"IMSL_CHNNDSOL";"Solves a real symmetric nonnegative definite system of linear equations Ax = b. Computes the solution to Ax = b given the Cholesky factor.";"141";"IMSL_CHNNDSOL.html";"2026"
"3803";"IMSL_CHSOL";"Solves a symmetric positive definite system of real or complex linear equations Ax = b.";"141";"IMSL_CHSOL.html";"2075"
"3804";"IMSL_COCHRANQ";"Cochran's Q test.";"141";"IMSL_COCHRANQ.html";"1632"
"3805";"IMSL_CONLSQ";"Computes a least-squares constrained spline approximation.";"141";"IMSL_CONLSQ.html";"2153"
"3806";"IMSL_CONSTANT";"Returns the value of various mathematical and physical constants.";"141";"IMSL_CONSTANT.html";"12236"
"3807";"IMSL_CONSTRAINED_NLP";"Solves a general nonlinear programming problem using a sequential equality constrained quadratic programming method.";"141";"IMSL_CONSTRAINED_NLP.html";"2031"
"3808";"IMSL_CONTINGENCY";"Performs a chi-squared analysis of a two-way contingency table.";"141";"IMSL_CONTINGENCY.html";"2546"
"3809";"IMSL_CONT_TABLE";"Sets up a table to generate pseudorandom numbers from a general continuous distribution.";"141";"IMSL_CONT_TABLE.html";"1893"
"3810";"IMSL_CONVOL1D";"Computes the discrete convolution of two one dimensional arrays.";"141";"IMSL_CONVOL1D.html";"2468"
"3811";"IMSL_CORR1D";"Compute the discrete correlation of two one-dimensional arrays.";"141";"IMSL_CORR1D.html";"1606"
"3812";"IMSL_COVARIANCES";"Computes the sample variance-covariance or correlation matrix.";"141";"IMSL_COVARIANCES.html";"2433"
"3813";"IMSL_CSINTERP";"Computes a cubic spline interpolant, specifying various endpoint conditions. The default interpolant satisfies the not-a-knot condition.";"141";"IMSL_CSINTERP.html";"1979"
"3814";"IMSL_CSSHAPE";"Computes a shape-preserving cubic spline.";"141";"IMSL_CSSHAPE.html";"2113"
"3815";"IMSL_CSSMOOTH";"Computes a smooth cubic spline approximation to noisy data by using cross-validation to estimate the smoothing parameter or by directly choosing the smoothing parameter.";"141";"IMSL_CSSMOOTH.html";"7439"
"3816";"IMSL_CSTRENDS";"Cox and Stuarts' sign test for trends in location and dispersion.";"141";"IMSL_CSTRENDS.html";"1749"
"3817";"IMSL_DATETODAYS";"Computes the number of days from January 1, 1900, to the given date.";"141";"IMSL_DATETODAYS.html";"1926"
"3818";"IMSL_DAYSTODATE";"Gives the date corresponding to the number of days since January 1, 1900.";"141";"IMSL_DAYSTODATE.html";"1806"
"3819";"IMSL_DIFFERENCE";"Differences a seasonal or nonseasonal time series.";"141";"IMSL_DIFFERENCE.html";"1859"
"3820";"IMSL_DISCR_ANALYSIS";"Perform discriminant function analysis.";"141";"IMSL_DISCR_ANALYSIS.html";"12355"
"3821";"IMSL_DISCR_TABLE";"Sets or retrieves the current table used in either the shuffled or GFSR random number generator";"141";"IMSL_DISCR_TABLE.html";"22117"
"3822";"IMSL_EIG";"Computes the eigenexpansion of a real or complex matrix A. If the matrix is known to be symmetric or Hermitian, a keyword can be used to trigger more efficient algorithms.";"141";"IMSL_EIG.html";"1823"
"3823";"IMSL_EIGSYMGEN";"Computes the generalized eigenexpansion of a system Ax = lBx. The matrices A and B are real and symmetric, and B is positive definite.";"141";"IMSL_EIGSYMGEN.html";"1593"
"3824";"IMSL_ELE";"Evaluates the complete elliptic integral of the second kind E(x).";"141";"IMSL_ELE.html";"1618"
"3825";"IMSL_ELK";"Evaluates the complete elliptic integral of the kind K(x).";"141";"IMSL_ELK.html";"1989"
"3826";"IMSL_ELRC";"Evaluates an elementary integral from which inverse circular functions, logarithms and inverse hyperbolic functions can be computed.";"141";"IMSL_ELRC.html";"1418"
"3827";"IMSL_ELRD";"Evaluates Carlson's elliptic integral of the second kind RD(x, y, z).";"141";"IMSL_ELRD.html";"1637"
"3828";"IMSL_ELRF";"Evaluates Carlson's elliptic integral of the first kind RF(x, y, z).";"141";"IMSL_ELRF.html";"1763"
"3829";"IMSL_ELRJ";"Evaluates Carlson's elliptic integral of the third kind RJ(x, y, z, r).";"141";"IMSL_ELRJ.html";"1617"
"3830";"IMSL_ERF";"Evaluates the real error function erf ( x ). Using a keyword, the inverse error function erf-1(x) can be evaluated.";"141";"IMSL_ERF.html";"3210"
"3831";"IMSL_ERFC";"Evaluates the real complementary error function erf(x). Using a keyword, the inverse complementary error function erf-1(x) can be evaluated.";"141";"IMSL_ERFC.html";"1908"
"3832";"IMSL_EXACT_ENUM";"Exact probabilities in a table; total enumeration.";"141";"IMSL_EXACT_ENUM.html";"1621"
"3833";"IMSL_EXACT_NETWORK";"Exact probabilities in a table.";"141";"IMSL_EXACT_NETWORK.html";"1704"
"3834";"IMSL_FACTOR_ANALYSIS";"Extracts initial factor-loading estimates in factor analysis.";"141";"IMSL_FACTOR_ANALYSIS.html";"3210"
"3835";"IMSL_FAURE_INIT";"Initializes the structure used for computing a shuffled Faure sequence.";"141";"IMSL_FAURE_INIT.html";"1775"
"3836";"IMSL_FAURE_NEXT_PT";"Generates shuffled Faure sequence.";"141";"IMSL_FAURE_NEXT_PT.html";"1712"
"3837";"IMSL_FCDF";"Evaluates the F distribution function. Using a keyword, the inverse of the F distribution function can be evaluated.";"141";"IMSL_FCDF.html";"1952"
"3838";"IMSL_FCNLSQ";"Computes the first, second, or third derivative of a user-supplied function.";"141";"IMSL_FCNLSQ.html";"1517"
"3839";"IMSL_FCN_DERIV";"Computes a least-squares fit using user-supplied functions.";"141";"IMSL_FCN_DERIV.html";"1841"
"3840";"IMSL_FFTCOMP";"Computes discrete Fourier transform of a real or complex sequence. Using keywords, a real-to-complex transform or two-dimensional complex Fourier transform can be computed.";"141";"IMSL_FFTCOMP.html";"2438"
"3841";"IMSL_FFTINIT";"Computes parameters for a one-dimensional FFT to be used in the IMSL_FFTCOMP function with keyword Init_Params.";"141";"IMSL_FFTINIT.html";"1598"
"3842";"IMSL_FMIN";"Finds the minimum point of a smooth function f (x) of a single variable using function evaluations and, optionally, through both function evaluations and first derivative evaluations.";"141";"IMSL_FMIN.html";"2061"
"3843";"IMSL_FMINV";"Minimizes a function f(x) of n variables using a quasi-Newton method.";"141";"IMSL_FMINV.html";"2438"
"3844";"IMSL_FREQTABLE";"Tallies observations into a one-way frequency table.";"141";"IMSL_FREQTABLE.html";"3980"
"3845";"IMSL_FRESNEL_COSINE";"Evaluates cosine Fresnel integral.";"141";"IMSL_FRESNEL_COSINE.html";"2259"
"3846";"IMSL_FRESNEL_SINE";"Evaluates sine Fresnel integral.";"141";"IMSL_FRESNEL_SINE.html";"1458"
"3847";"IMSL_FRIEDMANS_TEST";"Friedman's test.";"141";"IMSL_FRIEDMANS_TEST.html";"1556"
"3848";"IMSL_GAMMACDF";"Evaluates the gamma distribution function.";"141";"IMSL_GAMMACDF.html";"2568"
"3849";"IMSL_GAMMAI";"Evaluates the incomplete gamma function g(a,x).";"141";"IMSL_GAMMAI.html";"1824"
"3850";"IMSL_GAMMA_ADV";"Evaluate the real gamma function.";"141";"IMSL_GAMMA_ADV.html";"1819"
"3851";"IMSL_GARCH";"Compute estimates of the parameters of a GARCH(p,q) model";"141";"IMSL_GARCH.html";"2062"
"3852";"IMSL_GENEIG";"Computes the generalized eigenexpansion of a system Ax = lBx.";"141";"IMSL_GENEIG.html";"1366"
"3853";"IMSL_GQUAD";"Computes a Gauss, Gauss-Radau, or Gauss-Lobatto quadrature rule with various classical weight functions.";"141";"IMSL_GQUAD.html";"2390"
"3854";"IMSL_HYPERGEOCDF";"Evaluates the hypergeometric distribution function.";"141";"IMSL_HYPERGEOCDF.html";"5588"
"3855";"IMSL_HYPOTH_PARTIAL";"Constructs an equivalent completely testable multivariate general linear hypothesis HbU = G from a partially testable hypothesis HpbU = Gp.";"141";"IMSL_HYPOTH_PARTIAL.html";"2357"
"3856";"IMSL_HYPOTH_SCPH";"Computes the matrix of sums of squares and crossproducts for the multivariate general linear hypothesis HbU = G given the regression fit.";"141";"IMSL_HYPOTH_SCPH.html";"1963"
"3857";"IMSL_HYPOTH_TEST";"Performs tests for a multivariate general linear hypothesis HbU = G given the hypothesis sums of squares and crossproducts matrix SH.";"141";"IMSL_HYPOTH_TEST.html";"2017"
"3858";"IMSL_INTFCN";"Integrates a user-supplied function using different combinations of keywords and parameters.";"141";"IMSL_INTFCN.html";"3513"
"3859";"IMSL_INTFCNHYPER";"Integrates a function on a hyper-rectangle.";"141";"IMSL_INTFCNHYPER.html";"1522"
"3860";"IMSL_INTFCN Computation of Fourier Sine or Cosine Transforms";"This version of the IMSL_INTFCN function computes Fourier sine or cosine transforms.";"141";"IMSL_INTFCN_Computation_of_Fourier_Sine_or_Cosine_Transforms.html";"1754"
"3861";"IMSL_INTFCN Functions Based on Gauss-Kronrod Rules";"This version of the IMSL_INTFCN function integrates functions using a globally adaptive scheme based on Gauss-Kronrod rules.";"141";"IMSL_INTFCN_Functions_Based_on_Gauss-Kronrod_Rules.html";"1786"
"3862";"IMSL_INTFCN Functions Containing a Sine or Cosine Factor";"This version of the IMSL_INTFCN function integrates functions containing a sine or a cosine factor.";"141";"IMSL_INTFCN_Functions_Containing_a_Sine_or_Cosine_Factor.html";"1813"
"3863";"IMSL_INTFCN Functions Over an Infinite or Semi-infinite Interval";"This version of the IMSL_INTFCN function integrates functions over an infinite or semi-infinite interval.";"141";"IMSL_INTFCN_Functions_Over_an_Infinite_or_Semi-infinite_Interval.html";"1829"
"3864";"IMSL_INTFCN Functions with Algebraic-logarithmic Singularities";"This version of the IMSL_INTFCN function integrates functions with algebraic-logarithmic singularities.";"141";"IMSL_INTFCN_Functions_with_Algebraic-logarithmic_Singularities.html";"1806"
"3865";"IMSL_INTFCN Functions with Singular Points Given";"This version of the IMSL_INTFCN function integrates functions with singularity points given.";"141";"IMSL_INTFCN_Functions_with_Singular_Points_Given.html";"1716"
"3866";"IMSL_INTFCN Integrals in the Cauchy Principle Value Sense";"This version of the IMSL_INTFCN function computes integrals in the Cauchy principal value sense.";"141";"IMSL_INTFCN_Integrals_in_the_Cauchy_Principle_Value_Sense.html";"2226"
"3867";"IMSL_INTFCN_QMC";"Integrates a function on a hyper-rectangle using a quasi-Monte Carlo method.";"141";"IMSL_INTFCN_QMC.html";"1711"
"3868";"IMSL_INTFCN Smooth Functions Using Nonadaptive Rule";"This version of the IMSL_INTFCN function integrates smooth functions using a nonadaptive rule.";"141";"IMSL_INTFCN_Smooth_Functions_Using_Nonadaptive_Rule.html";"1570"
"3869";"IMSL_INTFCN Two-dimensional Iterated Integrals";"This version of the IMSL_INTFCN function integrates two-dimensional iterated integrals.";"141";"IMSL_INTFCN_Two-dimensional_Iterated_Integrals.html";"1640"
"3870";"IMSL_INV";"Computes the inverse of a real or complex, square matrix.";"141";"IMSL_INV.html";"2171"
"3871";"IMSL_KALMAN";"Performs Kalman filtering and evaluates the likelihood function or the state-space model.";"141";"IMSL_KALMAN.html";"2724"
"3872";"IMSL_KELVIN_BEI0";"Evaluates the Kelvin function of the first kind, bei, of order zero.";"141";"IMSL_KELVIN_BEI0.html";"1495"
"3873";"IMSL_KELVIN_BER0";"Evaluates the Kelvin function of the first kind, ber, of order zero.";"141";"IMSL_KELVIN_BER0.html";"1728"
"3874";"IMSL_KELVIN_KEI0";"Evaluates the Kelvin function of the second kind, kei, of order zero.";"141";"IMSL_KELVIN_KEI0.html";"1437"
"3875";"IMSL_KELVIN_KER0";"Evaluates the Kelvin function of the second kind, ker, of order zero.";"141";"IMSL_KELVIN_KER0.html";"1459"
"3876";"IMSL_KOLMOGOROV1";"One-sample continuos data Kolmogorov-Smirnov.";"141";"IMSL_KOLMOGOROV1.html";"1817"
"3877";"IMSL_KOLMOGOROV2";"Two-sample continuos data Kolmogorov-Smirnov.";"141";"IMSL_KOLMOGOROV2.html";"2626"
"3878";"IMSL_KTRENDS";"K-sample trends test.";"141";"IMSL_KTRENDS.html";"1639"
"3879";"IMSL_KW_TEST";"Kruskal-Wallis test.";"141";"IMSL_KW_TEST.html";"1474"
"3880";"IMSL_K_MEANS";"Performs a K-means (centroid) cluster analysis.";"141";"IMSL_K_MEANS.html";"2844"
"3881";"IMSL_LACK_OF_FIT";"Lack-of-fit test based on the correlation function";"141";"IMSL_LACK_OF_FIT.html";"1690"
"3882";"IMSL_LAPLACE_INV";"Computes the inverse Laplace transform of a complex function.";"141";"IMSL_LAPLACE_INV.html";"5615"
"3883";"IMSL_LINLSQ";"Solves a nonlinear least-squares problem using a modified Levenberg-Marquardt algorithm.";"141";"IMSL_LINLSQ.html";"2517"
"3884";"IMSL_LINPROG";"Solves a linear programming problem using the revised simplex algorithm.";"141";"IMSL_LINPROG.html";"1715"
"3885";"IMSL_LNBETA";"Evaluates the logarithm of the real beta function ln b(x,y).";"141";"IMSL_LNBETA.html";"1502"
"3886";"IMSL_LNGAMMA";"Evaluates the logarithm of the absolute value of the gamma function log G(x).";"141";"IMSL_LNGAMMA.html";"1659"
"3887";"IMSL_LNORMREGRESS";"Fits a multiple linear regression model using criteria other than least squares. Namely, LNORMREGRESS allows the user to choose Least Absolute Value (L1), Least Lp norm (Lp), or Least Maximum Value (Minimax or L') method of multiple linear regression.";"141";"IMSL_LNORMREGRESS.html";"2597"
"3888";"IMSL_LUFAC";"Computes the LU factorization of a real or complex matrix.";"141";"IMSL_LUFAC.html";"2135"
"3889";"IMSL_LUSOL";"Solves a general system of real or complex linear equations Ax = b.";"141";"IMSL_LUSOL.html";"2151"
"3890";"IMSL_MACHINE";"Returns information describing the computer's arithmetic.";"141";"IMSL_MACHINE.html";"2382"
"3891";"IMSL_MATRIX_NORM";"Computes various norms of a rectangular matrix, a matrix stored in band format, and a matrix stored in coordinate format.";"141";"IMSL_MATRIX_NORM.html";"2206"
"3892";"IMSL_MINCONGEN";"Minimizes a general objective function subject to linear equality/inequality constraints.";"141";"IMSL_MINCONGEN.html";"1990"
"3893";"IMSL_MULTICOMP";"Performs Student-Newman-Keuls multiple-comparisons test.";"141";"IMSL_MULTICOMP.html";"1453"
"3894";"IMSL_MULTIPREDICT";"Computes predicted values, confidence intervals, and diagnostics after fitting a regression model.";"141";"IMSL_MULTIPREDICT.html";"10672"
"3895";"IMSL_MULTIREGRESS";"Fits a multiple linear regression model using least squares and optionally compute summary statistics for the regression model.";"141";"IMSL_MULTIREGRESS.html";"17303"
"3896";"IMSL_MVAR_NORMALITY";"Mardia's test for multivariate normality.";"141";"IMSL_MVAR_NORMALITY.html";"1806"
"3897";"IMSL_NCTRENDS";"Noehter's test for cyclical trend.";"141";"IMSL_NCTRENDS.html";"1739"
"3898";"IMSL_NLINLSQ";"Solves a linear least-squares problem with linear constraints.";"141";"IMSL_NLINLSQ.html";"2378"
"3899";"IMSL_NONLINOPT";"Fits data to a nonlinear model (possibly with linear constraints) using the successive quadratic programming algorithm (applied to the sum of squared errors, sse = S(yi - f(xi; q))2) and either a finite difference gradient or a user-supplied gradient.";"141";"IMSL_NONLINOPT.html";"2087"
"3900";"IMSL_NONLINREGRESS";"Fits a nonlinear regression model.";"141";"IMSL_NONLINREGRESS.html";"4901"
"3901";"IMSL_NORM";"Computes various norms of a vector or the difference of two vectors.";"141";"IMSL_NORM.html";"2017"
"3902";"IMSL_NORM1SAMP";"Computes statistics for mean and variance inferences using a sample from a normal population.";"141";"IMSL_NORM1SAMP.html";"1741"
"3903";"IMSL_NORM2SAMP";"Computes statistics for mean and variance inferences using samples from two independently normal populations.";"141";"IMSL_NORM2SAMP.html";"1997"
"3904";"IMSL_NORMALCDF";"Evaluates the standard normal (Gaussian) distribution function. Using a keyword, the inverse of the standard normal (Gaussian) distribution can be evaluated.";"141";"IMSL_NORMALCDF.html";"2759"
"3905";"IMSL_NORMALITY";"Performs a test for normality.";"141";"IMSL_NORMALITY.html";"3117"
"3906";"IMSL_ODE";"Solves an initial value problem using the Adams-Gear methods for ordinary differential equations.";"141";"IMSL_ODE.html";"3735"
"3907";"IMSL_PARTIAL_AC";"Sample partial autocorrelation function";"141";"IMSL_PARTIAL_AC.html";"1763"
"3908";"IMSL_PARTIAL_COV";"Partial correlations and covariances.";"141";"IMSL_PARTIAL_COV.html";"1764"
"3909";"IMSL_PDE_MOL";"Solves a system of partial differential equations of the form ut = f(x, t, u, ux, uxx) using the method of lines. The solution is represented with cubic Hermite polynomials.";"141";"IMSL_PDE_MOL.html";"2979"
"3910";"IMSL_POISSON2D";"Solves Poisson's or Helmholtz's equation on a two-dimensional rectangle using a fast Poisson solver based on the HODIE finite-difference scheme on a uniform mesh.";"141";"IMSL_POISSON2D.html";"2183"
"3911";"IMSL_POISSONCDF";"Evaluates the Poisson distribution function.";"141";"IMSL_POISSONCDF.html";"2552"
"3912";"IMSL_POLYPREDICT";"Computes predicted values, confidence intervals, and diagnostics after fitting a polynomial regression model.";"141";"IMSL_POLYPREDICT.html";"4496"
"3913";"IMSL_POLYREGRESS";"Performs a polynomial least-squares regression.";"141";"IMSL_POLYREGRESS.html";"2650"
"3914";"IMSL_POOLED_COV";"Pooled covariance matrix.";"141";"IMSL_POOLED_COV.html";"2978"
"3915";"IMSL_PRINC_COMP";"Computes principal components.";"141";"IMSL_PRINC_COMP.html";"1837"
"3916";"IMSL_QRFAC";"Computes the QR factorization of a real matrix A.";"141";"IMSL_QRFAC.html";"2163"
"3917";"IMSL_QRSOL";"Solves a real linear least-squares problem Ax = b.";"141";"IMSL_QRSOL.html";"2120"
"3918";"IMSL_QUADPROG";"Solves a quadratic programming (QP) problem subject to linear equality or inequality constraints.";"141";"IMSL_QUADPROG.html";"2367"
"3919";"IMSL_RADBE";"Evaluates a radial-basis fit computed by IMSL_RADBF.";"141";"IMSL_RADBE.html";"1799"
"3920";"IMSL_RADBF";"Computes an approximation to scattered data in Rn for n greater or equal than 2 using radial-basis functions.";"141";"IMSL_RADBF.html";"2276"
"3921";"IMSL_RANDOM";"Generates pseudorandom numbers. The default distribution is a uniform (0, 1) distribution, but many different distributions can be specified through the use of keywords.";"141";"IMSL_RANDOM.html";"14198"
"3922";"IMSL_RANDOMNESS_TEST";"Runs test, Paris-serial test, d2 test or triplets tests.";"141";"IMSL_RANDOMNESS_TEST.html";"1857"
"3923";"IMSL_RANDOMOPT";"Uses keywords to set or retrieve the random number seed or to select the uniform (0, 1) multiplicative, congruential pseudorandom-number generator.";"141";"IMSL_RANDOMOPT.html";"2403"
"3924";"IMSL_RANDOM_ARMA";"Generate pseudorandom IMSL_ARMA process numbers";"141";"IMSL_RANDOM_ARMA.html";"2213"
"3925";"IMSL_RANDOM_NPP";"Generates pseudorandom numbers from a nonhomogeneous Poisson process.";"141";"IMSL_RANDOM_NPP.html";"1752"
"3926";"IMSL_RANDOM_ORDER";"Generates pseudorandom order statistics from a standard normal distribution.";"141";"IMSL_RANDOM_ORDER.html";"2996"
"3927";"IMSL_RANDOM_SAMPLE";"Generates a simple pseudorandom sample from a finite population";"141";"IMSL_RANDOM_SAMPLE.html";"3190"
"3928";"IMSL_RANDOM_TABLE";"Sets or retrieves the current table used in either the shuffled or GFSR random number generator.";"141";"IMSL_RANDOM_TABLE.html";"3096"
"3929";"IMSL_RAND_FROM_DATA";"Generates pseudorandom numbers from multivariate distribution determined from a given sample.";"141";"IMSL_RAND_FROM_DATA.html";"3136"
"3930";"IMSL_RAND_GEN_CONT";"Generates pseudorandom numbers from a general continuous distribution.";"141";"IMSL_RAND_GEN_CONT.html";"3391"
"3931";"IMSL_RAND_GEN_DISCR";"Generates pseudorandom numbers from a general discrete distribution using an alias method or optionally a table lookup method.";"141";"IMSL_RAND_GEN_DISCR.html";"3545"
"3932";"IMSL_RAND_ORTH_MAT";"Generates a pseudorandom orthogonal matrix or a correlation matrix";"141";"IMSL_RAND_ORTH_MAT.html";"2224"
"3933";"IMSL_RAND_TABLE_2WAY";"Generates a pseudorandom two-way table.";"141";"IMSL_RAND_TABLE_2WAY.html";"1670"
"3934";"IMSL_RANKS";"Computes the ranks, normal scores, or exponential scores for a vector of observations.";"141";"IMSL_RANKS.html";"1981"
"3935";"IMSL_REGRESSORS";"Generates regressors for a general linear model.";"141";"IMSL_REGRESSORS.html";"2517"
"3936";"IMSL_ROBUST_COV";"Robust estimate of covariance matrix.";"141";"IMSL_ROBUST_COV.html";"38965"
"3937";"IMSL_SCAT2DINTERP";"Computes a smooth bivariate interpolant to scattered data that is locally a quintic polynomial in two variables.";"141";"IMSL_SCAT2DINTERP.html";"1699"
"3938";"IMSL_SIGNTEST";"Performs a sign test.";"141";"IMSL_SIGNTEST.html";"1756"
"3939";"IMSL_SIMPLESTAT";"Computes basic univariate statistics.";"141";"IMSL_SIMPLESTAT.html";"2298"
"3940";"IMSL_SMOOTHDATA1D";"Smooth one-dimensional data by error detection.";"141";"IMSL_SMOOTHDATA1D.html";"1638"
"3941";"IMSL_SORTDATA";"Sorts observations by specified keys, with option to tally cases into a multiway frequency table.";"141";"IMSL_SORTDATA.html";"2270"
"3942";"IMSL_SPINTEG";"Computes the integral of a one- or two-dimensional spline.";"141";"IMSL_SPINTEG.html";"1807"
"3943";"IMSL_SPVALUE";"Computes values of a spline or values of one of its derivatives.";"141";"IMSL_SPVALUE.html";"2490"
"3944";"IMSL_SP_BDFAC";"Compute the LU factorization of a matrix stored in band storage mode.";"141";"IMSL_SP_BDFAC.html";"1849"
"3945";"IMSL_SP_BDPDFAC";"Compute the RTR Cholesky factorization of symmetric positive definite matrix, A, in band symmetric storage mode.";"141";"IMSL_SP_BDPDFAC.html";"1832"
"3946";"IMSL_SP_BDPDSOL";"Solve a symmetric positive definite system of linear equations Ax = b in band symmetric storage mode.";"141";"IMSL_SP_BDPDSOL.html";"1670"
"3947";"IMSL_SP_BDSOL";"Solve a general band system of linear equations Ax = b.";"141";"IMSL_SP_BDSOL.html";"1666"
"3948";"IMSL_SP_CG";"Solve a real symmetric definite linear system using a conjugate gradient method. Using keywords, a preconditioner can be supplied.";"141";"IMSL_SP_CG.html";"1962"
"3949";"IMSL_SP_GMRES";"Solve a linear system Ax = b using the restarted generalized minimum residual (GMRES) method.";"141";"IMSL_SP_GMRES.html";"2400"
"3950";"IMSL_SP_LUFAC";"Compute an LU factorization of a sparse matrix stored in either coordinate format or CSC format.";"141";"IMSL_SP_LUFAC.html";"1921"
"3951";"IMSL_SP_LUSOL";"Solve a sparse system of linear equations Ax = b.";"141";"IMSL_SP_LUSOL.html";"1892"
"3952";"IMSL_SP_MVMUL";"Compute a matrix-vector product involving sparse matrix and a dense vector.";"141";"IMSL_SP_MVMUL.html";"1819"
"3953";"IMSL_SP_PDFAC";"Solve a sparse symmetric positive definite system of linear equations Ax = b.";"141";"IMSL_SP_PDFAC.html";"1911"
"3954";"IMSL_SP_PDSOL";"Solve a sparse symmetric positive definite system of linear equations Ax = b.";"141";"IMSL_SP_PDSOL.html";"1701"
"3955";"IMSL_STATDATA";"Retrieves commonly analyzed data sets.";"141";"IMSL_STATDATA.html";"3298"
"3956";"IMSL_STEPWISE";"Builds multiple linear regression models using forward, backward, or stepwise selection.";"141";"IMSL_STEPWISE.html";"3314"
"3957";"IMSL_SURVIVAL_GLM";"Analyzes survival data using a generalized linear model and estimates using various parametric modes.";"141";"IMSL_SURVIVAL_GLM.html";"9681"
"3958";"IMSL_SVDCOMP";"Computes the singular value decomposition (SVD), A=USVT, of a real or complex rectangular matrix A. An estimate of the rank of A also can be computed.";"141";"IMSL_SVDCOMP.html";"2777"
"3959";"IMSL_TCDF";"Evaluates the Student's t distribution function.";"141";"IMSL_TCDF.html";"2291"
"3960";"IMSL_TIE_STATS";"Tie statistics.";"141";"IMSL_TIE_STATS.html";"1475"
"3961";"IMSL_WILCOXON";"Performs a Wilcoxon rank sum test.";"141";"IMSL_WILCOXON.html";"2313"
"3962";"IMSL_ZEROFCN";"Finds the real zeros of a real function using Muller's method.";"141";"IMSL_ZEROFCN.html";"1766"
"3963";"IMSL_ZEROPOLY";"Finds the zeros of a polynomial with real or complex coefficients using the companion matrix method or, optionally, the Jenkins-Traub, three-stage algorithm.";"141";"IMSL_ZEROPOLY.html";"2114"
"3964";"IMSL_ZEROSYS";"Solves a system of n nonlinear equations using a modified Powell hybrid algorithm.";"141";"IMSL_ZEROSYS.html";"1624"
"12508";"ENVIRPCRasterSpatialRef::ConvertFileToFile";"Converts a set of pixel (x,y) coordinates in one spatial reference to the same pixel location in another spatial reference.";"155";"ENVIRPCRasterSpatialRef__ConvertFileToFile.html";"3742"
"12507";"ENVIRPCRasterSpatialRef";"Reference to an ENVIRPCRasterSpatialRef object.";"155";"ENVIRPCRasterSpatialRef.html";"4545"
"12506";"ENVIPseudoRasterSpatialRef::ConvertMapToMap";"Converts a set of map coordinates (x-eastings, y-northings) in one spatial reference to the same location in a second spatial reference.";"155";"ENVIPseudoRasterSpatialRef__ConvertMapToMap.html";"3603"
"12502";"ENVIPseudoRasterSpatialRef::ConvertLonLatToMap";"Converts a set of geographic latitude/longitude coordinates to map coordinates (x-eastings, y-northings) within one spatial reference.";"155";"ENVIPseudoRasterSpatialRef__ConvertLonLatToMap.html";"3926"
"12499";"ENVIPseudoRasterSpatialRef::ConvertFileToMap";"Converts a set of file (pixel) x,y coordinates to a set of map (x-easting, y-northing) coordinates within one spatial reference.";"155";"ENVIPseudoRasterSpatialRef__ConvertFileToMap.html";"3637"
"12498";"ENVIPseudoRasterSpatialRef::ConvertFileToFile";"Converts a set of pixel (x,y) coordinates in one spatial reference to the same pixel location in another spatial reference.";"155";"ENVIPseudoRasterSpatialRef__ConvertFileToFile.html";"3600"
"12497";"ENVIPseudoRasterSpatialRef";"Reference to an ENVIPseudoRasterSpatialRef object.";"155";"ENVIPseudoRasterSpatialRef.html";"5068"
"12496";"ENVIMosaicRaster::SaveSeamPolygons";"Saves the effective mosaic polygons (also called seam polygons) to a shapefile.";"155";"ENVIMosaicRaster__SaveSeamPolygons.html";"3792"
"12495";"ENVIMosaicRaster";"Reference to a mosaic raster, which covers the spatial extent of multiple rasters (scenes).";"155";"ENVIMosaicRaster.html";"12541"
"12494";"ENVIGLTRasterSpatialRef";"Reference to an ENVIGLTRasterSpatialRef object. A geographic lookup table (GLT) contains map locations for every pixel of the image it is associated with.";"155";"ENVIGLTRasterSpatialRef.html";"4685"
"12492";"ENVIGCPSet::Get";"Retrieves all of the ground control points (GCPs) in an ENVIGCPSet object.";"155";"ENVIGCPSet__Get.html";"3629"
"12493";"ENVIGCPSet::Remove";"Removes individual ground control points (GCPs) from an ENVIGCPSet object.";"155";"ENVIGCPSet__Remove.html";"3976"
"12490";"ENVIGCPSet::Count";"Counts the number of ground control points (GCPs) in an ENVIGCPSet object.";"155";"ENVIGCPSet__Count.html";"3432"
"12491";"ENVIGCPSet::Export";"Saves an ENVIGCPSet object to an ASCII text file.";"155";"ENVIGCPSet__Export.html";"3777"
"12488";"ENVIGCPSet::ApplyOffset";;"155";"ENVIGCPSet__ApplyOffset.html";"4231"
"12489";"ENVIGCPSet::Close";"Subtracts a designated pixel offset from all of the GCPs in an ENVIGCPSet object.";"155";"ENVIGCPSet__Close.html";"3559"
"12487";"ENVIGCPSet::Add";"Adds ground control points (GCPs) to an ENVIGCPSet object.";"155";"ENVIGCPSet__Add.html";"8847"
"12486";"ENVIGCPSet";"Reference to an ENVIGCPSet object, which contains a set of ground control points (GCPs).";"155";"ENVIGCPSet.html";"4606"
"12484";"ENVIDataCollection::Get";"Returns a list of objects that are currently in the Data Manager.";"155";"ENVIDataCollection__Get.html";"3503"
"12483";"ENVIDataCollection::Count";"Returns the number of data objects in the collection.";"155";"ENVIDataCollection__Count.html";"3335"
"12481";"ENVIDataCollection";"Reference to an ENVIDataCollection object, which is a collection of data objects currently available in the Data Manager.";"155";"ENVIDataCollection.html";"4838"
"12482";"ENVIDataCollection::Add";"Lets you add data objects to the Data Manager.";"155";"ENVIDataCollection__Add.html";"12210"
"12480";"ENVICoordSys::ConvertMapToMap";"Converts a set of map coordinates (x-eastings, y-northings) for a vector file in one coordinate system to the same geographic location in another coordinate system.";"155";"ENVICoordSys__ConvertMapToMap.html";"3619"
"12479";"ENVICoordSys::ConvertMapToLonLat";"Converts a set of map coordinates (x-eastings, y-northings) to a set of latitude/longitude coordinates within the same coordinate system.";"155";"ENVICoordSys__ConvertMapToLonLat.html";"3732"
"12477";"ENVICoordSys::ConvertLonLatToMap";"Converts a set of latitude/longitude coordinates for a vector file to map coordinates (x-eastings, y-northings) within the same coordinate system.";"155";"ENVICoordSys__ConvertLonLatToMap.html";"3841"
"12476";"ENVICoordSys::ConvertLonLatToMGRS";"Converts a set of geographic latitude/longitude coordinates for a vector file to Military Grid Reference System (MGRS) coordinates within the same coordinate system.";"155";"ENVICoordSys__ConvertLonLatToMGRS.html";"3677"
"12474";"ENVI::OpenROI";"Opens an existing ROI file (.roi or .xml) and returns an array of ENVIROI objects.";"154";"ENVI__OpenRoi.html";"6135"
"12475";"ENVICoordSys::ConvertLonLatToLonLat";"Converts a set of latitude/longitude values for a vector file in one coordinate system to the same geographic location in another coordinate system.";"155";"ENVICoordSys__ConvertLonLatToLonLat.html";"3509"
"16433";"mggreasing::ease";"Do the easing.";"147";"mggreasing__define.html#mggreasing::ease";"33"
"12472";"Data Control Routines";;"2";"DataControl.html";"3655"
"12473";"Display Control Routines";;"2";"DisplayControl.html";"3422"
"12469";"Map Forest Density Sample Code";;"136";"SampleForestDensity.html";"4539"
"12465";"Using IDL Help";;"135";"UsingHelp.html";"9762"
"12466";"What's New in IDL 8.2.3";;"135";"Whats_New_8_2_3.html";"5144"
"12467";"Show Point Features";;"137";"ShowPointFeatures.html";"5352"
"12464";"Startup Files";;"135";"StartupFiles.html";"9624"
"12461";"Creating Static Methods";;"135";"Creating_Static_Methods.html";"6166"
"12462";"Static Methods and Properties";;"135";"Static_Methods.html";"12114"
"12463";"Translating, Rotating, and Scaling Objects";;"135";"TranslatingRotatingScaling.html";"3123"
"12457";"Environmental Monitoring Example";;"135";"EM_Splash.html";"5707"
"12458";"Scatterplot";;"135";"using_idl_Scatterplot.html";"6429"
"12459";"Image Analysis";;"135";"Image_Processing.html";"346"
"12455";"Create Contours of Pollutant Plume";;"135";"EM1_PlumeContours.html";"10831"
"12452";"Plot Relative Aquifer Flow Vectors";;"135";"EM1_FlowVectors.html";"6846"
"12453";"Model the Study Area and Setting";;"135";"EM1_Gridding.html";"9400"
"12449";"Dynamic PLOT Visualizations";;"135";"DynamicVis_Plot.html";"5489"
"12450";"Dynamic Visualizations";;"135";"DynamicVis_Splash.html";"6568"
"12451";"Dynamic Surface Visualizations";;"135";"DynamicVis_Surface.html";"6576"
"12444";"Using Auto Glue";;"135";"UsingAutoGlue.html";"6033"
"12445";"Wrapper Routines";;"135";"WrapperRoutines.html";"4874"
"12446";"Long Examples";;"135";"LongExamples.html";"2361"
"12440";"Passing Array Data";;"135";"PassingArrayData.html";"5237"
"12441";"Passing Parameters";;"135";"PassingParameters.html";"5231"
"12442";"Passing String Data";;"135";"PassingStringData.html";"5656"
"12443";"Passing Structures";;"135";"PassingStructures.html";"4742"
"12438";"The CALL_EXTERNAL Function";;"135";"CallExtFn.html";"8968"
"12439";"Fortran Examples";;"135";"FORTRANExamples.html";"9025"
"12435";"Using IDL as an RPC Server";;"135";"UsingIDLasRPCServer.html";"5513"
"12436";"Basic C Examples";;"135";"BasicCExamples.html";"6516"
"12437";"CALL_EXTERNAL()";;"135";"using_idl_CALL_EXTERNAL.html";"3818"
"12432";"Link to Client Library";;"135";"LinkToClientLibrary.html";"5513"
"12433";"Remote Procedure Calls";;"135";"RPC.html";"4911"
"12428";"Client Variables";;"135";"ClientVariables.html";"4503"
"12429";"Compatibility";;"135";"Compatibility.html";"4533"
"12430";"The IDL RPC Library";;"135";"IDLRPCLibrary.html";"5562"
"12431";"IDL and RPC";;"135";"IDLandRPC.html";"6065"
"12426";"Obsolete Internal Interfaces";;"135";"ObsIntInterfaces.html";"2981"
"12427";"Simplified Routine Invocation";;"135";"SimplifiedRoutineInvocation.html";"5728"
"12424";"Interfaces Obsoleted in IDL 6.3";;"135";"Obs63.html";"6006"
"12425";"Obsolete Error Handling API";;"135";"ObsErrHandl.html";"4491"
"12420";"Temporary Variables";;"135";"TemporaryVariables.html";"5316"
"12421";"Using SPAWN and Pipes";;"135";"UsingSpawnAndPipes.html";"7433"
"12422";"Interfaces Obsoleted in IDL 5.2.1";;"135";"Obs521.html";"4879"
"12419";"Structure Variables";;"135";"StructureVariables.html";"7329"
"12416";"Obtaining the Name of a Variable";;"135";"ObtainNameVariable.html";"4712"
"12417";"Scalar Variables";;"135";"ScalarVariables.html";"7610"
"12413";"The IDL_VARIABLE Structure";;"135";"IDLVARIABLEStructure.html";"5188"
"12414";"Looking Up Main Program Variables";;"135";"LookUpMainProgramVariables.html";"4820"
"12410";"Getting Dynamic Memory";;"135";"GettingDynamicMemory.html";"4571"
"12411";"Heap Variables";;"135";"HeapVariables.html";"7602"
"12412";"IDL and Internal Variables";;"135";"IDLInternalVariables.html";"4653"
"12406";"Array Variables";;"135";"ArrayVariables.html";"5267"
"12407";"Copying Variables";;"135";"CopyingVariables.html";"4684"
"12408";"Creating an Array from Existing Data";;"135";"CreateArrayFromExistingData.html";"4700"
"12403";"Signal Handlers";;"135";"SignalHandlers.html";"6450"
"12404";"UNIX Signal Masks";;"135";"UNIXSignalMasks.html";"6854"
"12405";"Accessing Variable Data";;"135";"AccessingVariableData.html";"4390"
"12400";"IDL and Signals";;"135";"IDLandSignals.html";"5642"
"12401";"IDL Internals - UNIX Signals";;"135";"InternalsUNIX.html";"4350"
"12396";"General Type Conversion";;"135";"GeneralTypeConversion.html";"4041"
"12397";"IDL Internals - Type Conversion";;"135";"InternalsTypeConv.html";"4459"
"12398";"Types";;"135";"Types.html";"6407"
"12399";"Establishing a Signal Handler";;"135";"EstablishingSignalHandler.html";"5575"
"12393";"Making Timer Requests";;"135";"MakingTimerRequests.html";"4931"
"12394";"Converting Arguments to C Scalars";;"135";"ConvertingArgumentsToCScalars.html";"7114"
"12395";"Converting To Spedicif Types";;"135";"ConvertingSpecificTypes.html";"4894"
"12391";"IDL and Timers";;"135";"IDLandTimers.html";"6021"
"12392";"IDL Internals - Timers";;"135";"InternalsTimers.html";"1297"
"12390";"Canceling Asynchronous Timer Requests";;"135";"CancelAsyncTimerRequests.html";"4431"
"12387";"User Interrupts - IDL_BailOut()";;"135";"UserInterrupts.html";"5546"
"12388";"String Processing";;"135";"StringProcessing.html";"6098"
"12389";"Blocking UNIX Timers";;"135";"BlockingUnixTimers.html";"4047"
"12384";"Terminal Information";;"135";"TerminalInformation.html";"5568"
"12385";"Type Information";;"135";"TypeInfo.html";"4496"
"12382";"IDL Internals - Miscellaneous Topics";;"135";"InternalsMisc.html";"5292"
"12378";"Dynamic Memory";;"135";"DynamicMemory.html";"5810"
"12379";"Ensuring UNIX TTY State";;"135";"EnsureUnixTTY.html";"4653"
"12380";"Exit Handlers - IDL_ExitRegister()";;"135";"ExitHandlers.html";"4777"
"12375";"Overview of IDL Keyword Processing";;"135";"OverviewIDLKeywordProcessing.html";"4720"
"12376";"Processing Keywords - IDL_KWProcessByOffset()";;"135";"ProcessingKeywords.html";"5322"
"12371";"Keyword Examples";;"135";"KWExamples.html";"5837"
"12372";"KW_RESULT";;"135";"KW_RESULT.html";"4049"
"12373";"Keyword Processing Options";;"135";"KeywordProcessingOpts.html";"4467"
"12374";"Older Keyword API";;"135";"OlderKeywordAPI.html";"8202"
"12368";"IDL Internals - Keyword Processing";;"135";"IDLKeywordProcessing.html";"4620"
"12369";"IDL_KW_ARR_DESC_R";;"135";"IDL_KW_ARR_DESC.html";"4860"
"12365";"Reading a Single Character - IDL_GetKbrd()";;"135";"ReadSingleChar.html";"4682"
"12366";"Cleaning Up - IDL_KW_FREE Macro";;"135";"CleaningUp.html";"4239"
"12363";"Output of IDL Variables";;"135";"OutputIDLVars.html";"4871"
"12359";"IDL Internals - Files and I/O";;"135";"FilesIO.html";"4369"
"12360";"Flushing Buffered Data";;"135";"FlushBuffData.html";"6268"
"12361";"IDL and Input/Output";;"135";"IDLandIO.html";"4982"
"12356";"Closing Files with IDL_FileClose()";;"135";"CloseFiles.html";"4677"
"12357";"Detecting End of File with IDL_FileEOF()";;"135";"DetectEOF.html";"4724"
"12354";"Allocating and Freeing File Units";;"135";"AllocateFreeFileUnits.html";"4465"
"12350";"Issuing Error Messages";;"135";"IssuingErrorMessages.html";"5665"
"12351";"Looking up a Message Code by Name";;"135";"LookUpMessageCodeByName.html";"5821"
"12352";"Message Blocks";;"135";"MessageBlocks.html";"6209"
"12348";"Choosing an Error Code";;"135";"ChoosingErrorCode.html";"4844"
"12349";"IDL Internals - Error Handling";;"135";"using_idl_ErrorHandling.html";"141"
"12346";"When Should I Combine External Code with IDL?";;"135";"WhenToCombineExternalCode.html";"4277"
"12347";"Checking Arguments";;"135";"CheckingArguments.html";"5332"
"12343";"Supported Inter-Language Communication Techniques";;"135";"InterlanguageCommunication.html";"4785"
"12344";"Interpreting Logical Boolean Values";;"135";"InterpretLogicalBooleanValues.html";"4712"
"12339";"Dynamic Linking Terms and Concepts";;"135";"DynamicLinking.html";"4727"
"12341";"External Definitions";;"135";"ExternalDefinitions.html";"4536"
"12342";"IDL Organization";;"135";"IDLOrganization.html";"4147"
"12336";"External Development Guide";;"135";"EDG.html";"5981"
"12337";"About This Guide";;"135";"AboutThisGuide.html";"224"
"12338";"Compilation and Linking Details";;"135";"CompilationAndLinking.html";"4971"
"12332";"Initialization Using IDL_Initialize()";;"135";"Initialization.html";"8607"
"12333";"Licensing Issues";;"135";"LicensingIssues.html";"5753"
"12334";"Runtime and Embedded IDL - IDL_RuntimeExec()";;"135";"RuntimeEmbedded.html";"4719"
"12331";"Executing IDL Statements";;"135";"ExecuteIDL.html";"4711"
"12327";"When is Callable IDL Appropriate";;"135";"CallableIDLAppropriate.html";"4088"
"12328";"Calling IDL as a Subroutine";;"135";"CallingIDL.html";"8110"
"12329";"IDL_Cleanup()";;"135";"CleanupCallable.html";"4505"
"12325";"System Routine Interface";;"135";"SystRoutineInterface.html";"5192"
"12326";"Callable IDL";;"135";"CallableIDL.html";"4749"
"12322";"IDL and System Routines Pre-IDL 8.0";;"135";"IDLSystemRoutinesPre80.html";"5392"
"12323";"LINKIMAGE";"Merges routines written in other languages with IDL at run-time.";"135";"using_idl_LinkImage.html";"3876"
"12324";"Registering Routines";;"135";"RegisterRoutines.html";"4483"
"12321";"IDL and System Routines Post-IDL 8.0";;"135";"IDLSystemRoutinesPost80.html";"143"
"12318";"Example: MULT2";;"135";"ExampeMult2.html";"4789"
"12319";"Example: Hello World";;"135";"ExampleHelloWorld.html";"7123"
"12320";"Example: Using Routine Design Iteration (RSUM)";;"135";"ExampleRSUM.html";"33876"
"12316";"DLMs";;"135";"DLM.html";"12442"
"12314";"UNIX WIDGET_STUB Example: WIDGET_ARROWB";;"135";"WIDGET_STUB_Example.html";"4370"
"12311";"Adding External Widgets to IDL";;"135";"ExternalWidgets.html";"4506"
"12312";"IDL and External Widgets";;"135";"IDLExternalWidgets.html";"7320"
"12313";"Internal Callback Functions";;"135";"InternalCallbackFn.html";"7362"
"12308";"The IDL Workbench Guide";;"135";"IDLWorkbenchGuide.html";"6673"
"12309";"Best Practices in Organizing Your Code";;"135";"OrganizeCodeBestPractices.html";"5804"
"12305";"Creating Arrays";;"135";"Creating_Arrays.html";"71943"
"12306";"Implied Print";;"135";"ImpliedPrint.html";"10359"
"12302";"Troubleshooting Your Bridge Session";;"135";"TroubleshootingYourBridgeSession.html";"2828"
"12303";"Overview of Asynchronous Timers";;"135";"AsyncTimersOverview.html";"104"
"16432";"mggrcube__define";"Define instance variables.";"147";"mggrcube__define.html#mggrcube__define";"131"
"16431";"mggrcube::setProperty";"Set properties.";"147";"mggrcube__define.html#mggrcube::setProperty";"0"
"16430";"mggrcube::init";"Create a cube polygon.";"147";"mggrcube__define.html#mggrcube::init";"0"
"16429";"mggrcube::getProperty";"Get properties.";"147";"mggrcube__define.html#mggrcube::getProperty";"38"
"16428";"mggrcircouteasing__define";"Define instance variables.";"147";"mggrcircouteasing__define.html#mggrcircouteasing__define";"77"
"16427";"mggrcircouteasing::ease";"Do a circular easing (accelerates).";"147";"mggrcircouteasing__define.html#mggrcircouteasing::ease";"37"
"16426";"mggrcircinouteasing__define";"Define instance variables.";"147";"mggrcircinouteasing__define.html#mggrcircinouteasing__define";"102"
"16425";"mggrcircinouteasing::ease";"Do a circular easing (accelerates).";"147";"mggrcircinouteasing__define.html#mggrcircinouteasing::ease";"51"
"16424";"mggrchernoffface__define";"Define instance variables.";"147";"mggrchernoffface__define.html#mggrchernoffface__define";"86"
"16423";"mggrchernoffface::init";"Initialize instance variables.";"147";"mggrchernoffface__define.html#mggrchernoffface::init";"0"
"16422";"mggrchernoffface::cleanup";"Subclass of IDLgrModel intended to be passed to IDLgrSymbol to be used as a plot symbol.";"147";"mggrchernoffface__define.html#mggrchernoffface::cleanup";"32"
"16421";"mggrbubble__define";"Define instance variables.";"147";"mggrbubble__define.html#mggrbubble__define";"104"
"16420";"mggrbubble::setProperty";"Set properties.";"147";"mggrbubble__define.html#mggrbubble::setProperty";"0"
"16419";"mggrbubble::init";"Create a bubble.";"147";"mggrbubble__define.html#mggrbubble::init";"0"
"16418";"mggrbubble::getProperty";"Get bubble properties.";"147";"mggrbubble__define.html#mggrbubble::getProperty";"36"
"16417";"mggrbounceouteasing__define";"Define instance variables.";"147";"mggrbounceouteasing__define.html#mggrbounceouteasing__define";"59"
"16416";"mggrbounceouteasing::ease";"Do a bouncing easing at the end.";"147";"mggrbounceouteasing__define.html#mggrbounceouteasing::ease";"29"
"16415";"mggranimator__define";"Define instance variables.";"147";"mggranimator__define.html#mggranimator__define";"159"
"16414";"mggranimator::setProperty";"Set properties.";"147";"mggranimator__define.html#mggranimator::setProperty";"0"
"16413";"mggranimator::reset";"Reset the animator.";"147";"mggranimator__define.html#mggranimator::reset";"0"
"16412";"mggranimator::init";"Create an animator.";"147";"mggranimator__define.html#mggranimator::init";"0"
"16411";"mggranimator::getProperty";"Get properties.";"147";"mggranimator__define.html#mggranimator::getProperty";"0"
"16410";"mggranimator::cleanup";"Free resources.";"147";"mggranimator__define.html#mggranimator::cleanup";"0"
"16409";"mggranimator::animate";"Do one frame of animation.";"147";"mggranimator__define.html#mggranimator::animate";"50"
"16408";"mggranimation_timer";"Timer callback routine.";"147";"mggranimation__define.html#mggranimation_timer";"64"
"16407";"mggranimation__define";"Define instance variables.";"147";"mggranimation__define.html#mggranimation__define";"0"
"16406";"mggranimation::init";"Create animation destination.";"147";"mggranimation__define.html#mggranimation::init";"0"
"16405";"mggranimation::draw";"Draw object graphic hierarchy.";"147";"mggranimation__define.html#mggranimation::draw";"0"
"16404";"mggranimation::cleanup";"Free resources of the animation.";"147";"mggranimation__define.html#mggranimation::cleanup";"47"
"16403";"mggrabstracttreemaplayout__define";"Define instance variables.";"147";"mggrabstracttreemaplayout__define.html#mggrabstracttreemaplayout__define";"53"
"16402";"mggrabstracttreemaplayout::sortDescending";"Sort items in descending order of size.";"147";"mggrabstracttreemaplayout__define.html#mggrabstracttreemaplayout::sortDescending";"0"
"16401";"mggrabstracttreemaplayout::layout";"Layout items.";"147";"mggrabstracttreemaplayout__define.html#mggrabstracttreemaplayout::layout";"28"
"16400";"mggr3dconverter__define";"Helper object to transform a normal object graphics scene to a 3D picture.";"147";"mggr3dconverter__define.html#mggr3dconverter__define";"86"
"16399";"mggr3dconverter::setProperty";"Set properties of the converter.";"147";"mggr3dconverter__define.html#mggr3dconverter::setProperty";"0"
"16398";"mggr3dconverter::init";"Initialize Window3D.";"147";"mggr3dconverter__define.html#mggr3dconverter::init";"0"
"16397";"mggr3dconverter::getProperty";"Get properties of the converter.";"147";"mggr3dconverter__define.html#mggr3dconverter::getProperty";"0"
"16396";"mggr3dconverter::convert";"Converts a standard object graphics picture to a view containing a 3D image.";"147";"mggr3dconverter__define.html#mggr3dconverter::convert";"0"
"16395";"mggr3dconverter::cleanup";"Free resources.";"147";"mggr3dconverter__define.html#mggr3dconverter::cleanup";"21"
"16394";"mgffxmlparser__define";"Define instance variables.";"147";"mg_xml_parse.html#mgffxmlparser__define";"127"
"16393";"mgffxmlparser::startElement";"Called to process the opening of a tag.";"147";"mg_xml_parse.html#mgffxmlparser::startElement";"0"
"16392";"mgffxmlparser::init";"Creates an XML parser.";"147";"mg_xml_parse.html#mgffxmlparser::init";"0"
"16391";"mgffxmlparser::getResult";"Get result.";"147";"mg_xml_parse.html#mgffxmlparser::getResult";"0"
"16390";"mgffxmlparser::endElement";"Called to process the closing of a tag.";"147";"mg_xml_parse.html#mgffxmlparser::endElement";"0"
"16389";"mgffxmlparser::cleanup";"Free resources.";"147";"mg_xml_parse.html#mgffxmlparser::cleanup";"0"
"16388";"mgffxmlparser::characters";"Called to process character data in an XML file.";"147";"mg_xml_parse.html#mgffxmlparser::characters";"41"
"16387";"mgffxmlitemparser__define";"Define instance variables.";"147";"mg_xml_getdata.html#mgffxmlitemparser__define";"101"
"16386";"mgffxmlitemparser::setItem";"Set the search item.";"147";"mg_xml_getdata.html#mgffxmlitemparser::setItem";"0"
"12675";"FSCCLEANUP7";"This procedure cleans up any open graphics windows and widget windows for versions of IDL prior to IDL 8.";"118";"fsccleanup7.html";"39"
"12676";"FSCCLEANUP8";"This procedure cleans up any open graphics windows and widget windows for versions of IDL from IDL 8 onward.";"118";"fsccleanup8.html";"27"
"12673";"CGWINDROSE";"This program draws a wind rose diagram.";"118";"cgwindrose.html";"438"
"12674";"CGZIMAGE";"Allows the user to interactively zoom into an image.";"118";"cgzimage.html";"84"
"12671";"CGUTMZONE";"This function returns the correct UTM zone for UTM map projections, given a longitude and latitude value.";"118";"cgutmzone.html";"56"
"12672";"CGWARPTOMAP";"The purpose of this function is to warp an image into a map projection, given latitude and longitude values for each data point.";"118";"cgwarptomap.html";"91"
"12670";"CGTRANSPARENTIMAGE";"Creates a semi-transparent image for display.";"118";"cgtransparentimage.html";"74"
"12668";"CGTAYLORDIAGRAM";"The program implements a Taylor Diagram in IDL direct graphics.";"118";"cgtaylordiagram.html";"72"
"12669";"CGTIMESTAMP";"This is a utility program to obtain a time stamp string suitable for using in a filename or some other string.";"118";"cgtimestamp.html";"58"
"12667";"CGTASSELEDCAPCOEFFS";"This function returns tasseled cap coefficients from various sources to perform the tasseled cap transformation on appropriate (e.g. LandSat) images.";"118";"cgtasseledcapcoeffs.html";"134"
"12665";"CGSTRETCH";"The program implements an interactive way to stretch an image histogram and provide contrast for 2D image arrays.";"118";"cgstretch.html";"376"
"12666";"CGTASSELEDCAP";"This function returns an image transformed by tasseled cap coefficients.";"118";"cgtasseledcap.html";"54"
"12664";"CGSNAKE";"This program applies the Gradient Vector Flow active contour algorithm, as described by Chenyang Xu and Jerry L. Prince in 'Snakes, Shapes, and Gradient Vector Flow' in the March 1998 IEEE Transactions on Image Processing, Vol. 7, No....";"118";"cgsnake.html";"129"
"12662";"CGSHAPEPOINTFILE";"The purpose of this program is to create a shapefile filled with multiple individual points as entities.";"118";"cgshapepointfile.html";"37"
"12663";"CGSHAPERANGE";"Determines the X (longitude) and Y (latitude) data range of the entities in a shapefile.";"118";"cgshaperange.html";"116"
"12660";"CGSETUNION";"This function is used to find the union between two sets of integers.";"118";"cgsetunion.html";"40"
"12661";"CGSHAPEINFO";"The purpose of this program is allow the user to browse a very narrow selection of shapefiles.";"118";"cgshapeinfo.html";"76"
"12658";"CGSETDIFFERENCE";"This function is used to find the difference between two sets of integers. In other words, the function will find the values that are in Set A but are missing in Set B.";"118";"cgsetdifference.html";"41"
"12659";"CGSETINTERSECTION";"This function is used to find the intersection between two sets of integers.";"118";"cgsetintersection.html";"85"
"12657";"CGSETCOLORSTATE";"Provides a device-independent way to set the color decomposition state of the current graphics device.";"118";"cgsetcolorstate.html";"296"
"12655";"CGSCALEVECTOR";"This is a utility routine to scale the elements of a vector or an array into a given data range.";"118";"cgscalevector.html";"287"
"12656";"CGSET_TTFONT";"The purpose of this procedure is to allow the user to set the True-Type font in use both at the IDL command line and in a PostScript file.";"118";"cgset_ttfont.html";"142"
"12653";"CGREVERSEINDICES";"Provides a simple way to obtain the data indices from a Histogram REVERSE_INDICES vector.";"118";"cgreverseindices.html";"45"
"12654";"CGROOTNAME";"The purpose of this routine is to extract from a long file path, the base or root file name.";"118";"cgrootname.html";"47"
"12652";"CGRESIZEIMAGE";"Provides a CONGRID like resizing of images, although it performs this service correctly for both 2D and 3D images.";"118";"cgresizeimage.html";"51"
"12651";"CGRANDOMWALD";"This function creates a vector of N random numbers using an Inverse Gaussian Distribution, which is also known as the Wald Distribution.";"118";"cgrandomwald.html";"32"
"12650";"CGPS_OPEN";"The purpose of cgPS_Open and cgPS_Close is to make it easy to set-up and close a PostScript file.";"118";"cgps_open.html";"595"
"12648";"CGPS_CLOSE";"The purpose of cgPS_Open and cgPS_Close is to make it easy to set-up and close a PostScript file.";"118";"cgps_close.html";"569"
"12649";"CGPS_CONFIG";"The purpose of this program is to allow the user to configure the PostScript device with or without a graphical user interface.";"118";"cgps_config.html";"47"
"12646";"CGPICKCOLORNAME";"Provides an interactive method of selecting a draw color name.";"118";"cgpickcolorname.html";"119"
"12647";"CGPROGRESSBAR__DEFINE";"This program is used to draw a progress bar on the display.";"118";"cgprogressbar__define.html";"169"
"12645";"CGPERCENTILES";"This program calculates user-specified percentiles of a data set.";"118";"cgpercentiles.html";"598"
"12643";"CGOBJ_ISA";"The purpose of this utility routine is to check to be sure the object argument is valid and belongs to the specified object class.";"118";"cgobj_isa.html";"32"
"12642";"CGNUMBER_FORMATTER";"This is a utility routine format a number into a string.";"118";"cgnumber_formatter.html";"87"
"12641";"CGNORMALIZE";"This is a utility routine to calculate the scaling vector required to position a graphics primitive of specified range at a specific position in an arbitray coordinate system.";"118";"cgnormalize.html";"27"
"12639";"CGLAYOUT";"The purpose of this program is to return the normalized position coordinates for a line plot, contour plot, or image plot with a specific 'layout' in the current graphics window.";"118";"cglayout.html";"196"
"12640";"CGMONTHS";"This is a utility program for obtaining the months of the year in various string formats.";"118";"cgmonths.html";"32"
"12638";"CGKRIG2D";"The cgKrig2D function interpolates a regularly or irregularly sampled set of points of the form z = f(x, y) to produced a gridded 2D array using a statistical process known as kriging.";"118";"cgkrig2d.html";"178"
"12636";"CGKML_OVERLAY__DEFINE";"This program implements the KML abstract OVERLAY class.";"118";"cgkml_overlay__define.html";"35"
"12637";"CGKML_SCREENOVERLAY__DEFINE";"This program implements the KML ScreenOverlay element..";"118";"cgkml_screenoverlay__define.html";"31"
"12635";"CGKML_OBJECT__DEFINE";"This program implements the KML abstract OBJECT class.";"118";"cgkml_object__define.html";"32"
"12634";"CGKML_LOOKAT__DEFINE";"This program implements the KML abstract LookAt class.";"118";"cgkml_lookat__define.html";"27"
"12632";"CGKML_FILE__DEFINE";"This program creates a KML file that can be displayed with Google Earth. It implements some (not all) of the objects or elements allowed in KML files.";"118";"cgkml_file__define.html";"40"
"12631";"CGKML_FEATURE__DEFINE";"This program implements the KML abstract FEATURE class.";"118";"cgkml_feature__define.html";"31"
"12630";"CGKML2KMZ";"This program simply collects files created from the cgImage2KML program and moves the files to a zip file with a *.kmz file extention.";"118";"cgkml2kmz.html";"112"
"12628";"CGIMGSCL";"This function scales an image using the same keywords and scaling available in cgImage and cgStretch.";"118";"cgimgscl.html";"560"
"12629";"CGJULIAN2DATE";"The purpose of this function is to convert a Julian number into a date string.";"118";"cgjulian2date.html";"172"
"12627";"CGIMAGE2KML";"This program creates a KML file that can be opened in Google Earth to display the image drapped over the Google Earth terrain. A corresponding image file is also produced.";"118";"cgimage2kml.html";"6633"
"12625";"CGHASIMAGEMAGICK";"Searches for the ImageMagick 'convert' command to see if ImageMagick is available on the system.";"118";"cghasimagemagick.html";"166"
"12626";"CGHISTOGRAM";"This program is used as a wrapper to the Histogram command in IDL.";"118";"cghistogram.html";"250"
"12624";"CGGREEK";"This function provides a device-independent way to ask for a Greek letter as a string that can be included, for example, in a plot title.";"118";"cggreek.html";"452"
"12622";"CGGEOMOSAIC";"Creates a mosaic or combination image, given the names of two GeoTiff image files.";"118";"cggeomosaic.html";"120"
"12623";"CGGETCOLORSTATE";"Provides a device-independent way to get the color decomposition state of the current graphics device.";"118";"cggetcolorstate.html";"247"
"12620";"CGFINDMAPBOUNDARY";"Utility routine to find the map projection grid boundary from a file, if it is possible to do so.";"118";"cgfindmapboundary.html";"109"
"12621";"CGFIXPS";"This program modifies an IDL-produced PostScript landscape mode file so that the output is right side up rather than upside down.";"118";"cgfixps.html";"2084"
"12619";"CGERRORMSG";"The purpose of this function is to have a device-independent error messaging function.";"118";"cgerrormsg.html";"705"
"12617";"CGDOTPLOT";"The purpose of cgDotPlot is to create a 'dot plot'.";"118";"cgdotplot.html";"165"
"12618";"CGDRAW_ROI";"This procedure draws a region or group of regions, defined by the IDLanROI or IDLanROIGroup objects, on a direct graphics device.";"118";"cgdraw_roi.html";"103"
"12616";"CGDBLTOSTR";"This is a program for converting a double precision numerical value to a string that maintains the 14 double-precision significant digits.";"118";"cgdbltostr.html";"251"
"12614";"CGCOLOR24";"The purpose of this function is to convert a RGB color triple into the equivalent 24-bit long integer.";"118";"cgcolor24.html";"152"
"12615";"CGCOYOTEGRAPHIC";"This simply identifies a routine as a Coyote Graphics routine.";"118";"cgcoyotegraphic.html";"102"
"12612";"CGCLEANUP";"This procedure cleans-up and/or destroys any open graphics or widget windows on the display.";"118";"cgcleanup.html";"229"
"12613";"CGCLIPTOMAP";"Allows an image or geoTiff file to be clipped or subset to a map projected boundary.";"118";"cgcliptomap.html";"229"
"12086";"MODIFIED_MAP_GRID";"Draws the graticule of parallels and meridians, according to the specifications established by MAP_SET.";"120";"modified_map_grid.html";"88"
"12085";"PARSE_NSIDC_FILENAME_0046_NEW";"Read and obtain information about NSIDC images nsidc-0046 (for Version 4 data), northern hemisphere weekly snow cover and snow extent.";"120";"parse_nsidc_filename_0046_new.html";"33"
"13781";NULL;NULL;"4";"doc_center_check_links.html";"1196"
"16385";"mgffxmlitemparser::init";"Creates an XML item parser.";"147";"mg_xml_getdata.html#mgffxmlitemparser::init";"0"
"16384";"mgffxmlitemparser::getResult";"Get result.";"147";"mg_xml_getdata.html#mgffxmlitemparser::getResult";"0"
"16383";"mgffxmlitemparser::cleanup";"Free resources.";"147";"mg_xml_getdata.html#mgffxmlitemparser::cleanup";"0"
"16382";"mgfftokenizer__define";"Define instance variables.";"147";"mgfftokenizer__define.html#mgfftokenizer__define";"124"
"16381";"mgfftokenizer::savePos";"Saves the current state/location of the tokenizer in a memento structure.";"147";"mgfftokenizer__define.html#mgfftokenizer::savePos";"0"
"16380";"mgfftokenizer::restorePos";"Restores the tokenizer to the state/location it was in when the given memento was produced.";"147";"mgfftokenizer__define.html#mgfftokenizer::restorePos";"0"
"16379";"mgfftokenizer::reset";"Resets the tokenizer to the beginning of the tokenized file.";"147";"mgfftokenizer__define.html#mgfftokenizer::reset";"0"
"16378";"mgfftokenizer::next";"Returns the next token of the file.";"147";"mgfftokenizer__define.html#mgfftokenizer::next";"0"
"16377";"mgfftokenizer::init";"Creates a tokenizer for a given file with a given pattern.";"147";"mgfftokenizer__define.html#mgfftokenizer::init";"0"
"12164";"CLIPBOARD";"Access the system clipboard.";"74";"CLIPBOARD.html";"17014"
"12165";"DICTIONARY";"Compound data type that contains key-value pairs of different data types.";"76";"DICTIONARY.html";"12187"
"16376";"mgfftokenizer::getCurrentLine";"Returns the current line of the tokenized file.";"147";"mgfftokenizer__define.html#mgfftokenizer::getCurrentLine";"0"
"16375";"mgfftokenizer::done";"Returns whether there are any more tokens in the file.";"147";"mgfftokenizer__define.html#mgfftokenizer::done";"0"
"16374";"mgfftokenizer::cleanup";"Frees resources.";"147";"mgfftokenizer__define.html#mgfftokenizer::cleanup";"89"
"16373";"mgfftextfile__define";"Define instance variables of text file object.";"147";"mgfftextfile__define.html#mgfftextfile__define";"86"
"16372";"mgfftextfile::setProperty";"Set properties.";"147";"mgfftextfile__define.html#mgfftextfile::setProperty";"0"
"16371";"mgfftextfile::init";"Create a text file object.";"147";"mgfftextfile__define.html#mgfftextfile::init";"0"
"16370";"mgfftextfile::getProperty";"Get properties.";"147";"mgfftextfile__define.html#mgfftextfile::getProperty";"0"
"16369";"mgfftextfile::_overloadHelp";"Returns a string describing the text file object.";"147";"mgfftextfile__define.html#mgfftextfile::_overloadHelp";"0"
"16368";"mgfftextfile::_overloadForeach";"Allows a text file to be used in a FOREACH loop.";"147";"mgfftextfile__define.html#mgfftextfile::_overloadForeach";"0"
"16367";"mgfftextfile::_overloadBracketsRightSide";"Allows array index access with brackets.";"147";"mgfftextfile__define.html#mgfftextfile::_overloadBracketsRightSide";"0"
"16366";"mgfftextfile::_overloadBracketsLeftSide";"Allows setting values of the text file by array index.";"147";"mgfftextfile__define.html#mgfftextfile::_overloadBracketsLeftSide";"44"
"16365";"mgfftemplate__define";"Define instance variables.";"147";"mgfftemplate__define.html#mgfftemplate__define";"58"
"16364";"mgfftemplate::reset";"Reset the template to run again from the start of the template.";"147";"mgfftemplate__define.html#mgfftemplate::reset";"0"
"16363";"mgfftemplate::process";"Process the template with the given variables and send output to the given filename.";"147";"mgfftemplate__define.html#mgfftemplate::process";"0"
"16362";"mgfftemplate::init";"Create a template class for a given template.";"147";"mgfftemplate__define.html#mgfftemplate::init";"0"
"16360";"mgffserialvtk__define";"Define member variables for the class.";"147";"mgffserialvtk__define.html#mgffserialvtk__define";"164"
"16361";"mgfftemplate::cleanup";"Frees resources.";"147";"mgfftemplate__define.html#mgfftemplate::cleanup";"33"
"16359";"mgffserialvtk::readVectorsAttribute";"Reads a vectors attribute.";"147";"mgffserialvtk__define.html#mgffserialvtk::readVectorsAttribute";"0"
"16358";"mgffserialvtk::readTopLevelLine";"Read the top level line.";"147";"mgffserialvtk__define.html#mgffserialvtk::readTopLevelLine";"0"
"16357";"mgffserialvtk::readTextureCoordinatesAttribute";"Reads a texture coordinates attribute.";"147";"mgffserialvtk__define.html#mgffserialvtk::readTextureCoordinatesAttribute";"0"
"16356";"mgffserialvtk::readPolydataDataset";"Reads the sections of a POLYDATA dataset.";"147";"mgffserialvtk__define.html#mgffserialvtk::readPolydataDataset";"0"
"16355";"mgffserialvtk::readPointsSection";"Reads a POINTS section and returns the points.";"147";"mgffserialvtk__define.html#mgffserialvtk::readPointsSection";"0"
"16354";"mgffserialvtk::readPointData";"Reads point data.";"147";"mgffserialvtk__define.html#mgffserialvtk::readPointData";"0"
"16353";"mgffserialvtk::readNormalsAttribute";"Read normals attribute.";"147";"mgffserialvtk__define.html#mgffserialvtk::readNormalsAttribute";"0"
"16352";"mgffserialvtk::readHeader";"Read version line, header line, and file format line.";"147";"mgffserialvtk__define.html#mgffserialvtk::readHeader";"0"
"16351";"mgffserialvtk::readConnectivityListSection";"Reads connectivity list section and returns the connectivity list.";"147";"mgffserialvtk__define.html#mgffserialvtk::readConnectivityListSection";"0"
"16350";"mgffserialvtk::readCellData";"Reads cell data.";"147";"mgffserialvtk__define.html#mgffserialvtk::readCellData";"0"
"16349";"mgffserialvtk::read";"Read a serial VTK file.";"147";"mgffserialvtk__define.html#mgffserialvtk::read";"0"
"16348";"mgffserialvtk::putBackLine";"Put back a line;";"147";"mgffserialvtk__define.html#mgffserialvtk::putBackLine";"0"
"16347";"mgffserialvtk::init";"Initialize object.";"147";"mgffserialvtk__define.html#mgffserialvtk::init";"0"
"16346";"mgffserialvtk::getProperty";"Get properties of the object.";"147";"mgffserialvtk__define.html#mgffserialvtk::getProperty";"0"
"16345";"mgffserialvtk::getData";"Reads any already dimensioned variable.";"147";"mgffserialvtk__define.html#mgffserialvtk::getData";"0"
"4181";"TIMESTAMP";"Returns one or more date/time strings in ISO-8601 format.";"19";"timestamp.html";"11183"
"16344";"mgffserialvtk::convertVtkTypeToIdlType";"Converts a VTK type into an IDL type code.";"147";"mgffserialvtk__define.html#mgffserialvtk::convertVtkTypeToIdlType";"0"
"16343";"mgffserialvtk::cleanup";"Free resources of object.";"147";"mgffserialvtk__define.html#mgffserialvtk::cleanup";"0"
"16342";"mgffprefs__define";"Define instance variables.";"147";"mgffprefs__define.html#mgffprefs__define";"70"
"16341";"mgffprefs::set";"Save the value of a preference.";"147";"mgffprefs__define.html#mgffprefs::set";"26"
"16340";"mgffprefs::init";"Initialize a prefs object.";"147";"mgffprefs__define.html#mgffprefs::init";"0"
"16339";"mgffprefs::getProperty";"Get properties.";"147";"mgffprefs__define.html#mgffprefs::getProperty";"0"
"16338";"mgffprefs::get";"Retrieve the value of a preference.";"147";"mgffprefs__define.html#mgffprefs::get";"0"
"16337";"mgffprefs::clear";"Clear the value of a preference.";"147";"mgffprefs__define.html#mgffprefs::clear";"0"
"16335";"mgffoptions__define";"Define instance variables.";"147";"mgffoptions__define.html#mgffoptions__define";"157"
"16336";"mgffprefs::cleanup";"Free resources.";"147";"mgffprefs__define.html#mgffprefs::cleanup";"0"
"16334";"mgffoptions::put";"Put a new option into the MGffOptions object.";"147";"mgffoptions__define.html#mgffoptions::put";"82"
"16333";"mgffoptions::options";"Return an array of the option names for a given section.";"147";"mgffoptions__define.html#mgffoptions::options";"0"
"16332";"mgffoptions::init";"Initialize mgffoptions object.";"147";"mgffoptions__define.html#mgffoptions::init";"0"
"16331";"mgffoptions::has_section";"Determine if an options object has a given section.";"147";"mgffoptions__define.html#mgffoptions::has_section";"0"
"4195";"ANNOTATEWINDOW";"The purpose of this routine is to allow the user to annotate or make measurements on a graphics window. A copy of the graphics window is created and placed into an annotation window. The user can create various kinds of file output fr...";"120";"annotatewindow.html";"2430"
"4196";"CATALYST";"This program has no purpose except to test and evaluate Catalyst Library functionality. It can be used as examples of good programming practices (well, assuming your definition of 'good' is pretty loose). The way it is used mostly is ...";"120";"catalyst.html";"443"
"4197";"DATAVIEWER";"The purpose of this routine is to provide an application for viewing passive microwave image files found at NSIDC.";"120";"dataviewer.html";"1740"
"4198";"DATAVIEWER_EDIT_CONFIG_FILE";"The purpose of this routine is to allow the user to edit and make changes to the DataViewer configuration file from within a graphical user interface. The program is designed as a utility program that will be called from within DataVi...";"120";"dataviewer_edit_config_file.html";"134"
"4199";"DATAVIEWER_GRIDSIZE";"This function allows the user to change the grid dimensions in DAAC DataViewer.";"120";"dataviewer_gridsize.html";"180"
"4200";"DATAVIEWER_PARSE_CONFIGURATION";"This program parses the configuration file for the DATAVIEWER program.";"120";"dataviewer_parse_configuration.html";"228"
"4201";"GRIDWINDOW__DEFINE";"The purpose of this routine is to provide a draw widget window that can draw its children in grids, similar to !P.MULTI.";"120";"gridwindow__define.html";"170"
"4202";"HDF_SD_VARINFO";"Return information about a Scientific Data Set (SDS) variable in a HDF file.";"120";"hdf_sd_varinfo.html";"315"
"4203";"HDF_SD_VARLIST";"Return the number and names of Scientific Data Set (SDS) variables in a HDF file.";"120";"hdf_sd_varlist.html";"249"
"4204";"HDF_SD_VARREAD";"Read data from a Scientific Data Set (SDS) variable in a HDF file.";"120";"hdf_sd_varread.html";"470"
"4205";"NSIDC_IMAGE__DEFINE";"The purpose of this routine is to define a standard NSIDC image object. NSIDC image objects are scaled for display into the range of 0 to 249. Other indices are allocated as follows: 255: Missing color. 254: Out of bounds low color. 2...";"120";"nsidc_image__define.html";"199"
"4206";"PARSE_NSIDC_AMSR_E_L3_SEAICE";"The purpose of this routine is to read and obtain information about NSIDC AMSR-E/Aqua Daily L3 12.5 km Brightness Temperature, Sea Ice Concentration, & Snow Depth Polar Grids. http://nsidc.org/data/docs/daac/ae_si12_12km_tb_sea_ice_an...";"120";"parse_nsidc_amsr_e_l3_seaice.html";"236"
"4207";"PARSE_NSIDC_FILENAME";"The purpose of this routine is to parse the name of an NSIDC image file so that the program can call the specific file reading program that returns the image and information about the image. When this information is provided, this pro...";"120";"parse_nsidc_filename.html";"162"
"4208";"PARSE_NSIDC_FILENAME_0001";"The purpose of this routine is to read and obtain information about NSIDC images nsidc-0001, DMSP-SSM Daily Polar Gridded Brightness Temperature images.";"120";"parse_nsidc_filename_0001.html";"173"
"4209";"PARSE_NSIDC_FILENAME_0032";"The purpose of this routine is to read and obtain information about NSIDC images nsidc-0032, DMSP SSM/I Pathfinder Daily EASE-Grid Brightness Temperature images.";"120";"parse_nsidc_filename_0032.html";"202"
"4210";"PARSE_NSIDC_FILENAME_0046";"The purpose of this routine is to read and obtain information about NSIDC images nsidc-0046, northern hemisphere weekly snow cover and snow extent.";"120";"parse_nsidc_filename_0046.html";"153"
"4211";"PARSE_NSIDC_FILENAME_0051";"The purpose of this routine is to read and obtain information about NSIDC images nsidc-0051, sea ice concentration from Nimbus-7 SSMR and DMSP SSM/I passive microwave data.";"120";"parse_nsidc_filename_0051.html";"204"
"4212";"PARSE_NSIDC_FILENAME_0071";"The purpose of this routine is to read and obtain information about NSIDC images nsidc-0071, Nimbus-7 SMMR Pathfinder Daily EASE-Grid Brightness Temperature images.";"120";"parse_nsidc_filename_0071.html";"173"
"4213";"PARSE_NSIDC_FILENAME_0079";"The purpose of this routine is to read and obtain information about NSIDC images nsidc-0079, Bootstrap Sea Ice Concentrations from Nimbus-7 SMMR and DMST SSM/I images.";"120";"parse_nsidc_filename_0079.html";"170"
"4214";"PARSE_NSIDC_FILENAME_0080";"The purpose of this routine is to read and obtain information about NSIDC images nsidc-0080, Near Real-Time DMSP SSM/I Daily Polar Gridded Brightness Temperatures images.";"120";"parse_nsidc_filename_0080.html";"162"
"4215";"PARSE_NSIDC_FILENAME_0081";"The purpose of this routine is to read and obtain information about NSIDC images nsidc-0081, Near Real-Time DMSP SSM/I Daily Polar Gridded Brightness Temperatures images.";"120";"parse_nsidc_filename_0081.html";"181"
"4216";"PARSE_NSIDC_FILENAME_0116";"The purpose of this routine is to read and obtain information about NSIDC daily ice motion vectors (nsidc-0116).";"120";"parse_nsidc_filename_0116.html";"179"
"4217";"PARSE_NSIDC_FILENAME_0301";"The purpose of this routine is to read and obtain information about NSIDC images nsidc-0301, AMSR-E/Aqua Daily EASE-Grid Brightness Temperature images.";"120";"parse_nsidc_filename_0301.html";"180"
"4218";"PARSE_NSIDC_FILENAME_0302";"The purpose of this routine is to read and obtain information about NSIDC images nsidc-0302, DMSP SSM/I Pathfinder Daily EASE-Grid Brightness Temperature images.";"120";"parse_nsidc_filename_0302.html";"174"
"4219";"PARSE_NSIDC_FILENAME_0342";"The purpose of this routine is to read and obtain information about NSIDC images nsidc-0342, Near Real-Time DMSP SSM/I Daily EASE-Grid Brightness Temperature images.";"120";"parse_nsidc_filename_0342.html";"173"
"4220";"PARSE_NSIDC_NISE_SSMI_SEAICE";"The purpose of this routine is to read and obtain information about NSIDC Near Real Time SSM/I Daily Global Sea Ice Concentration and Snow Extent (in EASE grids). http://nsidc.org/data/nise1.html";"120";"parse_nsidc_nise_ssmi_seaice.html";"243"
"4221";"GPD_VIEWER";"This method allows the user to obtain GPD_VIEWER properties. Be sure you ALWAYS call the superclass GETPROPERTY method if you have extra keywords! SYNTAX: theObject -&gt; GetProperty ...";"120";"gpd_viewer.html";"237"
"4222";"IMGWIN";"This is an image display routine to allow the user to interact with an image. Moving the cursor in the window gives the value and location inside the image. The image is enclosed in a SCALEIMAGE object, so many of the input keywords a...";"120";"imgwin.html";"502"
"4223";"SELECTIMAGE";"The purpose of this program is to allow the user to select a formatted image file for reading. The image data is returned as the result of the function. The program allows the user to see a thumbnail version of the image, along with i...";"120";"selectimage.html";"494"
"4224";"CATCOORD__DEFINE";"The purpose of this object is to create a coordinate system for data objects. The object is meant to reside in the _COORDS field of CATDATAATOM objects. The CATCOORD object creates a coordinate system at the time it is drawn by settin...";"120";"catcoord__define.html";"300"
"4225";"GEOCOORD";"The purpose of this function is to translate a GEOTIFF structure (as returned by QUERY_TIFF or READ_TIFF) into a map coordinate object (MAPCOORD) that can be used to georeference images with a map data coordinate system. Both the Coyo...";"120";"geocoord.html";"661"
"4226";"MAPCOORD__DEFINE";"The purpose of this object is to set up a map coordinate space for for other objects. The program assumes you will use MAP_PROJ_INIT to set up the map structure that is the basis for the map projection space. Additionally, the program...";"120";"mapcoord__define.html";"256"
"4227";"NCDF_COORD";"The purpose of this function is to translate map projection and grid information in a netCDF file into a map coordinate object (MAPCOORD) that can be used to georeference images found in a netCDF file. Both the Coyote and Catalyst Lib...";"120";"ncdf_coord.html";"368"
"4228";"PLOTCOORD__DEFINE";"The purpose of this object is to create a coordinate system for generic data objects. It does this by saving IDL system variables. Typically, the PLOTCOORD object is updated *after* a plot is drawn in a window and acts to save the plo...";"120";"plotcoord__define.html";"182"
"4229";"CATATOM__DEFINE";"This is second most basic object in the CATALYST Object Library. It is a subclassed CATCONTAINER object and implements an IDL object hierarchy. All objects in the CATALYST Object Library are subclassed from the CATATOM object. Object ...";"120";"catatom__define.html";"349"
"4230";"CATCOLORS__DEFINE";"This object is similar to, and a replacement for, the COLORTOOL object. It is a fundamental object that can be associated with other objects in the Catalyst System that require a way to manage their colors. I wrote this object because...";"120";"catcolors__define.html";"290"
"4231";"CATCONTAINER__DEFINE";"This is the most basic object in the Catalyst Library. It is actually a simple wrapper around the IDL_CONTAINER object, adding get-by-name, reference counting, and memory management. Reference counting is what assures that objects in ...";"120";"catcontainer__define.html";"337"
"4232";"CATCONTROLPANEL__DEFINE";"The purpose of this routine is to implement a control panel as an object. It automatically deals with whether the CP is embedded or standalone and adds OK, APPLY and CANCEL buttons if required. Control panels are most often represente...";"120";"catcontrolpanel__define.html";"254"
"4233";"CATIPTOOL__DEFINE";"The purpose of this routine is to implement an image processing command as a tool object, giving the command the ability to be undone. Any image processing command can be used. The command will call the GETDATA method on the target im...";"120";"catiptool__define.html";"192"
"4234";"CATLAYER__DEFINE";"The purpose of this routine is to implement a container object that can be used for layering or overlaying graphic elements in a draw widget, on an image, etc. Essentially, it is a means of grouping graphic elements (e.g., annotations...";"120";"catlayer__define.html";"223"
"4235";"CATLIST__DEFINE";"This is object is part of the Catalyst Library. It presents a mechanism for dynamically creating and retrieving lists of information of any data type. It is like a hash in the perl programming language. CATLISTVALUE objects are stored...";"120";"catlist__define.html";"193"
"4236";"CATLISTVALUE__DEFINE";"This object is part of the Catalyst Library. It is a simple object used to store a named value of any data type in a CatList object. It is similar to a hash in the perl programming language. This object is designed solely to be used b...";"120";"catlistvalue__define.html";"260"
"4237";"CATTOOL__DEFINE";"This object implements a tool object class. It contains a storage pointer for the data before the tool is applied. This is so the result of the tool can be undone later. And it contains a target field so it knows what object was the t...";"120";"cattool__define.html";"228"
"4238";"CATTOOLLIST__DEFINE";"This is object is part of the Catalyst Library. It presents a mechanism for creating and managing lists of tools (objects that operate on others).";"120";"cattoollist__define.html";"168"
"4239";"COLORTOOL__DEFINE";"The purpose of the ColorTool object is to allow the user to construct and manage a color table. Standard color tables can be loaded, drawing colors can be specified by name and value, etc. Calling the DRAW method on a Colortool object...";"120";"colortool__define.html";"275"
"4240";"CATDATAATOM__DEFINE";"This is the most basic data object in the CATALYST Object Library. It is a subclassed CATATOM object and implements a generic data class in the IDL object hierarchy. All data objects in the heirarchy are subclassed from this object. T...";"120";"catdataatom__define.html";"312"
"4241";"CATIMAGE2D__DEFINE";"This object implements a class for handling 2D image data. It is a subclassed ImageData object and can be subclassed for specific image implementations. This object was an early attempt at creating an image object for the Catalyst Lib...";"120";"catimage2d__define.html";"315"
"4242";"CATIMAGE__DEFINE";"This object implements a class for handling image data. It is a subclassed CATDATAATOM object and can be subclassed for specific image implementations. Out first attempts to define an image object class resulted in the three object cl...";"120";"catimage__define.html";"278"
"4243";"CATIMAGEDATA__DEFINE";"This object implements a class for handling image data. It is a subclassed CATDATAATOM object and can be subclassed for specific image implementations. This object was an early attempt at creating an image object for the Catalyst Libr...";"120";"catimagedata__define.html";"175"
"4244";"CATTRUECOLORIMAGE__DEFINE";"This object implements a class for handling true-color image data. It is a subclassed CatImageData object and can be subclassed for specific image implementations. This object was an early attempt at creating an image object for the C...";"120";"cattruecolorimage__define.html";"166"
"4245";"IMAGECONTAINER__DEFINE";"The purpose of this routine is to provide a container class for image objects. Calling the DRAW method of a container calls the DRAW method on all the items in the container. It is similar to a CatLayer object, which was developed lat...";"120";"imagecontainer__define.html";"169"
"4246";"IMAGEFRAME__DEFINE";"This object implements a class for handling image data. This object is conceptually identical to a CatImage object, except that the image data is not stored directly in the object. Rather, a pointer to an ImageStack object, a frame nu...";"120";"imageframe__define.html";"302"
"4247";"IMAGESTACK__DEFINE";"The purpose of this routine is to implement an object for manipulating an image cube or stack. An image stack is a 3D volume data set that can be sliced in three orthogonal planes to produce image slices or frames.";"120";"imagestack__define.html";"180"
"4248";"SCALEIMAGE__DEFINE";"The purpose of this routine is to provide a CATIMAGE object that can be scaled or stretched. The algorithm for scaling is similar to this (linear scaling is shown): image = ORIGINAL_IMAGE i = WHERE(image EQ MISSING_VALUE, count) IF co...";"120";"scaleimage__define.html";"227"
"4249";"ANGLETOOL__DEFINE";"The purpose of this routine is to create a selectable object for measuring angles in a graphics window. This tool is used in an interaction. See the medical image tab in the Catalyst example application for an example of its use.";"120";"angletool__define.html";"311"
"4250";"BOX__DEFINE";"The purpose of this routine is to provide a rectangle or box that can be displayed in a direct graphics draw widget. The coordinate system of the Box object is either passed to it (a CatCoord object) or is a normalized coordinate syst...";"120";"box__define.html";"317"
"4251";"CAT_ARROW__DEFINE";"The purpose of this routine is to provide an arrow that can be displayed in a direct graphics draw widget. The coordinate system of the Cat_Arrow object is either passed to it (a CatCoord object) or is a normalized coordinate system b...";"120";"cat_arrow__define.html";"182"
"4252";"CAT_ELLIPSE__DEFINE";"The purpose of this routine is to provide a circle or ellipse that can be displayed in a direct graphics draw widget. The coordinate system of the Cat_Ellipse object is either passed to it (a CatCoord object) or is a normalized coordi...";"120";"cat_ellipse__define.html";"203"
"4253";"CAT_POLYGON__DEFINE";"The purpose of this routine is to provide a polygon that can be displayed in a direct graphics draw widget. The coordinate system of the Cat_Polygon object is either passed to it (a CatCoord object) or is a normalized coordinate syste...";"120";"cat_polygon__define.html";"220"
"4254";"CATCOLORBAR__DEFINE";"The purpose of this routine is to implement a colorbar object as a selectable object. The colors for the color bar can be passed into the program as a COLORTOOL object with the COLOR_OBJECT keyword. A gray-scale color table with 256 c...";"120";"catcolorbar__define.html";"272"
"4255";"CATGRAPHICSCMDTOOL__DEFINE";"The purpose of this routine is to implement any IDL graphics command procedure as a tool object, giving the command the ability to be undone. Any graphics command can be used as long as it requires no more than three positional parame...";"120";"catgraphicscmdtool__define.html";"252"
"4256";"CONTRASTBOX__DEFINE";"A contrastbox object is a moveable, rubberband-type box interaction in which only the portion of the window inside the box is shown in full color. The portion of the window outside the box is shown in muted colors. The colors are mute...";"120";"contrastbox__define.html";"205"
"4257";"ELLIPSE_ROI__DEFINE";"The purpose of this routine is to provide an ellipse ROI interaction.";"120";"ellipse_roi__define.html";"196"
"4258";"FREEHAND_ROI__DEFINE";"The purpose of this routine is to create a freehand ROI drawing interaction. When the interaction is in place, the user can draw a freehand polygon ROI in the display window.";"120";"freehand_roi__define.html";"242"
"4259";"IMGAXES__DEFINE";"The purpose of this routine is to display axes on an image object.";"120";"imgaxes__define.html";"226"
"4260";"MAP_GRID__DEFINE";"This object is a wrapper for the MAP_GRID routine in IDL. It provides a simple way to allow map grids on images which use a MAPCOORD object to set up the map projection space. A map coordinate space must be in effect at the time the D...";"120";"map_grid__define.html";"338"
"4261";"MAP_OUTLINE__DEFINE";"This object is a wrapper for either MAP_CONTINENTS or MAP_GSHHS_SHORELINE. It provides a simple way to allow map overlays on images which use a MAPCOORD object to set up the map projection space. A map coordinate space must be in effe...";"120";"map_outline__define.html";"326"
"4262";"MAP_PLOTS__DEFINE";"This object is a wrapper for the PLOTS routine in IDL. It provides a simple way to draw polygons or lines on images which use a MAPCOORD object to set up the map projection space. A map coordinate space must be in effect at the time t...";"120";"map_plots__define.html";"222"
"4263";"MAP_VECTOR__DEFINE";"This object is a wrapper for the CAT_ARROW routine in IDL. It provides a simple way to draw arrows or vectors on images which use a MAPCOORD object to set up the map projection space. A map coordinate space must be in effect at the ti...";"120";"map_vector__define.html";"170"
"4264";"MEASUREINTERACTION__DEFINE";"The purpose of this routine is to provide an interaction for creating and manipulating TapeMeasure objects.";"120";"measureinteraction__define.html";"181"
"4265";"MOVEABLEBOX__DEFINE";"Implements a rubberband-style box ROI that can be selected and moved about the window.";"120";"moveablebox__define.html";"190"
"4266";"POLYGON_ROI__DEFINE";"The purpose of this routine is to create a polygon ROI drawing interaction. When the interaction is in place, the user can draw a polygon ROI in the display window.";"120";"polygon_roi__define.html";"269"
"4267";"RUBBERBANDBOX__DEFINE";"The purpose of this routine is to implement a rubberband-box ROI interaction.";"120";"rubberbandbox__define.html";"204"
"4268";"RULER__DEFINE";"The purpose of this routine is to create a simple ruler for display in the coordinate system of the underlying image. Users will define the length of the ruler (e.g., 5 cm) and the ruler will display this value on the image.";"120";"ruler__define.html";"208"
"4269";"SELECTABLEGROUP__DEFINE";"The purpose of this routine is to group members of a SelectableObject class together.";"120";"selectablegroup__define.html";"162"
"4270";"SELECTABLEOBJECT__DEFINE";"The purpose of this routine is to implement a selectable object for user interaction. This is essentially an abstract class for selectable objects.";"120";"selectableobject__define.html";"161"
"4271";"TAPEMEASURE__DEFINE";"The purpose of this routine is to provide a tape measure that can be displayed in a direct graphics draw widget. Typically, the user drags a line between two points in an image and the distance is calculated using the coordinate syste...";"120";"tapemeasure__define.html";"211"
"4272";"TEXTLINE__DEFINE";"The purpose of this routine is to provide a line of text that can be displayed in a direct graphics draw widget. As a subclassed CATDATAATOM, the text is the 'data' and can be manipulated with the GetData and SetData methods. The coor...";"120";"textline__define.html";"217"
"4273";"ANNOTATEINTERACTION__DEFINE";"The purpose of this routine is to provide an interaction for creating and manipulating SELECTABLEOBJECT objects. An interaction takes over draw widget event handling for the duration of the interaction and then restores it to its norm...";"120";"annotateinteraction__define.html";"284"
"4274";"INTERACTION__DEFINE";"The purpose of this routine is to implement the most basic of interactions. An 'interaction' is an operation that takes over control of a draw widget and allows the user to interact with the draw widget in some way. For example, drawi...";"120";"interaction__define.html";"188"
"4275";"SELECTINTERACTION__DEFINE";"The purpose of this routine is to implement the most basic of interactions. An 'interaction' is an operation that takes over control of a draw widget and allows the user to interact with the draw widget in some way. For example, drawi...";"120";"selectinteraction__define.html";"156"
"4276";"CATOBJECTVIEW__DEFINE";"This object implements a methodology for displaying object graphics in the Catalyst Object Library. The object contains an IDLgrView or IDLgrScene object, written in object graphics that can be displayed in an ODrawWidget object. If f...";"120";"catobjectview__define.html";"215"
"4277";"CATSURFACE__DEFINE";"The purpose of this routine is to implement an object graphics surface command for display in an ODrawWidget object. To create a rotating surface in the draw widget, button events MUST be turned on for the draw widget.";"120";"catsurface__define.html";"176"
"4278";"CAT_IDLARROW";;"120";"cat_idlarrow.html";"203"
"4279";"CATCHECKDEFAULT";"This function enables the caller to test system settings. The intention is to hide the mechanics of default storage from the caller. Use the CatSetDefault procedure to set up the default variable before attempting to retrieve it.";"120";"catcheckdefault.html";"304"
"4280";"CATCOLLECTSUPERCLASSNAMES";"The purpose of this utility routine is to collect all the Catalyst object's superclass names and return them as the result of the function. The names IDL_CONTAINTER and IDLITCOMPONENT are removed from the names array before the names ...";"120";"catcollectsuperclassnames.html";"283"
"4281";"CATDESTROYDEFAULTS";"This procedure enables the caller to clean up system settings. The intention is to hide the mechanics of default storage from the caller.";"120";"catdestroydefaults.html";"350"
"4282";"CATEVENTDISPATCHER";"The purpose of this utility routine is to intercept the event callbacks from widgets and pass the 'event' on to an object EventHandler method. The EventHandler method must be written with one positional parameter: the event structure ...";"120";"cateventdispatcher.html";"339"
"4283";"CATGETDEFAULT";"This function enables the caller to get system settings. The intention is to hide the mechanics of default storage from the caller. Use the CatSetDefault procedure to set up the default variable before attempting to retrieve it.";"120";"catgetdefault.html";"302"
"4284";"CATGETGRAPHICSWINDOW";"The purpose of this utility routine is to allow objects lower down in a graphics hierarchy to obtain the object reference of a drawable graphics window (either a PIXMAPWIDGET or a DRAWWIDGET or a subclass of one of these) in the graph...";"120";"catgetgraphicswindow.html";"247"
"4285";"CATGETTOPOBJECT";"The program retrieves the object at the top of an object heirarchy, rooted at the specified object.";"120";"catgettopobject.html";"286"
"4286";"CATHELPDEFAULTS";"This procedure enables the caller to explore any defaults existing in the defaults system.";"120";"cathelpdefaults.html";"293"
"4287";"CATKILLNOTIFY";"The purpose of this utility routine is to make sure objects in the object hierarchy properly destroy themselves when the widget is destroyed. All object widgets will be assigned this routine to be the Kill_Notify routine. If a user-de...";"120";"catkillnotify.html";"201"
"4288";"CATREALIZENOTIFY";"The purpose of this utility routine is to intercept the NOTIFY_REALIZE callback from widgets and pass the notification on to a NOTIFY_REALIZE method.";"120";"catrealizenotify.html";"185"
"4289";"CATREFRESHDRAW";"The purpose of this utility routine is to allow objects lower down in a DRAW hierarchy to request DRAW events from object higher in the hierarchy. For example, if an IMGAXIS object needed to refresh itself, it would need to call the D...";"120";"catrefreshdraw.html";"176"
"4290";"CATRESETSYSVARS";"The program resets all plotting and mapping system variables to their default values.";"120";"catresetsysvars.html";"163"
"4291";"CATSETDEFAULT";"This function enables the caller to set existing system settings. The intention is to hide the mechanics of default storage from the caller.";"120";"catsetdefault.html";"284"
"4292";"CATVIEWCONTENTS";"This function allows the user to view the contents of an object container. The contents of the object are shown in a TreeWidget view, with the object's classname, followed by the object's name in parentheses.";"120";"catviewcontents.html";"227"
"4293";"MAKE_CATALYST_HTML_FILES";"This is used to produce Catalyst HTML files from the Catalyst source code, using the IDL routine MK_HTML_HELP.";"120";"make_catalyst_html_files.html";"161"
"4294";"MAKE_CATLIB_HELP";"Given a list of IDL procedure files (.PRO), VMS text library files (.TLB), or directories that contain such files, this procedure generates a file in the HTML format that contains the documentation for those routines that contain a DO...";"120";"make_catlib_help.html";"262"
"4295";"OBJ_ISA_VALID";"The purpose of this utility routine is to check to be sure the object argument is valid and belongs to the specified class.";"120";"obj_isa_valid.html";"189"
"4296";"SYSTEMCOLORS__DEFINE";"The program creates an object to manipulate system colors.";"120";"systemcolors__define.html";"207"
"4297";"BASEWIDGET__DEFINE";"The purpose of this routine is to implement a base widget as an object. If you wish to create a top-level base widget object, use the TOPLEVELBASE object.";"120";"basewidget__define.html";"283"
"4298";"BUTTONWIDGET__DEFINE";"The purpose of this routine is to implement a button widget as an object.";"120";"buttonwidget__define.html";"255"
"4299";"CAT_TRACKBALL__DEFINE";"This object translates widget events for draw widgets into transformations that emulate a virtual trackball (for transforming object graphics in three dimensions).";"120";"cat_trackball__define.html";"183"
"4300";"CATGRAPHICSWINDOW__DEFINE";"The purpose of this routine is to implement a draw widget inside a top-level base widget. Objects with DRAW methods can be added to the CatGraphicsWindow object and their graphics will be displayed in the window.";"120";"catgraphicswindow__define.html";"274"
"4301";"COMBOBOXWIDGET__DEFINE";"The purpose of this routine is to implement a combobox widget as an object.";"120";"comboboxwidget__define.html";"196"
"4302";"CONTEXTMENUBASE__DEFINE";"The purpose of this routine is to provide a starting template for object creation.";"120";"contextmenubase__define.html";"171"
"4303";"CT_STRETCH__DEFINE";"The purpose of this routine is to implement a colortable stretch widget for images. Essentially, it allows the use to window/level an image with respect to its display colors. No image data is changed.";"120";"ct_stretch__define.html";"187"
"4304";"CW_HISTOSTRETCH__DEFINE";"The purpose of this routine is to implement a histogram stretch interactive widget for images.";"120";"cw_histostretch__define.html";"230"
"4305";"DRAWBUTTONWIDGET__DEFINE";"The purpose of this routine is to construct a button widget from a draw widget. The button is constucted using the system colors of the user's computer, so it could look differently on each individual's computer.";"120";"drawbuttonwidget__define.html";"166"
"4306";"DRAWWIDGET__DEFINE";"The purpose of this routine is to implement a draw widget as an object.";"120";"drawwidget__define.html";"177"
"4307";"DROPLISTWIDGET__DEFINE";"The purpose of this routine is to implement a droplist widget in an object structure. This routine is a compound widget in order to give the droplist more functionality than the current IDL droplist widget. In particular, it is much e...";"120";"droplistwidget__define.html";"204"
"4308";"FIELDWIDGET__DEFINE";"The purpose of this routine is to create an object widget similar to FSC_FIELD (which is itself similar to CW_FIELD).";"120";"fieldwidget__define.html";"254"
"4309";"IMAGESTRIP__DEFINE";"The purpose of this routine is to allow a sequence of images to exist in a rwo or strip of images. The object is a compound widget object and is a subclassed BASEWIDGET. Buttons at either end of the image strip draw widget allow the s...";"120";"imagestrip__define.html";"217"
"4310";"LABELWIDGET__DEFINE";"The purpose of this routine is to implement a label widget as an object.";"120";"labelwidget__define.html";"207"
"4311";"LISTWIDGET__DEFINE";"The purpose of this routine is to implement a list widget in an object structure. This routine is a compound widget in order to give the list more functionality than the current IDL list widget.";"120";"listwidget__define.html";"183"
"4312";"MENUBARWIDGET__DEFINE";"The purpose of this routine is to wrap a top-level base menubar widget identifier up in a widget object. This object should never be defined by the user. Rather, it is defined automatically when a TOPLEVELBASE object is created.";"120";"menubarwidget__define.html";"159"
"4313";"ODRAWWIDGET__DEFINE";"The purpose of this routine is to implement an object graphics draw widget as an object.";"120";"odrawwidget__define.html";"176"
"4314";"PIXMAPWIDGET__DEFINE";"The purpose of this routine is to implement a pixmap window as a widget object. Putting this widget into a hierarchy will cause the display generated by drawing the child widgets to be buffered through the pixmap to the target window....";"120";"pixmapwidget__define.html";"254"
"4315";"PROPERTYPANEL__DEFINE";"The purpose of this routine is to create a panel object, which has a tree-widget showing the object hierarchy on the left and the control panel of each selected tree-widget object on the right.";"120";"propertypanel__define.html";"211"
"4316";"PROPERTYSHEETWIDGET__DEFINE";"The purpose of this routine is to create a propertysheet widget as an object.";"120";"propertysheetwidget__define.html";"169"
"4317";"SELECTABLEDRAWWIDGET__DEFINE";"The purpose of this routine is to subclass a draw widget so that items in the draw widget can be 'selectable' and interactive. The type of interaction available is limited to moving objects (with the left mouse button) or calling thei...";"120";"selectabledrawwidget__define.html";"197"
"4318";"SLIDERWIDGET__DEFINE";"The purpose of this routine is to implement a slider widget as an object.";"120";"sliderwidget__define.html";"251"
"4319";"SPINNER__DEFINE";"The purpose of this routine is to implement a spinner widget, in which arrow buttons affect the value of the spinner. Leaving the cursor down on an arrow button will cause the value of the spinner to 'spin' or change rapidly.";"120";"spinner__define.html";"211"
"4320";"STATUSBAR__DEFINE";"The purpose of this routine is to implement a status bar that can be used to alert the user to the current status of the system.";"120";"statusbar__define.html";"195"
"4321";"TABWIDGET__DEFINE";"The purpose of this routine is to implement a tab widget as an object.";"120";"tabwidget__define.html";"185"
"4322";"TEXTWIDGET__DEFINE";"The purpose of this routine is to implement a text widget as an object.";"120";"textwidget__define.html";"206"
"4323";"TOPLEVELBASE__DEFINE";"The purpose of this routine is to implement a top-level base widget as an object. If you wish to create a non-top-level base widget object, use the BASEWIDGET object.";"120";"toplevelbase__define.html";"202"
"4324";"TREEWIDGET__DEFINE";"The purpose of this routine is to implement a tree widget as an object.";"120";"treewidget__define.html";"186"
"4325";"VIEWCONTENTS__DEFINE";"The purpose of this object is to have a top-level base object with an event handler that can handle tree-widget events silently.";"120";"viewcontents__define.html";"167"
"4326";"WIDGETATOM__DEFINE";"The purpose of this routine is to create a widget object class that can be subclassed for all widget objects. Any keyword that is available for all widgets is implemented in this object class.";"120";"widgetatom__define.html";"198"
"4327";"AADEMO";"Demo plot using the aa routines.";"142";"aademo.html";"626"
"4328";"AAPLOT";"Antialiased plot routine.";"142";"aaplot.html";"493"
"4329";"AAPLOTP";"Antialiased plotp routine.";"142";"aaplotp.html";"344"
"4330";"AAPOINT";"Antialiased point routine.";"142";"aapoint.html";"453"
"4331";"AARR";"Simulate an associative array (key / value pairs).";"142";"aarr.html";"516"
"4332";"AATEXT";"Antialiased text routine.";"142";"aatext.html";"616"
"4333";"ABS_PATH";"Convert a relative path to an absolute path.";"142";"abs_path.html";"739"
"4334";"ACT_APPLY";"Apply an absolute color table to an array of values.";"142";"act_apply.html";"392"
"4335";"ACT_CBAR";"Make a color bar for an absolute color table.";"142";"act_cbar.html";"735"
"4336";"ACT_EDIT";"Build and/or Edit an absolute color table.";"142";"act_edit.html";"313"
"4337";"ACT_INFO";"Return values from current absolute color table.";"142";"act_info.html";"298"
"4338";"ACT_SHOW";"Display color bars for the given list of color tables.";"142";"act_show.html";"342"
"4339";"ADD_HELPMENU";"Add one or more drop-down menus for help text to given base.";"142";"add_helpmenu.html";"288"
"4340";"ADD_MARGIN";"Add space to left margin and top of a text file.";"142";"add_margin.html";"394"
"4341";"AGE_CHECK";"Check if files in two directories match.";"142";"age_check.html";"294"
"4342";"ALIGN";"Vector text justification (positioning).";"142";"align.html";"432"
"4343";"ALL_FACTORS";"Return sorted array of all factors of a given number.";"142";"all_factors.html";"294"
"4344";"ALTAZI2RADEC";"Convert from alt,azi,time to ra,dec.";"142";"altazi2radec.html";"303"
"4345";"ALTAZI_POINTER";"Plot an altazimuth pointer on display.";"142";"altazi_pointer.html";"303"
"4346";"ANG_DIFF";"Return difference between two angles in degress.";"142";"ang_diff.html";"308"
"4347";"ANG_MEAN";"Return the mean (and sdev) of a set of angles.";"142";"ang_mean.html";"304"
"4348";"ANG_MID";"Return the angle midway between two angles.";"142";"ang_mid.html";"296"
"4349";"ANIMALS";"Return a string array of animals.";"142";"animals.html";"498"
"4350";"APODIZE";"Weighting array for apodizing an image. Cosine taper.";"142";"apodize.html";"671"
"4351";"ARCHIVE_NDIR";"Archive N levels of a directory.";"142";"archive_ndir.html";"301"
"4352";"ARCS";"Plot specified arcs or circles on the current plot device.";"142";"arcs.html";"280"
"4353";"ARG_PARSE";"Parse an argument list into positional and keyword args.";"142";"arg_parse.html";"791"
"4354";"ARRAY_LIST";"List an array in a form useful to cut and paste.";"142";"array_list.html";"356"
"4355";"ARROW2";"Draw arrows on screen.";"142";"arrow2.html";"390"
"4356";"AUTOCOLOR";"Print text on an image using automatic colors.";"142";"autocolor.html";"383"
"4357";"AXIS2";"General axis routine for screen.";"142";"axis2.html";"278"
"4358";"AXVAL";"Find nice axis values.";"142";"axval.html";"312"
"4359";"AZTICK";"Tick mark formatting function for azimuth.";"142";"aztick.html";"251"
"4360";"BASECON";"Convert an integer number from one base to another.";"142";"basecon.html";"307"
"4361";"BELL";"Ring terminal bell.";"142";"bell.html";"234"
"4362";"BEST_FFT";"Attempts to find size of fastest FFT from given choices.";"142";"best_fft.html";"226"
"4363";"BINBOUND";"For binary image return array with boundary points set to 1.";"142";"binbound.html";"299"
"15445";"BIT_BYTE_REVERSE";"Return value made by reversing the bits of given byte value.";"142";"bit_byte_reverse.html";"56"
"4365";"BLEND";"Sets up weighting array for blending arrays together.";"142";"blend.html";"254"
"4366";"BOX1";"Single mouse button interactive box on image display.";"142";"box1.html";"214"
"4367";"BOX2B";"Simple two mouse button interactive box on image display.";"142";"box2b.html";"235"
"4368";"BOX_SIZE";"Used by MOVBOX to change box size using the cursor.";"142";"box_size.html";"218"
"4369";"BOXAREA";"Select an area with a box.";"142";"boxarea.html";"244"
"4370";"BUILD_ARR_STRUCT";"Build a structure from arrays of tags and values.";"142";"build_arr_struct.html";"181"
"4371";"BYT2STRARR";"Unpack a string array from a byte array";"142";"byt2strarr.html";"222"
"4372";"BYTARR_GET";"Extract a byte array from a byte buffer.";"142";"bytarr_get.html";"232"
"4373";"BYTARR_PUT";"Insert a byte array into a byte buffer.";"142";"bytarr_put.html";"214"
"4374";"C2HSV";"Convert a 24-bit color value to Hue, Saturation, Value.";"142";"c2hsv.html";"268"
"4375";"C2RGB";"Convert a 24-bit color value to Red, Green, Blue values.";"142";"c2rgb.html";"246"
"4376";"C_ADJHSV";"Adjust Hue, Saturation, and Value for a given 24-bit color.";"142";"c_adjhsv.html";"230"
"4377";"CALTXT";"Return a text array with calendar.";"142";"caltxt.html";"256"
"4378";"CBAR";"Make a color bar.";"142";"cbar.html";"340"
"4379";"CBAR2";"Make a color bar on screen.";"142";"cbar2.html";"371"
"4380";"CED1";"Simple widget to edit a single color table entry.";"142";"ced1.html";"231"
"4381";"CGM";"Toggles graphics redirection to a *.cgm file on or off.";"142";"cgm.html";"342"
"4382";"CHECK5";"Check if running IDL version 5 or greater.";"142";"check5.html";"285"
"4383";"CHECK_SHAPEFILE";"Look at details of a shapefile. Show some access commands.";"142";"check_shapefile.html";"370"
"4384";"CHECKER";"Return a checker board pattern array of 0 and 1.";"142";"checker.html";"265"
"4385";"CHINIT";"Initializes chart setup. Good for viewgraphs.";"142";"chinit.html";"297"
"4386";"CLR2LUM";"Compute luminance from a 24-bit color value.";"142";"clr2lum.html";"253"
"4387";"CLR_SCALE";"Clear image scaling values embedded by put_scale.";"142";"clr_scale.html";"283"
"4388";"CLRNAME";"Return a 24 bit color given a color name.";"142";"clrname.html";"253"
"4389";"CM2NORM";"Convert from cm to normalized coordinates.";"142";"cm2norm.html";"276"
"4390";"COLOR";"Set a color in the color table by specifying color name.";"142";"color.html";"1771"
"4391";"COLOR_ARRAY";"Make an array of colors.";"142";"color_array.html";"318"
"4392";"COLOR_CODE";"Color code a range of value.";"142";"color_code.html";"374"
"4393";"COLOR_CODE_CT";"Color code data based on a color table.";"142";"color_code_ct.html";"246"
"4394";"COLOR_PICK";"Color picker widget.";"142";"color_pick.html";"286"
"4395";"COLOR_PICK2";"Color picker widget using RGB and HSV sliders.";"142";"color_pick2.html";"172"
"4396";"COLOR_QUANJ";"Combines Red, Green, Blue components into a color image.";"142";"color_quanj.html";"301"
"4397";"COLOR_WHEEL";"Pick a color using a color wheel.";"142";"color_wheel.html";"270"
"4398";"COLORIZE";"Colorize an image.";"142";"colorize.html";"213"
"4399";"COLORS8BIT";"Show array of 256 colors in a window.";"142";"colors8bit.html";"196"
"4400";"COLORWARN";"Warn if available IDL colors too few.";"142";"colorwarn.html";"279"
"4401";"COMMALIST";"Return a given array as a comma delimited text list.";"142";"commalist.html";"255"
"4402";"COMPLEXVIEW";"View a subarea of a complex image as a vector field.";"142";"complexview.html";"321"
"4403";"COMPLOT";"Plot complex numbers as points in the complex plane.";"142";"complot.html";"318"
"4404";"CONCOORD";"Convert between two linear coordinate systems.";"142";"concoord.html";"226"
"4405";"CONGRID2";"Alternate (and limited) congrid using interpolate.";"142";"congrid2.html";"263"
"4406";"CONGRID8C";"Do 24 bit congrid interpolation on 8 bit color image.";"142";"congrid8c.html";"239"
"4407";"CONVERT_IND";"Convert a text description of runs of indices to numbers.";"142";"convert_ind.html";"206"
"4408";"CONVERT_LIST";"Convert a text description of numbers to a numeric array.";"142";"convert_list.html";"180"
"4409";"COSFILT";"Cosine tapered weighting array to use for FFT filtering.";"142";"cosfilt.html";"294"
"4410";"COSTAP";"Cosine taper weighting from 1 at center to 0 at ends.";"142";"costap.html";"264"
"4411";"COUNTY_FIPS";"Return list of county FIPS codes given state.";"142";"county_fips.html";"304"
"4412";"CPOSPRINT";"Print a string showing character positions.";"142";"cposprint.html";"211"
"4413";"CREATED";"Return file creation host, user, and time stamp or tag.";"142";"created.html";"258"
"4414";"CROSSI";"Interactive cross-hair cursor on screen or plot.";"142";"crossi.html";"341"
"4415";"CROSSI2";"Interactive cross-hair cursor on screen or plot.";"142";"crossi2.html";"321"
"4416";"CRS_EDIT";"Edit a bitmap to use for a cursor image.";"142";"crs_edit.html";"205"
"4417";"CSPEC";"Compute ensemble averaged frequency spectrum of complex data.";"142";"cspec.html";"327"
"4418";"CTINT";"Interpolate between two color table entries.";"142";"ctint.html";"388"
"4419";"CTOOL";"Modify a color table using widgets.";"142";"ctool.html";"297"
"4420";"CTRIM";"Do a circular trim on an array.";"142";"ctrim.html";"383"
"4421";"CUMULATE";"Array with the cumulative sum of an array. Integrate.";"142";"cumulate.html";"332"
"4422";"CW_BITLIGHTS";"Indicate bits on or off.";"142";"cw_bitlights.html";"195"
"4423";"CW_DROPLIST2";"A pop up list from which to select an item.";"142";"cw_droplist2.html";"242"
"4424";"CW_DSLIDER";"Slider using draw widget. Generates drag events.";"142";"cw_dslider.html";"238"
"4425";"CW_MAGIMAGE";"Image with magnified view compound widget.";"142";"cw_magimage.html";"205"
"4426";"CW_MCLED";"Multicolored LED widget.";"142";"cw_mcled.html";"209"
"4427";"CW_STRIPCHART";"Strip chart compound widget.";"142";"cw_stripchart.html";"183"
"4428";"CYPH";"Construct a cycle/phase array from time series data.";"142";"cyph.html";"217"
"4429";"D2DM";"Function to convert from degrees to deg, min.";"142";"d2dm.html";"365"
"4430";"D2DMS";"Function to convert from degrees to deg, min, sec.";"142";"d2dms.html";"418"
"4431";"DATA_BLOCK";"Read the block of data following data_block call.";"142";"data_block.html";"311"
"4432";"DATA_SEGMENT";"Compute indices of data segments in an array.";"142";"data_segment.html";"179"
"4433";"DATA_SEGMOD";"Segment data that has values modulo a constant (like angles).";"142";"data_segmod.html";"309"
"4434";"DATA_SET_KEY";"Get data set info given a key.";"142";"data_set_key.html";"194"
"4435";"DATATYPE";"Datatype of variable as a string (3 char or spelled out).";"142";"datatype.html";"489"
"4436";"DATE2DN";"Find day of year number from date.";"142";"date2dn.html";"342"
"4437";"DATE2DOY";"Date to Day of Year conversion.";"142";"date2doy.html";"496"
"4438";"DATE2JD";"Convert a date string to Julian Day number.";"142";"date2jd.html";"241"
"4439";"DATE2YMD";"Date text string to the numbers year, month, day.";"142";"date2ymd.html";"414"
"4440";"DATUM_NAD27_TO_WGS84";"Datum shift from NAD27 to WGS84, CONUS only.";"142";"datum_nad27_to_wgs84.html";"453"
"4441";"DATUM_SA1956_TO_WGS84";"Datum shift from SA1956 to WGS84, CONUS only.";"142";"datum_sa1956_to_wgs84.html";"220"
"4442";"DAYGLOBE";"Show the area of daylight/night on a globe.";"142";"dayglobe.html";"265"
"4443";"DECOMPOSE";"Device independent decompose set or get.";"142";"decompose.html";"1714"
"4444";"DELCHR";"Delete all occurrences of a character from a text string.";"142";"delchr.html";"341"
"4445";"DETAB";"Replace tab characters by spaces.";"142";"detab.html";"248"
"4446";"DETAB_FILE";"Convert any tabs in a file to spaces.";"142";"detab_file.html";"199"
"4447";"DIGITIZE";"Digitize a plot in an image using the mouse cursor.";"142";"digitize.html";"345"
"4448";"DIGITS_GET";"Get digits in a number.";"142";"digits_get.html";"300"
"4449";"DIGITS_PUT";"Combine separate digits into a number.";"142";"digits_put.html";"190"
"4450";"DIMSZ";"Return size of requested array dimension.";"142";"dimsz.html";"273"
"4451";"DIRMEM";"Update a directory list for easy access.";"142";"dirmem.html";"278"
"4452";"DISKCENTER";"Find center and radius of a disk in an image.";"142";"diskcenter.html";"247"
"4453";"DIST_SCALE";"Display a distance scale on an image.";"142";"dist_scale.html";"229"
"4454";"DIST_SCALE2";"Display a distance scale on an image.";"142";"dist_scale2.html";"284"
"4455";"DISTANCE_SCALE";"Plot a distance scale in graphics screen.";"142";"distance_scale.html";"246"
"4456";"DMS2D";"Convert from Degrees, Minutes, and seconds to degrees.";"142";"dms2d.html";"328"
"4457";"DMS_FORM";"Convert degrees to a deg, min, sec vector font string.";"142";"dms_form.html";"257"
"4458";"DOT";"Used by SUN_SHADE for dot prod. of surf. normal & sun vect.";"142";"dot.html";"570"
"4459";"DRAW";"Graphics draw from last point to given point.";"142";"draw.html";"336"
"4460";"DRAW_WID_CORR";"Get draw widget scroll size correction.";"142";"draw_wid_corr.html";"243"
"4461";"DRAWPOLY";"Draw a polygon using mouse.";"142";"drawpoly.html";"428"
"4462";"DROP_COMMENTS";"Drop comment and null lines from a text array.";"142";"drop_comments.html";"330"
"4463";"DT_TM_BRK";"Break a date and time string into separate date and time.";"142";"dt_tm_brk.html";"295"
"4464";"DT_TM_CHK";"Check date & time string that both parts exist & are valid.";"142";"dt_tm_chk.html";"283"
"4465";"DT_TM_DIF";"Find time interval in seconds between two date/time strings.";"142";"dt_tm_dif.html";"225"
"4466";"DT_TM_FROMCR";"Convert from Carrington Rotation Number to Date/Time.";"142";"dt_tm_fromcr.html";"273"
"4467";"DT_TM_FROMJS";"Convert 'Julian Seconds' to a date/time string.";"142";"dt_tm_fromjs.html";"298"
"4468";"DT_TM_FULL";"Add missing parts of date to get a full date/time string.";"142";"dt_tm_full.html";"180"
"4469";"DT_TM_INC";"Increment a date/time by a given number of seconds.";"142";"dt_tm_inc.html";"278"
"4470";"DT_TM_MAK";"Set up a time and date string from reference JD and offset.";"142";"dt_tm_mak.html";"301"
"4471";"DT_TM_PICK";"Pick a date and time using a widget.";"142";"dt_tm_pick.html";"197"
"4472";"DT_TM_PICK_INT";"Pick a date and time using a widget.";"142";"dt_tm_pick_int.html";"197"
"4473";"DT_TM_RANGE";"Extract date/time range from string with two date/times.";"142";"dt_tm_range.html";"192"
"4474";"DT_TM_TOCR";"Convert from Date/Time to Carrington Rotation Number.";"142";"dt_tm_tocr.html";"423"
"4475";"DT_TM_TOJS";"Convert a date/time string to 'Julian Seconds'.";"142";"dt_tm_tojs.html";"314"
"4476";"EARTHRAD";"Return earth radius in specified units.";"142";"earthrad.html";"448"
"4477";"ELL_2PT_CIRCLE";"Find a circle of specified radius through 2 points on an ellipsoid.";"142";"ell_2pt_circle.html";"180"
"4478";"ELL_3PT_CIRCLE";"Fit a circle to 3 points on an ellipsoid.";"142";"ell_3pt_circle.html";"209"
"4479";"ELL_CRV_ADD";"Combine two curves orienting second if needed.";"142";"ell_crv_add.html";"208"
"4480";"ELL_CRV_SPLIT";"Split a curve with an azimuth (geodesic or loxodromic).";"142";"ell_crv_split.html";"238"
"4481";"ELL_CYL_EQ_AREA";"Compute area of given lng/lat polygon on an earth ellipsoid.";"142";"ell_cyl_eq_area.html";"193"
"4482";"ELL_DECPLACES";"Show size of decimal places at a given point.";"142";"ell_decplaces.html";"207"
"4483";"ELL_DIST_MATCH";"Find point with equal distance to 2 reference points.";"142";"ell_dist_match.html";"281"
"4484";"ELL_GEO_2PTSEP";"Find distance between two points along a geodesic.";"142";"ell_geo_2ptsep.html";"194"
"4485";"ELL_GEO_INT";"Intersection point of two geodesic segments.";"142";"ell_geo_int.html";"189"
"4486";"ELL_GEO_INTERP_PTS";"Add points interpolated on a geodesic between array points.";"142";"ell_geo_interp_pts.html";"185"
"4487";"ELL_GEO_MID";"Find midpoint between two points along a geodesic.";"142";"ell_geo_mid.html";"201"
"4488";"ELL_GEO_MINDIST_PT";"Find the point on the given geodesic closest to a given point.";"142";"ell_geo_mindist_pt.html";"195"
"4489";"ELL_GEO_PT_SEP";"Return geodesic separations of adjacent points in an array.";"142";"ell_geo_pt_sep.html";"190"
"4490";"ELL_GEO_PTS";"Return an array of points along a geodesic.";"142";"ell_geo_pts.html";"205"
"4491";"ELL_GEO_SIDE";"Find which side of a geodesic a given point located on.";"142";"ell_geo_side.html";"207"
"4492";"ELL_GEOAZI_INT";"Find intersection point of a geodesic and an azimuth line.";"142";"ell_geoazi_int.html";"280"
"4493";"ELL_GEOCIRC_INT";"Find intersection point of a geodesic and circle.";"142";"ell_geocirc_int.html";"241"
"4494";"ELL_LATCON";"Convert between latitude types.";"142";"ell_latcon.html";"246"
"4495";"ELL_LL2RB";"For two points on an ellipsoid return range and bearing.";"142";"ell_ll2rb.html";"516"
"4496";"ELL_LL2TM";"Lon,lat to transverse mercator on an ellipsoid.";"142";"ell_ll2tm.html";"212"
"4497";"ELL_LLH2XYZ";"Ellipsoidal Long, Lat, Height, to x, y, z.";"142";"ell_llh2xyz.html";"233"
"4498";"ELL_LOX_SIDE";"Find which side of a loxodrome a given point located on.";"142";"ell_lox_side.html";"217"
"4499";"ELL_LOXODROME";"Deal with loxodromes on ellipsoidal earth.";"142";"ell_loxodrome.html";"209"
"4500";"ELL_MERC";"Mercator projection on an ellipsoid, forward and inverse.";"142";"ell_merc.html";"240"
"4501";"ELL_PLOT_PT";"Plot a point or segment on current map.";"142";"ell_plot_pt.html";"202"
"4502";"ELL_PLOT_PTARR";"Plot an array of points structures.";"142";"ell_plot_ptarr.html";"201"
"4503";"ELL_PLOT_SEG";"Plot a color coded data segment on current map.";"142";"ell_plot_seg.html";"211"
"4504";"ELL_POINT_MOV";"Find a point given range and azimuth from another point.";"142";"ell_point_mov.html";"205"
"4505";"ELL_POINT_SEP";"Distance in meters between two points given as structures.";"142";"ell_point_sep.html";"241"
"4506";"ELL_POLYGON";"Fill sides of a polygon on an ellipsoid with small steps.";"142";"ell_polygon.html";"197"
"4507";"ELL_RB2LL";"From range and bearing on an ellipsoid compute a point.";"142";"ell_rb2ll.html";"207"
"4508";"ELL_RB2LL_TXT";"Convert a file with range/bear pairs into lat/long.";"142";"ell_rb2ll_txt.html";"212"
"4509";"ELL_SEG_PT_CLOSEST";"Find point on segment closest to a given point.";"142";"ell_seg_pt_closest.html";"224"
"4510";"ELL_TRACK_DIST";"Return distance in meters along given track.";"142";"ell_track_dist.html";"291"
"4511";"ELL_TRACK_REDUCE_POINTS";"Reduce the number of points along a track.";"142";"ell_track_reduce_points.html";"200"
"4512";"ELL_XYZ2LLH";"x, y, z to ellipsoidal Long, Lat, Height.";"142";"ell_xyz2llh.html";"224"
"4513";"ELLFIT";"Fit an ellipse to a 2-d probability distribution.";"142";"ellfit.html";"425"
"4514";"ELLFITBIN";"Fit an ellipse to a 2-d binary blob image.";"142";"ellfitbin.html";"288"
"4515";"ELLIPSOID";"Set or get earth ellipsoid structure.";"142";"ellipsoid.html";"647"
"4516";"EMBED";"Embed an array in a larger array.";"142";"embed.html";"234"
"4517";"ENDIAN";"Function indicating which endian the current machine uses.";"142";"endian.html";"416"
"4518";"ENTER";"Prompted entries allowing defaults. Help, IDL/DCL commands.";"142";"enter.html";"270"
"4519";"ENVELOPE";"Return the min/max envelope of a time series.";"142";"envelope.html";"1758"
"4520";"EPSINIT";"Redirect plots and images to Encapsulated Postscript File.";"142";"epsinit.html";"509"
"4521";"EPSTERM";"Terminate Encapsulated Postscript plotting.";"142";"epsterm.html";"272"
"4522";"EQV";"Interactive equation viewer and curve fitter.";"142";"eqv.html";"451"
"4523";"EQV2";"Interactively plot a function on current plot.";"142";"eqv2.html";"295"
"4524";"EQV2_FONT";"Interactively plot a function on current plot.";"142";"eqv2_font.html";"253"
"4525";"EQV3";"Execute IDL code using interactively varied parameters.";"142";"eqv3.html";"343"
"4526";"EQVC";"Interactive equation viewer and curve fitter.";"142";"eqvc.html";"509"
"4527";"EQVD";"Interactive equation viewer and curve fitter.";"142";"eqvd.html";"310"
"4528";"ERASEWIN";"Erase plot window to a given color.";"142";"erasewin.html";"238"
"4529";"ETC";"Return estimated time to completion in seconds.";"142";"etc.html";"258"
"4530";"EVENT_LOG";"Enter an event into the latest event log file.";"142";"event_log.html";"272"
"4531";"EXIF_READER";"Read values from an Exif file (digital camera file).";"142";"exif_reader.html";"715"
"4532";"EXIF_READER50";"Read values from an Exif file (digital camera file).";"142";"exif_reader50.html";"279"
"4533";"EXIF_READER_UINT";"Read values from an Exif file (digital camera file).";"142";"exif_reader_uint.html";"239"
"4534";"EXPLORE";"Image stats in a 16 x 16 box movable with the mouse.";"142";"explore.html";"240"
"4535";"EXRANGE";"Return a range array with range expanded by given fraction.";"142";"exrange.html";"343"
"4536";"EXTREMES";"Find all the local extremes of a 1-d array.";"142";"extremes.html";"292"
"4537";"EXTREMES_2D";"Find local extremes in a 2-d array.";"142";"extremes_2d.html";"766"
"4538";"F2FI16";"Convert feet to feet, inches, and fractions to 1/16 inch.";"142";"f2fi16.html";"220"
"4539";"FAST_MAP";"Make a quick IDL map.";"142";"fast_map.html";"280"
"4540";"FFT_FILTER";"Do FFT filtering of time series data.";"142";"fft_filter.html";"285"
"4541";"FILE_SEARCH2";"Find files and sort them.";"142";"file_search2.html";"421"
"4542";"FILEBREAK";"Breaks file name(s) into components.";"142";"filebreak.html";"549"
"4543";"FILELISTS";"Return specified lists of files in directory.";"142";"filelists.html";"341"
"4544";"FILENAME";"File names with system independent symbolic directories.";"142";"filename.html";"415"
"4545";"FILL_CONT";"Returns a byte array with filled contours.";"142";"fill_cont.html";"246"
"4546";"FILLJUMPS";"Find indices needed to fill in value jumps in an array.";"142";"filljumps.html";"287"
"4547";"FINDCMD";"Find lines in command line recall buffer with given keywords.";"142";"findcmd.html";"219"
"4548";"FINDFILE2";"Find files and sort them.";"142";"findfile2.html";"349"
"4549";"FINDFILE3";"Find files and sort them.";"142";"findfile3.html";"292"
"4550";"FIPS2ST";"From 2 digit FIPS code return 2 letter state abbreviation.";"142";"fips2st.html";"219"
"4551";"FIRSTCHAR";"Position of first non-whitespace char in string.";"142";"firstchar.html";"234"
"4552";"FIRSTCHR";"Set first character of a string, add if needed.";"142";"firstchr.html";"239"
"4553";"FIT";"Curve fit program. Polynomial, exponential, power law.";"142";"fit.html";"952"
"4554";"FIT12";"For internal use by FIT only.";"142";"fit12.html";"292"
"4555";"FIT6";"For internal use by FIT only.";"142";"fit6.html";"330"
"4556";"FIX_RESLIB";"Modify routines in specified RES IDL library.";"142";"fix_reslib.html";"196"
"4557";"FIXANG";"Fix angle discontinuety at 0-360.";"142";"fixang.html";"283"
"4558";"FIXANGH";"Fix angle wraparound using a hysteresis method.";"142";"fixangh.html";"256"
"4559";"FIXGAPS";"Linearly interpolate across data gaps in an array.";"142";"fixgaps.html";"241"
"4560";"FLAT2SPH";"Map a flat map onto a sphere.";"142";"flat2sph.html";"227"
"4561";"FNDWRD";"Find number, locations, lengths of words in a text string.";"142";"fndwrd.html";"285"
"4562";"FROM_METERS";"Convert distances from meters to specified units.";"142";"from_meters.html";"241"
"4563";"FSLIDER_SETRANGE";"Set new min/max for cw_fslider.";"142";"fslider_setrange.html";"262"
"4564";"FUTIL";"A system independent file utility (copy, move, delete, chmod...).";"142";"futil.html";"260"
"4565";"GAUSS";"Return a fitted gaussian curve for a given histogram.";"142";"gauss.html";"690"
"4566";"GCEIL";"Generalized ceil function, step not limited to 1.";"142";"gceil.html";"381"
"4567";"GEN_ALPHONE";"Generate an alph.one file for an IDL library.";"142";"gen_alphone.html";"232"
"4568";"GEN_FIT";"Fitted Y array for given X array from given fit parameters.";"142";"gen_fit.html";"376"
"4569";"GENARROW";"Generate an arrow polygon.";"142";"genarrow.html";"279"
"4570";"GENELLIPSE";"Generate points on an ellipse.";"142";"genellipse.html";"320"
"4571";"GENSHAPE";"Generate x,y coordinates to draw named shaped.";"142";"genshape.html";"238"
"4572";"GENTILE";"Generate a Netscape web page background tile.";"142";"gentile.html";"233"
"4573";"GET_COUNT";"Get next count value, from 1 up.";"142";"get_count.html";"423"
"4574";"GET_ELLIPSOID";"Return an ellipsoid structure.";"142";"get_ellipsoid.html";"263"
"4575";"GET_IDLPID";"Get Process ID of IDL current IDL session (Unix only).";"142";"get_idlpid.html";"375"
"4576";"GET_VISUAL_NAME";"Device independent get_visual_name.";"142";"get_visual_name.html";"277"
"4578";"GETENV2";"Version of getenv portable across operating systems.";"142";"getenv2.html";"273"
"4579";"GETFILE";"Read a text file into a string array.";"142";"getfile.html";"348"
"4580";"GETFILE_TAGS";"Get selected tags from a control/defaults file.";"142";"getfile_tags.html";"279"
"4581";"GETFILELN";"Get a line from a text file.";"142";"getfileln.html";"239"
"4582";"GETGROUP";"N'th group of identical elements from a given array.'";"142";"getgroup.html";"227"
"4583";"GETKEY";"Return a keyboard key. Interpret escape sequences.";"142";"getkey.html";"258"
"4584";"GETPOS";"Return current plot position.";"142";"getpos.html";"391"
"4585";"GETRUN";"N'th run of consecutive integers from a given array.'";"142";"getrun.html";"335"
"4586";"GETSTR";"Get delimited strings from a text string or array.";"142";"getstr.html";"345"
"4587";"GETSYSNAMS";"Get a list from a file specified by an environmental var.";"142";"getsysnams.html";"243"
"4588";"GETVIEW";"Return current viewport.";"142";"getview.html";"311"
"4589";"GETWINDOW";"Get data window coordinates.";"142";"getwindow.html";"654"
"4590";"GFLOOR";"Generalized floor function, step not limited to 1.";"142";"gfloor.html";"308"
"4591";"GIF2JPEG";"Convert a GIF image to a JPEG image.";"142";"gif2jpeg.html";"285"
"4592";"GIF2PNG";"GIF to PNG converter";"142";"gif2png.html";"254"
"4593";"GIFADD";"Add R,G,B color components for list of GIF images.";"142";"gifadd.html";"306"
"4594";"GIFSCREEN";"Save current screen image and color table to a GIF file.";"142";"gifscreen.html";"254"
"4595";"GMT_OFFSEC";"Return offset in seconds from local time to GMT (UT).";"142";"gmt_offsec.html";"359"
"4596";"GRAB_COMMANDS";"Grab command line recall commands and save in a text file.";"142";"grab_commands.html";"236"
"4597";"GRAPHFILE";"List a file on the graphics device.";"142";"graphfile.html";"302"
"4598";"GRID";"Draw x/y grid in plot window.";"142";"grid.html";"688"
"4599";"HASH_EXAMPLE";"Example using a hash table.";"142";"hash_example.html";"220"
"4600";"HASH_GET";"Get a value from a hash table given a key.";"142";"hash_get.html";"304"
"4601";"HASH_INIT";"Initialize a hash table.";"142";"hash_init.html";"591"
"4602";"HASH_LIST";"List all keys in a hash table.";"142";"hash_list.html";"275"
"4603";"HASH_PUT";"Update a value in a hash table. If not there add as new item.";"142";"hash_put.html";"356"
"4604";"HASH_STATS";"Look at the statistics of a hash table.";"142";"hash_stats.html";"253"
"4605";"HELP_SAVE2";"Look at files made by save2 and list what they contain.";"142";"help_save2.html";"203"
"4606";"HELPFILE";"Display a file of help text.";"142";"helpfile.html";"256"
"4607";"HEXDUMP";"Display a file in hex.";"142";"hexdump.html";"322"
"4608";"HGET";"Get a handle value.";"142";"hget.html";"337"
"4609";"HIST";"Compute histogram and corresponding x values. Allows weights.";"142";"hist.html";"583"
"4610";"HIST2D";"Compute a 2-d histogram for an array of points.";"142";"hist2d.html";"644"
"4611";"HISTPLOT";"Interactive histograms in a box.";"142";"histplot.html";"724"
"4612";"HLINE";"Plot a horizontal line after erasing last plotted line.";"142";"hline.html";"922"
"4613";"HLP";"Variant of HELP. Gives array min, max.";"142";"hlp.html";"368"
"4614";"HLP1";"Variant of HELP. Gives array min, max.";"142";"hlp1.html";"320"
"4615";"HLP2";"Variant of HELP. Gives array min, max.";"142";"hlp2.html";"311"
"4616";"HLPST";"List structure elements. Gives array min/max.";"142";"hlpst.html";"281"
"4617";"HOR";"Plot a horizontal line on a graph at specified y value.";"142";"hor.html";"226"
"4618";"HORI";"Interactive horizontal line on screen or plot.";"142";"hori.html";"301"
"4619";"HORIZON_DIST";"Compute distance to horizon given observer height.";"142";"horizon_dist.html";"224"
"4620";"HSET";"Set a handle value.";"142";"hset.html";"274"
"4621";"IBILIN";"Inverse bilinear interpolation.";"142";"ibilin.html";"368"
"4622";"IFWINDOW";"Create specified window if it does not exist, else use it.";"142";"ifwindow.html";"220"
"4623";"IGLOBE";"Plot a globe.";"142";"iglobe.html";"332"
"4624";"IGLOBE_H";"Plot a globe.";"142";"iglobe_h.html";"266"
"4625";"IMAGE_ALIGN";"Align two images.";"142";"image_align.html";"316"
"4626";"IMAGE_AREA_GET";"Get image working area.";"142";"image_area_get.html";"231"
"4627";"IMAGE_AREA_SET";"Set up image working area.";"142";"image_area_set.html";"248"
"4628";"IMAGE_NUMBERS";"Display image numbers in a widget.";"142";"image_numbers.html";"224"
"4629";"IMAGE_STATS";"Display image stats in a widget.";"142";"image_stats.html";"245"
"4630";"IMAGESIZE";"Compute actual postscript image size given available space.";"142";"imagesize.html";"251"
"4631";"IMG_8TO24";"Convert an 8-bit image to 24-bit using a color lookup table.";"142";"img_8to24.html";"249"
"4632";"IMG_ADD";"Add two 24-bit color images together.";"142";"img_add.html";"340"
"4633";"IMG_ADJHSV";"Adjust Hue, Saturation, and Value for a 3-D image array.";"142";"img_adjhsv.html";"201"
"4634";"IMG_CE";"Color image contrast enhancement.";"142";"img_ce.html";"250"
"4635";"IMG_CFILTER";"Apply a color filter to an image (both 24 bit color).";"142";"img_cfilter.html";"212"
"4636";"IMG_CLRW";"Set specified pixels to a given color in a 24-bit image.";"142";"img_clrw.html";"232"
"4637";"IMG_CPOLY";"Plot a transparent color polygon on an image.";"142";"img_cpoly.html";"199"
"4638";"IMG_CPYPIX";"Copy pixels from one 24-bit image to another.";"142";"img_cpypix.html";"197"
"4639";"IMG_DISP";"Display a given image.";"142";"img_disp.html";"266"
"4640";"IMG_FILEVIEWER";"View an array of images.";"142";"img_fileviewer.html";"191"
"4641";"IMG_FITPRINT";"Add margin to fit an image to a print size.";"142";"img_fitprint.html";"203"
"4642";"IMG_ICE";"Color image interactive contrast enhancement.";"142";"img_ice.html";"328"
"4643";"IMG_ILLUMINATE";"Apply color illumination to an image (24 bit color).";"142";"img_illuminate.html";"267"
"4644";"IMG_INSIMG";"Insert a subimage into an 24-bit color image.";"142";"img_insimg.html";"260"
"4645";"IMG_INTERPOLATE";"Do interpolate on a 2-D or 3-D image array.";"142";"img_interpolate.html";"315"
"4646";"IMG_LS";"Scale 24-bit image value (of HSV) between percentiles 1 and 99 (or specified percentiles).";"142";"img_ls.html";"397"
"4647";"IMG_MAP_IMAGE";"Do map_image for a 24 bit color image.";"142";"img_map_image.html";"242"
"4648";"IMG_MARGIN";"Add a margin to an image.";"142";"img_margin.html";"377"
"4649";"IMG_MERGE";"Merge color components into a 24-bit color image.";"142";"img_merge.html";"321"
"4650";"IMG_PLOT";"Plot on a 24-bit image without using X windows.";"142";"img_plot.html";"343"
"4651";"IMG_PLOTP";"Do a plotp on a 24-bit image without using X windows.";"142";"img_plotp.html";"237"
"4652";"IMG_POINT";"Plot a filled point at given position on 24-bit image.";"142";"img_point.html";"209"
"4653";"IMG_RADIAL";"Radially distort a 2-D or 3-D image array.";"142";"img_radial.html";"345"
"4654";"IMG_RADON";"Compute the Radon Transform of a color or B&W image.";"142";"img_radon.html";"239"
"4655";"IMG_REDIM";"Change the interleave dimension of a 3-D image.";"142";"img_redim.html";"229"
"4656";"IMG_REPCLR";"Replace a color in a 24-bit image.";"142";"img_repclr.html";"303"
"4657";"IMG_RESIZE";"Resize a 2-D or 3-D image array.";"142";"img_resize.html";"426"
"4658";"IMG_ROT";"Rotate a 2-D or 3-D image array by any angle.";"142";"img_rot.html";"289"
"4659";"IMG_ROTATE";"Rotate a 2-D or 3-D image array.";"142";"img_rotate.html";"271"
"4660";"IMG_SCALE";"Scale given image for display.";"142";"img_scale.html";"391"
"4661";"IMG_SHAPE";"Returns the shape of a 2-D or 3-D image array.";"142";"img_shape.html";"487"
"4662";"IMG_SHARPEN";"Sharpen a 2-D or 3-D image array.";"142";"img_sharpen.html";"234"
"4663";"IMG_SHIFT";"Shifts a 2-D or 3-D image array in x and y.";"142";"img_shift.html";"280"
"4664";"IMG_SHIFTF";"Shifts a 2-D or 3-D image by a fractional number of pixels.";"142";"img_shiftf.html";"371"
"4665";"IMG_SMOOTH";"Box smooth a 2-D or 3-D image array.";"142";"img_smooth.html";"267"
"4666";"IMG_SMOOTH2";"Multi-pass box smooth a 2-D or 3-D image array.";"142";"img_smooth2.html";"251"
"4667";"IMG_SMOOTHC";"Convolution smooth a 2-D or 3-D image array.";"142";"img_smoothc.html";"245"
"4668";"IMG_SPLIT";"Returns the color components of a color image.";"142";"img_split.html";"275"
"4669";"IMG_SPREAD";"Spread image values over total range of image data type.";"142";"img_spread.html";"241"
"4670";"IMG_STRETCH";"Stretch a 2-D or 3-D image array.";"142";"img_stretch.html";"254"
"4671";"IMG_SUBAREA";"Returns a subarea from an array or color image.";"142";"img_subarea.html";"258"
"4672";"IMG_SUBIMG";"Returns a subimage from a color image.";"142";"img_subimg.html";"320"
"4673";"IMG_TEXT";"Plot text on a 24-bit image without using X windows.";"142";"img_text.html";"244"
"4674";"IMG_THICKEN";"Thicken graphics in an existing image. Good for viewgraphs.";"142";"img_thicken.html";"232"
"4675";"IMG_TOKMZ";"Convert an image array to a *.kmz file.";"142";"img_tokmz.html";"282"
"4676";"IMG_TV";"Add an image with transparency to existing displayed image.";"142";"img_tv.html";"245"
"4677";"IMG_WCLR";"Find where a color is in a 24-bit image.";"142";"img_wclr.html";"261"
"4678";"IMGARR_VIEWER";"View an array of images.";"142";"imgarr_viewer.html";"209"
"4679";"IMGARRAY";"Create an array of small images given a list.";"142";"imgarray.html";"339"
"4680";"IMGCONTOUR";"Plot an image with contours.";"142";"imgcontour.html";"262"
"4681";"IMGFRM";"Puts a specified border around an image.";"142";"imgfrm.html";"307"
"4682";"IMGLINE";"Interactive line on the screen.";"142";"imgline.html";"328"
"4683";"IMGMASK";"Create a mask from an image.";"142";"imgmask.html";"307"
"4684";"IMGNEG";"Display negative of current image.";"142";"imgneg.html";"250"
"4685";"IMGOPEN";"Prepare a large image to be read.";"142";"imgopen.html";"315"
"4686";"IMGPOLREC";"Map an angle/radius image to an X/Y image.";"142";"imgpolrec.html";"217"
"4687";"IMGREAD";"Read part of a large image.";"142";"imgread.html";"375"
"4688";"IMGRECPOL";"Map an X/Y image to an angle/radius image.";"142";"imgrecpol.html";"224"
"4689";"IMGREGION";"Interactively extract a selected image region.";"142";"imgregion.html";"286"
"4690";"IMGSCALE";"Interactive image scaling.";"142";"imgscale.html";"370"
"4691";"IMGSQZ";"Squeeze number of image colors used for current image.";"142";"imgsqz.html";"232"
"4692";"IMGUNDER";"Display image in same area as last plot.";"142";"imgunder.html";"379"
"4693";"IMGWINDOW";"Compute plot window needed to display given image.";"142";"imgwindow.html";"322"
"4694";"IN_COMMON";"Find elements of two arrays that are common (or not).";"142";"in_common.html";"291"
"4695";"INBOX";"Test if given point inside given box.";"142";"inbox.html";"303"
"4696";"INDENTATION_LEVEL";"Determine indentation levels of input text.";"142";"indentation_level.html";"329"
"4697";"INGEST_BINDATA";"Ingest binary data in a byte array into a structure.";"142";"ingest_bindata.html";"239"
"4698";"INRANGE";"Find multiples of given step just inside given range.";"142";"inrange.html";"268"
"4699";"INT_LOW";"Drop an integer data type to the lowest precision.";"142";"int_low.html";"254"
"4700";"INTERP1";"Linear interpolation.";"142";"interp1.html";"501"
"4701";"INTERPX";"Interpolate data with possible gaps and missing (bad) values.";"142";"interpx.html";"612"
"4702";"INTERPX_DEMO";"Demonstrate the use of interpx.";"142";"interpx_demo.html";"262"
"4703";"INTERSECT";"Return the elements common to two given arrays.";"142";"intersect.html";"568"
"4704";"INVINTERP";"Inverse interpolation.";"142";"invinterp.html";"322"
"4705";"ISNUMBER";"Determine if a text string is a valid number.";"142";"isnumber.html";"778"
"4706";"IZOOM_SUB";"Zoom part of an image that has scale embedded by put_scale.";"142";"izoom_sub.html";"268"
"4707";"JD2DATE";"Convert a Julian Day number to a date string.";"142";"jd2date.html";"432"
"4708";"JD2JS";"Convert from Julian Day Number to Julian Seconds.";"142";"jd2js.html";"269"
"4709";"JD2MDAYS";"Convert a range of Julian Days to month start and end JDs.";"142";"jd2mdays.html";"234"
"4710";"JD2STR";"Find year, month, day strings from Julian Day number.";"142";"jd2str.html";"246"
"4711";"JD2YMD";"Find year, month, day from julian day number.";"142";"jd2ymd.html";"294"
"4712";"JDSELECT";"Select Julian Day array subset by month or weekday.";"142";"jdselect.html";"263"
"4713";"JPEG2TIFF8";"Convert a JPEG image to an 8 bit TIFF image.";"142";"jpeg2tiff8.html";"287"
"4714";"JPEG_MAG";"Change size of a JPEG image.";"142";"jpeg_mag.html";"276"
"4715";"JPEGSCREEN";"Save current screen image and color table to a JPEG file.";"142";"jpegscreen.html";"274"
"4716";"JPG_MAG";"Change JPG image size.";"142";"jpg_mag.html";"329"
"4717";"JS2GRA";"Greenwich RA (radians). Greenwich Mean Sidereal Time (GMST).";"142";"js2gra.html";"256"
"4718";"JS2JD";"Convert from Julian Seconds to Julian Day Number.";"142";"js2jd.html";"240"
"4719";"JS2V";"Read a time (in 'Julian seconds') vs value file.";"142";"js2v.html";"256"
"4720";"JS2WEEKDAY";"Compute weekday given Julian Second.";"142";"js2weekday.html";"230"
"4721";"JS2YMDS";"Convert from 'Julian Second' to year, month, day, second.";"142";"js2ymds.html";"274"
"4722";"JS_FROM_MATLAB";"Convert from Matlab time to Julian Seconds.";"142";"js_from_matlab.html";"312"
"4723";"JS_INCMONTH";"Increment JS by one month.";"142";"js_incmonth.html";"220"
"4724";"JS_TO_MATLAB";"Convert from Julian Seconds to Matlab time.";"142";"js_to_matlab.html";"347"
"4725";"JSCHECK";"Check accuracy of 'Julian Seconds' over a given time span.";"142";"jscheck.html";"295"
"4726";"JSPLOT";"Make a time series plot with time in Julian Seconds.";"142";"jsplot.html";"820"
"4727";"KEPLER";"Solve Kepler's equation given mean anomaly and eccentricity.";"142";"kepler.html";"830"
"4728";"KURF";"Computes kurtosis inside a moving window.";"142";"kurf.html";"274"
"4729";"KURT";"Returns the kurtosis of an array (4th moment/2nd moment^2).";"142";"kurt.html";"240"
"4730";"LASTCHR";"Set last character of a string, add if needed.";"142";"lastchr.html";"370"
"4731";"LASTINDEX";"Returns last index for each dimension of the given array.";"142";"lastindex.html";"277"
"4732";"LASTPLOT";"Backup !p.multi to last plot position.";"142";"lastplot.html";"348"
"4733";"LATEXOFF";"Close the encapsulated Postscript file opened by LATEXON.";"142";"latexoff.html";"251"
"4734";"LATEXON";"Generate encapsulated postscript file to include in LaTeX documents.";"142";"latexon.html";"379"
"4735";"LECTURE";"Select specified lecture notes from a notes file.";"142";"lecture.html";"273"
"4736";"LEG";"Make a plot legend.";"142";"leg.html";"482"
"4737";"LGRADIENT";"Create a floating array with a linear gradient.";"142";"lgradient.html";"320"
"4738";"LIMBOX";"Interactively get new map limits.";"142";"limbox.html";"535"
"4739";"LINCAL";"Plot a multimonth linear calendar on one page.";"142";"lincal.html";"376"
"4740";"LINE_FIT";"Fit a line to weighted x,y points.";"142";"line_fit.html";"507"
"4741";"LINEPTS";"Gives pixel coordinates of points along a line segment.";"142";"linepts.html";"414"
"4742";"LINFILL";"Fill gaps in array data using linear interpolation.";"142";"linfill.html";"326"
"4743";"LINI";"Interactive line.";"142";"lini.html";"346"
"4744";"LINT";"Find the intersection of two lines in the XY plane.";"142";"lint.html";"1597"
"4745";"LIST_DOY";"List day of year for current and nearby dates.";"142";"list_doy.html";"268"
"4746";"LIST_INSERT";"Insert a 1-d array into another 1-d array.";"142";"list_insert.html";"412"
"4747";"LISTRUNS";"Make a list of runs of consecutive integers.";"142";"listruns.html";"275"
"4748";"LL2RB";"From latitude, longitude compute range, bearing.";"142";"ll2rb.html";"552"
"4749";"LLPEN2KML";"Convert a txtdb file (or structure) with lon, lat, pen code to a kml file.";"142";"llpen2kml.html";"286"
"4750";"LLSIGNED";"Give signed lat or long given deg min sec (dms) text.";"142";"llsigned.html";"283"
"4751";"LMST";"Give local mean sidereal time.";"142";"lmst.html";"378"
"4752";"LOAD_COLORS";"Load a color table with a standard range of colors.";"142";"load_colors.html";"266"
"4753";"LOCMAX";"Find local maxima in an image.";"142";"locmax.html";"1351"
"4754";"LOGLUT";"Return a log lookup table useful for scaling images.";"142";"loglut.html";"537"
"4755";"LONLAT2SHAPE";"Save lon, lat arrays in a shape file.";"142";"lonlat2shape.html";"274"
"4756";"LS";"Scale image between percentiles 1 and 99 (or specified percentiles).";"142";"ls.html";"420"
"4757";"LS2";"Scale image between percentiles 1 and 99 (or specified percentiles).";"142";"ls2.html";"354"
"4758";"M_FUN";"Function to get a value by tag name from a global area.";"142";"m_fun.html";"288"
"4759";"M_GET";"Get a value by tag name from a global area.";"142";"m_get.html";"367"
"4760";"M_LIST";"List values in global areas saved by m_put.";"142";"libraries_m_list.html";"2"
"4761";"M_PUT";"Save a value by a tag name in a global area.";"142";"m_put.html";"242"
"4762";"MAGCRS";"Show a magnified window around given point and wait for a cursor change.";"142";"magcrs.html";"262"
"4763";"MAKE_JSMOVIE";"Generate web pages to display a Javascript movie from images.";"142";"make_jsmovie.html";"364"
"4764";"MAKE_RULER";"Plot linear scales on the laser printer.";"142";"make_ruler.html";"246"
"4765";"MAKE_SCALE";"Plot circular scales on the laser printer.";"142";"make_scale.html";"329"
"4766";"MAKE_WINDOW";"Make a window, regular or scrolling.";"142";"make_window.html";"348"
"4767";"MAKECLR";"Make an array of of 24-bit colors.";"142";"makeclr.html";"341"
"4768";"MAKEI";"Make a long array with given start and end values and step size.";"142";"makei.html";"387"
"4769";"MAKELABELS";"Make an array of tick mark labels.";"142";"makelabels.html";"338"
"4770";"MAKEMS";"Make array of values from start to end with a max step size.";"142";"makems.html";"323"
"4771";"MAKEN";"Make an array of N values, linear between two given limits.";"142";"maken.html";"1055"
"4772";"MAKENLOG";"Make array of N values, logarithmic between two given limits.";"142";"makenlog.html";"305"
"4773";"MAKENXY";"Make 2-d x and y coordinate arrays of specified dimensions.";"142";"makenxy.html";"365"
"4774";"MAKENXYZ";"Make 3-d x,y and z coordinate arrays of specified dimensions.";"142";"makenxyz.html";"250"
"4775";"MAKES";"Make a string array of integers from lo to hi by step.";"142";"makes.html";"285"
"4776";"MAKEV";"Make simulated 3-d data. Useful for software development.";"142";"makev.html";"511"
"4777";"MAKEVLT";"Generate and load a random color table (CT).";"142";"makevlt.html";"304"
"4778";"MAKEX";"Make an array with specified start, end and step values.";"142";"makex.html";"535"
"4779";"MAKEXY";"Make 2-d X & Y coord. arrays, useful for functions of x,y.";"142";"makexy.html";"299"
"4780";"MAKEY";"Make simulated data. Useful for software development.";"142";"makey.html";"294"
"4781";"MAKEZ";"Make simulated 2-d data. Useful for software development.";"142";"makez.html";"301"
"4782";"MAKEZ24";"Make a test 24-bit color image.";"142";"makez24.html";"239"
"4783";"MANDEL_GIF";"Convert saved images from mandelbrot to gif images";"142";"mandel_gif.html";"274"
"4784";"MANDELBROT";"Compute Mandelbrot images";"142";"mandelbrot.html";"275"
"4785";"MAP_ARRHD";"Plot an arrow head on a map.";"142";"map_arrhd.html";"274"
"4786";"MAP_EMBEDDED_INFO";"List or modify embedded map info from map_set2.";"142";"map_embedded_info.html";"219"
"4787";"MAP_GET_BYTES";"Get extra info from resmap embedded scaling array.";"142";"map_get_bytes.html";"224"
"4788";"MAP_LATLNG_RECT";"Plot a rectangular area of lat/long on a map.";"142";"map_latlng_rect.html";"259"
"4789";"MAP_OUTSIDE";"Color image points outside a map area.";"142";"map_outside.html";"249"
"4790";"MAP_PIXDEG";"Return the map scale in pixels/degree at the map center.";"142";"map_pixdeg.html";"276"
"4791";"MAP_PROJ_NAME";"Convert map_set projection number to projection name.";"142";"map_proj_name.html";"237"
"4792";"MAP_PROJ_TEXT";"Return map projection descriptive text";"142";"map_proj_text.html";"256"
"4793";"MAP_PUT_BYTES";"Add extra info to resmap embedded scaling array.";"142";"map_put_bytes.html";"253"
"4794";"MAP_PUT_SCALE";"Embed map coordinates info in image.";"142";"map_put_scale.html";"243"
"4795";"MAP_SET_SCALE";"Set map scaling from info embedded in a map image.";"142";"map_set_scale.html";"385"
"4796";"MAP_SPACE";"Set any points off a generated map to white.";"142";"map_space.html";"302"
"4797";"MAP_STATE_RESTORE";"Restore last map_set state.";"142";"map_state_restore.html";"214"
"4798";"MAP_STATE_SAVE";"Save last map_set state.";"142";"map_state_save.html";"269"
"4799";"MAPCIRC";"Plot a circle on a map and list its parameters.";"142";"mapcirc.html";"365"
"4800";"MAPCIRCI";"Interactive circle on a map. Select and list points.";"142";"mapcirci.html";"296"
"4801";"MAPGC";"Plot a great route circle on a map.";"142";"mapgc.html";"577"
"4802";"MAPGCI";"Interactive great circle on a map.";"142";"mapgci.html";"316"
"4803";"MAPLATLONG";"Find complete lat/long range covered by map.";"142";"maplatlong.html";"238"
"4804";"MAPLATLONG_GRID";"Plot a lat/long grid on last map.";"142";"maplatlong_grid.html";"332"
"4805";"MAPRECT";"Plot a rectangle on a map and list its parameters.";"142";"maprect.html";"512"
"4806";"MAPRINGS";"Plot rings (circles) on a map.";"142";"maprings.html";"261"
"4807";"MAPWINDOW";"Find screen window used by last map.";"142";"mapwindow.html";"294"
"4808";"MATPLOT";"Display an image with color bar roughly as in Matlab.";"142";"matplot.html";"522"
"4809";"MCOMPUTE";"Compute mandelbrot set images.";"142";"mcompute.html";"298"
"4810";"MEAN2";"Do mean over speicifed dimension.";"142";"mean2.html";"609"
"4811";"MEDIAN_MISS";"Median filter allowing missing values.";"142";"median_miss.html";"340"
"4812";"MIDV";"Return value midway between array extremes.";"142";"midv.html";"413"
"4813";"MONTH2NAME";"Convert a month number to a month name.";"142";"month2name.html";"10"
"4814";"MONTHDAYS";"Given a year and month returns number of days in that month.";"142";"monthdays.html";"345"
"4815";"MONTHNAMES";"Returns a string array of month names.";"142";"monthnames.html";"265"
"4816";"MONTHNUM";"Return month number given name.";"142";"monthnum.html";"349"
"4817";"MORE";"Display a text array using the MORE method.";"142";"more.html";"201"
"4818";"MOREFILE";"Display a specified text file using more.";"142";"morefile.html";"261"
"4819";"MOVBOX";"Interactive box on image diaply.";"142";"movbox.html";"883"
"4820";"MOVCROSS";"Interactive cross-hair on a plot.";"142";"movcross.html";"243"
"4821";"MOVE";"Graphics move to a point.";"142";"move.html";"283"
"4822";"MOVEMARK";"Move a marker in a window.";"142";"movemark.html";"509"
"4823";"MOVLABELS";"Interactively position labels and list xyouts statement.";"142";"movlabels.html";"224"
"4824";"MOVTXT";"Interactively position text and list xyouts statement.";"142";"movtxt.html";"313"
"4825";"MS2JS";"Convert MicroSoft internal time to Julian Seconds.";"142";"ms2js.html";"271"
"4826";"MULTIBAND";"Convert a multiband image to a 24-bit color image.";"142";"multiband.html";"373"
"4827";"MULTICOL";"Reformat a string array into multi-columns.";"142";"multicol.html";"293"
"4828";"MZOOM";"Compute new region needed to zoom a mandelbrot image.";"142";"mzoom.html";"342"
"4829";"NAMENUM";"Break a name into a pattern and numbers in the name.";"142";"namenum.html";"308"
"4830";"NAXES";"Find nice axis tics.";"142";"naxes.html";"563"
"4831";"NDIM_INDICES";"Indexing info for an n-dimensional table.";"142";"ndim_indices.html";"295"
"4832";"NEAREST";"Return multiple of a given step nearest a target value.";"142";"nearest.html";"493"
"4833";"NEW_RANGE";"Compute a new range array from old.";"142";"new_range.html";"222"
"4834";"NEWSWEB";"Newsletter generator";"142";"newsweb.html";"266"
"4835";"NEXTITEM";"Return next line from a file, ignore comments & null lines.";"142";"nextitem.html";"258"
"4836";"NEXTNUM";"Return next number using the arrow keys.";"142";"nextnum.html";"323"
"4837";"NEXTPLOT";"Update !p.multi to next plot position.";"142";"nextplot.html";"274"
"4838";"NGROUPS";"Gives # of groups of identical elements in given array.'";"142";"ngroups.html";"291"
"4839";"NICENUMBER";"Find a nice number close to the given number.";"142";"nicenumber.html";"353"
"4840";"NPOW";"Plot a diagram showing a number to a power.";"142";"npow.html";"424"
"4841";"NRUNS";"Gives # of runs of consecutive integers in given array.'";"142";"nruns.html";"391"
"4842";"NTHWEEKDAY";"Julian Day of N'th weekday of month (like 2nd tues).'";"142";"nthweekday.html";"306"
"4843";"NUM_DEC";"Number of decimal places in given number.";"142";"num_dec.html";"285"
"4844";"NUMFACTORS";"Gives the number of factors of a number.";"142";"numfactors.html";"287"
"4845";"NUMFRAC";"Convert a number to a decimal string with n places.";"142";"numfrac.html";"256"
"4846";"NUMNAME";"Generate names or text strings with embedded numbers.";"142";"numname.html";"295"
"4847";"NUMPERSEC";"Given values increasing with time return rate per second.";"142";"numpersec.html";"313"
"4848";"NUMPLOT";"Interactive array of image numbers in a box.";"142";"numplot.html";"296"
"4849";"NWIN";"Convert from normalized window coordinates.";"142";"nwin.html";"270"
"4850";"NWRDS";"Return the number of words in the given text string.";"142";"nwrds.html";"341"
"4851";"OBJ_DRAW";"Display graphical object in a resizable window.";"142";"obj_draw.html";"310"
"4852";"ONE2THREE";"Convert from 1-d indices to 3-d indices.";"142";"one2three.html";"313"
"4853";"ONE2TWO";"Convert from 1-d indices to 2-d indices.";"142";"one2two.html";"413"
"4854";"OPFIT1D";"Calculate orthonormal polynomial fit for 1-d data.";"142";"opfit1d.html";"229"
"4855";"OPFIT2D";"Calculate orthonormal polynomial fit for 2-d data.";"142";"opfit2d.html";"297"
"4856";"ORTHOPOLY";"Calculates a set of orthonormal polynomials.";"142";"orthopoly.html";"489"
"4857";"OUTBOX";"Test if given point outside given box.";"142";"outbox.html";"293"
"4858";"PACK";"Find best packing of images (rectangles) on a page.";"142";"pack.html";"330"
"4859";"PAINT";"Paint on an image.";"142";"paint.html";"401"
"4860";"PAN";"Pan around a screen image. Set pixels to a specified value.";"142";"pan.html";"373"
"4861";"PARCURVE";"Return a curve parallel to given curve.";"142";"parcurve.html";"258"
"4862";"PATH";"Examine and modify the IDL path.";"142";"path.html";"980"
"4863";"PATH_REDUCE_POINTS";"Reduce number of points in a path.";"142";"path_reduce_points.html";"223"
"4864";"PCKEY";"Read PC keyboard. Interpret special keys.";"142";"pckey.html";"367"
"4865";"PCON";"IDL path control utility. May turn libraries on or off.";"142";"pcon.html";"350"
"4866";"PH";"Return the phase of a complex number.";"142";"ph.html";"277"
"4867";"PHASE";"Return an array filled in to indicate specified moon phase.";"142";"phase.html";"337"
"4868";"PIMOD";"Force angles in radians to the range -Pi to +Pi.";"142";"pimod.html";"416"
"4869";"PIXSPLIT";"Bilinearly split given pixels between surrounding pixels.";"142";"pixsplit.html";"344"
"4870";"PK";"Pick a set of points on a plot.";"142";"pk.html";"248"
"4871";"PLANE_INT";"Compute the intersection line of two planes.";"142";"plane_int.html";"286"
"4872";"PLINT";"Intersection point of a plane and a line.";"142";"plint.html";"351"
"4873";"PLOT_LIMBOX";"Plot map limits array as a box on the map.";"142";"plot_limbox.html";"266"
"4874";"PLOT_POSBOX";"Plot position box in window.";"142";"plot_posbox.html";"205"
"4875";"PLOT_RNGBOX";"Draw a range box on a plot.";"142";"plot_rngbox.html";"239"
"4876";"PLOTP";"Pencode plot routine. Allows disconnected lines.";"142";"plotp.html";"451"
"4877";"PLOTPOS";"Compute plot position for a plot of specified shape.";"142";"plotpos.html";"308"
"4878";"PLOTSEQ";"Plot a movielike sequence of graphs.";"142";"plotseq.html";"298"
"4879";"PLOTSH";"Plot curves with a drop shadow.";"142";"plotsh.html";"300"
"4880";"PLOTSHAPE";"Plot given shape file on current map.";"142";"plotshape.html";"330"
"4881";"PLOTWIN";"Gives plot window (area enclosed by axes) in pixels.";"142";"plotwin.html";"681"
"4882";"PLTCRV";"Edit curve points with mouse. Overlay spline.";"142";"pltcrv.html";"306"
"4883";"PLURAL";"Plural function: returns 's' if arg &gt; 1, else ''.";"142";"plural.html";"402"
"4884";"PMATCH";"Find a given pattern in a 1-d array.";"142";"pmatch.html";"346"
"4885";"PMOD";"Find the positive modulo value of a number.";"142";"pmod.html";"388"
"4886";"PNG2JPEG";"Convert a PNG image to a JPEG image.";"142";"png2jpeg.html";"520"
"4887";"PNG_MAG";"Change PNG image size.";"142";"png_mag.html";"406"
"4888";"PNGSCREEN";"Save current screen image to a PNG file.";"142";"pngscreen.html";"256"
"4889";"POINT";"Plot a filled point at given position.";"142";"point.html";"312"
"4890";"POINTID";"Use the mouse cursor to display an ID for a plotted point.";"142";"pointid.html";"362"
"4891";"POINTS";"Convert from size in points to IDL charsize or pixels.";"142";"points.html";"254"
"4892";"POLREC3D";"Convert vector(s) from spherical polar to rectangular form.";"142";"polrec3d.html";"284"
"4893";"POLY_FIT2";"Returns fitted Y values for each given X value.";"142";"poly_fit2.html";"269"
"4894";"POLYFILLP";"Polyfill with pen code for multiple polygons.";"142";"polyfillp.html";"315"
"4895";"POLYFILLTR";"Polyfill on current image with a transparent color.";"142";"polyfilltr.html";"273"
"4896";"POLYSTAT";"Compute polygon statistics (# vertices, area, perimeter).";"142";"polystat.html";"379"
"4897";"POS_CM";"Convert keyword POSITION for PLOT from cm to norm. coords.";"142";"pos_cm.html";"272"
"4898";"POSBOX";"Test for a box drawn around the screen position, or plot one.";"142";"posbox.html";"332"
"4899";"PRECESS_RES";"Precess celestial coordinates to a new date.";"142";"precess_res.html";"217"
"4900";"PRINT_FACT";"Print prime factors found by the factor routine.";"142";"print_fact.html";"232"
"4901";"PRINTAT";"Print given items at specified screen column and line.";"142";"printat.html";"322"
"4902";"PROTRACTOR";"Measure angles on the screen.";"142";"protractor.html";"1455"
"4903";"PRWINDOW";"Print current window or gif image on color printer.";"142";"prwindow.html";"776"
"4904";"PSIMG";"Display an image on postscript printer.";"142";"psimg.html";"393"
"4905";"PSINIT";"Redirect plots and images to postscript printer.";"142";"psinit.html";"936"
"4906";"PSPAPER";"Plot a postscript layout sheet. Gives normalized coordinate system.";"142";"pspaper.html";"278"
"4907";"PSTERM";"Terminate postscript plotting and send plots to printer.";"142";"psterm.html";"800"
"4908";"PUT_SCALE";"Embed in current image values needed to restore scaling.";"142";"put_scale.html";"433"
"15447";"BIT_EXTRACT";"Extract a specified bit string from a byte array.";"142";"bit_extract.html";"56"
"4910";"PUTFILE";"Write a text file from a string array.";"142";"putfile.html";"417"
"4911";"PUTFILE_TAGS";"Update selected tags in a control/defaults file.";"142";"putfile_tags.html";"220"
"4912";"RADEC2ALTAZI";"Convert from ra,dec,time to alt,azi.";"142";"radec2altazi.html";"281"
"4913";"RADEC2LATLON";"RA, Dec, time to Latitude, Longitude (substar point).";"142";"radec2latlon.html";"293"
"4914";"RADIAL_IMG";"Make an image array with a radial brightness distribution.";"142";"radial_img.html";"204"
"4915";"RADII";"Plot specified radii on the current plot device.";"142";"radii.html";"250"
"4916";"RADON2";"Compute the Radon Transform using the FFT method.";"142";"radon2.html";"273"
"4917";"RAOUT";"Write text along an arc in data coordinates.";"142";"raout.html";"268"
"4918";"RB2LL";"From range, bearing compute latitude, longitude .";"142";"rb2ll.html";"257"
"4919";"RBAR";"Plot a color bars with defined ranges.";"142";"rbar.html";"292"
"4920";"RCPLOT";"Make Row or Column plots for current window.";"142";"rcplot.html";"380"
"4921";"RDCOL";"Read columns of numbers or times from a text file.";"142";"rdcol.html";"327"
"4922";"RDFILE";"Read lines from a text file.";"142";"rdfile.html";"434"
"4923";"READM";"Unformatted read from a byte array.";"142";"readm.html";"468"
"4924";"READTOKEY";"Read an open text file until a given key word is found.";"142";"readtokey.html";"247"
"4925";"REBIN_MISS";"rebin allowing missing values.";"142";"rebin_miss.html";"240"
"4926";"RECPOL3D";"Convert vector(s) from rectangular to spherical polar form.";"142";"recpol3d.html";"243"
"4927";"REFRACT";"Correct true altitudes to refracted altitudes.";"142";"refract.html";"354"
"4928";"REGIONS";"Using specified breakpoints map image values into 0,1,2,...";"142";"regions.html";"288"
"4929";"REGIONSBAR";"Plot a color bar for a regions type image.";"142";"regionsbar.html";"228"
"4930";"RELFILL";"Relative plot with rotation, scaling, translation.";"142";"relfill.html";"300"
"4931";"RELPLOT";"Relative plot with rotation, scaling, translation.";"142";"relplot.html";"573"
"4932";"REP_TXTMARKS";"Replace marker strings in a text array.";"142";"rep_txtmarks.html";"233"
"4933";"REPWORD";"Replace a word in a text string.";"142";"repword.html";"335"
"4934";"RES_ADD_STRUCT";"Add items from given unnested structure to an open res file.";"142";"res_add_struct.html";"298"
"4935";"RES_EXECUTE";"Process an executable res file.";"142";"res_execute.html";"224"
"4936";"RES_FROM_STRUCT";"Write a RES file from an unnested structure.";"142";"res_from_struct.html";"254"
"4937";"RES_TAGLIST";"Get requested values from list list of res files.";"142";"res_taglist.html";"230"
"4938";"RES_TO_STRUCT";"Read a RES file into a structure.";"142";"res_to_struct.html";"267"
"4939";"RESCLOSE";"Close results file.";"142";"resclose.html";"308"
"4940";"RESCOM";"Display values from the results common and also file header.";"142";"rescom.html";"295"
"4941";"RESCOPY";"Copy a res file to another res file, may drop items.";"142";"rescopy.html";"353"
"4942";"RESEDIT";"Replace values in a res file.";"142";"resedit.html";"335"
"4943";"RESGET";"Get a variable from a results files.";"142";"resget.html";"508"
"4944";"RESGET_ONE";"Function to get one item from a res file.";"142";"resget_one.html";"215"
"4945";"RESGET_SLICE";"Get 2D slices from a results files and return as a 3D array.";"142";"resget_slice.html";"238"
"4946";"RESHDR_FROM_FILE";"Replace a RES file header from a text file.";"142";"reshdr_from_file.html";"214"
"4947";"RESHDR_TO_FILE";"Write a RES file header to a text file.";"142";"reshdr_to_file.html";"201"
"4948";"RESOPEN";"Open a results file for reading or writing.";"142";"resopen.html";"380"
"4949";"RESPUT";"Put values into a results file.";"142";"resput.html";"621"
"4950";"RESTORE2";"Retrieve from a file IDL variables saved by save2.";"142";"restore2.html";"372"
"4951";"RESTORE_NAMED";"Restore variables under given names (saved with save_named).";"142";"restore_named.html";"183"
"4952";"REV";"Reverse plot and background colors.";"142";"rev.html";"270"
"4953";"RGB";"Explore RGB color system.";"142";"rgb.html";"558"
"4954";"RGB2C";"Convert R,G,B (or H,S,V) values to 24-bit color.";"142";"rgb2c.html";"305"
"4955";"RNGBOX";"Interactively get new plot xrange and yrange.";"142";"rngbox.html";"262"
"4956";"ROI_INDICES";"Convert roi_pick region string to indices array.";"142";"roi_indices.html";"223"
"4957";"ROI_PICK";"Pick one or more regions of interest, return as text array.";"142";"roi_pick.html";"1315"
"4958";"ROT_3D";"Rotate 3-d coordinate system.";"142";"rot_3d.html";"291"
"4959";"ROTATE_XY";"Rotate a set of X,Y points about a given point.";"142";"rotate_xy.html";"305"
"4960";"ROTVLT";"Rotate current vlt or part of it.";"142";"rotvlt.html";"244"
"4961";"ROUND2";"Round that works for big double precision numbers.";"142";"round2.html";"266"
"4962";"ROUNDN";"Round values to n decimal places.";"142";"roundn.html";"471"
"4963";"RSPEC";"Compute an ensemble averaged frequency spectrum of real data.";"142";"rspec.html";"345"
"4964";"RTICS";"Plot labeled or unlabeled tic marks around a circular arc.";"142";"rtics.html";"516"
"4965";"RUNLENGTH";"Give run lengths for array values.";"142";"runlength.html";"266"
"4966";"SATLATLNG2ALTAZI";"From Lat, Long find Altitude, Azimuth for a satellite.";"142";"satlatlng2altazi.html";"414"
"4967";"SATTRACKAZ";"Return the azimuth of a satellite track given inc and lat.";"142";"sattrackaz.html";"217"
"4968";"SAVE2";"Save IDL vars in a file. Allows them to be renamed during restore2.";"142";"save2.html";"368"
"4969";"SAVE_NAMED";"Save variables so they can be restored with any name.";"142";"save_named.html";"198"
"4970";"SCALE_DB";"Scale given data to db (meant for images).";"142";"scale_db.html";"226"
"4971";"SCALE_RGB";"Interactively scale R,G,B image components.";"142";"scale_rgb.html";"233"
"4972";"SCALEARRAY";"Linearly scale array values to specified range.";"142";"scalearray.html";"278"
"4973";"SCALEBAR";"Make an image bar indicating image min/max and scaling.";"142";"scalebar.html";"431"
"4974";"SCRAMBLE";"Scrambles an array or returns an array scrambled indices.";"142";"scramble.html";"1901"
"4975";"SCREEN";"Print a terminal screen layout sheet on PS printer.";"142";"screen.html";"2804"
"4976";"SCREENGIF";"Display a GIF image in a screen window.";"142";"screengif.html";"363"
"4977";"SCREENJPEG";"Display a jpeg image in a screen window.";"142";"screenjpeg.html";"261"
"4978";"SCREENPNG";"Display a PNG image in a screen window.";"142";"screenpng.html";"248"
"4979";"SCREENTIFF";"Display a tiff image in a screen window.";"142";"screentiff.html";"246"
"4980";"SDEV";"Returns standard deviation of an array.";"142";"sdev.html";"312"
"4981";"SECHMS";"Seconds after midnight to h, m, s, numbers and strings.";"142";"sechms.html";"285"
"4982";"SECSTR";"Convert a time string to seconds.";"142";"secstr.html";"377"
"4983";"SECTOR";"Plot and fill a sector of a circle.";"142";"sector.html";"337"
"4984";"SEEDFILL";"For an array fill a connected region bounded by given values.";"142";"seedfill.html";"373"
"4985";"SEEDFILLR";"For an array fill a connected region of constant pixel value.";"142";"seedfillr.html";"249"
"4986";"SEGMENT";"Set boundaries of constant value to 0.";"142";"segment.html";"271"
"4987";"SELECT_INTERVALS";"Select all intervals within a given range.";"142";"select_intervals.html";"248"
"4988";"SET_ISOXY";"Set data window with equal x & y scales. Covers at least given range";"142";"set_isoxy.html";"245"
"4989";"SET_SCALE";"Set scaling from currently displayed (or given) image.";"142";"set_scale.html";"247"
"4990";"SET_WINDOW";"Set data window.";"142";"set_window.html";"381"
"4991";"SETCOLOR";"Set a single color table entry.";"142";"setcolor.html";"388"
"4992";"SETMINUS";"Eliminate elements from a set that are also in another set.";"142";"setminus.html";"474"
"4993";"SETWIN";"Set which window should be currently active window.";"142";"setwin.html";"364"
"4994";"SHADE_CLT";"Sets up color table used for sun_shade shaded relief displays.";"142";"shade_clt.html";"213"
"4995";"SHADE_IMG";"Shade a given image based on a shading array.";"142";"shade_img.html";"233"
"4996";"SHADE_SURF2";"Allow image overlay with surface shading.";"142";"shade_surf2.html";"286"
"4997";"SHAPEFILE_PTS";"Return data points from a shape file.";"142";"shapefile_pts.html";"224"
"4998";"SHIFTF";"Shift an array by a fractional number of indices.";"142";"shiftf.html";"509"
"4999";"SHOW_BOX";"Used by MOVBOX to display current box size and position.";"142";"show_box.html";"233"
"15446";"BIT_EXPLODE";"Split bits in a byte array into bytes.";"142";"bit_explode.html";"24"
"5001";"SHOWPATH";"Show the path of the calling routine.";"142";"showpath.html";"403"
"5002";"SHOWTABS";"List text array on screen, with tabs as a printable char.";"142";"showtabs.html";"282"
"5003";"SIGN";"Return the mathematical sign of the argument.";"142";"sign.html";"5394"
"5004";"SIMP";"Does Simpson numerical integration on an array of y values.";"142";"simp.html";"273"
"5005";"SIZE_IMG";"Return image size and true value.";"142";"size_img.html";"236"
"5006";"SKEW";"Returns the skew of an array (3rd moment/2nd moment^3/2).";"142";"skew.html";"312"
"5007";"SKEWF";"Computes skew inside a moving window.";"142";"skewf.html";"278"
"5008";"SKEWINT";"Give the near-intersection point for two skew lines.";"142";"skewint.html";"326"
"5009";"SLOWPLOT";"Plot data slowly in fading colors.";"142";"slowplot.html";"278"
"5010";"SMOOTH2";"Do multiple smoothing. Gives near Gaussian smoothing.";"142";"smooth2.html";"425"
"5011";"SOPLOT";"Make a shaded over plot.";"142";"soplot.html";"344"
"5012";"SPC";"Return a string with the specified number of spaces (or other char).";"142";"spc.html";"290"
"5013";"SPH_DEMO";"Demonstrate some of the spherical plot (sph*) routines.";"142";"sph_demo.html";"279"
"5014";"SPH_RANGE_MAP";"Compute an array of ranges from a point on a sphere.";"142";"sph_range_map.html";"328"
"5015";"SPHGC";"Find intersections of two great circles on sphere.";"142";"sphgc.html";"253"
"5016";"SPHIC";"Compute intersection points of two circles on a unit sphere.";"142";"sphic.html";"581"
"5017";"SPHINIT";"Initialize sphere drawing package.";"142";"sphinit.html";"534"
"5018";"SPHLAT";"Draw parallels of latitude on a sphere.";"142";"sphlat.html";"246"
"5019";"SPHLNG";"Draw meridians of longitude on a sphere.";"142";"sphlng.html";"303"
"5020";"SPHPLOT";"Plot a curve in spherical polar coordinates.";"142";"sphplot.html";"485"
"5021";"SPHRAD";"Draw sphere radius.";"142";"sphrad.html";"290"
"5022";"SPHTEXT";"Write text on a sphere.";"142";"sphtext.html";"300"
"5023";"SPL_ANGINT";"Spline angular interpolation of a periodic function.";"142";"spl_angint.html";"197"
"5024";"SPLAT";"Generate points on a splat curve.";"142";"splat.html";"248"
"5025";"SPLOT";"Make a shaded plot.";"142";"splot.html";"771"
"5026";"SPRINT";"Print text on screen, allows easy update.";"142";"sprint.html";"426"
"5027";"ST2FIPS";"From 2 letter state abbreviation return 2 digit FIPS code.";"142";"st2fips.html";"263"
"5028";"STATE_NAME";"Return name of state given 2 letter abbreviation.";"142";"state_name.html";"224"
"5029";"STATION_MODEL";"Meteorology station plot (wind barbs, ...).";"142";"station_model.html";"232"
"5030";"STDDEV2";"Standard deviation of an array, optionally over a dimension.";"142";"stddev2.html";"401"
"5031";"STEXT_XYP";"Return stroke text plot arrays.";"142";"stext_xyp.html";"223"
"5032";"STK_LINREG";"Fit line by linear regression to columns in a stack of images.";"142";"stk_linreg.html";"328"
"5033";"STR_CLIPTRAIL0";"Clip trailing zeros equally for given array of numbers.";"142";"str_cliptrail0.html";"224"
"5034";"STR_DROP_PUNC";"Return a string with punctuation removed.";"142";"str_drop_punc.html";"305"
"5035";"STRARR2BYT";"Pack a string array into a byte array";"142";"strarr2byt.html";"284"
"5036";"STRDELARR";"Convert a delimited byte array to string array.";"142";"strdelarr.html";"244"
"5037";"STREP";"Edit a string by position. Precede, Follow, Replace, Delete.";"142";"strep.html";"283"
"5038";"STRESS";"String edit by sub-string. Precede, Follow, Delete, Replace.";"142";"stress.html";"304"
"5039";"STRFIND";"Find and list substrings in a string array.";"142";"strfind.html";"1084"
"5040";"STRINGFORM";"Format a string array (1024 not a limit).";"142";"stringform.html";"238"
"5041";"STRIPSHIFT";"Shift strips of an image in x or y.";"142";"stripshift.html";"250"
"5042";"STRLENTAB";"Gives length of a string with tab characters expanded.";"142";"strlentab.html";"200"
"5043";"STRSEC";"Convert seconds after midnight to a time string.";"142";"strsec.html";"272"
"5044";"STRSUB";"Extract a substring by start and end positions.";"142";"strsub.html";"549"
"5045";"STRTRM2";"Trim given character (and spaces) from ends of given string.";"142";"strtrm2.html";"333"
"5046";"STRUCT_AUTOCONVERT";"Convert a structure wih all string items to numeric.";"142";"struct_autoconvert.html";"223"
"5047";"STRZERO";"Convert a string to a zero terminated byte array.";"142";"strzero.html";"300"
"5048";"SUBIMG";"From current image select and redisplay a subimage.";"142";"subimg.html";"688"
"5049";"SUBNORMAL";"Convert from subnormal coordinates to normalized coord.";"142";"subnormal.html";"284"
"5050";"SUBSTRUCT";"Return a substructure from a structure by indices.";"142";"substruct.html";"273"
"5051";"SUN";"Computes geocentric physical ephemeris of the sun.";"142";"sun.html";"283"
"5052";"SUN_COLORS";"Load sun color table";"142";"sun_colors.html";"200"
"5053";"SUN_SHADE";"Make a colored shaded relief view of a surface array.";"142";"sun_shade.html";"238"
"5054";"SUN_ZD";"Return solar zenith distances for given position.";"142";"sun_zd.html";"269"
"5055";"SUNALTAZI";"Compute sun position from date/time and long/lat.";"142";"sunaltazi.html";"357"
"5056";"SUNCLOCK";"Show world map with day, twilight, and night.";"142";"sunclock.html";"913"
"5057";"SUNDISK";"Compute solar disk coordinates as seen from anywhere.";"142";"sundisk.html";"302"
"5058";"SUNJS";"Computes geocentric physical ephemeris of the sun.";"142";"sunjs.html";"496"
"5059";"SUNJS2";"Computes geocentric physical ephemeris of the sun.";"142";"sunjs2.html";"269"
"5060";"SW_SHOWPT";"Scroll a scrolling window to show given point.";"142";"sw_showpt.html";"251"
"5061";"SWAP";"Swap two values.";"142";"swap.html";"291"
"5062";"SWAP_NIBBLES";"Swap nibbles in a byte.";"142";"swap_nibbles.html";"306"
"5063";"SWDELETE";"Delete current window, scrolling or not.";"142";"swdelete.html";"258"
"5064";"SWINCENTER";"Center given point in a current scrolling window.";"142";"swincenter.html";"284"
"5065";"SWINDOW";"Create a scrolling window. Works much like window.";"142";"swindow.html";"339"
"5066";"SWINFO";"Return info for current or specified scrolling window.";"142";"swinfo.html";"859"
"5067";"SWLIST";"Display info for all scrolling windows, set new active one.";"142";"swlist.html";"498"
"5068";"SWSHAKE";"Shake an swindow.";"142";"swshake.html";"271"
"5069";"SYMASYM";"Resolve an array into symmetric & anti-symmetric components.";"142";"symasym.html";"486"
"5070";"SYMASYM_FFT";"Resolve an array into symmetric & anti-symmetric components.";"142";"symasym_fft.html";"297"
"5071";"TAG_ADD";"Add or update a tag in a structure.";"142";"tag_add.html";"354"
"5072";"TAG_ARR";"Concatenate scalars from one structure into arrays in another.";"142";"tag_arr.html";"286"
"5073";"TAG_COMP";"Compare tag values from two structures.";"142";"tag_comp.html";"225"
"5074";"TAG_DROP";"Drop a specified tag in a given structure.";"142";"tag_drop.html";"258"
"5075";"TAG_FUNCT";"Process structure elements through specified functions.";"142";"tag_funct.html";"226"
"5076";"TAG_MATCH";"Find matching tags in two structures.";"142";"tag_match.html";"224"
"5077";"TAG_MOVE";"Move tags from one structure to another.";"142";"tag_move.html";"218"
"5078";"TAG_RENAME";"Rename tags in a structure.";"142";"tag_rename.html";"386"
"5079";"TAG_SORT";"Sort structure tags based on a specified tag.";"142";"tag_sort.html";"282"
"5080";"TAG_TEST";"Test if given tag is in given structure.";"142";"tag_test.html";"240"
"5081";"TAG_VALUE";"Return the value for a given structure tag.";"142";"tag_value.html";"277"
"5082";"TAGGEDWORDS";"Extract and returned words tagged with a specified symbol.";"142";"taggedwords.html";"232"
"5083";"TARCLR";"Find closest match to target color in current color table.";"142";"tarclr.html";"238"
"5084";"TBIN";"Total binned values.";"142";"tbin.html";"286"
"5085";"TBIN2D";"Total 2-D binned values.";"142";"tbin2d.html";"212"
"5086";"TESTCOLOR";"Display colors selected by number.";"142";"testcolor.html";"246"
"5087";"TETRIS";"Play tetris game.";"142";"tetris.html";"266"
"5088";"TEXT_BLOCK";"Print or return a block of inline text (lines starts with ;).";"142";"text_block.html";"187"
"5089";"TEXTI";"Interactive Text.";"142";"texti.html";"263"
"5090";"TEXTPLOT";"Plot text with 2-d alignment. Also return bounding box.";"142";"textplot.html";"359"
"5091";"TEXTPOS";"Find size and angle of text string given points at each end.";"142";"textpos.html";"270"
"5092";"THICKEN";"Thicken graphics in an existing image. Good for viewgraphs.";"142";"thicken.html";"484"
"5093";"THPLOT";"Plot a curve with varying thickness along it.";"142";"thplot.html";"266"
"5094";"THREE2ONE";"Convert from 3-d indices to 1-d indices.";"142";"three2one.html";"242"
"5095";"TICKLEN";"Compute ticklength for specified size in pixels.";"142";"ticklen.html";"452"
"5096";"TIFF2GIF";"Convert a TIFF image to a GIF image.";"142";"tiff2gif.html";"308"
"5097";"TIFF2JPEG";"Convert a TIFF image to a JPEG image.";"142";"tiff2jpeg.html";"533"
"5098";"TIFFSCREEN";"Save current screen image and color table to a TIFF file.";"142";"tiffscreen.html";"220"
"5099";"TIME2JDOFF";"Find Julian day and offset from seconds. JS, Timeaxis";"142";"time2jdoff.html";"223"
"5100";"TIME_LABEL";"Make a time label array";"142";"time_label.html";"269"
"5101";"TIMEAXIS";"Plot a time axis.";"142";"timeaxis.html";"330"
"5103";"TNAXES";"Find nice time axis tics.";"142";"tnaxes.html";"289"
"5104";"TO_DATATYPE";"Convert arg to specified data type.";"142";"to_datatype.html";"193"
"5105";"TO_METERS";"Convert distances in selected units to meters.";"142";"to_meters.html";"256"
"5106";"TODEV";"Convert from data or normalized to device coordinates.";"142";"todev.html";"304"
"5107";"TOPC";"Return top color number for current device.";"142";"topc.html";"244"
"5108";"TOPCOLORS";"Reserve and define some colors at top of color table.";"142";"topcolors.html";"241"
"5109";"TOPO";"Make a monochrome shaded relief view of a surface.";"142";"topo.html";"263"
"5110";"TOPO2";"Make a shading array for a given data array.";"142";"topo2.html";"405"
"5111";"TPRINT";"Turn print statements into a text array.";"142";"tprint.html";"533"
"5112";"TRANSLATE";"Translate an image to regisiter with a reference image.";"142";"translate.html";"326"
"5113";"TRAPI";"Trapizoidal integration for irregularly spaced values.";"142";"trapi.html";"265"
"5114";"TVCIRC";"Draw a circle on the display.";"142";"tvcirc.html";"444"
"5115";"TVCRS2";"Like tvcr but allows data, device, & normal coordinates.";"142";"tvcrs2.html";"359"
"5116";"TVHUE";"Display given 2-d array as specified hue in current image.";"142";"tvhue.html";"275"
"5117";"TVPOS";"Gives screen position used by tv, tvscl.";"142";"tvpos.html";"455"
"5118";"TVRD2";"Version of tvrd that allows out of bounds.";"142";"tvrd2.html";"265"
"5119";"TVRDBOX";"Read part of screen image into a byte array.";"142";"tvrdbox.html";"226"
"5120";"TVRDBOX2B";"Read part of screen image using an interactive box.";"142";"tvrdbox2b.html";"234"
"5121";"TVSHARP";"Redisplay a sharpened version of the current screen image.";"142";"tvsharp.html";"496"
"5122";"TVWRBOX";"Display byte array on screen using box for position & size.";"142";"tvwrbox.html";"215"
"5123";"TWO2ONE";"Convert from 2-d indices to 1-d indices.";"142";"two2one.html";"254"
"5124";"TXT_KEYSECTION";"Extract a section of a text array between given keys.";"142";"txt_keysection.html";"228"
"5125";"TXTDB_DASH";"For a text array, find the txtdb_rd reference line of dashes.";"142";"txtdb_dash.html";"221"
"5126";"TXTDB_IN";"Index into a structure returned by txtdb_rd.";"142";"txtdb_in.html";"219"
"5127";"TXTDB_RD";"Read a text file data base.";"142";"txtdb_rd.html";"257"
"5128";"TXTDB_WR";"Write a file in txtdb format (columns) from a structure.";"142";"txtdb_wr.html";"336"
"5129";"TXTFILE";"Enter a (new) file name.";"142";"txtfile.html";"294"
"5130";"TXTGETFILE";"Select a file name.";"142";"txtgetfile.html";"239"
"5131";"TXTGETKEY";"Get a keyword value from a string array.";"142";"txtgetkey.html";"252"
"5132";"TXTIN";"txtmenu value entry.";"142";"txtin.html";"233"
"5133";"TXTMENU";"Text screen menu routine.";"142";"txtmenu.html";"269"
"5134";"TXTMENU_HELP";"Gives detailed help for the TXTMENU routine.";"142";"txtmenu_help.html";"214"
"5135";"TXTMERCON";"Merge continued lines in a text array.";"142";"txtmercon.html";"232"
"5136";"TXTMESS";"Display a message on the screen and wait for any key.";"142";"txtmess.html";"297"
"5137";"TXTMETER";"Display a 0 to 100% meter on a text screen.";"142";"txtmeter.html";"253"
"5138";"TXTPAD";"Pad a text array with spaces so all elements are same length.";"142";"txtpad.html";"288"
"5139";"TXTPICK";"Select file(s) from a screen menu displaying a file list.";"142";"txtpick.html";"275"
"5140";"TXTPUTKEY";"Write a structure out in keyword/value pair form.";"142";"txtputkey.html";"266"
"5141";"TXTYESNO";"Ask a yes/on question and read the answer.";"142";"txtyesno.html";"229"
"5142";"TYP2NUM";"Convert datatype description to corresponding numeric zero.";"142";"typ2num.html";"241"
"5143";"TYPEXTRACT";"Extract a specified datatype from binary data in byte array.";"142";"typextract.html";"264"
"5144";"UNIQ_TAGVAL";"Reduce given tag and value lists to unique tags only.";"142";"uniq_tagval.html";"198"
"5145";"UNIQUE";"Return the unique elements of an array.";"142";"unique.html";"682"
"5146";"UNIT";"Returns unit vector along given vector.";"142";"unit.html";"371"
"5147";"UNPACK12";"Unpack 12-bit data into 16-bit data.";"142";"unpack12.html";"335"
"5148";"UPCASE1";"Capitalize first letter in string.";"142";"upcase1.html";"237"
"5149";"UTM2LATLON";"Convert UTM coordinates to lat,lon.";"142";"utm2latlon.html";"291"
"5150";"UTNOW";"Return current Universal Time in Julian Seconds.";"142";"utnow.html";"327"
"5151";"VAR2BYT";"Convert numeric variables to the equivalent array of bytes.";"142";"var2byt.html";"229"
"5152";"VARF";"Computes variance inside a moving window.";"142";"varf.html";"439"
"5153";"VARY";"Execute IDL code varying parameters using sliders.";"142";"vary.html";"232"
"5154";"VASE";"Draw rotationally symetric shapes.";"142";"vase.html";"251"
"5155";"VCLIP";"Clip a vector to a clipping window.";"142";"vclip.html";"869"
"5156";"VECFLD";"Plot a 2-d vector field.";"142";"vecfld.html";"294"
"5157";"VECT_ANGLE";"Angular distance between vectors.";"142";"vect_angle.html";"230"
"5158";"VER";"Plot a vertical line on a graph at specified x value.";"142";"ver.html";"285"
"5159";"VERI";"Interactive vertical line on screen or plot.";"142";"veri.html";"271"
"5160";"VIMGSEQ";"Display a sequence of byte images.";"142";"vimgseq.html";"274"
"5161";"VLINE";"Plot a vertical line after erasing last plotted line.";"142";"vline.html";"1904"
"5162";"VNORM";"Normalize an array of values to 0. to 1.";"142";"vnorm.html";"323"
"5163";"VUMOV";"View a res file movie.";"142";"vumov.html";"401"
"5164";"WAIT_BAR";"Wait for given number of seconds, show a sliding indicator.";"142";"wait_bar.html";"356"
"5165";"WAV_PLAY";"Play a wave file.";"142";"wav_play.html";"250"
"5166";"WAVELENGTH_TO_HUE";"Convert an array of wavelengths to hues.";"142";"wavelength_to_hue.html";"353"
"5167";"WDRAW_BUTTONS";"Make button images for draw widget buttons.";"142";"wdraw_buttons.html";"214"
"5168";"WEB_BACK";"Generate a random web background.";"142";"web_back.html";"287"
"5169";"WEBCALTAB";"Generate HTML table code for a calendar.";"142";"webcaltab.html";"271"
"5170";"WEBSHADOW";"Add a shadow to a web page image.";"142";"webshadow.html";"336"
"5171";"WEBTILE";"Generate a Netscape web page background tile.";"142";"webtile.html";"315"
"5172";"WEEKDAY";"Compute weekday given year, month, day.";"142";"weekday.html";"420"
"5173";"WGS_84";"Return a structure with some WGS 84 Ellipsoid values.";"142";"wgs_84.html";"369"
"5174";"WHELP";"Widget to display given help text.";"142";"whelp.html";"394"
"5175";"WHICHWRD";"Find which word is a given string is in.";"142";"whichwrd.html";"224"
"5176";"WIDGET_GETOFFSET";"Get x/y position of a subwidget.";"142";"widget_getoffset.html";"208"
"5177";"WIN_COPY";"Copies graphics from a hidden window to the target window.";"142";"win_copy.html";"249"
"5178";"WIN_INFO";"Return a structure with window size and viewport.";"142";"win_info.html";"282"
"5179";"WIN_OPEN";"Test if a given window is open.";"142";"win_open.html";"194"
"5180";"WIN_REDIRECT";"Redirects all graphics to a hidden window.";"142";"win_redirect.html";"307"
"5181";"WIN_SIZE_SHAPE";"Find window size & shape needed to display a specified image.";"142";"win_size_shape.html";"217"
"5182";"WIND_ROSE";"Plot a single wind rose on current map.";"142";"wind_rose.html";"1002"
"5183";"WINDOW_DRIFT";"Return window drift in x and y.";"142";"window_drift.html";"197"
"5184";"WINLIN";"Make a weighting array with linear tapering for windowing.";"142";"winlin.html";"238"
"5185";"WINLIST";"List windows in use.";"142";"winlist.html";"277"
"5186";"WINWATCH";"Zoom part of the current window in a display window.";"142";"winwatch.html";"270"
"5187";"WMENU2";"Like wmenu but allows non-mouse menus. Uses widgets if available.";"142";"wmenu2.html";"269"
"5188";"WORDARRAY";"Convert text string or string array to 1-d array of words.";"142";"wordarray.html";"385"
"5189";"WORDORDER";"Re-arrange words in a text string.";"142";"wordorder.html";"217"
"5190";"WORDPOS";"Find position of a word in a string.";"142";"wordpos.html";"269"
"5191";"WORLD_SUNZD";"Compute Sun zenith distance for an array of world points.";"142";"world_sunzd.html";"214"
"5192";"WRAP_PLOT";"Simple wrapper routine to demonstrate _extra.";"142";"wrap_plot.html";"196"
"5193";"XADJCIRC";"Interactively adjust one or more circles on an image.";"142";"xadjcirc.html";"217"
"5194";"XAUTOHELP";"Display auto help when mouse moves over a widget.";"142";"xautohelp.html";"229"
"5195";"XAUTOHELP_EXAMPLE";"This routine shows how to use xautohelp.";"142";"xautohelp_example.html";"207"
"5196";"XBB";"Widget bill board utility for text display.";"142";"xbb.html";"328"
"5197";"XCED1";"Simple widget to edit a single color table entry.";"142";"xced1.html";"266"
"5198";"XCURSOR";"Cursor coordinate display in a pop-up widget window.";"142";"xcursor.html";"376"
"5199";"XCURVE";"Draw a curve in the display window.";"142";"xcurve.html";"366"
"5200";"XCYPH";"Widget based cycle/phase images.";"142";"xcyph.html";"252"
"5201";"XDATAFILE";"Explore a text file of unkown format.";"142";"xdatafile.html";"211"
"5202";"XDATE";"Widget based date selection tool.";"142";"xdate.html";"408"
"5203";"XFILES";"Select files, individual or ranges.";"142";"xfiles.html";"252"
"5204";"XGET_FILELIST";"Get a list of files using a widget.";"142";"xget_filelist.html";"188"
"5205";"XGET_IMGDSC";"Get image description: type and size";"142";"xget_imgdsc.html";"182"
"5206";"XGETFILE";"Widget based file selection routine.";"142";"xgetfile.html";"217"
"5207";"XGETVALS";"General widget to get values.";"142";"xgetvals.html";"256"
"5208";"XGETVALS_DEMO";"Demonstration of the xgetvals routine.";"142";"xgetvals_demo.html";"222"
"5209";"XHELP";"Widget to display given help text.";"142";"xhelp.html";"339"
"5210";"XHISTPICK";"Widget routine to select image scaling based on a histogram.";"142";"xhistpick.html";"240"
"5211";"XHOTLIST";"Widget based hotlist of items.";"142";"xhotlist.html";"239"
"5212";"XHSBC";"Adjust image hue, saturation, brightness, & contrast. Widget.";"142";"xhsbc.html";"338"
"5213";"XLINE";"Interactive line on image display.";"142";"xline.html";"269"
"5214";"XLINER";"Display one line descriptions of routines given keywords.";"142";"xliner.html";"343"
"5215";"XLIST";"Pop-up list selection widget.";"142";"xlist.html";"246"
"5216";"XMERGE";"Widget based routine to merge multiple color images in one.";"142";"xmerge.html";"345"
"5217";"XMESS";"Display a message using a widget.";"142";"xmess.html";"290"
"5218";"XMETER";"Display a 0 to 100% meter on a text screen.";"142";"xmeter.html";"281"
"5219";"XOPTION";"Widget option selection panel.";"142";"xoption.html";"319"
"5220";"XORPLOT";"Manage XOR plots. Erases last when plotting new.";"142";"xorplot.html";"224"
"5221";"XPAR2";"Execute IDL code using interactively varied parameters.";"142";"xpar2.html";"269"
"5222";"XPRINT";"Print text on graphics device. After initializing use just like print.";"142";"xprint.html";"346"
"5223";"XRESGET2";"Get items from a resfile using a menu.";"142";"xresget2.html";"203"
"5224";"XSPEC";"Compute an ensemble averaged cross spectrum of real data.";"142";"xspec.html";"1413"
"5225";"XSUBDIR";"Widget based subdirectory selection tool.";"142";"xsubdir.html";"228"
"5226";"XTEXTFILE";"Explore a text file of unkown format.";"142";"xtextfile.html";"255"
"5227";"XTEXTIMG";"Create an image with text. Widget based.";"142";"xtextimg.html";"208"
"5228";"XTICS";"Draw labeled tics for an X type axis.";"142";"xtics.html";"365"
"5229";"XTXTIN";"Widget based text input.";"142";"xtxtin.html";"244"
"5230";"XVIEW";"View and/or convert images (GIF, TIFF, ...).";"142";"xview.html";"498"
"5231";"XYESNO";"Widget Yes/No selection panel.";"142";"xyesno.html";"232"
"5232";"XYOUTB";"Bold text version of xyouts.";"142";"xyoutb.html";"577"
"5233";"XYPRO_RADON";"A crossi xypro procedure to plot lines from radon points.";"142";"xypro_radon.html";"239"
"5234";"YDN2DATE";"Convert year and day of the year to a date string.";"142";"ydn2date.html";"611"
"5235";"YDNS2JS";"Convert year, day of the year, and seconds to Julian Seconds.";"142";"ydns2js.html";"252"
"5236";"YMD2DATE";"Convert from year, month, day numbers to date string.";"142";"ymd2date.html";"264"
"5237";"YMD2JD";"From Year, Month, and Day compute Julian Day number.";"142";"ymd2jd.html";"299"
"5238";"YMDS2JS";"Convert to year, month, day, second to 'Julian Second'.";"142";"ymds2js.html";"255"
"5239";"YY2YYYY";"Convert a 2 digit year to a 4 digit year.";"142";"yy2yyyy.html";"250"
"5240";"ZERO_INT";"Return a zero of the requested data type.";"142";"zero_int.html";"358"
"5241";"ZEXTREMES";"Find extremes in a 3-D array in the Z direction only.";"142";"zextremes.html";"249"
"5242";"ZPAN";"Zoom and pan around an image using the mouse.";"142";"zpan.html";"328"
"5243";"ZPAN2";"Zoom and pan around an image using the mouse, mark center.";"142";"zpan2.html";"242"
"5244";"ZPLOT";"Plot symbols in various colors.";"142";"zplot.html";"361"
"5245";"ZWINDOW";"Z buffer window like normal x window.";"142";"zwindow.html";"292"
"7062";"MGH_PICTURE_GET_VIEWS";"This function returns a list of views contained in a picture. 'Picture' is my name for an IDL drawable object, ie an IDLgrView, IDLgrScene or IDLgrViewgroup.";"144";"mgh_picture_get_views.html";"338"
"6873";"EDF";"This procedure calculates the empirical distribution function (edf) of a set of data, evaluated at each input data point. The edf is the empirical equivalent of the cumulative distribution function.";"146";"edf.html";"405"
"6982";"MGH_EXAMPLE_DGANIMATE";"Example illustrating different methods of animating direct graphics commands.";"144";"mgh_example_dganimate.html";"180"
"7016";"MGH_GUI_COLORSCALE__DEFINE";"This class implements a graphics window displaying a colour scale (ie. a mapping between numeric and colour values) via a colour bar. The ultimate aim is to use this object to make changes in the colour scale then pass them back to th...";"144";"mgh_gui_colorscale__define.html";"186"
"6745";"TNMIN";"Performs function minimization (Truncated-Newton Method)";"143";"tnmin.html";"1035"
"6746";"TRANSREAD";"Parse a tabular ASCII data file or string array.";"143";"transread.html";"4268"
"6747";"TZOFFSET";"Compute timezone offset from GMT for any date";"143";"tzoffset.html";"515"
"6748";"XATT_EL";"Compute X-ray attenuation coefficient from NIST tables";"143";"xatt_el.html";"358"
"6749";"XWINDOW";"This routine implements a 'smart' resizeable graphics window. It is used as a wrapper for built-in IDL graphics procedures such as SURFACE, CONTOUR, PLOT, SHADE_SURF, etc. In additon, it can be used to display any user-written graphic...";"143";"xwindow.html";"475"
"7153";"MGHWAITER__DEFINE";"Maintains a widget which allows the user to abort or suspend execution.";"144";"mghwaiter__define.html";"184"
"7152";"MGHNCSEQUENCE__DEFINE";"This class allows read-only access to a sequence of netCDF files. A virtual unlimited dimension is constructed so that the sequence of files can be treated as a single netCDF file. (See documentation below, especially the ENSEMBLE and...";"144";"mghncsequence__define.html";"188"
"7151";"MGHNCREADFILE__DEFINE";"This class encapsulates a netCDF file for READ-ONLY access. It exposes methods for manipulating dimensions, variables and attributes.";"144";"mghncreadfile__define.html";"155"
"7150";"MGHNCHELPER__DEFINE";"This class is a 'helper' for the netCDF-file classes (MGHncFile, MGHncReadFile & MGHncSequence). It is inherited by each of them to provide common functionality.";"144";"mghnchelper__define.html";"168"
"7148";"MGHGRVOLUME__DEFINE";"An IDLgrVolume inside a user-friendly (?) wrapper.";"144";"mghgrvolume__define.html";"193"
"7146";"MGHGRSURFACE__DEFINE";"This class is basedidentical to IDLgrSurface, except that its GetProperty method accepts DATAX, DATAY and DATAZ keywords.";"144";"mghgrsurface__define.html";"163"
"7149";"MGHNCFILE__DEFINE";"This class encapsulates a netCDF file for READ and WRITE access. It exposes methods for manipulating dimensions, variables and attributes. C.f. the MGHncReadFile class, which allows read-only access.";"144";"mghncfile__define.html";"248"
"7147";"MGHGRSYMBOL__DEFINE";"This class implements a symbol in which the size can be specified in normalised coordinates. It provides useful plotting symbols not in the standard IDLgrSymbol definitions.";"144";"mghgrsymbol__define.html";"156"
"7145";"MGHGRPALETTE__DEFINE";"An MGHgrPalette is an IDLgrPalette with a few enhancements to the Init method. OBJECT CREATION SEQUENCE: palette = obj_new('MGHgrPalette', 10) palette = obj_new('MGHgrPalette', 'MGH Special 2') palette = obj_new('MGHgrPalette', mgh_co...";"144";"mghgrpalette__define.html";"170"
"7144";"MGHGRMOVIEFILE__DEFINE";"This class generates an animation file from a sequence of image arrays. The MGHgrMovieFile class is modelled on the IDLgrMPEG class. It stores images on disk in a sequence of PPM files (Put method) then combines them into a multiple-i...";"144";"mghgrmoviefile__define.html";"246"
"7143";"MGHGRMODEL__DEFINE";"An MGHgrModel is an IDLgrModel that keeps track of axes that have been added to it.";"144";"mghgrmodel__define.html";"221"
"7142";"MGHGRLEGOSURFACE__DEFINE";"A surface class that acts sanely when the STYLE property is set to one of the Lego values (5 or 6).";"144";"mghgrlegosurface__define.html";"271"
"7141";"MGHGRLEGEND__DEFINE";"This class inherits IDLgrLegend and adds a LOCATION property (which specifies the . It also applies different defaults for a few properties.";"144";"mghgrlegend__define.html";"294"
"7140";"MGHGRGRAPH__DEFINE";"An MGHgrGraph is an IDLgrView with extra facilities that make it useful as a container for general-purpose scientific graphs. These include: - Containers to hold resources (fonts, symbols, palettes) required by graphics atoms. - Metho...";"144";"mghgrgraph__define.html";"300"
"7139";"MGHGRGRAPH3D__DEFINE";"This class implements a 3D graph with a plot volume and space for axes & annotations. It includes several methods for adding axes, plots, and other graphics atoms & models.";"144";"mghgrgraph3d__define.html";"228"
"7138";"MGHGRGRAPH2D__DEFINE";"This class implements a 2D graph with a plot area and space for axes & annotations. It includes several methods for adding axes, plots, and other graphics atoms & models. Most of this functionality is inherited from the superclass, MG...";"144";"mghgrgraph2d__define.html";"261"
"7137";"MGHGRGLAXIS__DEFINE";"This class implements an axis with optional labelling in the gaps between the major tick marks ('GL' = gaps labelled). An MGHgrGLaxis intercepts calls to the superclass's Draw method, at which point it fiddles around to put the gap la...";"144";"mghgrglaxis__define.html";"271"
"7136";"MGHGRDENSITYRECT__DEFINE";"This class implements a 'density plane', ie a representation of 2-D numeric data on a flat surface using colour or grey-scale density. A rectangular array of cells (quadrilaterals) is set out and the data values are represented by the...";"144";"mghgrdensityrect__define.html";"290"
"7135";"MGHGRDENSITYRECT2__DEFINE";"This class implements a 'density plot', ie a representation of 2-D numeric data on a flat surface using colour or grey-scale density. A rectangular array of cells (quadrilaterals) is set out and the data values are represented by the ...";"144";"mghgrdensityrect2__define.html";"235"
"7133";"MGHGRDENSITYIMAGE__DEFINE";"This class implements a density plot as an IDLgrImage.";"144";"mghgrdensityimage__define.html";"241"
"7134";"MGHGRDENSITYPLANE__DEFINE";"This class implements a 'density plane' graphics object, ie a representation of 2-D numeric data on a flat surface using colour or grey-scale density. It encapsulates an MGHgrColorPlane, which handles all the geometry.";"144";"mghgrdensityplane__define.html";"287"
"7132";"MGHGRDATAMATION__DEFINE";"A container holding a graphics tree and a sequence of MGH_Command objects, to be managed and displayed by an animator window such as MGH_Datamator.";"144";"mghgrdatamation__define.html";"234"
"7131";"MGHGRCOMPOSITEEXAMPLE__DEFINE";"This class was written as a prototype for a typical composite graphics object. It implements a grey rectangle with a black outline. It has properties LOCATION and DIMENSIONS. It has no practical use.";"144";"mghgrcompositeexample__define.html";"249"
"7129";"MGHGRCOLORPOLYGON__DEFINE";"This class implements a colour plane using an IDLgrPolygon. For a description of what a colour plane is, see the documentation for MGHgrColorPlane.";"144";"mghgrcolorpolygon__define.html";"260"
"7130";"MGHGRCOLORSURFACE__DEFINE";"This class implements a colour plane using an IDLgrSurface. For a description of what a colour plane is, see the documentation for MGHgrColorPlane.";"144";"mghgrcolorsurface__define.html";"247"
"7128";"MGHGRCOLORPLANE__DEFINE";"The MGHgrColorPlane implements a flat, coloured surface consisting of a rectangular array of quadrilateral cells, optionally with some of the cells omitted. Colours are either uniform over the cells (STYLE=0) or interpolated from the ...";"144";"mghgrcolorplane__define.html";"270"
"7127";"MGHGRCOLORBAR__DEFINE";"This class implements an object graphics colour bar, ie a rectangular bar showing a mapping between numeric values and colours.";"144";"mghgrcolorbar__define.html";"289"
"7126";"MGHGRCOLORBAR2__DEFINE";"This class implements a colour bar, ie a rectangular bar showing a mapping between numeric values and colours.";"144";"mghgrcolorbar2__define.html";"294"
"7125";"MGHGRBARB__DEFINE";"This class implements a set of wind/current barbs by joining up the appropriate vertices in a single IDLgrPolyline.";"144";"mghgrbarb__define.html";"277"
"7124";"MGHGRBACKGROUND__DEFINE";"This class is just an IDLgrPolygon with a couple of changes that make it suitable to be the background (selection target) in an MGHgrGraph: - The GetProperty keywords XRANGE, YRANGE and ZRANGE return undefined values. This means that ...";"144";"mghgrbackground__define.html";"259"
"7123";"MGHGRAXIS__DEFINE";"An MGHgrAxis is an axis specialised for use by objects of the MGHgrGraph class and its subclasses. The class is based on the IDLgrAxis, but with several differences: - The TITLE and TICKTEXT properties are strings. Behind the scenes, ...";"144";"mghgraxis__define.html";"241"
"7122";"MGHGRATOMATION__DEFINE";"A container designed to hold a graphics tree and one or more sequences of graphics objects to be managed and displayed by an animator window such as MGH_Player.";"144";"mghgratomation__define.html";"321"
"7121";"MGHDGANIMATION__DEFINE";"A container holding a a sequence of MGH_Command objects, to be managed and and displayed by a direct graphics animator window such as MGH_DgPlayer.";"144";"mghdganimation__define.html";"287"
"7120";"MGHAVIWRITEFILE__DEFINE";"This class encapsulates an AVI file to be written using the functions supported by the AVI DLL.";"144";"mghaviwritefile__define.html";"373"
"7119";"MGH_WINDOW__DEFINE";"This class encapsulates a widget application containing an object graphics window. The window displays a single picture (ie a IDLgrView, IDLgrViewGroup or IDLgrScene).";"144";"mgh_window__define.html";"179"
"7118";"MGH_WIDGET_SELF";"Support the retrieval of object refernces from, and the storing of object references in, structures of type MGH_WIDGET_SELF. These are associated with the UVALUE of a widget element, to provide a bridge between the widget tree and an ...";"144";"mgh_widget_self.html";"155"
"7117";"MGH_WIDGET_GETCHILD";"Given a widget ID, this function returns a the widget ID(s) for one or more of its children. It is intended to have similar semantics to IDL_Container::Get.";"144";"mgh_widget_getchild.html";"176"
"7116";"MGH_WIDGET_DESCENDANTS";"Given a widget ID, this function returns the widget ID(s) for all children, and their children, and their children's children etc.";"144";"mgh_widget_descendants.html";"198"
"7115";"MGH_WIDGET_CALLBACK__DEFINE";"Define MGH_WIDGET_CALLBACK, a named structure used for callbacks in object widgets.";"144";"mgh_widget_callback__define.html";"154"
"7114";"MGH_WIDGET_ABS_OFFSET";"Given a widget ID, this function returns the offset of this widget relative to the screen";"144";"mgh_widget_abs_offset.html";"207"
"7113";"MGH_VECTOR__DEFINE";"This class implements a random-access container for heterogeneous data. It is implemented using an array of pointers.";"144";"mgh_vector__define.html";"202"
"7112";"MGH_VAR_STORE";"Procedure MGH_VAR_SAVE creates a copy of an IDL variable at a call level different from the current one. It uses undocumented features of the built-in function ROUTINE_NAMES. See: http://astrog.physics.wisc.edu/~craigm/idl/introspect....";"144";"mgh_var_store.html";"194"
"7110";"MGH_VAR_RESTORE";"Function MGH_VAR_RESTORE restores an IDL variable saved by VAR_SAVE.";"144";"mgh_var_restore.html";"217"
"7111";"MGH_VAR_SAVE";"Procedure MGH_VAR_SAVE saves a single IDL variable to a binary file in XDR format using SAVE. The variable can be retrieved with the function VAR_RESTORE.";"144";"mgh_var_save.html";"173"
"7109";"MGH_UNPACK";"This function reproduces (some of) the functionality of the Fortran 90 UNPACK procedure, ie it reverses the packing of data according to the value of a mask variable. See also MGH_PACK.";"144";"mgh_unpack.html";"179"
"7107";"MGH_TXT_RESTORE";"Read the contents of a text file into a string array.";"144";"mgh_txt_restore.html";"188"
"7108";"MGH_UNDEFINE";"This procedure causes any variable specified in its list of positional parameters to become undefined";"144";"mgh_undefine.html";"290"
"7106";"MGH_TV_MAP_PATCH";"This function combines calls to MAP_PATCH & TV to avoid problems with passing information between the two routines in an MGH_DGwindow object.";"144";"mgh_tv_map_patch.html";"182"
"7105";"MGH_TRIANGULATE_RECTANGLE";"This function returns a triangulation for a 2D rectangular grid.";"144";"mgh_triangulate_rectangle.html";"374"
"7103";"MGH_TIME_GR2";"Run speed tests for object graphics";"144";"mgh_time_gr2.html";"190"
"7104";"MGH_TOC";"MGH_TIC and MGH_TOC operate a global stopwatch. Call MGH_TIC to start the stopwatch and MGH_TOC to stop it and print the elapsed time.";"144";"mgh_toc.html";"230"
"7102";"MGH_TIC";"MGH_TIC and MGH_TOC operate a global stopwatch. Call MGH_TIC to start the stopwatch and MGH_TOC to stop it and print the elapsed time.";"144";"mgh_tic.html";"318"
"7101";"MGH_TF_NEGATIVE";"This function is designed for use with the TICKFORMAT and TICKFRMTDATA properties of IDLgrAxis. Given a real value, it returns a string representing the additive inverse. MGH_TF_NEGATIVE is a special case of MGH_TF_LINEAR.";"144";"mgh_tf_negative.html";"203"
"7100";"MGH_TF_LONGITUDE";"This function is designed for use with the TICKFORMAT property of IDLgrAxis. It adds 'W' and 'E' suffices appropriately.";"144";"mgh_tf_longitude.html";"189"
"7099";"MGH_TF_LINEAR";"This function is designed for use with the TICKFORMAT and TICKFRMTDATA properties of IDLgrAxis. Given a real value, it applies a linear transformation & returns a string representing the result.";"144";"mgh_tf_linear.html";"184"
"7098";"MGH_TF_LATITUDE";"This function is designed for use with the TICKFORMAT property of IDLgrAxis. It adds 'S' and 'N' suffices appropriately.";"144";"mgh_tf_latitude.html";"173"
"7097";"MGH_TF_EXPONENTIAL";"This function is designed for use with the TICKFORMAT property of IDLgrAxis. It returns a formatted representation of exp(Value)";"144";"mgh_tf_exponential.html";"197"
"7096";"MGH_SURFACE_MOVIE__DEFINE";"This class displays a 3-D numeric array as a sequence of surface plots in a window with axes and a colour scale. The class inherits from MGH_Player. OBJECT CREATION CALLING SEQUENCE mgh_new, 'MGH_Surface_Movie', Values";"144";"mgh_surface_movie__define.html";"181"
"7095";"MGH_SURFACE__DEFINE";"This class displays a 2-D numeric array as a surface plot in a window, with axes and a colour scale. OBJECT CREATION CALLING SEQUENCE mgh_new, 'MGH_Surface', values[, x, y]";"144";"mgh_surface__define.html";"196"
"7093";"MGH_STRUCT_PRINT";"This procedure prints structure tag names and values.";"144";"mgh_struct_print.html";"181"
"7094";"MGH_SUBSET";"Given a 1D monotonic vector (xin) representing location, and a pair of positions (bound), this function returns the indices into the vector that bracket those positions. This function addresses a very common situation: we have a vecto...";"144";"mgh_subset.html";"232"
"7091";"MGH_STRUCT_HAS_TAG";"Determines whether a variable is a structure containing the specified tag.";"144";"mgh_struct_has_tag.html";"190"
"7092";"MGH_STRUCT_MERGE";"This function merges two anonymous structures.";"144";"mgh_struct_merge.html";"236"
"7090";"MGH_STRUCT_FIND_TAG";"This function finds tags in a structure by name";"144";"mgh_struct_find_tag.html";"181"
"7089";"MGH_STRUCT_BUILD";"This function builds an anonymous structure, given a list of tag names and a list of pointers to data values.";"144";"mgh_struct_build.html";"222"
"7087";"MGH_STR_SUBST";"String substitution.";"144";"mgh_str_subst.html";"215"
"7088";"MGH_STR_VANILLA";"Convert arbitrary string to vanilla form, suitable for file name.";"144";"mgh_str_vanilla.html";"242"
"7086";"MGH_STR_ISWHITE";"Determine whether a string contains only 'white' characters (ASCII &lt; 32).";"144";"mgh_str_iswhite.html";"178"
"7085";"MGH_STR_ISNUMBER";"Determine whether a string represents a valid number.";"144";"mgh_str_isnumber.html";"208"
"7084";"MGH_STR_ISIDENTIFIER";"This function determines whether a string is a valid IDL identifier (see 'Building IDL Applications', Chapter 2).";"144";"mgh_str_isidentifier.html";"176"
"7083";"MGH_STOPWATCH__DEFINE";"An MGH_Stopwatch object can be used for keeping track of elapsed time in a lengthy calculation.";"144";"mgh_stopwatch__define.html";"167"
"7082";"MGH_STAGGER";"This function is designed to be used for calculations on staggered rectangular grids of arbitrary dimension. It interpolates or extrapolates scalar values between cell centres, faces and vertices.";"144";"mgh_stagger.html";"286"
"7081";"MGH_STACK__DEFINE";"This class implements a last-in-first-out (LIFO) stack as a singly linked list.";"144";"mgh_stack__define.html";"216"
"7080";"MGH_RESOLVE_INDICES";"This procedure generates a series of indices for referencing a vector. I found myself writing this code over and over in my model-analysis code so I put it in a separate procedure. The idea is that we have a vector of known size and w...";"144";"mgh_resolve_indices.html";"159"
"7079";"MGH_REPRODUCE";"Replicate by example: replicates a scalar value into an array (or scalar) with size & dimensions copied from a template array. Useful for generating structure arrays in procedures.";"144";"mgh_reproduce.html";"174"
"7078";"MGH_RANGE";"This function generates a 1-D array of values between specified limits.";"144";"mgh_range.html";"196"
"7077";"MGH_QUEUE__DEFINE";"A first-in-first-out (FIFO) queue, currently implemented as a singly linked list.";"144";"mgh_queue__define.html";"175"
"7076";"MGH_PRINTER";"Support a session-wide Object Graphics printer.";"144";"mgh_printer.html";"189"
"7075";"MGH_PRINT_PICTURE";"This prints a picture (an IDL drawable object, ie an IDLgrView, IDLgrScene or IDLgrViewgroup) to a printer";"144";"mgh_print_picture.html";"170"
"7074";"MGH_POLYFILLG";"Given a 2-D polygon and a rectangular grid, this function returns an array indicating the fraction (optionally the area) of each pixel inside the polygon.";"144";"mgh_polyfillg.html";"250"
"7073";"MGH_POLYCLIP2";"Clip an arbitrary polygon on the X-Y plane to a line of arbitrary orientation using the Sutherland-Hodgman algorithm.";"144";"mgh_polyclip2.html";"313"
"7072";"MGH_POLYCLIP";"Clip an arbitrary polygon on the X-Y plane to a line parallel to the X or Y axis using the Sutherland-Hodgman algorithm.";"144";"mgh_polyclip.html";"317"
"7071";"MGH_POLYBOX";"Clip an arbitrary polygon on the X-Y plane to a box (a rectangle defined by X and Y limits) using the Sutherland-Hodgman algorithm.";"144";"mgh_polybox.html";"252"
"7070";"MGH_POLY_SPLIT";"Extract a set of polygon/polyline descriptors from a single vector and bundle them in an MGH_Vector object or a pointer array.";"144";"mgh_poly_split.html";"200"
"7069";"MGH_POLY_OVERLAP";"Given 2 polygons, this function returns the area of the region where they overlap";"144";"mgh_poly_overlap.html";"212"
"7067";"MGH_POLY_INSIDE";"Determine whether a point or set of points is inside a polygon.";"144";"mgh_poly_inside.html";"221"
"7068";"MGH_POLY_JOIN";"Given a container object with a list of polygon/polyline descriptors combine them into a single vector.";"144";"mgh_poly_join.html";"198"
"7066";"MGH_PNPOLY";"Determine whether a point or set of points is inside a polygon.";"144";"mgh_pnpoly.html";"349"
"7065";"MGH_PLOT__DEFINE";"This class implements a line plot. It inherits from MGH_Window, adding code in the Init method to produce and IDLgrPlot object. OBJECT CREATION CALLING SEQUENCE mgh_new, 'MGH_Plot', findgen(11)";"144";"mgh_plot__define.html";"190"
"7064";"MGH_PLAYER__DEFINE";"A window for displaying & managing picture sequences.";"144";"mgh_player__define.html";"233"
"7063";"MGH_PICTURE_IS_FITTABLE";"This function determines whether a picture has properties that allow its size to be determined explicitly. It optionally returns size information via the UNITS and DIMENSIONS keywords. 'Picture' is my name for an IDL drawable object, ...";"144";"mgh_picture_is_fittable.html";"1880"
"7061";"MGH_PATH_ISABS";"Determine whether a name represents an absolute path on the current OS.";"144";"mgh_path_isabs.html";"200"
"7060";"MGH_PALETTE";"This function generates and returns a palette object. It is now a wrapper for functionality in MGHgrPalette::Init.";"144";"mgh_palette.html";"207"
"7059";"MGH_PACK";"This function reproduces (some of) the functionality of the Fortran 90 PACK procedure, ie it packs data into a 1-D vector according to the value of a mask variable. See also MGH_UNPACK.";"144";"mgh_pack.html";"260"
"7058";"MGH_OBJ_STRING";"Given an object reference (or array thereof), this function returns a descriptive string, as generated by the PRINT command";"144";"mgh_obj_string.html";"186"
"7056";"MGH_OBJ_CLONE";"Given a reference to an object heap variable, this function generates a copy and returns a reference to it.";"144";"mgh_obj_clone.html";"189"
"7057";"MGH_OBJ_FILTER";"Given a list of object references, this function returns a list filtered by class type.";"144";"mgh_obj_filter.html";"208"
"7055";"MGH_NULL";"This function defines a null value for each IDL data type.";"144";"mgh_null.html";"399"
"7054";"MGH_NORM_COORD";"This is my version of the IDL NORM_COORD function (in the 'examples/objects' subdirectory), with an optional second argument, renamed to avoid confusion. This is a utility routine to calculate the scaling vector required to map a spec...";"144";"mgh_norm_coord.html";"221"
"7053";"MGH_NEW_BUFFER";"This function creates and returns a new IDLgrBuffer, or similar destination object. It checks to see whether the buffer dimensions (in device units) are going to exceed the screen dimensions and if necessary adjusts the value of DIMEN...";"144";"mgh_new_buffer.html";"162"
"7052";"MGH_NEW";"A procedure that calls function OBJ_NEW and optionally returns the object reference.";"144";"mgh_new.html";"298"
"7051";"MGH_NCDF_SAVE";"Procedure MGH_NCDF_SAVE stores the information contained in an IDL structure into a NetCDF file.";"144";"mgh_ncdf_save.html";"185"
"7049";"MGH_NCDF_FILL";"For a given netCDF variable type, this function returns the default fill value, as specified in netcdf.h";"144";"mgh_ncdf_fill.html";"172"
"7050";"MGH_NCDF_RESTORE";"This function retrieves data from a netCDF file (or sequence thereof) in the form of an IDL structure";"144";"mgh_ncdf_restore.html";"223"
"7048";"MGH_NCDF_ABOUT";"This procedure prints summary information about a netCDF file. It is a wrapper for the MGHncHelper::About method.";"144";"mgh_ncdf_about.html";"168"
"7047";"MGH_NBENCH";"This procedure reads the contents of a file & writes them to another file. Cf. my Python script nbench.";"144";"mgh_nbench.html";"158"
"7046";"MGH_N_RUNS";"This function returns information about the data runs in an array. Runs are defined as contiguous regions of non-zero data. The function returns the number of runs; optional parameters return information about the position & length of...";"144";"mgh_n_runs.html";"221"
"7044";"MGH_N_BYTES";"Return the total number of bytes in data element";"144";"mgh_n_bytes.html";"199"
"7045";"MGH_N_HOLES";"This function returns information about the holes in an array. Holes are defined as contiguous regions of missing data (which are taken as values for which the FINITE function returns 0). The procedure returns the number of holes; opt...";"144";"mgh_n_holes.html";"370"
"7043";"MGH_MOUSE_HANDLER_LIBRARY";"Define classes for mouse-handler objects used to control user interaction with object graphics window objects like MGH_Window. The file mgh_mouse_handler_library.pro is just a handy place to collect class definitions for mouse-handler...";"144";"mgh_mouse_handler_library.html";"187"
"7042";"MGH_MOTLEY";"Initialise the MGH_Motley library EFFECTS: Various session-wide initialisation tasks are carried out: - Message block MGH_MBLK_MOTLEY is loaded. - The MGH_PRINTER function is invoked to create a new system variable, !MGH_PRINTER, hold...";"144";"mgh_motley.html";"196"
"7041";"MGH_MINMAX";"This function returns a 2 element vector containing both the minimum and maximum of an array.";"144";"mgh_minmax.html";"190"
"7040";"MGH_MAXLOC";"This function returns the location of the maximum of an array, as a multi-dimensional subscript.";"144";"mgh_maxloc.html";"215"
"7039";"MGH_MAKE_CT";"This function constructs a colour table by linear interpolation between a set of specified control points";"144";"mgh_make_ct.html";"186"
"7038";"MGH_LOOP";"This routine starts an event-processing loop and sets up a widget interface that allows the user to stop it. It is useful to allow non-blocking widget applications to be used when execution is stopped at a breakpoint.";"144";"mgh_loop.html";"225"
"7036";"MGH_LOCATE2";"This function calculates positions in the 'index space' of a 2D curvilinear grid.";"144";"mgh_locate2.html";"251"
"7037";"MGH_LOCATE2A";"This function calculates positions in the 'index space' of a 2D curvilinear grid.";"144";"mgh_locate2a.html";"210"
"7035";"MGH_LOCATE";"This function calculates translates positions in physical space into the 'index space' of a 1D vector.";"144";"mgh_locate.html";"317"
"7034";"MGH_KERNEL";"This function returns one of several pre-defined kernels for filtering operations.";"144";"mgh_kernel.html";"225"
"7033";"MGH_ISOSURFACE__DEFINE";"This class displays a 3-D numeric array as an iso-surface with an adjustable threshols. OBJECT CREATION CALLING SEQUENCE mgh_new, 'MGH_IsoSurface', values";"144";"mgh_isosurface__define.html";"175"
"7032";"MGH_IS_EVENT";"This function determines whether a variable represents a widget event. It carries out a simple test (see below) on the size and type of the variable. The function has been created and given its name to allow clearer event-handling cod...";"144";"mgh_is_event.html";"174"
"7031";"MGH_IS_CALLBACK";"This function determines whether a variable represents a widget callback, in the sense used elsewhere in my widget code. The function has been created and given its name to allow clearer event-handling code.";"144";"mgh_is_callback.html";"181"
"7030";"MGH_INTERPOLATE";"This function is a wrapper for the standard IDL INTERPOLATE function. It corrects for the anomalous way INTERPOLATE handles locations near the upper end of the input array, described by the IDL documentation as follows: Note - INTERPO...";"144";"mgh_interpolate.html";"202"
"7029";"MGH_INFLATE";"Given an n-dimensional rectangular grid defined by n 1-dimensional arrays, expand one of these arrays into n-dimensions.";"144";"mgh_inflate.html";"182"
"7028";"MGH_IMAGATOR__DEFINE";"This is a subclass of MGH_Atomator specialised for displaying image sequences. OBJECT CREATION CALLING SEQUENCE mgh_new, 'MGH_Imagator'";"144";"mgh_imagator__define.html";"171"
"7027";"MGH_GUI_TESTBED__DEFINE";"A testbed for widget components. Handy for examining events generated by widget components and an example of how to extend MGH_GUI_Base. OBJECT CREATION SEQUENCE: Create an 'MGH_GUI_Testbed' object with a single button. obed = obj_new...";"144";"mgh_gui_testbed__define.html";"252"
"7026";"MGH_GUI_SETTEXT__DEFINE";"This class implements a GUI application for changing a property of a client application. The property value must be a string array.";"144";"mgh_gui_settext__define.html";"159"
"7025";"MGH_GUI_SETLIST__DEFINE";"This class implements a GUI application for selecting an integer value from an enumerated list.";"144";"mgh_gui_setlist__define.html";"207"
"7024";"MGH_GUI_SETARRAY__DEFINE";"This class implements a GUI application for changing a property of a client application. The property value must be a one-dimensional, numeric array with a fixed number of elements.";"144";"mgh_gui_setarray__define.html";"249"
"7023";"MGH_GUI_PROPERTYSHEET__DEFINE";"This class implements a GUI application for setting the properties of an object, using the IDL property-sheet widget";"144";"mgh_gui_propertysheet__define.html";"172"
"7021";"MGH_GUI_PDMENU__DEFINE";"An object that implements pull-down menus.";"144";"mgh_gui_pdmenu__define.html";"191"
"7022";"MGH_GUI_PICKOBJ__DEFINE";"This class implements a widget that allows the user to select from a list of objects.";"144";"mgh_gui_pickobj__define.html";"164"
"7020";"MGH_GUI_PALETTE_EDITOR__DEFINE";"This class implements a widget application incorporating a MGH_CW_PALETTE_EDITOR widget. It is used to edit an Object Graphics palette object. The application can maintain a list of 'clients', which are notified when the palette is ch...";"144";"mgh_gui_palette_editor__define.html";"164"
"7019";"MGH_GUI_LIGHTEDITOR__DEFINE";"This class implements a GUI application with a single CW_LIGHT_EDITOR widget.";"144";"mgh_gui_lighteditor__define.html";"187"
"7018";"MGH_GUI_EXPORT__DEFINE";"This class implements a GUI application for exporting data to another level in the IDL call stack.";"144";"mgh_gui_export__define.html";"164"
"7017";"MGH_GUI_DROPLIST__DEFINE";"An enhanced droplist widget";"144";"mgh_gui_droplist__define.html";"171"
"7015";"MGH_GUI_BASE__DEFINE";"This class encapsulates a base widget as an object.";"144";"mgh_gui_base__define.html";"208"
"7014";"MGH_GRAPH_DEFAULT";"Provide default values for MGHgrGraph properties related to sizing and layout";"144";"mgh_graph_default.html";"180"
"7013";"MGH_GET_PROPERTY";"A user-friendly wrapper for an object's GetProperty method. This routine has function and procedure forms. It therefore needs to be compiled before use using .COMPILE ... or RESOLVE_ROUTINE, /COMPILE_FULL_FILE, ....";"144";"mgh_get_property.html";"234"
"7012";"MGH_GET_CT";"This function reads a colour table file and returns a single colour table in the form of a structure.";"144";"mgh_get_ct.html";"207"
"7011";"MGH_FORMAT_FLOAT";"This function returns a string representation of a floating-point numeric value. It is designed for use in widget applications, where one wants an editable value, with no extraneous digits, that can be converted easily back to numeric...";"144";"mgh_format_float.html";"191"
"7010";"MGH_FLOW";"This is an IDL implementation of the Matlab 'flow' function. It is useful as a test dataset for 3D interpolation and visualisation code. The result of the function is alleged to represent 'the speed profile of a submerged jet within a...";"144";"mgh_flow.html";"548"
"7009";"MGH_FILE_COPY";"This procedure reads the contents of a file & writes them to another file.";"144";"mgh_file_copy.html";"192"
"7008";"MGH_EXAMPLE_WHERE3D";"Object graphics example: graphically illustrate non-missing points in a 3D gridded dataset.";"144";"mgh_example_where3d.html";"175"
"7006";"MGH_EXAMPLE_TXT_RESTORE";"Example code for MGH_TXT_RESTORE funciton.";"144";"mgh_example_txt_restore.html";"186"
"7007";"MGH_EXAMPLE_VOLUME";"Volume visualisation example.";"144";"mgh_example_volume.html";"178"
"7005";"MGH_EXAMPLE_TRIRECT";"Show output from MGH_TRIANGULATE_RECTANGLE function";"144";"mgh_example_trirect.html";"180"
"7004";"MGH_EXAMPLE_TESTBED";"MGH_GUI_Testbed object example. Handy for checking out the behaviour of widgets.";"144";"mgh_example_testbed.html";"186"
"7003";"MGH_EXAMPLE_SURFACE";"Surface plot example.";"144";"mgh_example_surface.html";"186"
"7002";"MGH_EXAMPLE_STRUCT";"This example procedure compares two methods of building up an anonymous structure with a large number of tags. Option 0 calls the MGH_STRUCT_BUILD function, which has been designed for efficiency and robustness when the number of tags...";"144";"mgh_example_struct.html";"214"
"7001";"MGH_EXAMPLE_SCATTER";"3D scatter plot example. For a discussion of the different representations possible for a 3D scatter plot in object graphics see: http://www.sljus.lu.se/stm/IDL/misc/scatter_surface.txt I used this procedure to test relative times for...";"144";"mgh_example_scatter.html";"201"
"7000";"MGH_EXAMPLE_ROI";"What *is* an ROI anyway? And how do I make it line up with an image? In my experience IDL, is disturbingly vague about registration between images and vector elements. The developers obviously assume that you will always deal with ima...";"144";"mgh_example_roi.html";"249"
"6999";"MGH_EXAMPLE_REVERSE_AXIS";"Experimenting with the REVERSE_RANGE keyword for MGHgrAxis objects.";"144";"mgh_example_reverse_axis.html";"168"
"6998";"MGH_EXAMPLE_PLOT";"A simple line plot implemented various ways.";"144";"mgh_example_plot.html";"173"
"6997";"MGH_EXAMPLE_PALETTE";"Generate & display various palettes.";"144";"mgh_example_palette.html";"160"
"6996";"MGH_EXAMPLE_NCSEQUENCE";"MGHncSequence object example";"144";"mgh_example_ncsequence.html";"156"
"6995";"MGH_EXAMPLE_NCSAVE";"Example program that saves an IDL structure as a netCDF file, then restores it.";"144";"mgh_example_ncsave.html";"273"
"6994";"MGH_EXAMPLE_NCFILE";"Example program for creating, copying, reading netCDF files.";"144";"mgh_example_ncfile.html";"232"
"6993";"MGH_EXAMPLE_MSAXIS";"This example demonstrates master-slave relationships between axes, atoms & symbols. The central concept behind the MGHgrGraph class is that the axes in a graph define coordinate conversions, which are then adopted by atoms and symbols...";"144";"mgh_example_msaxis.html";"177"
"6992";"MGH_EXAMPLE_MASK";"A graph with a few lines & text labels illustrating masking (visibility control) by vertical positioning.";"144";"mgh_example_mask.html";"184"
"6990";"MGH_EXAMPLE_LEGEND";"Example of MGHgrLegend object.";"144";"mgh_example_legend.html";"183"
"6991";"MGH_EXAMPLE_LOCATE";"Examples of using the MGH_LOCATE family of functions with INTERPOLATE to interpolate between rectilinear and curvilinear grids.";"144";"mgh_example_locate.html";"188"
"6989";"MGH_EXAMPLE_ISOSURFACE";"Isosurface example You might also like to try the command: mgh_new, 'mgh_isosurface', /EXAMPLE";"144";"mgh_example_isosurface.html";"232"
"6988";"MGH_EXAMPLE_IMAGE_VISIBILITY";"Display an IDLgrImage and check visibility of atoms above & below the viewplane.";"144";"mgh_example_image_visibility.html";"153"
"6987";"MGH_EXAMPLE_IMAGE_SEQUENCE";"Various approaches to animating a sequence of images.";"144";"mgh_example_image_sequence.html";"164"
"6985";"MGH_EXAMPLE_GLAXIS";"Plot one year's data with an axis labelled at the centre of each month using the MGHgrGLaxis class.";"144";"mgh_example_glaxis.html";"177"
"6986";"MGH_EXAMPLE_GRAPH";"An example to demonstrate an MGHgrGraph and its facilities for handling of axes, symbols, fonts and for adding and scaling graphics atoms.";"144";"mgh_example_graph.html";"175"
"6984";"MGH_EXAMPLE_FILE_COPY";"Example of MGH_FILE_COPY routine.";"144";"mgh_example_file_copy.html";"159"
"6983";"MGH_EXAMPLE_DGWINDOW";"Direct-graphics window example. The MGH_DGwindow object can store one or more commands that are re-run as necessary (eg when the window is resized).";"144";"mgh_example_dgwindow.html";"214"
"6981";"MGH_EXAMPLE_DENSITY";"Density plot example. You might also like to try the command: mgh_new, 'mgh_density', /EXAMPLE";"144";"mgh_example_density.html";"186"
"6980";"MGH_EXAMPLE_CONTAINER";"Example code for container classes. Reports time for various operations.";"144";"mgh_example_container.html";"212"
"6978";"MGH_EXAMPLE_COLORPLANE";"Colour plane example.";"144";"mgh_example_colorplane.html";"170"
"6979";"MGH_EXAMPLE_COMPOSITE";"An example of a composite graphics element to confirm that positons are calculated correctly.";"144";"mgh_example_composite.html";"205"
"6977";"MGH_EXAMPLE_BARB";"This procedure presents a series of example graphs using the MGHgrBarb class";"144";"mgh_example_barb.html";"363"
"6976";"MGH_EXAMPLE_ANIMATE";"Object graphics animation example.";"144";"mgh_example_animate.html";"230"
"6975";"MGH_EXAMPLE_2PLOTS";"Object graphics example: 2 line plots side by side.";"144";"mgh_example_2plots.html";"177"
"6974";"MGH_DT_ZONE";"This function returns the local machine's time zone.";"144";"mgh_dt_zone.html";"332"
"6973";"MGH_DT_UNITS";"This function parses 'units' descriptors for date-time data, see http://my.unidata.ucar.edu/content/software/udunits/man.php?udunits+3";"144";"mgh_dt_units.html";"194"
"6971";"MGH_DT_PARSE";"This procedure extracts date & time information from a string in extended ISO 8601 format.";"144";"mgh_dt_parse.html";"200"
"6972";"MGH_DT_STRING";"Given a date-time in Julian-date (numeric) form return a string in ISO 8601 format.";"144";"mgh_dt_string.html";"209"
"6970";"MGH_DT_NOW";"This function returns the current date-time.";"144";"mgh_dt_now.html";"194"
"6969";"MGH_DT_JULDAY";"Given date & time expressed in calendar form (year, month, day, hour, minute, second, time zone), this function returns the Julian date";"144";"mgh_dt_julday.html";"225"
"6968";"MGH_DT_CALDAT";"Like CALDAT but implemented as a function returning a structure. It also has a different argument order and an optional time-zone argument.";"144";"mgh_dt_caldat.html";"267"
"6967";"MGH_DIST";"I use the IDL DIST function a lot for testing 2-D plotting routines, but it irritates me severely that it is not symmetrical. Here's a similar function that is.";"144";"mgh_dist.html";"247"
"6966";"MGH_DIFF";"This function calculates differences between adjacent elements of an array. Currently it works only for 1D arrays and differences them only once. I am thinking about ways to generalise it. MGH_DIFF is similar to the standard IDL funct...";"144";"mgh_diff.html";"310"
"6965";"MGH_DGWINDOW__DEFINE";"This class encapsulates a widget application containing a direct graphics window. The window displays the results of one or more direct-graphics commands, each stored in an MGH_Command object";"144";"mgh_dgwindow__define.html";"172"
"6964";"MGH_DGPLAYER__DEFINE";"A window for displaying & managing direct graphics sequences";"144";"mgh_dgplayer__define.html";"179"
"6963";"MGH_DEST_USQUARE";"For a specified view & destination object, return the physical dimensions of a square on the view plane measuring 1 x 1 normalised coordinates";"144";"mgh_dest_usquare.html";"198"
"6962";"MGH_DEST_POSITION";"Convert from viewplane to destination-object coordinates. For a specified view & destination object, given a position on the viewplane, calculate & return the corresponding position on the destination device.";"144";"mgh_dest_position.html";"207"
"6961";"MGH_DENSITY_MOVIE__DEFINE";"This class displays a 3-D numeric array as a sequence of colour density plots in a window with axes and a colour scale. The class inherits from MGH_Player. OBJECT CREATION SEQUENCE mgh_new, 'MGH_Density_Movie', values";"144";"mgh_density_movie__define.html";"176"
"6960";"MGH_DENSITY__DEFINE";"This class displays a 2-D numeric array as a colour density plot in a window, with axes and a colour scale. The colour scale can be edited interactively. The performance of an MGH_DENSITY object depends on the implementation of the de...";"144";"mgh_density__define.html";"226"
"6959";"MGH_DEBUG__DEFINE";"This class provides the ability to examine the fields in an object's class structure";"144";"mgh_debug__define.html";"181"
"6958";"MGH_DATAMATOR__DEFINE";"A window for displaying & managing picture sequences.";"144";"mgh_datamator__define.html";"201"
"6957";"MGH_CW_PALETTE_EDITOR";"MGH_CW_PALETTE_EDITOR is a compound widget for the modification of color palette vectors.";"144";"mgh_cw_palette_editor.html";"199"
"6956";"MGH_CUSTOM_CT";"Add several custom colour tables to the colour-table file";"144";"mgh_custom_ct.html";"266"
"6955";"MGH_CT_FILE";"This function returns the name of an IDL colour table file.";"144";"mgh_ct_file.html";"195"
"6953";"MGH_CONDUCTOR__DEFINE";"A user interface for synchronised playback of one or more MGH_Player objects.";"144";"mgh_conductor__define.html";"170"
"6954";"MGH_CONTAINER__DEFINE";"An MGH_Container is a slightly enhanced version of an IDL_Container. It can be set up so that the contained objects are not destroyed with it.";"144";"mgh_container__define.html";"213"
"6952";"MGH_COMMAND__DEFINE";"This class encapsulates a command (i.e. a statement, procedure or procedure method) and its arguments.";"144";"mgh_command__define.html";"236"
"6951";"MGH_COLOR";"This function accepts one or more colour specifiers in string form and returns an array containing corresponding RGB colour values. The colour data are specified in a file, mgh_color.dat, which must be in the same directory as the sou...";"144";"mgh_color.html";"211"
"6950";"MGH_BYTSCL";"This function, like the standard IDL BYTSCL routine, converts numeric values to byte values. It is more flexible than BYTSCL in two respects: - It allows one to specify the lower limit of the range of byte values as well as the upper ...";"144";"mgh_bytscl.html";"278"
"6949";"MGH_BPROFILE_MOVIE__DEFINE";"This class displays a pair of 2-D numeric arrays as a sequence of current-barb profiles. The class inherits from MGH_Datamator. Note that the MGHgrBarb object automagically changes its SCALE property when its [X,Y,Z]COORD_CONV propert...";"144";"mgh_bprofile_movie__define.html";"198"
"6948";"MGH_BARB_MOVIE__DEFINE";"This class displays a 3-D numeric array as a sequence of surface plots in a window with axes and a colour scale. The class inherits from MGH_Player. OBJECT CREATION CALLING SEQUENCE mgh_new, 'Mgh_Barb_Movie', Values";"144";"mgh_barb_movie__define.html";"196"
"6946";"MGH_AVI_DLL";"Return the path name of the AVI DLL. It must be in the same directory as the present file.";"144";"mgh_avi_dll.html";"202"
"6947";"MGH_BAND_EDGE";"Given a 2D array as input, return a copy in which there is a band adjacent to the edge with zero gradient normal to the edge";"144";"mgh_band_edge.html";"198"
"6945";"MGH_ATOMATOR__DEFINE";"CLASS: MGH_Atomator";"144";"mgh_atomator__define.html";"170"
"6944";"MGH_ARR_ISHOM";"Determine whether an array is homogeneous along a specified dimension.";"144";"mgh_arr_ishom.html";"231"
"6943";"MGH_ANIMATOR__DEFINE";"This class supports basic animation functionality, common to the MGH_DGplayer, MGH_Player and MGH_Conductor classes.";"144";"mgh_animator__define.html";"338"
"6942";"IMDISP";"Display an image on the current graphics device. IMDISP is an advanced replacement for TV and TVSCL. - Supports WIN, MAC, X, CGM, PCL, PRINTER, PS, Z and METAFILE graphics devices, - Image is automatically byte-scaled (can be disabled...";"144";"imdisp.html";"2798"
"6941";"YSOTAG";"This function tags sources with IR excess based on their colors in Spitzer IRAC bands 1-4. The cut used comes from Megeath et al 2004, ApJS 154:367. Sources are tagged as source 0/I, II, or III/main sequence";"146";"ysotag.html";"232"
"6940";"XYZADV";"This procedure is an extenion of (and a wrapper for) the xyad program in the astronomy user's library. It converts (x,y,z) pixel coordinates to (a,d,v) sky / velocity coordinates for a 3D data cube, based on the fits header.";"146";"xyzadv.html";"288"
"6939";"WRITE_DS9REG";"This procedure writes an array of ds9region structures (defined in the Beaumont IDL library) into a region file that ds9 undertands";"146";"write_ds9reg.html";"270"
"6938";"WRAP";"This function wraps one or more values into the range [0, range). If the values are positive, this function is identical to the mod operator. Any negative values compute to (value mod range) + range.";"146";"wrap.html";"267"
"6937";"WMEAN";"Calculates the weighted mean of a set of measurements.";"146";"wmean.html";"469"
"6936";"VERBIAGE";"This procedure proivdes a mechanism to report messages of various priorities within programs. A message is passed to verbiage, along with the message's priority and the maximum priority to report. If the message priority is equal to o...";"146";"verbiage.html";"305"
"6935";"VECTOR__DEFINE";"These routines define a vector data type. This vector class differs from an array in that it grows as necessary to accomodate new data. This enhancement comes at some expense of convenience: -- The vector carries the baggage associate...";"146";"vector__define.html";"222"
"6934";"UPPERLIM";"This function computes an upper limit for the strength of a signal embedded in a sequence of noisy measurements.";"146";"upperlim.html";"225"
"6933";"UNION";"This function returns the union of two vectors. The union is the set of numbers present in either vector.";"146";"union.html";"297"
"6932";"TVBLINK";"Blink between several images, without having to manually set up the plotting windows.";"146";"tvblink.html";"423"
"6931";"TSUMCUMUL";"This function uses the trapezoidal rule to perform a running integration of tabulated data. It is adapted from the tsum routine in the IDL astronomy user's library, but returns the integral at each point of x, and not just over one la...";"146";"tsumcumul.html";"223"
"6930";"TIME2STRING";"This function converts a time length in seconds to a more readible string version of that number in years, days, minutes, and seconds";"146";"time2string.html";"410"
"6929";"SUMOFSMALLS";"This function calculates the sum of very small numbers in a way that avoids computer underflow errors. This is useful in situations like likelihood maximization, where individual terms in the likelihood can be very small. The progr...";"146";"sumofsmalls.html";"342"
"6928";"STRTRUN";"This function removes the last section from a string";"146";"strtrun.html";"240"
"6927";"STRFLAT";"This function flattens a string array into a scalar string. Each row of the original array is copied into the new string, and separated by newline characters.";"146";"strflat.html";"268"
"6926";"STAMP";"This procedure copies a rectangular subregion of a rectangular array to another one, handling all the crappy edge cases.";"146";"stamp.html";"240"
"6925";"STACK__DEFINE";"This class provides an array-based implementation of a stack. Elements can be added into a stack (a 'push') and retrieved in a last in, first out manner (via 'peek' or 'pop' methods).";"146";"stack__define.html";"270"
"6924";"SMOOTHMAP";"This procuedure creates a smoothed map of some quantity sampled, with uncertainty, at irregualr points across the sky. It uses a gaussian smoothing filter to average nearby data points and improve noise statistics. The algorithm is ta...";"146";"smoothmap.html";"250"
"6923";"SKYMAP_SMOOTH_SIGCLIP";"This procedure is a wrapper to skymap_smooth, which creates a smoothed map of some function sampled at discrete points on the sky. This function implements sigma clipping during the smoothing.";"146";"skymap_smooth_sigclip.html";"218"
"6922";"SKYMAP_SMOOTH";"This procedure creates a smoothed map of some function on the sky, sampled at discrete points. It relies on adxy and gcirc from the IDL astronomy user's library to handle all of the hard spherical geometry stuff.";"146";"skymap_smooth.html";"210"
"6921";"SKY2PIX";"This function translates between 'real' coordinates (eg, ra dec) to pixel coordinates in a fits file. Pixel co-ordinates are given as zero-indexed values (IDL convention) as opposed to 1-indexed (FITS convention). This was designed as...";"146";"sky2pix.html";"243"
"6920";"RESHAPE";"This function is a wrapper to the builtin REFORM procedure. It reforms an array to match the shape of template array.";"146";"reshape.html";"2090"
"6919";"RANK";"This function computes the rank of each element in a data set. By default, The rank 0 element is the smallest element, the rank 1 element is second smallest, etc. If decrease keyword is set, the rank 0 element is the largest element.";"146";"rank.html";"334"
"6918";"RANGE";"Returns the range (max - min) of an array";"146";"range.html";"421"
"6916";"PRICOM__DEFINE";"Projects a given vector onto the vector space defined by the principal compents, and returns the result";"146";"pricom__define.html";"219"
"6917";"PWPL";"This function evaluates, or returns samples drawn at random from, a PieceWise Power Law distribution.";"146";"pwpl.html";"246"
"6915";"POTEN_TREE";"This function computes the potential energy of a mass distribution. It uses a divide and conquer algorithm based on the Barnes-Hut algorithm, and scales as N(log(N)). The poten_slow program is more accurate, but scales as N^2. General...";"146";"poten_tree.html";"247"
"6914";"POTEN_SLOW";"This function computes the potential energy of a mass distribution. It directly sums the interactions between all particles, so it is exact (to within machine precision) but scales as N^2. The poten_tree routine is slightly (1%) less ...";"146";"poten_slow.html";"191"
"6913";"POTEN";"This function calculates the potential energy of a collection of point masses. It is a wrapper to poten_slow and poten_tree, and attempts to call the most efficient program.";"146";"poten.html";"296"
"6912";"POSTAGESTAMP";"This function extracts a subregion from a 2 or 3-dimensional FITS image. It uses a nearest-neighbor regridding scheme.";"146";"postagestamp.html";"259"
"6911";"PLOTVEC";"This procedure creates plots of vector fields. It is a wrapper procedure for PLOT and OPLOT, and accepts all of their keywords";"146";"plotvec.html";"367"
"6910";"PERIMETER";"Compute the perimeter of a polygon defined by a set of x/y points";"146";"perimeter.html";"507"
"6909";"PDIV";"This function estimates the partial derivative of a multi-dimensional function, sampled on a regular grid";"146";"pdiv.html";"296"
"6908";"PARABOLA";"This function finds the unique parabola which fits three xy pairs. The parabola is given by y = p + q * x + r * x^2";"146";"parabola.html";"310"
"6907";"OTREE__DEFINE";"The otree class implements the oct tree data structure, used for calculating the potential energy of a system of point masses. The data structure, and its utility in N body simulations, is discussed by Barnes and Hut 1986 (Nature v324...";"146";"otree__define.html";"236"
"6905";"LINMIN";"A wrapper function used internally to linmin. Feeds a multidimensional function to brent and bracket.";"146";"linmin.html";"276"
"6906";"MULTIMIN";"This function minimizes a multidimensional function based on Powell's conjugate direction method, described in Numerical Recipes 3rd ed., ch 10.7.1. It repeatedly minimizes the function along a given 1D direction, and tries to choose ...";"146";"multimin.html";"229"
"6904";"GOLDENMIN";"This function finds a (local) minimum of a function, given three points which bracket this minimum. The routine is lifted from the routine 'golden' from Numerical Recipes";"146";"goldenmin.html";"364"
"6903";"BRENT";"This function minimizes a function of one variable. The function requires 3 input abscissas which bracket at least one local minimum (see, e.g. bracket.pro) The algorithm is adapted from Numerical Recipes, but is substantially modifie...";"146";"brent.html";"768"
"6902";"BRACKET";"This procedure attempts to bracket the minimum of a one dimensional function. A minimum is bracketed by three points ax, bx, cx, if: 1) bx is between ax and cx 2) f(b) &lt; f(a) and f(b) < f(c) In this situation, provided the function...";"146";"bracket.html";"697"
"6901";"NPC";"This function returns the various ASCII non-printing characters. See the 'non-printing characters' IDL help page for more information.";"146";"npc.html";"229"
"6900";"NICEST__DEFINE";"This class implements the NICEST algorithm to make smoothed extinction maps based on on stellar reddening data. The relevatn equations are (1)A = sum(w_n A_n) / sum(w_n) - beta sum(w_n sigma_n^2) / sum(w_n) (2)beta = alpha * k * ln10 ...";"146";"nicest__define.html";"228"
"6899";"NICER";"This function estimates the amount of reddening a star is seen through, based on its observed colors.";"146";"nicer.html";"318"
"6898";"NEXTAST";"This function returns a structure of astrometry parameters parsed from a FITS header. It is meant to mimic the IDL Astronomy User's Library routine 'EXTAST', but is generalized to handing N-dimensional data files (e.g. spectral data c...";"146";"nextast.html";"499"
"6897";"NEARESTN";"nearestN takes takes a list of source locations and, for a list of test positions, returns the index of the n'th nearest source.";"146";"nearestn.html";"196"
"6896";"NANSWAP";"This procedure swaps out NANs in an array with another value. It can also undo this swapping";"146";"nanswap.html";"235"
"6895";"NANSCALE";"Byte scales numbers so that non-finite values are zero, and finite values map from 1 - 255. Useful for image stretching.";"146";"nanscale.html";"221"
"6894";"MWDENS";"This function returns the number density of stars in the Milky Way, as a function of galactic coordinates. It models a circularly symmetric thin and thick disk. The parameters describing these disks come from Bochanski et al. 2009.";"146";"mwdens.html";"248"
"6893";"MSLIFE";"This function returns the approximate main sequence lifetime as a function of stellar mass. It is valid only for stars &gt;~ 1 Msolar";"146";"mslife.html";"224"
"6892";"MEDABSDEV";"This function returns a data set's median absolute deviation from the median. That is, it returns median( |data - median(data) | ) It is a proxy for the standard deviation, but is more resistent against outliers.";"146";"medabsdev.html";"290"
"6891";"MCMC_MULTI__DEFINE";"mcmc_multi is a subclass of the mcmc class to create markov chain monte carlo simulations on multiple chains simultaneously. One of IDL's principal weaknesses is that, since it is an interpreted scripting language, it is much slower t...";"146";"mcmc_multi__define.html";"545"
"6890";"MCMC__DEFINE";"This class defines an interface for running Markov Chain Monte Carlo simulations. The code is based on the opening chapters of 'Markov Chain Monte Carlo in Practice' by Gilks et al. The code in this file sets up the logic for running ...";"146";"mcmc__define.html";"462"
"6889";"MAP_INIT";"This function creates a blank image and fits header, based on input parameters describing the desired image size and orientation.";"146";"map_init.html";"242"
"6888";"LOOPLISTER__DEFINE";"The loopLister object class provides a standard way to provide status updates during long looping operations. A loopLister object is used as follows: ;- create the object list = obj_new('looplister', numIterations, reportFrequency) fo...";"146";"looplister__define.html";"190"
"6887";"LOGNORMAL_CDF";"Evaluate the cumulative distribution function of a lognormal distribution. The lognormal distribution PDF is defined as P(x) = [sqrt(2 * pi) * sigma * x]^(-1) * exp[ -ln(x / a)^2 / (2 * sigma)^2]";"146";"lognormal_cdf.html";"1317"
"6886";"LINUX2JD";"Convert linux time (the number of seconds since UTC Jan 1 1970) to julian date (the number of days since Jan 1 4713 BC).";"146";"linux2jd.html";"323"
"6885";"KDISTERR";"This function calculates the two kinematic distances, with errors, for a given object whose velocity is known to some precision.";"146";"kdisterr.html";"273"
"6884";"KDIST";"This function calculates the near and far kinematic distances for a given galactic longitude and radial velocity. The calculation uses the Galactic rotaion model of Brand and Blitz 1993, A&A, 275 : 67.";"146";"kdist.html";"387"
"6882";"IS_INTEGER";"This function tests whether a variable's data type is one of the integers (byte, short, long, etc).";"146";"is_integer.html";"429"
"6883";"ISNUMERIC";"This function determines whether a variable corresponds to a numeric data type.";"146";"isnumeric.html";"454"
"6881";"INDICES";"This procedure creates coordinate arrays for each dimension in an input array. The coordinate arrays have the same shape as the input, and the i'th pixel in those arrays denote that dimension's coordinate value at the i'th location in...";"146";"indices.html";"362"
"6880";"HH_DECOMP";"This procedure computes the Helmholz decomposition of a 3D vector field into its divergence and curl free components.";"146";"hh_decomp.html";"254"
"6879";"GMEAN";"This function computes the geometric mean of a set of numbers. The geometric mean is defined as mean = (x1 * x2 * ... * xn)^(1/n). This procedure works with the logarithms of x, which prevents overflow/underflow issues when working wi...";"146";"gmean.html";"404"
"6878";"GCROT";"This function computes, as a function of galactic coordinates, the angle between a vector pointing towards the galactic north pole and a vector pointing towards the North Celestial Pole. This can be used to orient images aligned to ec...";"146";"gcrot.html";"218"
"6876";"EXTAST3__DEFINE";;"146";"extast3__define.html";"202"
"6877";"FFT_KIND";"This procedure calculates the vector wavenumber at each pixel in an n-dim fft array. It's like indices.pro, except that the k's are normalized and shifted correctly to match the default structure of IDL's FFT command.";"146";"fft_kind.html";"299"
"6875";"EXTAST3";"This program is a wrapper procedure to the extast routine in the IDL astronomy user's library. extast3 is designed to handle data cubes, which extast cannot handle. This procedure is used by sky2pix to convert between sky and pixel co...";"146";"extast3.html";"342"
"6874";"EDF_STATS";"This function calculates a variety of statistics to characterize the discrepancy between 1D data and a model for the distribution from which the data were drawn. Each statistic is based on the empirical distribution function (i.e. the...";"146";"edf_stats.html";"1011"
"6872";"DS9REG__DEFINE";"Defines a simple IDL structure to represent a DS9-style region description. Used in conjunction with write_ds9reg";"146";"ds9reg__define.html";"442"
"6871";"DIV";"This function calculates the divergence of a 1, 2, or 3-dimensional vector function sampled on a uniform grid.";"146";"div.html";"1578"
"6870";"PL_LIKE";"This function calculates the log-likelihood of the data, under a powerlaw model. The powerlaw distribution is given by f(x) = (alpha - 1) (xmin)^(alpha - 1) x^(-alpha)";"146";"pl_like.html";"211"
"6869";"LN_LIKE";"This function calculates the log-likelihood of the data, under a lognormal model. This distribution is given by f(x) = C * 1 / x * exp(-(ln(x) - mu)^2 / sigma^2) C = sqrt(2) / (sigma sqrt(pi)) / erfc( (ln(xmin) - mu) / sqrt(2 sigma) )...";"146";"ln_like.html";"308"
"6868";"LIKELIHOOD__DEFINE";"This is an abstract class for objects dealing with likelihoods. LIKELIHOOD objects are a subset of DISTRIBUTION objects that specifically deal with data.";"146";"likelihood__define.html";"207"
"6867";"GAUSS_LIKE__DEFINE";"This class implements the Likelihood abstract class to compute likelihoods using a 1D gaussian as the model distribution.";"146";"gauss_like__define.html";"169"
"6865";"DETECTOUTLIER";"Plot which objects were flagged as outliers from detectoutlier.";"146";"detectoutlier.html";"275"
"6866";"DISTRIBUTION__DEFINE";"The distribution class is an interface for objects dealing with probability distributions.";"146";"distribution__define.html";"325"
"6864";"DENSITYMAP";"This procedure creates a smoothed map of the suface density of objects on the sky or in a plane.";"146";"densitymap.html";"451"
"6863";"CURL";"This procedure computes the curl of a 3d vector field sampled on a uniform grid.";"146";"curl.html";"3085"
"6862";"CNB_VOIGT";"This function computes centered Voigt profiles. It is a wrapper to the builtin IDL VOIGT routine, which uses a somewhat confusing variable convention. The Voigt function implemented here is a stright convolution of a Gaussian with a L...";"146";"cnb_voigt.html";"794"
"6861";"CNB_PCA";"This procedure calculates the principal components of a dataset. Many IDL routines do this, but I don't really understand their idiosyncrasies. In particular, the builtin PCOMP has weird outputs, and chokes whin n_dim &gt;> 1, n_dim &...";"146";"cnb_pca.html";"362"
"6860";"CNB_IMF";"This function both evaluates the IMF at given mass, and returns masses drawn at random from the IMF. The functional form of the IMF is given by dN/dM ~ M^-alpha, where alpha = 0 for 0 &lt; M / Msolar < .07 (Allen et al 2005) = 1.05 fo...";"146";"cnb_imf.html";"420"
"6859";"CNB_COVAR";"This function computes the covariance matrix for a set of multidimensional data. It optionally returns the principal axes, of the distribution, along with the variance along each principal axis. The principal axes and variances descri...";"146";"cnb_covar.html";"369"
"6858";"CAUCHY";"This function returns the probability density function of a Cauchy distribution, with median mu and width gamma, evaluated at x.";"146";"cauchy.html";"630"
"6857";"BORDER_INDICES";"This function calculates and returns the (1D) indices corresponding to the borders of an array. These indices can be conerted back into n_dimensional indices via array_indices.";"146";"border_indices.html";"314"
"6856";"BLACKBODY";"This function calculates the Planck function I_nu or I_lambda. I_nu = 2h nu^3 c^-2 ( exp(h nu / kT) -1)^-1 I_lambda = 2h c^2 lambda^-5 (exp ( hc / lambda kt) -1)^-1";"146";"blackbody.html";"370"
"6855";"ASSERT";"This procedure is a simple routine to check assumptions during programming. If, at any time, an assertion fails to be true, the program halts with an error message.";"146";"assert.html";"2022"
"6854";"ARRGEN";"This function is similar to (and an extension of) built-in functions like indgen, findgen, etc. It creates an array given the first element, last element, and step size. It can create arrays which increase/decrease by constant amounts...";"146";"arrgen.html";"437"
"6853";"ARR_EQ";"This function compares 2 arrays, and returns 1 if all of their values are equal.";"146";"arr_eq.html";"307"
"6852";"APPEND";"This function appends a second array to a first one. It's only real convenience is that it handles the case when the first array is undefined.";"146";"append.html";"943"
"6851";"APCON";"This function returns the values of many different constants used in astrophysics.";"146";"apcon.html";"447"
"6850";"ANNEAL__DEFINE";"The anneal class performs simulated annealing to maximize a fitness function. This is a little different than normal, where annealing minimizes a penalty (or energy) function. Simulated annealing maximizes a function by taking random ...";"146";"anneal__define.html";"401"
"6849";"ADVXYZ";"This procedure converts from (a,d,v) sky coordinates to (x,y,z) pixel coordinates in a data cube. It is a wrapper to ad2xy in the IDL Astronomy User's Library, which does not handle 3D data.";"146";"advxyz.html";"380"
"6848";"ZERO_CROSS";"This function returns the number of zero crossings in a given time 	series.";"145";"zero_cross.html";"742"
"6847";"WRITTEN_NUMBER";"This function returns the written form of the input number.";"145";"written_number.html";"185"
"6846";"W_OPEN";"This procedure opens a new plotting window.";"145";"w_open.html";"234"
"6845";"W_CLOSE";"This procedure closes an existing plotting window.";"145";"w_close.html";"249"
"6843";"UNWRAP";"This function unwraps angular time series such that is it continuous.";"145";"unwrap.html";"853"
"6844";"VAR_TYPE";"This function returns the IDL code of the variable type.";"145";"var_type.html";"434"
"6842";"TWO_AXES";"Demonstrates how to make a plot with two different y-axes.";"145";"two_axes.html";"202"
"6840";"TREND";"This function calculates the least-squares linear trend in the	input vector.";"145";"trend.html";"2306"
"6841";"TRUECOL_ROTATE";"This a wrapper for the rotate function. Rotate doesn't like arrays from true colour images.";"145";"truecol_rotate.html";"279"
"6839";"TIFF_WRITE";"Write out the contents of the currently active window as a .tiff file. If TIFF_START is called before the graphics are generated the current device will be the z-buffer.";"145";"tiff_write.html";"253"
"6838";"TIFF_START";"Prepare IDL to create a .tiff file using the z-buffer device.";"145";"tiff_start.html";"213"
"6837";"TEK_COLOR_SPECTRUM";"This function returns colour indices that make a spectrum out of the 	TEK_COLOR colours.";"145";"tek_color_spectrum.html";"386"
"6835";"STRMERGE";"Merge two string arrays.";"145";"strmerge.html";"348"
"6836";"TEE";"Mimics the Unix tee command allowing output to go to the terminal and to a file.";"145";"tee.html";"273"
"6834";"STRING_FROM_VECTOR";"This function converts a vector to a single string containing	the vector's entries separated by commas.";"145";"string_from_vector.html";"214"
"6833";"STR";"This function converts an integer or floating point number to a string.";"145";"str.html";"626"
"6832";"STANDARD_ATM";"This function calculates the pressure at a given altitude in the	troposphere, assuming a uniform, dry atmosphere.";"145";"standard_atm.html";"179"
"6831";"SREAD";"This function extracts column delimited data (whitespace between columns) of data from a file and loads it into an string array.";"145";"sread.html";"475"
"6830";"SLICE";"Slice a two dimensional array out of a three dimensional array.";"145";"slice.html";"265"
"6829";"SHUFFLE";"This function shuffles the values in an array.";"145";"shuffle.html";"1494"
"6828";"SET_EDGE";"Fill the boundary of a two dimensional array with a value.";"145";"set_edge.html";"176"
"6826";"SAMPLE_PDF";"This function randomly samples a given probability density function.";"145";"sample_pdf.html";"264"
"6827";"SEASON_NAME";"This function returns the initials of the months contained in a given season.";"145";"season_name.html";"180"
"6825";"REAL";"This function returns the real component of a complex number.";"145";"real.html";"404"
"6823";"PS_OPEN";"This procedure opens a postscript file for plotting output.";"145";"ps_open.html";"1021"
"11459";"LOAD_BASIC_COLORS_KPB";"Load a set of 32 basic colors in the color table.";"151";"load_basic_colors_kpb.html";"69"
"11460";"MAP_IMAGE_KPB";"This is a wrapper function for MAP_IMAGE. It adds the NAN keyword to MAP_IMAGE to handle data with NANs.";"151";"map_image_kpb.html";"36"
"6821";"PROCESS_LONLATMONTH";"This procedure returns a processed version of the input lon-lat-month data set. Processing includes lon-lat interpolation masking, taking anomalies, and taking averages.";"145";"process_lonlatmonth.html";"244"
"6822";"PS_CLOSE";"This procedure closes a postscript file for plotting output.";"145";"ps_close.html";"218"
"6820";"PRINTP";"Print text to the terminal and suppress the carriage return at the end of the line. This allows more characters to be added to the same line.";"145";"printp.html";"509"
"6818";"PORTRAIT";"This procedure sets the plotting output to portrait orientation.";"145";"portrait.html";"268"
"6819";"POTEM";"Compute the potential temperature of a parcel of seawater at a reference pressure using the Bryden 1973 polynomial for adiabatic lapse rate and Runge=Kutta 4th order integration algorithm.";"145";"potem.html";"332"
"6817";"PNG_WRITE";"Write out the contents of the currently active window as a .png file. If PNG_START is called before the graphics are generated the current device will be the z-buffer.";"145";"png_write.html";"335"
"6816";"PNG_START";"Prepare IDL to create a .png file using the z-buffer device.";"145";"png_start.html";"283"
"6814";"PIE";"This procedure plots a pie chart.";"145";"pie.html";"1212"
"6815";"PLUS";"This function returns 1 if the input is positive, 0 otherwise.";"145";"plus.html";"245"
"6812";"PDF";"This procedure estimates the one or two dimensional probability density function of a given data set.";"145";"pdf.html";"582"
"6813";"PDF_TO_CDF";"This function estimates a cumulative distribution function from a given probability density function.";"145";"pdf_to_cdf.html";"242"
"6811";"PATHTO";"Find a file in the $IDL_PATH search tree.";"145";"pathto.html";"278"
"6810";"PARTIAL_FACTORIAL";"This function calculates the partial factorial n!/(n-m)!.";"145";"partial_factorial.html";"171"
"6809";"OUTLINE_REGIONS";"Draw a line around regions on a contour plot.";"145";"outline_regions.html";"205"
"6808";"ODD";"This function returns 1 if the input is odd, 0 otherwise.";"145";"odd.html";"442"
"6806";"NEAREST_INDEX";"Search for the index of the value nearest to x in the vector mx.";"145";"nearest_index.html";"206"
"6807";"NONUNIQ";"Return the subscripts of the non-unique elements in an array.	Note that repeated elements must be adjacent in order to be	found. This routine is intended to be used with the SORT	function. See the discussion of the IDX argument below....";"145";"nonuniq.html";"280"
"6805";"NCDF_FILEINQ";"Print a table of the contents of an ncdf file to the terminal and/or save the structure of the file in a structure!";"145";"ncdf_fileinq.html";"325"
"6803";"MONTH_NUM";"This function returns the month number given the name.";"145";"month_num.html";"250"
"6804";"MONTHS_TO_SEASONS";"This function extracts seasonal data from monthly data.";"145";"months_to_seasons.html";"487"
"6802";"MONTH_NAME";"This function returns the name of the desired calendar month.";"145";"month_name.html";"2"
"6801";"MONTH_DAY";"This function returns the first and last days of the month.";"145";"month_day.html";"248"
"6800";"MONTE_CARLO_AR1";"This function returns a Monte Carlo generated time series which 	preserves the distributional and AR(1) properties of the original 	series.";"145";"monte_carlo_ar1.html";"279"
"6799";"MASK_LONLATTIME";"This procedure returns a version of the input lon-lat-time data set Data which has been interpolated to the grid of Mask and/or masked according to Mask.";"145";"mask_lonlattime.html";"247"
"6797";"LINE_LEGEND";"This procedure plots a legend for line plots.";"145";"line_legend.html";"1286"
"6798";"MASK_LONLATMONTH";"This procedure returns a version of the input lon-lat-month data set 	Data which has been masked according to Mask and other selected 	criteria. It will also do some area and time averaging.";"145";"mask_lonlatmonth.html";"268"
"6795";"LANDSCAPE";"This procedure sets the plotting output to landscape orientation.";"145";"landscape.html";"253"
"6796";"LENGTH";"Find the length of a vector (or the longest dimension of an array).";"145";"length.html";"767"
"6794";"LAND_MASK";"This function creates and returns a global gridded land mask of	the desired resolution.";"145";"land_mask.html";"710"
"6792";"IPCC_REGIONS";"This function returns the coordinates of the boxes defining the 	requested geographical regions selected for use in the IPCC AR4 of WG1.";"145";"ipcc_regions.html";"259"
"6793";"ISIN";"This function will tell you whether or not a token is contained in an array.";"145";"isin.html";"318"
"6790";"IMAG";"This function returns the imaginary component of a complex number.";"145";"imag.html";"213"
"6791";"INTERVAL_CALC";"This function calculates a convenient maximum value for a data	set.";"145";"interval_calc.html";"245"
"6789";"IDL_LIB_HTML";"This procedure creates the web page listing of a library's IDL utilities.";"145";"idl_lib_html.html";"325"
"6788";"HMAN";"Play the 'Hangman' word guessing game. Each time you issue the hman command a single game is played (guess one word).";"145";"hman.html";"224"
"6787";"HILBERT_SPEC";"This function estimates the Hilbert-Huang amplitude spectrum of an 	input matrix of time series (e.g. intrinsic mode functions).";"145";"hilbert_spec.html";"896"
"6786";"GEO_MID";"This function returns the coordinates of the geographical point	midway between the two input points.";"145";"geo_mid.html";"261"
"6785";"GEO_DIST";"This function returns the great circle distance (in km) between	two geographical points.";"145";"geo_dist.html";"627"
"6784";"FIRST_DIGIT";"This function returns the first significant digit.";"145";"first_digit.html";"236"
"6783";"FIRST_DIFF";"This function returns the first difference vector of the input.";"145";"first_diff.html";"280"
"6780";"FILTER";"This function returns a smoothed version of the input vector.";"145";"filter.html";"1653"
"6781";"FILTER_ND";"This function returns a smoothed version of an N-dimensional input 	array.";"145";"filter_nd.html";"278"
"6782";"FILTER_WINDOW";"This function returns a desired filter window of desired width.";"145";"filter_window.html";"247"
"6779";"FILL_REGIONS";"Fill regions with a colour on a plot of data from the UVic Climate Model.";"145";"fill_regions.html";"238"
"6778";"FACTORS";"This function calculates the prime factors of natural number.";"145";"factors.html";"226"
"6777";"EXTREMA";"This function returns the locations of the local extrema in a 	given time series.";"145";"extrema.html";"2716"
"6775";"EXPAND_TABS";"Replace tab characters in a text string with spaces.";"145";"expand_tabs.html";"202"
"6776";"EXTRACT_REGION";"This function extracts regional data from a [longitude,latitude,time] data file.";"145";"extract_region.html";"324"
"6774";"ERROR_BARS";"This procedure plots error bars over plotted data.";"145";"error_bars.html";"728"
"6773";"EMD";"This function estimates the empirical mode decomposition of a given 	data vector.";"145";"emd.html";"6957"
"6772";"DIMENSION";"This function returns the dimension of an array. It returns 0	if the input variable is scalar.";"145";"dimension.html";"702"
"6771";"DECIMAL_PLACE";"This function returns the decimal place of the first significant	digit.";"145";"decimal_place.html";"491"
"6770";"CW_BGROUP_MOD";"CW_BGROUP_MOD is a modification of CW_BGROUP that allows for turning off all of the buttons in the group.";"145";"cw_bgroup_mod.html";"262"
"6769";"CW_BGROUP2";"Provides a radio-like button group which allows you to select any two buttons.";"145";"cw_bgroup2.html";"244"
"6768";"CW_BGRID";"CW_BGRID is a compound widget that implements a multi-column cw_bgroup widget.";"145";"cw_bgrid.html";"259"
"6766";"CROSS_SPEC";"This function estimates the power cross-spectrum of two vectors.";"145";"cross_spec.html";"972"
"6767";"CW_AXIS_SELECT";"This compound widget provides an interface for selecting points along multiple axes. It was written to be used as an aid for the analysis of gridded data.";"145";"cw_axis_select.html";"300"
"6765";"CORRECT_DATE";"This function returns a corrected version of the input date, when the days are out of the range for the month.";"145";"correct_date.html";"398"
"6764";"CONTOUR_WORLD";"This procedure draws a colour contour of a data field over a world map.";"145";"contour_world.html";"435"
"6762";"CONSTANTS";"This procedure returns the values of some absolute constants.";"145";"constants.html";"3389"
"6763";"CONTOUR_LEGEND";"This procedure plots a legend for colour-contour plots.";"145";"contour_legend.html";"553"
"6761";"CLS";"This procedure clears the IDL terminal window.";"145";"cls.html";"478"
"6758";"CHOOSE_LEVELS";"This function chooses convenient values for contour levels.";"145";"choose_levels.html";"535"
"6759";"CIRCLE";"This function returns the x- and y- coordinates of a circle.";"145";"circle.html";"637"
"6760";"CLEAR";"This procedure clears the active IDL display window.";"145";"clear.html";"645"
"6756";"BULLET_LEGEND";"This procedure plots a legend for bullet plots.";"145";"bullet_legend.html";"280"
"6757";"BULLET_PLOT";"This procedure draws bullet plots with bullets whose sizes are	scaled to values in an input vector.";"145";"bullet_plot.html";"644"
"6754";"BOX";"This procedure draws a rectangular box on the screen.";"145";"box.html";"444"
"6755";"BREAKLINE";"This function breaks a line of text into pieces less than or equal to a maximum length. Text is broken on whitespace.";"145";"breakline.html";"298"
"6752";"B_PLOT";"This procedure contours a data by drawing each element of an array as a rectangular box.";"145";"b_plot.html";"314"
"6753";"BAR_GRAPH";"This procedure plots bar graphs.";"145";"bar_graph.html";"475"
"6750";"ADD_DIM";"This function returns an array with extra dimensions added, filled with copies of the original array.";"145";"add_dim.html";"516"
"6751";"ARRAY_TOTAL";"This function does more flexible array integration than IDL's total.";"145";"array_total.html";"621"
"6742";"SUBCELLARRAY";"Returns a set of subcells, suitable for creating a matrix of plots.";"143";"subcellarray.html";"206"
"6743";"TAGSIZE";"Compute SIZE descriptors for each tag in a structure";"143";"tagsize.html";"245"
"6744";"TAI_UTC";"Compute (TAI - UTC) time difference (i.e., leap seconds)";"143";"tai_utc.html";"1245"
"6741";"SUBCELL";"Finds the position of a subwindow within a reference window.";"143";"subcell.html";"220"
"6740";"STATUSLINE";"Maintain a one-line status line on a VT100-compatible terminal. (Unix)";"143";"statusline.html";"317"
"6739";"SRVDOPP";"Compute relativistic doppler shift (arbitrary velocity & photon dir.)";"143";"srvdopp.html";"252"
"6738";"SRVADD";"Add velocity 3-vectors according to special relativity";"143";"srvadd.html";"228"
"6737";"SETFITPARM";"Provide a widget interface for creating a parinfo structure. This parinfo structure can by used by mpfit routines of Craig B. Markwardt.";"143";"setfitparm.html";"217"
"6736";"ROUTINE_NAMES";"Examine variables and parameters of procedures and call stack (OBSOLETE)";"143";"routine_names.html";"403"
"6735";"RELPATH";"Construct a relative path between two absolute paths";"143";"relpath.html";"452"
"6734";"QUINTERP";"Quintic spline interpolation from tabulated first and second derivatives";"143";"quinterp.html";"335"
"6733";"QTVROT";"Apply quaternion rotation to a 3-vector";"143";"qtvrot.html";"299"
"6732";"QTPOW";"Raise quaternion Q to the 'power' POW";"143";"qtpow.html";"447"
"6730";"QTMULT";"Multiply quaternions";"143";"qtmult.html";"317"
"6731";"QTMULTN";"Multiply several quaternions";"143";"qtmultn.html";"296"
"6729";"QTMAT";"Find direction cosine matrix from quaternion(s)";"143";"qtmat.html";"277"
"6727";"QTINV";"Compute inverse of QUATERNION";"143";"qtinv.html";"214"
"6728";"QTLOG";"Compute 'logarithm' of a unit quaternion";"143";"qtlog.html";"342"
"6726";"QTFIND";"Find quaternion(s) from direction cosine matrix";"143";"qtfind.html";"330"
"6725";"QTEXP";"Compute 'exponentiation' of a non-unit quaternion";"143";"qtexp.html";"277"
"6724";"QTEULER";"Compose a series of euler-type rotations into a single quaternion";"143";"qteuler.html";"234"
"6723";"QTERP";"Smoothly interpolate from a grid of quaternions (spline or slerp)";"143";"qterp.html";"287"
"6722";"QTCOMPOSE";"Convert a rotation angle and axis into quaternion";"143";"qtcompose.html";"520"
"6721";"QTAXIS";"Find rotation axis of unit quaternion";"143";"qtaxis.html";"220"
"6720";"QTANG";"Find rotation angle(s) of unit quaternion";"143";"qtang.html";"353"
"6719";"QRSOLV";"Solve a linear equation after performing QR factorization";"143";"qrsolv.html";"452"
"6718";"QRFAC";"Perform QR decomposition of a rectangular matrix";"143";"qrfac.html";"426"
"6717";"QPINT1D";"One dimensional numerical integration of IDL function or expression";"143";"qpint1d.html";"1124"
"6716";"PXPERFECT";"Postscript device settings for 'pixel perfect' matching to screen plot layout";"143";"pxperfect.html";"350"
"6715";"PS_FORM";"This function puts up a form the user can configure a PostScript device driver. The function result (if the user selects either the ACCEPT or CREATE FILE buttons) can be sent directly to the DEVICE procedure by means of its _Extra key...";"143";"ps_form.html";"1349"
"6714";"PROREND";"Render a PRODIS abstract syntax tree into IDL Language Text";"143";"prorend.html";"363"
"6713";"PROFREE";"Free the pointers associated with an PRODIS abstract syntax tree";"143";"profree.html";"356"
"6712";"PRINTLOG";"Captures transcript of console output";"143";"printlog.html";"500"
"6711";"PLOTPAN";"Same as PLOT command, but respects PANEL and SUBPANEL";"143";"plotpan.html";"321"
"6710";"PLOTIMAGE";"Displays an image via a 'PLOT'-like interface.";"143";"plotimage.html";"1045"
"6709";"PLOTCUBE";"Plots a three dimensional data that can be printed and made into a cube";"143";"plotcube.html";"253"
"6708";"PLOTCOLORFILL";"Plots colorful bar charts";"143";"plotcolorfill.html";"272"
"6706";"PHUNWRAP";"Unwrap phase jumps to recover cycle counts";"143";"phunwrap.html";"670"
"6707";"PLOTBIN";"Makes a plot in a histogram style.";"143";"plotbin.html";"345"
"6705";"OPLOTIMAGE";"Overlays an image on an existing plot.";"143";"oplotimage.html";"334"
"6704";"OPLOTBIN";"Overlays a plot in histogram style on the current graphics viewport.";"143";"oplotbin.html";"273"
"6703";"NORMPATH";"Construct an absolute file/directory path from a relative path";"143";"normpath.html";"475"
"6701";"MPPROPERR";"Propagate fitted model uncertainties to measured data points";"143";"mpproperr.html";"286"
"6702";"MULTISORT";"Perform a sorting operation with multiple sort keys";"143";"multisort.html";"722"
"6700";"MPNORMTEST";"Compute the probability of a given normally distributed Z value";"143";"mpnormtest.html";"251"
"6697";"MPFITPEAK";"Fit a gaussian, lorentzian or Moffat model to data";"143";"mpfitpeak.html";"2402"
"6698";"MPFTEST";"Compute the probability of a given F value";"143";"mpftest.html";"743"
"6699";"MPNORMLIM";"Compute confidence limits for normally distributed variable";"143";"mpnormlim.html";"302"
"6696";"MPFITFUN";"Perform Levenberg-Marquardt least-squares fit to IDL function";"143";"mpfitfun.html";"2025"
"6695";"MPFITEXPR";"Perform Levenberg-Marquardt least-squares fit to arbitrary expression";"143";"mpfitexpr.html";"1834"
"6694";"MPFITELLIPSE";"Approximate fit to points forming an ellipse";"143";"mpfitellipse.html";"3394"
"6693";"MPFIT2DPEAK";"Fit a gaussian, lorentzian or Moffat model to data";"143";"mpfit2dpeak.html";"1965"
"6692";"MPFIT2DFUN";"Perform Levenberg-Marquardt least-squares fit to a 2-D IDL function";"143";"mpfit2dfun.html";"513"
"6691";"MPFIT";"Perform Levenberg-Marquardt least-squares minimization (MINPACK-1)";"143";"mpfit.html";"8341"
"6690";"MPCURVEFIT";"Perform Levenberg-Marquardt least-squares fit (replaces CURVEFIT)";"143";"mpcurvefit.html";"1074"
"6689";"MPCHITEST";"Compute the probability of a given chi-squared value";"143";"mpchitest.html";"951"
"6688";"MPCHILIM";"Compute confidence limits for chi-square statistic";"143";"mpchilim.html";"490"
"6687";"MCHOLDC";"Modified Cholesky Factorization of a Symmetric Matrix";"143";"mcholdc.html";"365"
"6686";"MASK2GTI";"Convert a gridded set of times to a set of Good Time Intervals (GTIs)";"143";"mask2gti.html";"248"
"6685";"LITMSOL2";"Solve the light-time equation between two moving bodies";"143";"litmsol2.html";"286"
"6684";"LITMSOL";"Solve the light-time equation between two moving bodies";"143";"litmsol.html";"297"
"6683";"LINFITEX";"Model function for fitting line with errors in X and Y";"143";"linfitex.html";"400"
"6682";"LEGCHEB";"Compute Legendre polynomial coefficents from Chebyshev coefficients";"143";"legcheb.html";"267"
"6681";"JPLEPHMAKE";"Make a new ephemeris suitable for interpolation by JPLEPHINTERP";"143";"jplephmake.html";"264"
"6680";"JBEPOCH";"Compute Julian Day to/from Julian or Besselian Epoch";"143";"jbepoch.html";"313"
"6679";"INPUTFORM";"Generates expression string from an IDL value";"143";"inputform.html";"372"
"6678";"HPRSTATN";"Compute high precision earth station positions in inertial coordinates";"143";"hprstatn.html";"289"
"6677";"HPRNUTANG";"Compute high precision earth precession, nutation and orientation angles";"143";"hprnutang.html";"381"
"6676";"HELPFORM";"Generate a descriptive string in IDL HELP format";"143";"helpform.html";"316"
"6675";"HASHTABLE__DEFINE";"A hash table class which associates key strings with arbitrary values";"143";"hashtable__define.html";"413"
"6674";"GTIWHERE";"Locate a list of times within a Good Time Interval (GTI) array";"143";"gtiwhere.html";"311"
"6673";"GTITRIM";"Normalize a Good Time Interval (GTI) - no overlapping and adjoining";"143";"gtitrim.html";"242"
"6672";"GTISEG";"Convert a list of times to a set of Good Time Intervals (GTIs)";"143";"gtiseg.html";"299"
"6671";"GTIMERGE";"Merge two Good Time Interval (GTIs) arrays into a single array";"143";"gtimerge.html";"319"
"6670";"GTIENLARGE";"Enlarge (or shrink) each Good Time Interval (GTI) by fixed amounts";"143";"gtienlarge.html";"226"
"6668";"GEOGREAD";"Read gravity model from disk file";"143";"geogread.html";"254"
"6669";"GTI2MASK";"Convert Good Time Interval (GTI) to evenly sampled mask array";"143";"gti2mask.html";"214"
"6667";"GEOGRAV";"Estimate gravitational potential and acceleration by harmonic expansion";"143";"geograv.html";"462"
"6665";"GAUSS1P";"Compute Gaussian curve given the mean, sigma and area (procedure).";"143";"gauss1p.html";"269"
"6666";"GAUSS2";"Compute Gaussian curve given the mean, sigma and area.";"143";"gauss2.html";"268"
"6664";"GAUSS1";"Compute Gaussian curve given the mean, sigma and area.";"143";"gauss1.html";"1482"
"6663";"GAPNAN";"Insert NANs in time series gaps to facilitate plotting";"143";"gapnan.html";"325"
"6661";"FXPREAD";"Internal routine to read from a Unix pipe.";"143";"fxpread.html";"240"
"6662";"FXPSEEK";"Internal routine to perform seek on a Unix Pipe.";"143";"fxpseek.html";"208"
"6660";"FXPOPENR";"Internal routine to open a Unix pipe command for read access.";"143";"fxpopenr.html";"191"
"6659";"FXPCLOSE";"Internal routine to close a pipe file.";"143";"fxpclose.html";"273"
"6658";"FXPBUFFR";"Internal routine to read data from the pipe and store it in a cache file.";"143";"fxpbuffr.html";"197"
"6657";"FXMAKEMAP";"Change configuration of FXG - FXFILTER'ed behavior";"143";"fxmakemap.html";"200"
"6656";"FXGWRITE";"Perform an unformatted write to a generic resource.";"143";"fxgwrite.html";"197"
"6655";"FXGSEEK";"Perform a seek operation on a generic resource.";"143";"fxgseek.html";"233"
"6653";"FXGOPEN";"Open generic resource as a seekable file.";"143";"fxgopen.html";"244"
"6654";"FXGREAD";"Perform an unformatted read on a generic resource.";"143";"fxgread.html";"218"
"6652";"FXGFILTERED";"Determine if a unit has been opened by FXGOPEN.";"143";"fxgfiltered.html";"196"
"6651";"FXGCLOSE";"Closes a generic resource";"143";"fxgclose.html";"255"
"6650";"FLORMAT";"Format a string with named format variables";"143";"flormat.html";"386"
"6649";"FILE_COMPILE";"Compile an arbitrary procedure";"143";"file_compile.html";"376"
"6648";"EOPDATA";"Read and interpolate tabulated earth orientation parameters";"143";"eopdata.html";"345"
"6646";"DXSET";"Sets IDL variable in a different IDL call level";"143";"dxset.html";"464"
"6647";"DXUP";"Move the debugging focus higher up the IDL call stack";"143";"dxup.html";"330"
"6645";"DXPTRACE";"Parse the current call stack (INTERNAL)";"143";"dxptrace.html";"192"
"6644";"DXPRINT";"Perform HELP equivalent at any point in IDL call stack";"143";"dxprint.html";"257"
"6643";"DXPLEVEL";"Print the current call stack (INTERNAL)";"143";"dxplevel.html";"189"
"6642";"DXLRESET";"Reset the current debugging focus level (INTERNAL)";"143";"dxlreset.html";"168"
"6640";"DXGET";"Gets IDL variable from a different IDL call level";"143";"dxget.html";"287"
"6641";"DXHELP";"Perform HELP equivalent at any point in IDL call stack";"143";"dxhelp.html";"252"
"6639";"DXFINISH";"Sets an IDL breakpoint to stop upon return of the current procedure";"143";"dxfinish.html";"190"
"6638";"DXDOWN";"Move the debugging focus deeper down the IDL call stack";"143";"dxdown.html";"312"
"6637";"DXCOMMON";"Defines DEBUG_LEVEL common block (INTERNAL)";"143";"dxcommon.html";"363"
"6635";"DXBREAK";"Sets an IDL breakpoint";"143";"dxbreak.html";"236"
"6636";"DXCLEAR";"Clears an IDL breakpoint";"143";"dxclear.html";"248"
"6634";"DEFSUBCELL";"Returns a default subcell suitable for plotting in.";"143";"defsubcell.html";"233"
"6633";"DDEABM";"Integrate Ordinary Differential Equation with Adams-Bashford-Moulton";"143";"ddeabm.html";"2358"
"6632";"CUBETERP";"Cubic spline interpolation with known derivatives";"143";"cubeterp.html";"281"
"6630";"CMUNIQUE_ID";"Return a unique ID string";"143";"cmunique_id.html";"229"
"6631";"CROSSPN";"A version of CROSSP for efficient vector cross products";"143";"crosspn.html";"535"
"6628";"CMSVWRITE";"Write a single variable to an open SAVE file";"143";"cmsvwrite.html";"406"
"6629";"CMSYSTIME";"Compute seconds since Jan 1, 1970 and (Modified) Julian Days";"143";"cmsystime.html";"943"
"6627";"CMSVREAD";"Read a single variable from an open SAVE file";"143";"cmsvread.html";"367"
"6626";"CMSVLIB";"Initialize the CMSVLIB save library";"143";"cmsvlib.html";"720"
"6625";"CMSV_WVTYPE";"Write variable type information to output block";"143";"cmsv_wvtype.html";"184"
"6624";"CMSV_WREC";"Write SAVE-formatted record header to output block or file";"143";"cmsv_wrec.html";"277"
"6623";"CMSV_WRAW";"Write raw SAVE data to output block";"143";"cmsv_wraw.html";"232"
"6622";"CMSV_WDATA";"Write SAVE-formatted data variable record to output block or file";"143";"cmsv_wdata.html";"382"
"6621";"CMSV_TEST";"Test the CMSVLIB library";"143";"cmsv_test.html";"259"
"6620";"CMSV_RVTYPE";"Read variable type information from input block or file unit";"143";"cmsv_rvtype.html";"242"
"6619";"CMSV_RREC";"Read SAVE-formatted record header from input block or file unit";"143";"cmsv_rrec.html";"381"
"6617";"CMSV_RDATA";"Read SAVE-formatted data variable record from input block or file unit";"143";"cmsv_rdata.html";"392"
"6618";"CMSV_RRAW";"Read raw SAVE data from input block or file unit";"143";"cmsv_rraw.html";"352"
"6616";"CMSV_PTRSUM";"Construct an inventory of heap data accessible to a variable";"143";"cmsv_ptrsum.html";"291"
"6615";"CMSV_OPEN";"Open IDL SAVE file for reading or writing";"143";"cmsv_open.html";"373"
"6614";"CMSET_OP";"Performs an AND, OR, or XOR operation between two sets";"143";"cmset_op.html";"725"
"6612";"CMSAVE";"Save IDL variables to a file. (IDL v5 and greater)";"143";"cmsave.html";"538"
"6613";"CMSAVEDIR";"Display a directory of the variables in an IDL SAVE file.";"143";"cmsavedir.html";"376"
"6611";"CMRESTORE";"Restore variables from an IDL SAVE file.";"143";"cmrestore.html";"1040"
"6610";"CMREPLICATE";"Replicates an array or scalar into a larger array, as REPLICATE does.";"143";"cmreplicate.html";"644"
"6609";"CMPS_FORM";"This function puts up a form the user can configure a PostScript device driver. The function result (if the user selects either the ACCEPT or CREATE FILE buttons) can be sent directly to the DEVICE procedure by means of its _Extra key...";"143";"cmps_form.html";"457"
"6608";"CMPRODUCT";"CMPRODUCT() is the multiplicative equivalent of TOTAL().";"143";"cmproduct.html";"332"
"6607";"CMCONGRID";"Shrink or expand the size of an array by an arbitrary amount. This IDL procedure simulates the action of the VAX/VMS CONGRID/CONGRIDI function.	This function is similar to 'REBIN' in that it can resize a one, two, or three dimensional...";"143";"cmcongrid.html";"371"
"6606";"CMARG_PRESENT";"Determine whether output parameter has been passed (IDL4 compatibility)";"143";"cmarg_present.html";"356"
"6605";"CMAPPLY";"Applies a function to specified dimensions of an array";"143";"cmapply.html";"464"
"6603";"CHEBFIT";"Fit Chebyshev polynomial coefficients to a tabulated function";"143";"chebfit.html";"834"
"6604";"CHEBGRID";"Estimate Chebyshev polynomial coefficients of a function on a grid";"143";"chebgrid.html";"461"
"6602";"CHEBEVAL";"Evaluate a Chebyshev polynomial on an interval, given the coefficients";"143";"chebeval.html";"498"
"6600";"ARRINSERT";"Insert one array into another";"143";"arrinsert.html";"1030"
"6601";"CHEBCOEF";"Estimate Chebyshev polynomial coefficients of a function on an interval";"143";"chebcoef.html";"332"
"6599";"ARRDELETE";"Remove a portion of an existing array.";"143";"arrdelete.html";"430"
"7154";"PERMUTE";"This function returns an array containing the numbers	[0, ..., N-1] in random order. They are useful as indices when permuting a dataset, for example in a balanced bootstrap	Monte Carlo algorithm.";"119";"permute.html";"532"
"12607";"CGAPPENDTOFILENAME";"The purpose of this routine is to allow the user append text to the end of the root name of an absolute file name.";"118";"cgappendtofilename.html";"146"
"7156";"CDF_ENCODE_TT2000";"Encodes a single value or an array of CDF_TIME_TT2000 value(s) into the standard date and time character string(s).";"100";"CDF_ENCODE_TT2000.html";"2476"
"7157";"CDF_EPOCH_TOJULDAYS";"Converts CDF epoch values in CDF_EPOCH, CDF_EPOCH16 or CDF_TIME_TT2000 data type to Julian days.";"100";"CDF_EPOCH_TOJULDAYS.html";"4838"
"7158";"CDF_LEAPSECONDS_INFO";"Returns a structure containing information about the leap seconds used by CDF.";"100";"CDF_LEAPSECONDS_INFO.html";"2863"
"7159";"CDF_PARSE_TT2000";"Parses a single or an array of input strings into an 8-byte integer (LONG64) value(s) for use as a CDF_TIME_TT2000 type variable.";"100";"CDF_PARSE_TT2000.html";"2213"
"7160";"CDF_TT2000";"Computes or breaks down CDF_TIME_TT2000 values in a CDF file.";"100";"CDF_TT2000.html";"4360"
"7161";"COLORTABLE";"Specifies the parameters to create a custom color table or loads a system color table.";"27";"COLORTABLE.html";"13561"
"7162";"GREG2JUL";"Calculates the Julian date for the specified Gregorian date.";"19";"GREG2JUL.html";"5013"
"7163";"JUL2GREG";"Calculates the Gregorian date for the specified Julian date.";"19";"JUL2GREG.html";"6388"
"7164";"Creating a Graphics Event Handler Class";;"135";"GraphicsEventHandler.html";"4085"
"7165";"Legal and Copyright Notices";;"135";"LegalAndCopyrightNotices.html";"6602"
"7166";"IDLffVideoWrite::Init";"Initializes the object and creates the video file.";"98";"IDLffVideoWrite.html#IDLffVid";"0"
"7167";"IDLffVideoWrite::AddVideoStream";"Adds a new video stream to the file.";"98";"IDLffVideoWrite.html#IDLffVid2";"0"
"7168";"IDLffVideoWrite::AddAudioStream ";"Adds a new audio stream to the file.";"98";"IDLffVideoWrite.html#IDLffVid3";"0"
"7169";"IDLffVideoWrite::GetCodecs";"Returns the list of codecs you may use to encode a video or audio stream.";"98";"IDLffVideoWrite.html#IDLffVid7";"0"
"7170";"IDLffVideoWrite::GetFormats";"Returns the video file types you can create.";"98";"IDLffVideoWrite.html#IDLffVid8";"0"
"7171";"IDLffVideoWrite::GetStreams";"Returns an array of structures describing each of the streams contained in the video file.";"98";"IDLffVideoWrite.html#IDLffVid6";"0"
"7172";"IDLffVideoWrite::Put";"Writes data into the stream.";"98";"IDLffVideoWrite.html#IDLffVid4";"0"
"7173";"IDLffVideoWrite::SetMetadata";"Embeds a metadata string in the video file.";"98";"IDLffVideoWrite.html#IDLffVid9";"0"
"7174";"IDLffVideoWrite::Cleanup";"Finalizes and closes the file.";"98";"IDLffVideoWrite.html#IDLffVid5";"0"
"16330";"mgffoptions::has_option";"Determine if a particular section has a given option.";"147";"mgffoptions__define.html#mgffoptions::has_option";"0"
"7176";"ENVIUI::LinkViews";"Starts the Link Views dialog, which lets you link views in pixel or geographic space.";"156";"ENVIUI__LinkViews.html";"3991"
"7177";"ENVIView::PixelLink";"Links views by pixel.";"156";"ENVIView__PixelLink.html";"4223"
"8370";"XIASTREC";"XIASTREC Is A Structure Tag Recursive Existence Checker";"148";"xiastrec.html";"256"
"8371";"XYZTN";"Visualization of 3D or 4D data MAJOR TOPICS: Visualization";"148";"xyztn.html";"253"
"8369";"WIN2";"This is a replacement for the WINDOW procedure. It brings up a window in my 2nd monitor, completely filling the monitor.";"148";"win2.html";"289"
"8368";"TEMPLATE";"This is a template documentation file. Tell what your routine does here. I like to start with the words: 'This function (or procedure) ...' Try to use the active, present tense.";"148";"template.html";"353"
"8366";"SNOE_DATE";"This function translates dates for the SNOE S/C and mission, between various different formats.";"148";"snoe_date.html";"263"
"8367";"SNOECT";"This procedure loads the SNOE color table. It allows different	variants of the color table based upon keywords, and optionally	saves the current (about-to-be-destroyed) table.";"148";"snoect.html";"242"
"8365";"PLOTG";"This procedure is a wrapper for the IDL plot command, that puts a light gray grid behind the plot. It makes the plots much easier to read :)";"148";"plotg.html";"247"
"8364";"PLOT_CLEAR";"Reset system plotting variables";"148";"plot_clear.html";"304"
"8363";"NEAREST_ELEMENT";"This function return the nearest element in a LIST to a provided VALUE WARNING/NOTE: Look at the IDL provided procedure VALUE_LOCATE, as it performs a similar function, and works with arrays, and is MUCH faster. However, it uses inter...";"148";"nearest_element.html";"2540"
"8362";"MAVG";"This procedure does a 'smart average', where array elements less	than a certain value are NOT included in the average (they are	masked out)";"148";"mavg.html";"410"
"8360";"MAG_GRID";"Return a magnetic grid warped to the current map projection, that can be overlayed on an image.";"148";"mag_grid.html";"332"
"8359";"LONXLATE";"This function translates an array (or atomic element) of longitudes from one grid to another. A grid is either Eastern or Western longitude, and from 0 to 360 or -180 to 180";"148";"lonxlate.html";"218"
"8361";"MAP_CONTINENTS";"The MAP_CONTINENTS procedure draws continental boundaries, filled continents, political boundaries, coastlines, and/or rivers, over an existing map projection established by MAP_SET. Outlines can be drawn in low or high-resolution (if...";"148";"map_continents.html";"1264"
"8358";"LONTV";"Fix a lat/lon grid that you want to map on a globe with MAP_PATCH or MAP_IMAGE so it works with IDLs buggy routines";"148";"lontv.html";"496"
"8357";"LOAD_CGM";"This procedure loads the Correctd Geomagnetic Grid (CGM) for all latitude and longitudes for a given year. The grid can be binned on geomagnetic or geographic. Also returned are LSHELL and Bz.";"148";"load_cgm.html";"4327"
"8356";"L4_LAT_ALT_DISP";"This routine displays one day of L4-formatted data at a time. This means you create an array however you want that is analagous to the L4 data, and then pass it to this procedure for display";"148";"l4_lat_alt_disp.html";"234"
"8354";"L4_DAY_LAT_ALT";"This routine displays a keogram (x=time, y=lat) of L4 data.";"148";"l4_day_lat_alt.html";"248"
"8355";"L4_LAT_ALT_DAY";"This routine displays one day of L4 data at a time. A movie can be generated (manual or passive mode), or a single day, or a PS file.";"148";"l4_lat_alt_day.html";"252"
"8353";"L3_LON_LAT";"This procedure opens the L3 files, and returns one days worth of data in a regularly gridded lon/lat array CATEGORY: SNOE, Database";"148";"l3_lon_lat.html";"390"
"8350";"GRID_GLOBE";"This procedure displays a 2D array onto a globe.";"148";"grid_globe.html";"464"
"8351";"L3_GLOBE";"Display a globe of 1 day of SNOE data";"148";"l3_globe.html";"387"
"8352";"L3_LAT_ALT_DAY";"This routine displays one orbit of L3 data at a time. A movie can be generated, or a single day, or a PS file. You can step through the data orbit-by-orbit, or day-by-day but only for a given orbit.";"148";"l3_lat_alt_day.html";"332"
"8349";"G2M";"Translate from geographic to magnetic (CGM) coordinates";"148";"g2m.html";"567"
"8347";"FILE_EXIST";"This function returns true if the requested file exists";"148";"file_exist.html";"727"
"8348";"FIX_GAPS";"This function fills in gaps in a 2D array with the average value of its neighbors";"148";"fix_gaps.html";"778"
"8346";"DOY";"Print (or optionally return) the current UT DOY";"148";"doy.html";"998"
"8344";"PPPRINT";"Pretty print arrays.";"148";"ppprint.html";"320"
"8345";"READ_NETCDF";"Read netCDF file into structure variable";"148";"read_netcdf.html";"954"
"8342";"PLOTBREAK";"Plot a data set with a break as per: http://groups.google.com/group/comp.lang.idl-pvwave/browse_frm/thread/ce29c1ba4693c373 Should be a drop-in replacement for PLOT.";"148";"plotbreak.html";"310"
"8341";"OBJTREE__DEFINE";"NAME: ObjTree PURPOSE: A Object Based data Tree CATEGORY: Object-Based Data Manipulation";"148";"objtree__define.html";"4565"
"8340";"OBJ_TEMPLATE";"Describe your object class does here. I like to start with the words:	'A &lt;whatever&gt; object ...'	Try to use the active, present tense.";"148";"obj_template.html";"250"
"8338";"KDM_PS";"Make producing PostScript images easier. And PDF, PNG, etc. The primary benefit is that PS images take up a full page in Portrait or Landscape mode. Also simplifies creation of PDF and PNG from PS, so the PNG images can be high qualit...";"148";"kdm_ps.html";"526"
"8339";"KDM_RANGE";"This function converts a variable or array from one scale to another. The input data is assumed to be on the scale [min(data),max(data)] although this can be customized. It is converted to a new scale of the range [rangemin,rangemax]....";"148";"kdm_range.html";"591"
"8336";"KDM_MAP_SCALE";"Provide a scale (legend) for a map";"148";"kdm_map_scale.html";"310"
"8337";"KDM_NORTH";"This procedure puts a North arrow (and letter N) on a map indicating which way is North.";"148";"kdm_north.html";"349"
"8335";"KDM_ISDEFINED";"This procedure checks if a variable is defined or not, and optionally sets it to a default value, or prompts the user to enter a value. This is a fancy wrapper for N_ELEMENTS() EQ 0 and KEYWORD_SET()";"148";"kdm_isdefined.html";"284"
"8333";"KDM_DT__DEFINE";"A datetime object stores a date and/or time";"148";"kdm_dt__define.html";"346"
"8334";"KDM_GEOCODE";"This function geocodes or reverse geocodes using the Google Maps API Web Service. Geocode means that the user provides an address and this function returns the latitude and longitude. Reverse geocode takes a lat,lon pair and returns a...";"148";"kdm_geocode.html";"387"
"8331";"KDM_CDATA";"Wrap a string in CDATA tags: '&lt;![CDATA[' + string + ']]&gt;'";"148";"kdm_cdata.html";"327"
"8332";"KDM_CT";"This procedure loads the SNOE color table. It allows different	variants of the color table based upon keywords, and optionally	saves the current (about-to-be-destroyed) table.";"148";"kdm_ct.html";"383"
"8329";"KDM__DEFINE";"A KDM object is a generic top-level object that all other objects I write should inherit.";"148";"kdm__define.html";"404"
"8326";"FILE_UNIQ";"Returns a uniq filename, based upon the procedure the use ran.";"148";"file_uniq.html";"401"
"8327";"GISS_CT";"NAME: GISS_ct PURPOSE: Load the colortables for the EdGCM project. The colortables come from Panoply CATEGORY: Display, Graphics, Utility CALLING SEQUENCE: GISS_ct, FileName";"148";"giss_ct.html";"381"
"8330";"KDM_ARRSETSIZE";"This function resizes a 1D array. It can truncate or expand the array. When expanding it can optionally fill the new elements with a default value.";"148";"kdm_arrsetsize.html";"302"
"8328";"HEX2DEC";;"148";"hex2dec.html";"648"
"8324";"CW_KDM_SLIDER";"Slider with title and value horizontally";"148";"cw_kdm_slider.html";"303"
"8325";"DEC2HEX";"Project : SOHO - CDS Name : DEC2HEX Purpose : Convert a non-negative decimal integer to a hex string.";"148";"dec2hex.html";"1803"
"8323";"ARRCONCAT";"Concatenate onto an array. This utility makes it easier to build an N+1 dimensional array from a bunch of n-dimensional arrays. For example, the common case of X=[X,42] can be done with this function, but it becomes more useful when c...";"148";"arrconcat.html";"464"
"8322";"KDM_KML__DEFINE";"Top level KML object for the kdm-idl kdm_kml group. A kdm_kml object holds a kdm_kml_object. This object contains the generic code that all other inherited KML objects might use";"148";"kdm_kml__define.html";"593"
"16329";"mgffoptions::getProperty";"Retrieve properties of the options object.";"147";"mgffoptions__define.html#mgffoptions::getProperty";"0"
"16328";"mgffoptions::get";"Return value for a given option.";"147";"mgffoptions__define.html#mgffoptions::get";"0"
"16327";"mgffoptions::cleanup";"Free resources of mgffoptions object.";"147";"mgffoptions__define.html#mgffoptions::cleanup";"0"
"16326";"mgffoptions::_overloadPrint";"Print MGffOptions object content in an INI format that can be read by MG_READ_CONFIG.";"147";"mgffoptions__define.html#mgffoptions::_overloadPrint";"0"
"16325";"mgffoptions::_overloadHelp";"Print help message about an MGffOptions object.";"147";"mgffoptions__define.html#mgffoptions::_overloadHelp";"0"
"16324";"mgffoptions::_overloadForeach";"Loop through sections of a MGffOptions object.";"147";"mgffoptions__define.html#mgffoptions::_overloadForeach";"0"
"16323";"mgffoptions::_overloadBracketsRightSide";"Overload method to handle accessing options via array indexing notation.";"147";"mgffoptions__define.html#mgffoptions::_overloadBracketsRightSide";"0"
"16322";"mgffoptions::_overloadBracketsLeftSide";"Overload method to handle setting option values using array notation.";"147";"mgffoptions__define.html#mgffoptions::_overloadBracketsLeftSide";"0"
"16321";"mgffncvariable__define";"Define instance variables.";"147";"mgffncvariable__define.html#mgffncvariable__define";"122"
"16320";"mgffncvariable::init";"Create a netCDF variable object.";"147";"mgffncvariable__define.html#mgffncvariable::init";"56"
"16319";"mgffncvariable::getProperty";"Get properties.";"147";"mgffncvariable__define.html#mgffncvariable::getProperty";"0"
"16318";"mgffncvariable::dump";"Get output for use with PRINT.";"147";"mgffncvariable__define.html#mgffncvariable::dump";"0"
"16317";"mgffncvariable::cleanup";"Free resources.";"147";"mgffncvariable__define.html#mgffncvariable::cleanup";"0"
"16316";"mgffncvariable::_overloadPrint";"Get output for use with PRINT";"147";"mgffncvariable__define.html#mgffncvariable::_overloadPrint";"0"
"16315";"mgffncvariable::_overloadHelp";"Returns the output display by HELP on an object of the class.";"147";"mgffncvariable__define.html#mgffncvariable::_overloadHelp";"0"
"16314";"mgffncvariable::_overloadBracketsRightSide";"Get attributes, groups, or variables from a file.";"147";"mgffncvariable__define.html#mgffncvariable::_overloadBracketsRightSide";"0"
"16313";"mgffncgroup__define";"Define instance variables and class inheritance.";"147";"mgffncgroup__define.html#mgffncgroup__define";"166"
"16312";"mgffncgroup::init";"Create a netCDF group object.";"147";"mgffncgroup__define.html#mgffncgroup::init";"38"
"16311";"mgffncgroup::getProperty";"Get properties.";"147";"mgffncgroup__define.html#mgffncgroup::getProperty";"0"
"16310";"mgffncgroup::dump";"Get output for use with PRINT.";"147";"mgffncgroup__define.html#mgffncgroup::dump";"0"
"16309";"mgffncgroup::cleanup";"Free resources.";"147";"mgffncgroup__define.html#mgffncgroup::cleanup";"0"
"16308";"mgffncgroup::_overloadPrint";"Get output for use with PRINT.";"147";"mgffncgroup__define.html#mgffncgroup::_overloadPrint";"0"
"16307";"mgffncgroup::_overloadHelp";"Returns the output display by HELP on an object of the class.";"147";"mgffncgroup__define.html#mgffncgroup::_overloadHelp";"0"
"16306";"mgffncgroup::_overloadBracketsRightSide";"Get attributes, groups, or variables from a file.";"147";"mgffncgroup__define.html#mgffncgroup::_overloadBracketsRightSide";"0"
"16305";"mgffncfile__define";"Define instance variables and class inheritance.";"147";"mgffncfile__define.html#mgffncfile__define";"119"
"16304";"mgffncfile::init";"Create an MGffNCFile object.";"147";"mgffncfile__define.html#mgffncfile::init";"0"
"16303";"mgffncfile::getProperty";"Get properties.";"147";"mgffncfile__define.html#mgffncfile::getProperty";"0"
"16301";"mgffncfile::cleanup";"Free resources.";"147";"mgffncfile__define.html#mgffncfile::cleanup";"0"
"16302";"mgffncfile::dump";"Get output for use with PRINT.";"147";"mgffncfile__define.html#mgffncfile::dump";"0"
"16300";"mgffncfile::_overloadPrint";"Get output for use with PRINT.";"147";"mgffncfile__define.html#mgffncfile::_overloadPrint";"0"
"16299";"mgffncfile::_overloadHelp";"Returns the output display by HELP on an object of the class.";"147";"mgffncfile__define.html#mgffncfile::_overloadHelp";"0"
"16298";"mgffncfile::_overloadBracketsRightSide";"Get attributes, groups, or variables from a file.";"147";"mgffncfile__define.html#mgffncfile::_overloadBracketsRightSide";"0"
"16296";"mgffncbase::setProperty";"Get properties.";"147";"mgffncbase__define.html#mgffncbase::setProperty";"100"
"16297";"mgffncbase__define";"Define instance variables and class inheritance.";"147";"mgffncbase__define.html#mgffncbase__define";"41"
"16295";"mgffncbase::init";"Do base instantiation.";"147";"mgffncbase__define.html#mgffncbase::init";"0"
"16294";"mgffncbase::getProperty";"Get properties.";"147";"mgffncbase__define.html#mgffncbase::getProperty";"0"
"16293";"mgffncbase::cleanup";"Free resources.";"147";"mgffncbase__define.html#mgffncbase::cleanup";"0"
"16292";"mgffncbase::_overloadHelp";"HELP overload common routine.";"147";"mgffncbase__define.html#mgffncbase::_overloadHelp";"0"
"16291";"mgfflogger__define";"Define instance variables.";"147";"mgfflogger__define.html#mgfflogger__define";"91"
"16290";"mgfflogger::setProperty";"Get properties.";"147";"mgfflogger__define.html#mgfflogger::setProperty";"75"
"16289";"mgfflogger::print";"Log message to given level.";"147";"mgfflogger__define.html#mgfflogger::print";"0"
"16288";"mgfflogger::insertLastError";"Insert the stack trace for the last error message into the log.";"147";"mgfflogger__define.html#mgfflogger::insertLastError";"0"
"16287";"mgfflogger::insert_execution_info";"Insert stack trace into log.";"147";"mgfflogger__define.html#mgfflogger::insert_execution_info";"0"
"16286";"mgfflogger::init";"Create logger object.";"147";"mgfflogger__define.html#mgfflogger::init";"0"
"16285";"mgfflogger::getProperty";"Set properties.";"147";"mgfflogger__define.html#mgfflogger::getProperty";"0"
"16284";"mgfflogger::getByName";"Traverses a hierarchy of named objects using a path of names delimited with /'s.";"147";"mgfflogger__define.html#mgfflogger::getByName";"0"
"16283";"mgfflogger::cleanup";"Free resources.";"147";"mgfflogger__define.html#mgfflogger::cleanup";"0"
"16281";"mgffh5group::init";"Create a group object.";"147";"mgffh5group__define.html#mgffh5group::init";"123"
"16282";"mgffh5group__define";"Define instance variables and class inheritance.";"147";"mgffh5group__define.html#mgffh5group__define";"37"
"16280";"mgffh5group::getProperty";"Get properties";"147";"mgffh5group__define.html#mgffh5group::getProperty";"0"
"16279";"mgffh5group::cleanup";"Free resources.";"147";"mgffh5group__define.html#mgffh5group::cleanup";"0"
"16278";"mgffh5group::_overloadHelp";"Output for HELP for group.";"147";"mgffh5group__define.html#mgffh5group::_overloadHelp";"0"
"16277";"mgffh5file__define";"Define instance variables and class inheritance.";"147";"mgffh5file__define.html#mgffh5file__define";"92"
"16276";"mgffh5file::init";"Creates HDF 5 object.";"147";"mgffh5file__define.html#mgffh5file::init";"46"
"16275";"mgffh5file::getProperty";"Get properties";"147";"mgffh5file__define.html#mgffh5file::getProperty";"0"
"16274";"mgffh5file::dump";"Dumps the contents of the file.";"147";"mgffh5file__define.html#mgffh5file::dump";"0"
"16273";"mgffh5file::cleanup";"Free resources of the HDF 5 file, including its children.";"147";"mgffh5file__define.html#mgffh5file::cleanup";"0"
"16272";"mgffh5file::browse";"Start the HDF 5 browser on the file.";"147";"mgffh5file__define.html#mgffh5file::browse";"0"
"16271";"mgffh5dataset__define";"Define instance variables and class inheritance.";"147";"mgffh5dataset__define.html#mgffh5dataset__define";"227"
"16270";"mgffh5dataset::readAttribute";"Get value of attribute.";"147";"mgffh5dataset__define.html#mgffh5dataset::readAttribute";"0"
"16269";"mgffh5dataset::init";"Create an HDF5 dataset.";"147";"mgffh5dataset__define.html#mgffh5dataset::init";"0"
"16268";"mgffh5dataset::getProperty";"Get properties";"147";"mgffh5dataset__define.html#mgffh5dataset::getProperty";"0"
"16267";"mgffh5dataset::cleanup";"Free resources.";"147";"mgffh5dataset__define.html#mgffh5dataset::cleanup";"0"
"16266";"mgffh5dataset::_overloadSize";"Operator overloading method for returning information from SIZE.";"147";"mgffh5dataset__define.html#mgffh5dataset::_overloadSize";"0"
"16265";"mgffh5dataset::_overloadPrint";"Overload method for PRINT routine output.";"147";"mgffh5dataset__define.html#mgffh5dataset::_overloadPrint";"0"
"16264";"mgffh5dataset::_overloadHelp";"Overload method for HELP routine output.";"147";"mgffh5dataset__define.html#mgffh5dataset::_overloadHelp";"0"
"16263";"mgffh5dataset::_overloadBracketsRightSide";"Operator overloading methods for retrieving subsets of the dataset.";"147";"mgffh5dataset__define.html#mgffh5dataset::_overloadBracketsRightSide";"0"
"16262";"mgffh5dataset::_convertbounds";"Helper method to convert information about a dimension's range into a three element vector: [start, stop, stride].";"147";"mgffh5dataset__define.html#mgffh5dataset::_convertbounds";"0"
"16261";"mgffh5dataset::_computeslab";"Convert the parameters needed by H5S_SELECT_HYPERSLAB.";"147";"mgffh5dataset__define.html#mgffh5dataset::_computeslab";"0"
"16260";"mgffh5base__define";"Define instance variables and class inheritance.";"147";"mgffh5base__define.html#mgffh5base__define";"244"
"16259";"mgffh5base::init";"Creates HDF 5 object.";"147";"mgffh5base__define.html#mgffh5base::init";"0"
"16258";"mgffh5base::getProperty";"Get properties.";"147";"mgffh5base__define.html#mgffh5base::getProperty";"0"
"16257";"mgffh5base::_overloadHelp";"HELP overload common routine.";"147";"mgffh5base__define.html#mgffh5base::_overloadHelp";"0"
"16256";"mgfffilename__define";"Define instance variables.";"147";"mgfffilename__define.html#mgfffilename__define";"88"
"16255";"mgfffilename::toString";"Returns the filename as a string.";"147";"mgfffilename__define.html#mgfffilename::toString";"33"
"16254";"mgfffilename::setProperty";"Set properties.";"147";"mgfffilename__define.html#mgfffilename::setProperty";"0"
"16253";"mgfffilename::init";"Create a filename object.";"147";"mgfffilename__define.html#mgfffilename::init";"0"
"16252";"mgfffilename::getProperty";"Get properties.";"147";"mgfffilename__define.html#mgfffilename::getProperty";"0"
"16251";"mgfffilename::compose";"Create a filename by specifying its parts.";"147";"mgfffilename__define.html#mgfffilename::compose";"0"
"16250";"mgfffilename::cleanup";"Free resources.";"147";"mgfffilename__define.html#mgfffilename::cleanup";"0"
"16249";"mgfffile__define";"Define instance variables.";"147";"mgfffile__define.html#mgfffile__define";"178"
"16248";"mgfffile::readu";"Read binary data from the file.";"147";"mgfffile__define.html#mgfffile::readu";"0"
"16247";"mgfffile::readf";"Read the file into a string array, or a single string if SINGLE is set.";"147";"mgfffile__define.html#mgfffile::readf";"0"
"16246";"mgfffile::init";"Create a file object.";"147";"mgfffile__define.html#mgfffile::init";"0"
"16245";"mgfffile::getProperty";"Get properties.";"147";"mgfffile__define.html#mgfffile::getProperty";"0"
"16244";"mgfffile::_overloadBracketsRightSide";"Read portions of a file using bracket notation in IDL 8.0.";"147";"mgfffile__define.html#mgfffile::_overloadBracketsRightSide";"0"
"16243";"mgffbinaryfile__define";"Define instance variables.";"147";"mgffbinaryfile__define.html#mgffbinaryfile__define";"217"
"16242";"mgffbinaryfile::setProperty";"Set properties.";"147";"mgffbinaryfile__define.html#mgffbinaryfile::setProperty";"0"
"16241";"mgffbinaryfile::read";"Read data from binary file.";"147";"mgffbinaryfile__define.html#mgffbinaryfile::read";"0"
"16240";"mgffbinaryfile::init";"Create binary file object.";"147";"mgffbinaryfile__define.html#mgffbinaryfile::init";"0"
"16239";"mgffbinaryfile::getProperty";"Get properties.";"147";"mgffbinaryfile__define.html#mgffbinaryfile::getProperty";"0"
"16238";"mgffbinaryfile::cleanup";"Free resources.";"147";"mgffbinaryfile__define.html#mgffbinaryfile::cleanup";"0"
"16237";"mgffbinaryfile::_overloadHelp";"Returns a string describing the binary file object.";"147";"mgffbinaryfile__define.html#mgffbinaryfile::_overloadHelp";"0"
"12317";"Enabling and Disabling System Routines";;"135";"EnableDisableSysRoutines.html";"5750"
"8372";"FORCE_NEWTON";"Calculates the gravitational force from a particle distribution at a list of positions.";"149";"force_newton.html";"327"
"8373";"INERTIATENS";"Calculates the 2nd moment tensor (sometimes incorrectly referred to as the moment of inertia tensor) of a mass distribution specified by a list of particle positions.";"149";"inertiatens.html";"497"
"8374";"JBIMATCH";;"149";"jbimatch.html";"363"
"8375";"MATCH_ND";"For each arbitrarily-dimensioned point in one vector, determines the closest point in a second vector. Method is to take the list returned by MATCHALL_ND and narrow it down to the closest match.";"149";"match_nd.html";"274"
"8376";"MATCH_SPH";"For each angular point in one vector, determines the closest angular match from another vector. Method is to take the list returned by MATCHALL_SPH and narrow it down to the closest match.";"149";"match_sph.html";"539"
"8377";"MATCHALL_2D";"Determines which of a set of 2D coordinates are within a given distance from each of a vector of points. Based on JD's MATCH_2D and my MATCHALL_SPH.";"149";"matchall_2d.html";"889"
"8378";"MATCHALL_ND";"Determines which of a set of coordinates of arbitratry dimension are a given distance from each of a vector of points. Based on JD's MATCH_2D and my MATCHALL_SPH.";"149";"matchall_nd.html";"330"
"8379";"MATCHALL_SPH";"Determines which of a set of angular coordinates on the sky (or on a sphere) are within a given angular distance from each of a vector of points. New optimized version that uses histograms based on 3D locations on the unit sphere and ...";"149";"matchall_sph.html";"298"
"8380";"MEAN_BY_RADAZ";"Calculates the mean value of an image in bins of both radius and pie slices of azimuthal angle.";"149";"mean_by_radaz.html";"236"
"8381";"MM_DIST";"Converts between distance modulus m-M and distance in parsecs.";"149";"mm_dist.html";"259"
"8382";"POTENTIAL_NEWTON";"Calculates the gravitational potential from a particle distribution at a list of positions.";"149";"potential_newton.html";"271"
"8383";"READDOLPHOT";"Read the output of the DOLPHOT photometry package into easier-to- use data structures.";"149";"readdolphot.html";"433"
"8384";"READFAKEDOLPHOT";"Read the output of the DOLPHOT photometry package when run in artificial star mode into easier-to-use data structures.";"149";"readfakedolphot.html";"316"
"8385";"SHAPE_ITERATIVE";"Given a 3-dimensional distribution of points, determines the best ellipsoidal shape using particles in an interatively-defined ellipsoid (or ellipsoidal shell) of the same shape.";"149";"shape_iterative.html";"261"
"8386";"SIXTYV";"Converts a vector of decimal numbers to sexigesimal (vector version of SIXTY in the astronomy library).";"149";"sixtyv.html";"265"
"8387";"SKY2XY";"Converts between sky coordinates and pixel coordinates of a FITS image using the WCSTOOLS sky2xy routine. Useful for images with WCS keywords that are not implemented in the astronomy library (such as the TNX convention for distortion...";"149";"sky2xy.html";"638"
"8388";"VELFRAME";"Converts radial velocities between Local Standard of Rest, Heliocentric and Galactocentric velocity frames.";"149";"velframe.html";"945"
"8389";"XY2SKY";"Converts between pixel coordinates of a FITS image and sky coordinates using the WCSTOOLS xy2sky routine. Useful for images with WCS keywords that are not implemented in the astronomy library (such as the TNX convention for distortion...";"149";"xy2sky.html";"441"
"8390";"EXTRACT_ROWS";"This function extracts rows from a CSV structure (as read using READ_CSV) and returns a new CSV structure.";"149";"extract_rows.html";"354"
"8391";"READPARAM";"Reads in a parameter file containing 'key = value' pairs.";"149";"readparam.html";"419"
"8392";"SORT_ROWS";"This function re-sorts the rows in a CSV structure (as read using READ_CSV).";"149";"sort_rows.html";"238"
"8393";"ATANH";"Numerically calculate the inverse of the TANH function for real values.";"149";"atanh.html";"1435"
"8394";"BETWEEN";"Determines if the argument lies between the bounds.";"149";"between.html";"406"
"8395";"BIHARMONIC_INTERP";"Performs biharmonic interpolation for a function defined on a 2D grid.";"149";"biharmonic_interp.html";"405"
"8396";"BILIN_INTERP";"Performs bilinear interpolation for a function defined on a 2D grid.";"149";"bilin_interp.html";"435"
"8397";"BOOTSTRAP_MEAN";"Calculates the mean and a confidence limit on the mean based on bootstrap resampling.";"149";"bootstrap_mean.html";"947"
"8398";"BOOTSTRAP_MEDIAN";"Calculates the median and a confidence limit on the median based on bootstrap resampling.";"149";"bootstrap_median.html";"1819"
"8399";"COMBIGEN";"Generates all possible combinations n-choose-k.";"149";"combigen.html";"1761"
"8400";"DOTP";"Calculates the scalar product of two vectors.";"149";"dotp.html";"469"
"8401";"HIST_ND_WEIGHT";"Wrapper to the dfanning HIST_ND function that calculates a weighted multi-dimensional histogram.";"149";"hist_nd_weight.html";"592"
"8402";"HISTOGRAM_WEIGHT";"Wrapper to the built-in HISTOGRAM function that calculates a weighted histogram.";"149";"histogram_weight.html";"1976"
"8403";"JBCROSSP";"Calculate the cross products between two arrays of 3-vectors.";"149";"jbcrossp.html";"354"
"8404";"JBLINFIT";"Performs least squares fitting to a straight line, but can perform it over one particular dimension for a multi-dimensional data set. Acts like the built-in function LINFIT if DIMENSION is not set.";"149";"jblinfit.html";"362"
"8405";"MATRIX2QUATERNION";"Transforms a rotation matrix into a quaternion.";"149";"matrix2quaternion.html";"285"
"8406";"MINFINITE";"Calculate the minimum non-zero value of an array.";"149";"minfinite.html";"235"
"8407";"ML_DISTFIT";"Performs maximum likelihood fitting of a distribution.";"149";"ml_distfit.html";"1022"
"8408";"ORD";"Calculates the ordinal of each value of an array in terms of the sorted values. This can be very useful for shrinking sparse arrays before using histogram.";"149";"ord.html";"546"
"8409";"PERCENTILES";"Determines what range of a distribution lies within a percentile range.";"149";"percentiles.html";"3063"
"8410";"POINT_CONVOLVE";"Convolves a list of N-dimensional points with a Gaussian kernel.";"149";"point_convolve.html";"210"
"8411";"QUAT2ROTAXIS";"Returns the net axis and angle of the rotation specified by the input quaternion.";"149";"quat2rotaxis.html";"198"
"8412";"RMS";"Calculates the root-mean-square of a set of values.";"149";"rms.html";"5415"
"8413";"SECH";"Calculates the hyperbolic inverse cosine function (sech).";"149";"sech.html";"415"
"8414";"SPRSADD";"Adds two sparse matrices (as generated by SPRSIN).";"149";"sprsadd.html";"226"
"8415";"ZPHASE";"Calculates the phase angle of a complex number.";"149";"zphase.html";"260"
"8416";"AUGMENT_INHERITED_KEYWORD";"Adds keywords to the _EXTRA structure.";"149";"augment_inherited_keyword.html";"360"
"8417";"CONTOURLEVELS";"Calculates the contour level that encloses a given fraction of the data in a multi-dimensional histogram.";"149";"contourlevels.html";"626"
"8418";"IS_SORTED";"Checks whether an array is already sorted.";"149";"is_sorted.html";"294"
"8419";"MULTI2INDEX";"Translates multidimensional indices into flat indices (the inverse of ARRAY_INDICES).";"149";"multi2index.html";"176"
"8420";"PNGINTERP";"Interpolates between two grayscale .PNG images.";"149";"pnginterp.html";"245"
"8421";"PUSH";"Adds an element to the end of a (possibly non-existent) array.";"149";"push.html";"891"
"8422";"UNIQIFY";"Returns the unique elements of an array.";"149";"uniqify.html";"242"
"8423";"VECREP";"Replicates a vector a given number of times.";"149";"vecrep.html";"209"
"8424";"CROPPEDTICKMARKS";"This function is used as a plug-in to YTICKFORMAT that crops a number to the appropriate number of digits. For example, logarithmic axes might have labels 0.001, 0.01, 0.1, 1, 10.";"149";"croppedtickmarks.html";"349"
"8425";"GETPTS";"Find the locations of a number of points on an existing plot using CURSOR. Use right mouse button to mark final point.";"149";"getpts.html";"553"
"8426";"HIST_ND_ADAPTIVE";"Given a list of particle positions (and optional particle weights), bin sizes, and ranges, creates a density image where the regions with fewer particles are sampled at larger bin sizes. This can be used as a drop-in for HIST_ND_WEIGH...";"149";"hist_nd_adaptive.html";"352"
"8427";"HISTEQ";"Performs histogram equalization scaling of a 2D image.";"149";"histeq.html";"969"
"8428";"JBSYMBOL";"Loads one of a series of useful user-defined symbols.";"149";"jbsymbol.html";"375"
"8429";"PLOT_BINNEDDATA";"Takes a set of X,Y data and plots the mean y value for points binned by their x coordinate.";"149";"plot_binneddata.html";"903"
"8430";"PLOTCUMUL";"Plots the cumulative distribution of a set of data.";"149";"plotcumul.html";"222"
"8431";"RESTORE_PLOTSYSVARS";"Restore important plotting system variables that were saved using SAVE_PLOTSYSVARS.";"149";"restore_plotsysvars.html";"208"
"8432";"RGBINDEX";"Translates RGB triplets into colour indices for 24-bit decomposed mode.";"149";"rgbindex.html";"245"
"8433";"SAVE_PLOTSYSVARS";"Save important plotting system variables so that they can be restored later using RESTORE_PLOTSYSVARS.";"149";"save_plotsysvars.html";"179"
"8434";"SPLINEPLOT";"Plots a 2D spline curve using a set of given coordinates.";"149";"splineplot.html";"351"
"8435";"TRUEIFY";"Turn an indexed image into an RGB-decomposed image based on the current colour table.";"149";"trueify.html";"248"
"8436";"XLADDER";"Creates horizontally-stacked ladder plots.";"149";"xladder.html";"554"
"8437";"XYLADDER";"Creates horizontally- and vertically-stacked ladder plots.";"149";"xyladder.html";"777"
"8438";"YLADDER";"Creates vertically-stacked ladder plots.";"149";"yladder.html";"845"
"8439";"PDF Guides";;"4";"PDF_Guides.html";"18623"
"11593";"IDL - Interactive Data Language";;"135";"using_idl_home.html";"251858"
"12504";"ENVIPseudoRasterSpatialRef::ConvertMapToFile";"Converts a set of map coordinates (x-easting, y-northing) to a set of file (pixel) x,y coordinates within one spatial reference.";"155";"ENVIPseudoRasterSpatialRef__ConvertMapToFile.html";"3572"
"12501";"ENVIPseudoRasterSpatialRef::ConvertLonLatToMGRS";"Converts a set of geographic latitude/longitude coordinates to Military Grid Reference System (MGRS) coordinates within one spatial reference.";"155";"ENVIPseudoRasterSpatialRef__ConvertLonLatToMGRS.html";"4266"
"8440";"Platform Support";;"4";"platform_support.html";"16069"
"12434";"RPC Examples";;"135";"RPCExamples.html";"5740"
"16236";"mgffbinaryfile::_overloadBracketsRightSide";"Allows array index access with brackets.";"147";"mgffbinaryfile__define.html#mgffbinaryfile::_overloadBracketsRightSide";"0"
"12158";"WRITE_IPAC_TABLE";"Write an IPAC table from an IDL structure.";"119";"write_ipac_table.html";"53"
"12485";"ENVIDataCollection::Remove";"Lets you remove data objects from the Data Manager.";"155";"ENVIDataCollection__Remove.html";"3823"
"12296";"Java Exceptions";;"135";"JavaExceptions.html";"3268"
"12169";"H5_GETDATA";"Returns a dataset from an HDF5 file, given the identifier (StrID) of the dataset.";"102";"H5_GETDATA.html";"3348"
"12500";"ENVIPseudoRasterSpatialRef::ConvertLonLatToLonLat";"Converts a set of geographic latitude/longitude coordinates in one spatial reference to the same location in another spatial reference.";"155";"ENVIPseudoRasterSpatialRef__ConvertLonLatToLonLat.html";"3796"
"12415";"Looking Up Variables in Current Scope";;"135";"LookUpVariablesCurrentScope.html";"4638"
"12423";"Interfaces Obsoleted in IDL 5.5";;"135";"Obs55.html";"10810"
"12160";"QTNORMALIZE";"Normalize a quaternion (unit quaternion and/or sign conventions)";"143";"qtnormalize.html";"45"
"12295";"Initializing The IDL-Java Bridge";;"135";"InitializingTheIDL-JavaBridge.html";"5855"
"12409";"Freeing Dynamic Resources";;"135";"FreeDynamicResources.html";"4399"
"12358";"File Information";;"135";"FileInformation.html";"4988"
"12315";"Adding System Routines";;"135";"AddingSystRoutines.html";"5732"
"12300";"Showing IDL-Java Output In IDL";;"135";"ShowingIDL-JavaOutputInIDL.html";"2401"
"12367";"Creating Routines that Accept Keywords";;"135";"CreatingRoutinesAcceptKeywords.html";"4518"
"12298";"Method Calls On IDL-Java Objects";;"135";"MethodCallsOnIDL-JavaObjects.html";"3530"
"12291";"Creating IDL-Java Objects";;"135";"CreatingIDL-JavaObjects.html";"3309"
"16235";"mgffbinaryfile::_overloadBracketsLeftSide";"Allows setting values of the binary file by array index.";"147";"mgffbinaryfile__define.html#mgffbinaryfile::_overloadBracketsLeftSide";"0"
"16234";"mgdgvars__define";"Define member variables.";"147";"mgdgvars__define.html#mgdgvars__define";"90"
"12468";"ENVI LiDAR";;"136";"using_envi_lidar_Home.html";"105055"
"16233";"mgdgvars::save";"Save direct graphics system variables.";"147";"mgdgvars__define.html#mgdgvars::save";"0"
"12157";"WCS_CHECK_CTYPE";"Checks that a pair of CTYPE parameters conform to WCS format and return the projection type and coordinate type extracted from them.";"119";"wcs_check_ctype.html";"90"
"16232";"mgdgvars::restore";"Restore direct graphics system variables.";"147";"mgdgvars__define.html#mgdgvars::restore";"0"
"12402";"Removing a Signal Handler";;"135";"RemovingSignalHandler.html";"5268"
"12381";"Functions for Returning System Variables";;"135";"FnsForRetSysVar.html";"4884"
"16231";"mgdgvars::init";"Create an mgdgvars object.";"147";"mgdgvars__define.html#mgdgvars::init";"0"
"12448";"Dynamic Contour Visualizations";;"135";"DynamicVis_Contour.html";"10450"
"12335";"Using Callable IDL";;"135";"UsingCallableIDL.html";"4506"
"12377";"Constants";;"135";"using_idl_Constants.html";"2848"
"16230";"mgdgvars::cleanup";"Free resources.";"147";"mgdgvars__define.html#mgdgvars::cleanup";"0"
"16229";"mgdbmysql__define";"Define MySQL database class.";"147";"mgdbmysql__define.html#mgdbmysql__define";"23"
"12293";"IDL-Java Bridge Data Type Mapping";;"135";"IDL-JavaBridgeDataTypeMapping.html";"3432"
"16228";"mgdbmysql::setProperty";"Set properties.";"147";"mgdbmysql__define.html#mgdbmysql::setProperty";"0"
"12307";"IDL Internals - Error Handling";;"135";"using_idl_ErrorHandling.html";"0"
"16227";"mgdbmysql::query";"Perform a query and retrieve the results.";"147";"mgdbmysql__define.html#mgdbmysql::query";"0"
"12176";"IDLnetJPIP Example";;"73";"IDLnetJPIP_Example.html";"2527"
"12161";"UNITIZE";"Construct a unit vector from a vector";"143";"unitize.html";"41"
"12154";"READ_IPAC_TABLE";"Read an IPAC ascii table from a file into an IDL structure";"119";"read_ipac_table.html";"115"
"12370";"IDL_KW_PAR";;"135";"IDL_KW_PAR.html";"15748"
"12503";"ENVIPseudoRasterSpatialRef::ConvertMGRSToLonLat";"Converts Military Grid Reference System (MGRS) coordinates to a set of geographic latitude/longitude coordinates within one spatial reference.";"155";"ENVIPseudoRasterSpatialRef__ConvertMGRSToLonLat.html";"3769"
"16226";"mgdbmysql::list_tables";"Return a list of tables available.";"147";"mgdbmysql__define.html#mgdbmysql::list_tables";"0"
"12362";"Opening Files with IDL_FileOpen()";;"135";"OpenFiles.html";"4574"
"12355";"Check File Status - IDL_FileEnsureStatus()";;"135";"CheckFileStatus.html";"5031"
"16225";"mgdbmysql::list_dbs";"Return a list of databases available.";"147";"mgdbmysql__define.html#mgdbmysql::list_dbs";"0"
"12179";"IDLnetJPIP::GetStatistics";"Returns statistics about the last GetData call.";"73";"IDLnetJPIP_GetStatistics.html";"2532"
"12330";"Diverting IDL Output";;"135";"DivertingIDLOutput.html";"5278"
"12175";"IDLnetJPIP::Cleanup";"Performs all cleanup on the object.";"73";"IDLnetJPIP_Cleanup.html";"2219"
"12383";"Macros";;"135";"Macros.html";"4767"
"16224";"mgdbmysql::last_error_message";"Returns the error message for the last failed MySQL API routine.";"147";"mgdbmysql__define.html#mgdbmysql::last_error_message";"0"
"12353";"Adding to the Journal File - IDL_Logit()";;"135";"AddJrnlFile.html";"5709"
"12456";"Plot 3D Terrain and Water Table";;"135";"EM1_SurfacePlot.html";"8018"
"12297";"Managing IDL-Java Object Properties";;"135";"ManagingIDL-JavaObjectProperties.html";"3069"
"12470";"Reproject LAS File Sample Code";;"136";"SampleReprojectLASFile.html";"3783"
"12478";"ENVICoordSys::ConvertMGRSToLonLat";"Converts Military Grid Reference System (MGRS) coordinates for a vector file to a set of geographic latitude/longitude coordinates within the same coordinate system.";"155";"ENVICoordSys__ConvertMGRSToLonLat.html";"3724"
"12386";"User Information - IDL_GetUserInfo()";;"135";"UserInfo.html";"4454"
"12454";"Plot Supporting Information";;"135";"EM1_PlotSupportingInformation.html";"28151"
"10363";"ANGLE_BETWEEN_TWO_VECTORS";"This function will compute the angle between two provided vectors (or arrays of vectors) in n-space.";"150";"angle_between_two_vectors.html";"529"
"12294";"IDL-Java Bridge Examples";;"135";"IDL-JavaBridgeExamples.html";"3284"
"12292";"Destroying IDL-Java Objects";;"135";"DestroyingIDL-JavaObjects.html";"2503"
"12301";"The IDL Java Bridge Session Object";;"135";"TheIDLJavaBridgeSessionObject.html";"3019"
"12299";"Overview Of Using Java Objects";;"135";"OverviewOfUsingJavaObjects.html";"3782"
"12364";"Prevent File Closing - IDL_FileSetClose()";;"135";"PreventFileClosing.html";"5512"
"12505";"ENVIPseudoRasterSpatialRef::ConvertMapToLonLat";"Converts a set of map coordinates (x-eastings, y-northings) to a set of geographic latitude and longitude coordinates within one spatial reference.";"155";"ENVIPseudoRasterSpatialRef__ConvertMapToLonLat.html";"3586"
"12418";"Storinig Scalar Values";;"135";"StoringScalarValues.html";"4286"
"16223";"mgdbmysql::init";"Create database connection.";"147";"mgdbmysql__define.html#mgdbmysql::init";"0"
"15296";"IDL_Object::GetProperty";"Retrieves the value of a property or group of properties for the object.";"172";"IDL_Object_GetProperty.html";"1484"
"12304";"Using Asynchronous Timers";;"135";"AsyncTimersUsing.html";"147"
"16222";"mgdbmysql::getProperty";"Retrieve properties.";"147";"mgdbmysql__define.html#mgdbmysql::getProperty";"0"
"10364";"ARRAYS_ARE_SAME_SIZE";"This function will check if two provide arrays are the same size. This routine only checks the dimensions (no other characteristics are considered).";"150";"arrays_are_same_size.html";"292"
"10365";"BB_RADIANCE";"This function will return either the spectral radiance(s) at a specific wavelength or at a discrete set of wavelengths provided in an array or it will return the spectrally integrated radiance across a bandpass specified by the wavele...";"150";"bb_radiance.html";"343"
"10366";"BB_TEMPERATURE";"This function will return the blackbody temperature corresponding to either the provided spectral radiance or the spectrally- integrated radiance at the specified wavelength or within the specified bandpass.";"150";"bb_temperature.html";"1114"
"10367";"BILATERAL";"This function performs bilateral filtering of a greyscale or multi- band color image. The filtering is based on a Gaussian distribution in both the distance and range domain and depends on the user-provided standard deviations in both...";"150";"bilateral.html";"773"
"10368";"CANCEL_PROGRAM";"This procedure deletes all windows created by the calling routine, closes all files, and destroys the calling routine/widget.";"150";"cancel_program.html";"286"
"10369";"CREATE_DCT_MATRIX";"This function computes the DCT matrix that can be used in place of the discrete cosine transform for square, two-dimensional block data. This matrix, M, is used as Y = M ## X ## M' to compute the DCT, Y, of the square, two-dimensional...";"150";"create_dct_matrix.html";"381"
"10370";"DCT1D";"This function computes the one-dimensional discrete cosine transform (or its inverse) of the provide vector.";"150";"dct1d.html";"354"
"10371";"DCT2D";"This function computes the two-dimensional discrete cosine transform (or its inverse) of the provide two-dimensional data array.";"150";"dct2d.html";"780"
"10372";"DCT_BLOCK";"This function produces a block DCT image (or its inverse) from the provided input data.";"150";"dct_block.html";"438"
"10373";"DELTAE";"This function returns the computed color difference (deltaE) between two (2) provided RGB color triplets. The triplets are converted to sRGB (0-1), converted to tristimulus values (XYZ), converted to CIE L*a*b* where the color differe...";"150";"deltae.html";"492"
"10374";"DOT_PRODUCT";"This function will compute the dot product between two provided vectors (or arrays or vectors) in n-space.";"150";"dot_product.html";"4386"
"10375";"DP_RADIANCE_CALIBRATION";"This user-interactive procedure will produce calibrated radiance files from the sample and downwelling measurement files created by the D&P Instruments Model 102F MicroFT or the Model 202 TurboFT. This calibration requires the cold an...";"150";"dp_radiance_calibration.html";"344"
"10376";"FACET_VERTICES_TO_PLANE_COEFFICIENTS";"This function will compute the coefficients of a plane equation of the form Ax + By + Cz + D = 0 from a set of triangilar facet vertices. The surface normal can also be computed if desired.";"150";"facet_vertices_to_plane_coefficients.html";"453"
"10377";"FAST_CORNER_DETECTOR";"This function will return a 2xn array of corner coordinates identified in the provided greyscale image.";"150";"fast_corner_detector.html";"822"
"10378";"FILL_REGION";"This function will use morphological operations to fill the interior region of a provided boundary image.";"150";"fill_region.html";"377"
"10379";"FIND_CENTER";"This function will look at a cluster of pixels in a binary image and determine the mean coodinate of that cluster. It is assumed that there is only ONE cluster of pixels in the provided image. If there are more, then the mean coordina...";"150";"find_center.html";"342"
"10380";"FIND_CLUSTER_CENTERS";"This function will find the centroid coordinates for clusters located throughout a provided image. The clusters will first be refined by thresholding the provided image using the supplied digital count threshold value.";"150";"find_cluster_centers.html";"485"
"10381";"GENERATE_CORRELATED_DATA";"This function will return a list of k normally-distributed, correlated, n-dimensional random points [with a specified mean vector and set of univariate standard deviations].";"150";"generate_correlated_data.html";"393"
"10382";"HARRIS_CORNER_DETECTOR";"This function will find corners in an image. Corners are defined in this context as localized areas within the image were small shifts in the image in any direction produce a significant change in the composition of the neighborhood.";"150";"harris_corner_detector.html";"595"
"10383";"INTERACTIVE_CROP";"The INTERACTIVE_CROP function will allow the user to select a spatial sub-region of the provided image that is to be cropped. The function will create a window and display the image provided for the user to interact with.";"150";"interactive_crop.html";"298"
"10384";"LAB2SRGB_IMAGE";"This function converts a provided CIE L*a*b* color space representation image to an sRGB image assuming Illuminant D65. A non-linearity adjustment for the monitor response is applied to the provided data.";"150";"lab2srgb_image.html";"293"
"10385";"LAB2XYZ";"This function returns the converted tristimulus values for a provided CIE L*a*b* value assuming a particular illuminant, namely X = xr * Xr Y = yr * Yr Z = zr * Zr where xr = fx^3 for fx^3 &gt; epsilon xr = (116 * fx - 16) / kappa for...";"150";"lab2xyz.html";"719"
"10386";"MAGNITUDE";"This function will compute the magnitude (length) of the provided n-dimensional vector.";"150";"magnitude.html";"493"
"10387";"MAKE_BAYER";"This function will construct a document mode image from a provided three-band color image [3,*,*] using the following Bayer pattern [ [G,R], [B,G] ].";"150";"make_bayer.html";"267"
"10388";"MULTIPLE_LINEAR_REGRESSION";"This function will perform a full-order multiple linear regression by constructing a full-order design matrix including all possible combinations of the provided independent variables (for example, if 5 independent variables are provi...";"150";"multiple_linear_regression.html";"1372"
"10389";"NORMALIZE";"This function will normalize or compute the unit vector equivalent for the provided vector.";"150";"normalize.html";"2591"
"10390";"NORMH";"This function normalizes the provided array by the homogeneous coordinate.";"150";"normh.html";"289"
"10391";"OTSU_THRESHOLD";"This function uses Otsu's method to automatically perform histogram shape-based image thresholding, or, the reduction of a gray-level image to a binary image. The algorithm assumes that the image to be thresholded contains two classes...";"150";"otsu_threshold.html";"1332"
"10392";"PAUSE_EXECUTION";"This procedure pauses a routine's execution by creating a modal dialog box containing a message. Execution is paused until this dialog box is dismissed.";"150";"pause_execution.html";"486"
"10393";"PERSPECTIVE_PROJECT3D";"This function will perform a perspective projection of a three- dimensional point defined in homogenous coordinates onto a two- dimensional 'focal plane' as if being acquired by a camera located in 3-space with a specified focal lengt...";"150";"perspective_project3d.html";"191"
"10394";"PLOT_ENHANCED";"This procedure serves as a wrapper around the IDL PLOT procedure that adds the ability to produce encapulated Postscript versions of the plots using the original IDL plot format or with the popular GNUPLOT package which is available f...";"150";"plot_enhanced.html";"276"
"10395";"PLOT_SPHERICAL";"This function will create a three-dimensional quadilateral-faceted plot of spherical coordinate data. The data provided must represent magnitudes defined at a regularly-spaced set of declination and azimuth angles.";"150";"plot_spherical.html";"237"
"10396";"POINT_IN_POLYGON";"This function will determine whether the supplied point is contained within the supplied general polygon";"150";"point_in_polygon.html";"322"
"10397";"POINT_INSIDE_TRIANGULAR_FACET";"This function determines whether a provided point (or set of points) falls within the boundaries of a triangular facet. This function uses the technique based upon the barycentric coordinate test described at http://www.devmaster.net/...";"150";"point_inside_triangular_facet.html";"217"
"10398";"PRINT_ANOVA";"This procedure will display the ANOVA table given in the analyis structure along with the coefficients computed by the MULTIPLE_LINEAR_REGRESSION module.";"150";"print_anova.html";"645"
"10399";"PRINT_LATEX_TABLE";"This procedure will create LaTeX code for a table from a provided two-dimensional array.";"150";"print_latex_table.html";"220"
"10400";"PRINT_STRUCTURE";"This procedure will print the contents of a structure to the console, in a name/value pair format. This will allow the user to view the contents of the sturucture in a more readable format.";"150";"print_structure.html";"488"
"10401";"PROJECTIVE_MAPPING_MATRIX";"This function will compute the projective transformation matrix to allow the conversion between two sets of quadrilateral vertices, one set being considered the image and the other being considered the map. The determined transformati...";"150";"projective_mapping_matrix.html";"209"
"10402";"QUAD_TO_QUAD_PROJECTIVE_TRANSFORM";"This function will perform a quadrilateral-to-quadrilateral projective transform of the provided image. The transformation is defined using the provided quadrilateral vertices defined in a clockwise order beginning at the upper left-h...";"150";"quad_to_quad_projective_transform.html";"173"
"10403";"RANDOM_SAMPLE";"This function will return a vector of 'n' random elements selected from either a provided vector OR from a produced vector of 'N' elements using a long data index generator. The returned random elements will be unique, that is, no ind...";"150";"random_sample.html";"997"
"10404";"RANSAC";"RANSAC is an abbreviation for 'RANdom SAmple Consensus'. It is an iterative method to estimate parameters of a mathematical model from a set of observed data which contains outliers. It is a non-deterministic algorithm in the sense th...";"150";"ransac.html";"1076"
"10405";"RAY_INTERSECTS_FACET";"This function determines whether a given ray (or set of rays) intersect a provided triangular facet in 3-space.";"150";"ray_intersects_facet.html";"2234"
"10406";"READ_ENVI_HEADER";"This function serves to read an ENVI header directly into an IDL program.";"150";"read_envi_header.html";"719"
"10407";"READ_ENVI_IMAGE";"This function serves to read an ENVI image/header directly into an IDL program without the need to first open that image in ENVI and use the ENVI_* routines to do so.";"150";"read_envi_image.html";"914"
"10408";"READPPM";"This function serves to read a Netpbm format portable pixmap format (PPM) image.";"150";"readppm.html";"269"
"10409";"REPLICATE_VECTOR";"This function will replicate a provided vector as either the rows or columns of a 2-dimensional array. This provides a utility similar to the REPLICATE functions provided in IDL for scalar values.";"150";"replicate_vector.html";"328"
"10410";"RMS_EDGE";"This function accepts two images, original and altered. The two images must have the same dimensions. The original image is converted to luminance, and then an edge mask is calculated. The edge mask is found by applying a gradient ope...";"150";"rms_edge.html";"322"
"10411";"ROTATE3D";"This function will perform a rotation of the provided homogenous point in 3-space. The result represents the orthogonal matrix corresponding to a clockwise/left-handed rotation with Euler angles angleX, angleY, and angleZ with x-y-z c...";"150";"rotate3d.html";"873"
"10412";"SCRAMBLE_IMAGE";"This function returns a version of the provided image in which the digital count value locations have been scrambled a specified number of times (numberTransformations) using toral automorphism (G. Voyatzis and I. Pitas, Applications ...";"150";"scramble_image.html";"291"
"10413";"SPATIAL_FILTER";"This function will return a response from the spatial filtering of a one-, two-, or three-dimensional array with the provided one- or two-dimensional filter. If specified, this routine will properly rotate the filter before performing...";"150";"spatial_filter.html";"269"
"10414";"SRGB2LAB_IMAGE";"This function converts a provided sRGB color image to a CIE L*a*b* color space representation image assuming Illuminant D65. A non-linearity adjustment for the monitor response is applied to the provided color data.";"150";"srgb2lab_image.html";"201"
"10415";"SRGB2XYZ";"This function converts a provided sRGB color triplet to tristimulus values. The sRGB values are assumed to be in the range [0,1]. A non-linearity adjustment for the monitor response is applied to the provided color data. (Source: http...";"150";"srgb2xyz.html";"255"
"10416";"STDDEV_IMAGE";"This function will compute the standard deviation in a local neighborhood around each pixel in a greyscale image.";"150";"stddev_image.html";"266"
"10417";"TAG_EXISTS";"This function will search a structure for the existence of a specified tag.";"150";"tag_exists.html";"217"
"10418";"TES";"This user-interactive procedure will perform a temperature-emissivity separation using a user-provided sample and downwelling radiance spectra. The spectra must be provided as a function of wavelength [micrometers] in units of W/m^2/s...";"150";"tes.html";"310"
"10419";"WRITE_MP4";"This procedure will create an MPEG4 video file from the provided frames. The frames can be either greyscale or 3-channel color.";"150";"write_mp4.html";"170"
"10421";"XYZ2LAB";"This function returns the converted CIE L*a*b* values for a provided tristimulus value assuming a particular illuminant, namely L* = 116 * f( Y / Yw ) - 16 a* = 500 * [f( X / Xw ) - f( Y / Yn )] b* = 200 * [f( Y / Yw ) - f( Z / Zn )] ...";"150";"xyz2lab.html";"313"
"10423";"XYZ2SRGB";"This function converts a provided set of tristimulus values to sRGB. The tristimulus values are assumed to be in the range [0,1] and computed with illuminant D65. A non-linearity adjustment for the monitor response is applied (gamma =...";"150";"xyz2srgb.html";"219"
"10428";"!COLOR System Variable";;"135";"Constant_System_Variable.html";"0"
"10429";"!DPI System Variable";;"135";"Constant_System_Variable.html";"0"
"10430";"!DTOR System Variable";;"135";"Constant_System_Variable.html";"0"
"10431";"!MAP System Variable";;"135";"Constant_System_Variable.html";"0"
"10432";"!NULL System Variable";;"135";"Constant_System_Variable.html";"0"
"10433";"!PI System Variable";;"135";"Constant_System_Variable.html";"0"
"10434";"!RADEG System Variable";;"135";"Constant_System_Variable.html";"0"
"10435";"!VALUES System Variable";;"135";"Constant_System_Variable.html";"0"
"10436";"!C System Variable";;"135";"Graphics_System_Variable.html";"0"
"10437";"!D Graphics System Variable";;"135";"Graphics_System_Variable.html";"0"
"10438";"!ORDER Graphics System Variable";;"135";"Graphics_System_Variable.html";"0"
"10439";"!P Graphics System Variable";;"135";"Graphics_System_Variable.html";"0"
"10440";"!X !Y !Z Graphics System Variables";;"135";"Graphics_System_Variable.html";"0"
"10441";"!ERR Error Handling System Variable";;"135";"Error_Handling_System_Va.html";"0"
"10442";"!ERROR_STATE Error Handling System Variable";;"135";"Error_Handling_System_Va.html";"0"
"10443";"!ERROR Error Handling System Variable";;"135";"Error_Handling_System_Va.html";"0"
"10444";"!ERR_STRING Error Handling System Variable";;"135";"Error_Handling_System_Va.html";"0"
"10445";"!EXCEPT Error Handling System Variable";;"135";"Error_Handling_System_Va.html";"0"
"10446";"!MOUSE Error Handling System Variable";;"135";"Error_Handling_System_Va.html";"0"
"10447";"!MSG_PREFIX Error Handling System Variable";;"135";"Error_Handling_System_Va.html";"0"
"10448";"!SYSERROR Error Handling System Variable";;"135";"Error_Handling_System_Va.html";"0"
"10449";"!SYSERR_STRING Error Handling System Variable";;"135";"Error_Handling_System_Va.html";"0"
"10450";"!WARN Error Handling System Variable";;"135";"Error_Handling_System_Va.html";"0"
"10451";"!CPU Environment System Variable";;"135";"IDL_Environment_System_V.html";"0"
"10452";"!DIR Environment System Variable";;"135";"IDL_Environment_System_V.html";"0"
"10453";"!DLM_PATH Environment System Variable";;"135";"IDL_Environment_System_V.html";"0"
"10454";"!EDIT_INPUT Environment System Variable";;"135";"IDL_Environment_System_V.html";"0"
"10455";"!HELP_PATH Environment System Variable";;"135";"IDL_Environment_System_V.html";"0"
"10456";"!JOURNAL Environment System Variable";;"135";"IDL_Environment_System_V.html";"0"
"10457";"!MAKE_DLL Environment System Variable";;"135";"IDL_Environment_System_V.html";"0"
"10458";"!MORE Environment System Variable";;"135";"IDL_Environment_System_V.html";"0"
"10459";"!PATH Environment System Variable";;"135";"IDL_Environment_System_V.html";"0"
"10460";"!PROMPT Environment System Variable";;"135";"IDL_Environment_System_V.html";"0"
"10461";"!QUIET Environment System Variable";;"135";"IDL_Environment_System_V.html";"0"
"10462";"!VERSION Environment System Variable";;"135";"IDL_Environment_System_V.html";"0"
"16221";"mgdbmysql::execute";"Perform an SQL command that does not retrieve a result.";"147";"mgdbmysql__define.html#mgdbmysql::execute";"0"
"16220";"mgdbmysql::connect";"Connect to a database.";"147";"mgdbmysql__define.html#mgdbmysql::connect";"0"
"16219";"mgdbmysql::cleanup";"Free resources, including closing database connection.";"147";"mgdbmysql__define.html#mgdbmysql::cleanup";"0"
"16218";"mgdbmysql::_overloadPrint";"Returns a string array giving either the available databases or tables, depending on whether the database is currently set.";"147";"mgdbmysql__define.html#mgdbmysql::_overloadPrint";"0"
"16217";"mgcoset__define";"Define instance variables.";"147";"mgcoset__define.html#mgcoset__define";"78"
"16216";"mgcoset::remove";"Remove elements from the set.";"147";"mgcoset__define.html#mgcoset::remove";"235"
"16215";"mgcoset::init";"Create set object.";"147";"mgcoset__define.html#mgcoset::init";"0"
"16214";"mgcoset::contains";"Determine if a set contains a given element.";"147";"mgcoset__define.html#mgcoset::contains";"0"
"16213";"mgcoset::cleanup";"Free resources.";"147";"mgcoset__define.html#mgcoset::cleanup";"0"
"16211";"mgcoset::_overloadSize";"Returns the number of elements in the set";"147";"mgcoset__define.html#mgcoset::_overloadSize";"0"
"16212";"mgcoset::add";"Add elements to the set.";"147";"mgcoset__define.html#mgcoset::add";"0"
"16210";"mgcoset::_overloadPrint";"Returns the elements to print.";"147";"mgcoset__define.html#mgcoset::_overloadPrint";"0"
"16209";"mgcoset::_overloadPlus";"Performance set union.";"147";"mgcoset__define.html#mgcoset::_overloadPlus";"0"
"16208";"mgcoset::_overloadOr";"Performance set union.";"147";"mgcoset__define.html#mgcoset::_overloadOr";"0"
"16207";"mgcoset::_overloadMinus";"Performance set difference.";"147";"mgcoset__define.html#mgcoset::_overloadMinus";"0"
"16206";"mgcoset::_overloadIsTrue";"Evaluates set for truth.";"147";"mgcoset__define.html#mgcoset::_overloadIsTrue";"0"
"16205";"mgcoset::_overloadHelp";"Returns a string describing the set.";"147";"mgcoset__define.html#mgcoset::_overloadHelp";"0"
"16204";"mgcoset::_overloadForeach";"Handle iterating over the elements in a set.";"147";"mgcoset__define.html#mgcoset::_overloadForeach";"0"
"16203";"mgcoset::_overloadBracketsRightSide";"Allows array index access with brackets.";"147";"mgcoset__define.html#mgcoset::_overloadBracketsRightSide";"0"
"16202";"mgcoset::_overloadAnd";"Performance set union.";"147";"mgcoset__define.html#mgcoset::_overloadAnd";"0"
"16201";"mgcoraggedarray__define";"Define instance variables.";"147";"mgcoraggedarray__define.html#mgcoraggedarray__define";"149"
"16200";"mgcoraggedarray::init";"Create a ragged array.";"147";"mgcoraggedarray__define.html#mgcoraggedarray::init";"0"
"16199";"mgcoraggedarray::get";"Get elements of the array.";"147";"mgcoraggedarray__define.html#mgcoraggedarray::get";"0"
"16198";"mgcoraggedarray::cleanup";"Free resources.";"147";"mgcoraggedarray__define.html#mgcoraggedarray::cleanup";"0"
"16197";"mgcoraggedarray::add";"Add an array to the ragged array.";"147";"mgcoraggedarray__define.html#mgcoraggedarray::add";"0"
"16196";"mgcohashtable__define";"Hash table implementation.";"147";"mgcohashtable__define.html#mgcohashtable__define";"127"
"16195";"mgcohashtable::values";"Returns an array of the values of the hash table.";"147";"mgcohashtable__define.html#mgcohashtable::values";"79"
"16194";"mgcohashtable::update";"Adds all the keys of hashtable to the this hash table (replacing values in this hash table if they are in present in hashtable).";"147";"mgcohashtable__define.html#mgcohashtable::update";"0"
"16193";"mgcohashtable::setdefault";"Finds the value associated with the given key, but sets the value for the key to default if the key is not found.";"147";"mgcohashtable__define.html#mgcohashtable::setdefault";"0"
"16192";"mgcohashtable::remove";"Removes the value associated with the given key.";"147";"mgcohashtable__define.html#mgcohashtable::remove";"0"
"16191";"mgcohashtable::put";"Puts the key-value pair into the hash table or updates the value for the key if it is already in the hash table.";"147";"mgcohashtable__define.html#mgcohashtable::put";"0"
"16189";"mgcohashtable::keys";"Returns an array of the keys of the hash table.";"147";"mgcohashtable__define.html#mgcohashtable::keys";"0"
"16190";"mgcohashtable::print";"Prints keys and values to a given LUN.";"147";"mgcohashtable__define.html#mgcohashtable::print";"0"
"16188";"mgcohashtable::isEmpty";"Determines if the hash table is empty.";"147";"mgcohashtable__define.html#mgcohashtable::isEmpty";"0"
"16187";"mgcohashtable::init";"Create a hash table.";"147";"mgcohashtable__define.html#mgcohashtable::init";"0"
"16186";"mgcohashtable::getProperty";"Retrieve properties of the hash table.";"147";"mgcohashtable__define.html#mgcohashtable::getProperty";"0"
"16185";"mgcohashtable::get";"Finds the value associated with the given key.";"147";"mgcohashtable__define.html#mgcohashtable::get";"0"
"16184";"mgcohashtable::count";"Find the number of key-value pairs in the hash table";"147";"mgcohashtable__define.html#mgcohashtable::count";"0"
"16183";"mgcohashtable::cleanup";"Frees hash table resources, but the resources contained by the hash table.";"147";"mgcohashtable__define.html#mgcohashtable::cleanup";"0"
"16182";"mgcohashtable::_overloadSize";"Returns the number of elements in the array list.";"147";"mgcohashtable__define.html#mgcohashtable::_overloadSize";"0"
"16181";"mgcohashtable::_overloadPrint";"Returns the elements to print.";"147";"mgcohashtable__define.html#mgcohashtable::_overloadPrint";"0"
"16180";"mgcohashtable::_overloadPlus";"Concatenate two hash tables.";"147";"mgcohashtable__define.html#mgcohashtable::_overloadPlus";"0"
"16179";"mgcohashtable::_overloadHelp";"Returns a string describing the array list.";"147";"mgcohashtable__define.html#mgcohashtable::_overloadHelp";"0"
"16178";"mgcohashtable::_overloadForeach";"Allows an array list to be used in a FOREACH loop.";"147";"mgcohashtable__define.html#mgcohashtable::_overloadForeach";"0"
"16177";"mgcohashtable::_overloadBracketsRightSide";"Allows hash table access with brackets.";"147";"mgcohashtable__define.html#mgcohashtable::_overloadBracketsRightSide";"0"
"16176";"mgcohashtable::_overloadBracketsLeftSide";"Allows setting values of the array list by array index.";"147";"mgcohashtable__define.html#mgcohashtable::_overloadBracketsLeftSide";"0"
"16175";"mgcohashtable::_findNextKey";"Finds the next key in the hash, if present.";"147";"mgcohashtable__define.html#mgcohashtable::_findNextKey";"0"
"16174";"mgcohashtable::_findKeyPos";"Helper method to find the position of a key.";"147";"mgcohashtable__define.html#mgcohashtable::_findKeyPos";"0"
"16173";"mgcohashtable::_calcHashCode";"Calculates the hash code of the given key.";"147";"mgcohashtable__define.html#mgcohashtable::_calcHashCode";"0"
"16172";"mgcoarraylistiterator__define";"Define member variables.";"147";"mgcoarraylistiterator__define.html#mgcoarraylistiterator__define";"147"
"16171";"mgcoarraylistiterator::remove";"Removes from the underlying MGArrayList the last element returned.";"147";"mgcoarraylistiterator__define.html#mgcoarraylistiterator::remove";"0"
"16170";"mgcoarraylistiterator::next";"Return the next item in the underlying collection.";"147";"mgcoarraylistiterator__define.html#mgcoarraylistiterator::next";"0"
"16169";"mgcoarraylistiterator::init";"Initialize an MGArrayListIterator.";"147";"mgcoarraylistiterator__define.html#mgcoarraylistiterator::init";"0"
"16168";"mgcoarraylistiterator::hasNext";"Determine if the underlying collection has another element to retrieve.";"147";"mgcoarraylistiterator__define.html#mgcoarraylistiterator::hasNext";"0"
"16167";"mgcoarraylistiterator::cleanup";"Free resources of the iterator (not the underlying collection).";"147";"mgcoarraylistiterator__define.html#mgcoarraylistiterator::cleanup";"0"
"16166";"mgcoarraylist__define";"Define member variables.";"147";"mgcoarraylist__define.html#mgcoarraylist__define";"225"
"16165";"mgcoarraylist::setProperty";"Set properties of the list.";"147";"mgcoarraylist__define.html#mgcoarraylist::setProperty";"0"
"16164";"mgcoarraylist::remove";"Remove specified elements from the list.";"147";"mgcoarraylist__define.html#mgcoarraylist::remove";"0"
"16163";"mgcoarraylist::move";"Move an element of the list to another position.";"147";"mgcoarraylist__define.html#mgcoarraylist::move";"0"
"16162";"mgcoarraylist::iterator";"Creates an iterator to iterate through the elements of the array list.";"147";"mgcoarraylist__define.html#mgcoarraylist::iterator";"0"
"16161";"mgcoarraylist::isContained";"Determines whether a list contains specified elements.";"147";"mgcoarraylist__define.html#mgcoarraylist::isContained";"0"
"16160";"mgcoarraylist::init";"Create a list.";"147";"mgcoarraylist__define.html#mgcoarraylist::init";"0"
"16159";"mgcoarraylist::getProperty";"Get properties of the list.";"147";"mgcoarraylist__define.html#mgcoarraylist::getProperty";"0"
"16158";"mgcoarraylist::get";"Get elements of the list.";"147";"mgcoarraylist__define.html#mgcoarraylist::get";"0"
"16157";"mgcoarraylist::count";"Returns the number of elements in the list.";"147";"mgcoarraylist__define.html#mgcoarraylist::count";"0"
"16156";"mgcoarraylist::cleanup";"Cleanup list resources.";"147";"mgcoarraylist__define.html#mgcoarraylist::cleanup";"0"
"16155";"mgcoarraylist::add";"Add elements to the list.";"147";"mgcoarraylist__define.html#mgcoarraylist::add";"0"
"16154";"mgcoarraylist::_overloadSize";"Returns the number of elements in the array list.";"147";"mgcoarraylist__define.html#mgcoarraylist::_overloadSize";"0"
"16153";"mgcoarraylist::_overloadPrint";"Returns the elements to print.";"147";"mgcoarraylist__define.html#mgcoarraylist::_overloadPrint";"0"
"16152";"mgcoarraylist::_overloadPlus";"Concatenate two array lists.";"147";"mgcoarraylist__define.html#mgcoarraylist::_overloadPlus";"0"
"16151";"mgcoarraylist::_overloadHelp";"Returns a string describing the array list.";"147";"mgcoarraylist__define.html#mgcoarraylist::_overloadHelp";"0"
"16150";"mgcoarraylist::_overloadForeach";"Allows an array list to be used in a FOREACH loop.";"147";"mgcoarraylist__define.html#mgcoarraylist::_overloadForeach";"0"
"16149";"mgcoarraylist::_overloadBracketsRightSide";"Allows array index access with brackets.";"147";"mgcoarraylist__define.html#mgcoarraylist::_overloadBracketsRightSide";"0"
"16148";"mgcoarraylist::_overloadBracketsLeftSide";"Allows setting values of the array list by array index.";"147";"mgcoarraylist__define.html#mgcoarraylist::_overloadBracketsLeftSide";"0"
"16147";"mgcoarraylist::_overloadAsterisk";"Repeat an array list a given number of times.";"147";"mgcoarraylist__define.html#mgcoarraylist::_overloadAsterisk";"0"
"16145";"mgcoabstractlist::remove";"Remove specified elements from the list.";"147";"mgcoabstractlist__define.html#mgcoabstractlist::remove";"154"
"16146";"mgcoabstractlist__define";"Define member variables.";"147";"mgcoabstractlist__define.html#mgcoabstractlist__define";"0"
"16144";"mgcoabstractlist::move";"Move an element of the list to another position.";"147";"mgcoabstractlist__define.html#mgcoabstractlist::move";"0"
"16143";"mgcoabstractlist::iterator";"Creates an iterator to iterate through the elements of the list.";"147";"mgcoabstractlist__define.html#mgcoabstractlist::iterator";"0"
"16142";"mgcoabstractlist::isContained";"Determines whether a list contains specified elements.";"147";"mgcoabstractlist__define.html#mgcoabstractlist::isContained";"0"
"16141";"mgcoabstractlist::init";"Initialize list.";"147";"mgcoabstractlist__define.html#mgcoabstractlist::init";"0"
"16140";"mgcoabstractlist::getProperty";"Get properties.";"147";"mgcoabstractlist__define.html#mgcoabstractlist::getProperty";"0"
"16139";"mgcoabstractlist::get";"Get elements of the list.";"147";"mgcoabstractlist__define.html#mgcoabstractlist::get";"0"
"16138";"mgcoabstractlist::count";"Returns the number of elements in the list.";"147";"mgcoabstractlist__define.html#mgcoabstractlist::count";"0"
"16137";"mgcoabstractlist::cleanup";"Free resouces.";"147";"mgcoabstractlist__define.html#mgcoabstractlist::cleanup";"0"
"16136";"mgcoabstractlist::add";"Add elements to the list.";"147";"mgcoabstractlist__define.html#mgcoabstractlist::add";"0"
"16135";"mgcoabstractiterator__define";"Define member variables.";"147";"mgcoabstractiterator__define.html#mgcoabstractiterator__define";"161"
"16134";"mgcoabstractiterator::remove";"Removes from the underlying MGArrayList the last element returned.";"147";"mgcoabstractiterator__define.html#mgcoabstractiterator::remove";"0"
"16133";"mgcoabstractiterator::next";"Return the next item in the underlying collection.";"147";"mgcoabstractiterator__define.html#mgcoabstractiterator::next";"0"
"16132";"mgcoabstractiterator::init";"Initialize an iterator.";"147";"mgcoabstractiterator__define.html#mgcoabstractiterator::init";"0"
"16131";"mgcoabstractiterator::hasNext";"Determine if the underlying collection has another element to retrieve.";"147";"mgcoabstractiterator__define.html#mgcoabstractiterator::hasNext";"0"
"16130";"mgcoabstractiterator::cleanup";"Free resources of the iterator (not the underlying collection).";"147";"mgcoabstractiterator__define.html#mgcoabstractiterator::cleanup";"0"
"16129";"mganrandom__define";"Define instance variables.";"147";"mganrandom__define.html#mganrandom__define";"163"
"16128";"mganrandom::init";"Creates a random number generator.";"147";"mganrandom__define.html#mganrandom::init";"0"
"16127";"mganrandom::getSequence";"Returns a permutation of the given range of integers.";"147";"mganrandom__define.html#mganrandom::getSequence";"0"
"16126";"mganrandom::getIntegers";"Return the given number of random integers (with repetition).";"147";"mganrandom__define.html#mganrandom::getIntegers";"0"
"16125";"mganrandom::getGaussians";"Return the given number of random Gaussian floats.";"147";"mganrandom__define.html#mganrandom::getGaussians";"0"
"16124";"mganrandom::cleanup";"Free resources.";"147";"mganrandom__define.html#mganrandom::cleanup";"0"
"16123";"mganrandom::_getData";"Read from an URL (with error checking).";"147";"mganrandom__define.html#mganrandom::_getData";"0"
"16122";"mganrandom::_convertData";"Convert data to given type.";"147";"mganrandom__define.html#mganrandom::_convertData";"72"
"16121";"mg_zip";"Make a zip file from an array of input files.";"147";"mg_zip.html#mg_zip";"11"
"16120";"mg_xpovray";"Launch the POV-Ray application.";"147";"mg_xpovray.html#mg_xpovray";"85"
"16119";"mg_xml_parse";"Parse an XML file into a structure.";"147";"mg_xml_parse.html#mg_xml_parse";"0"
"16118";"mg_xml_getdata";"Returns a specific element or attribute's value from an XML file.";"147";"mg_xml_getdata.html#mg_xml_getdata";"0"
"16117";"mg_xml_browser";"Start a widget program to browse an XML file.";"147";"mg_xml_browser.html#mg_xml_browser";"154"
"16116";"mg_xloadct";"Load a color table by index using a GUI interface.";"147";"mg_xloadct.html#mg_xloadct";"1165"
"16115";"mg_xkcdify";"Create an xkcd-style line.";"147";"mg_xkcdify.html#mg_xkcdify";"144"
"16114";"mg_x3d_scatter";"Create an x3d scatter plot.";"147";"mg_x3d_scatter.html#mg_x3d_scatter";"6"
"16113";"mg_write_obj";"Output a polygon to an .obj file, as described in the Wikipedia article.";"147";"mg_write_obj.html#mg_write_obj";"7"
"16112";"mg_write_kml_define_buttons";"Trick to automatically add this to the ENVI menu.";"147";"mg_write_kml.html#mg_write_kml_define_buttons";"85"
"16111";"mg_write_kml";"Event handler for ENVI menu.";"147";"mg_write_kml.html#mg_write_kml";"59"
"16110";"mg_write_html";"Write HTML for a given IDL variable.";"147";"mg_write_html.html#mg_write_html";"5"
"16109";"mg_write_config";"Writes a configuration file.";"147";"mg_write_config.html#mg_write_config";"56"
"16108";"mg_window";"Creates a ""window"" of the given size on the current device.";"147";"mg_window.html#mg_window";"102"
"16107";"mg_weather";"Print the current conditions and a 4 day forecast for the given location.";"147";"mg_weather.html#mg_weather";"122"
"16106";"mg_vel_streamlines";"Compute the streamlines from each starting point.";"147";"mg_vel.html#mg_vel_streamlines";"100"
"16104";"mg_vel_arrowhead";"Add the heads to the arrows.";"147";"mg_vel.html#mg_vel_arrowhead";"0"
"16105";"mg_vel_interpolate";"Bilinear interpolation.";"147";"mg_vel.html#mg_vel_interpolate";"0"
"16103";"mg_vel";"Draw a velocity (flow) field with streamlines following the field proportional in length to the vector field magnitude.";"147";"mg_vel.html#mg_vel";"63"
"16102";"mg_varput";"Copies a variable or expression to another stack level, e.g., the main-level.";"147";"mg_varput.html#mg_varput";"88"
"16100";"mg_usersym";"Create a user symbol.";"147";"mg_usersym.html#mg_usersym";"111"
"16101";"mg_variable_declaration";"Returns a string that gives the IDL declaration for the type of the given variable.";"147";"mg_variable_declaration.html#mg_variable_declaration";"84"
"16099";"mg_use_wrapper";"Wrapper for MG_USE to be called from the command line.";"147";"mg_use_wrapper.html#mg_use_wrapper";"119"
"16098";"mg_use";"Creates a list of files required to run the specified routines.";"147";"mg_use.html#mg_use";"113"
"16097";"mg_urlquote";"Replace special characters in the input string using the %xx escape codes.";"147";"mg_urlquote.html#mg_urlquote";"185"
"16096";"mg_updater";"Reads release notes available via a URL to determine if there are new versions available.";"147";"mg_updater.html#mg_updater";"8"
"16095";"mg_typesize";"Returns the size in bytes of a variable of the given type code.";"147";"mg_typesize.html#mg_typesize";"128"
"16094";"mg_typename";"Returns a nice string name for the given type code.";"147";"mg_typename.html#mg_typename";"83"
"16093";"mg_twitter_wrapper";"Command line wrapper for MG_TWITTER.";"147";"mg_twitter_wrapper.html#mg_twitter_wrapper";"95"
"16092";"mg_twitter";"Display tweets in Twitter timeline since last called.";"147";"mg_twitter.html#mg_twitter";"107"
"16091";"mg_trunc";"Truncate argument towards 0.0, i.e., takes the FLOOR of positive values and the CEIL of negative values.";"147";"mg_trunc.html#mg_trunc";"84"
"16090";"mg_triangular";"Returns the upper or lower triangular elements of a 2-dimensional array.";"147";"mg_triangular.html#mg_triangular";"17"
"16088";"mg_tree_layout";"Create a tree.";"147";"mg_tree_layout.html#mg_tree_layout";"71"
"16089";"mg_treemap";"Create a treemap.";"147";"mg_treemap.html#mg_treemap";"83"
"16087";"mg_translate";"Compute a transformation matrix representing a translation.";"147";"mg_translate.html#mg_translate";"109"
"16086";"mg_transformpoint";"Transforms a point by a transformation matrix.";"147";"mg_transformpoint.html#mg_transformpoint";"91"
"16085";"mg_token";"Find a substring in an input string, return the portion of the input string before the substring, and modify the input string to contain only the portion of the string after the token.";"147";"mg_tex2idl.html#mg_token";"166"
"16084";"mg_tm_firstline_gettext";"Helper routine to strip out text from MGtmText tags and add them to the firstline tree.";"147";"mg_tm_firstline.html#mg_tm_firstline_gettext";"191"
"16082";"mg_tm_dump";"Print the contents of a markup tree.";"147";"mg_tm_dump.html#mg_tm_dump";"85"
"16083";"mg_tm_firstline";"Get the first line of text given a markup tree and return it as another markup tree (copying nodes in the original tree where necessary).";"147";"mg_tm_firstline.html#mg_tm_firstline";"0"
"16081";"mg_timer_event";"Timer event handler.";"147";"mg_timer__define.html#mg_timer_event";"130"
"16079";"mg_timer::stop";"Stop the timer.";"147";"mg_timer__define.html#mg_timer::stop";"0"
"16080";"mg_timer__define";"Define instance variables.";"147";"mg_timer__define.html#mg_timer__define";"0"
"16078";"mg_timer::start";"Start the timer.";"147";"mg_timer__define.html#mg_timer::start";"0"
"16077";"mg_timer::setProperty";"Set properties.";"147";"mg_timer__define.html#mg_timer::setProperty";"0"
"16076";"mg_timer::init";"Create a timer instance.";"147";"mg_timer__define.html#mg_timer::init";"0"
"16075";"mg_timer::getProperty";"Get properties.";"147";"mg_timer__define.html#mg_timer::getProperty";"0"
"16073";"mg_timeline";"Create a timeline from the given input file.";"147";"mg_timeline.html#mg_timeline";"109"
"16074";"mg_timer::cleanup";"Free resources.";"147";"mg_timer__define.html#mg_timer::cleanup";"0"
"16072";"mg_ticks";"Calculates [xyz]ticks, [xyz]range, and [xyz]tickv for axis values.";"147";"mg_ticks.html#mg_ticks";"10"
"16071";"mg_thumbnail_volumeplot";"Create a volume visualization.";"147";"mg_thumbnail.html#mg_thumbnail_volumeplot";"76"
"16070";"mg_thumbnail_lineplot";"Create a line plot.";"147";"mg_thumbnail.html#mg_thumbnail_lineplot";"25"
"16069";"mg_thumbnail_image";"Resize image to correct dimensions while preserving the aspect ratio.";"147";"mg_thumbnail.html#mg_thumbnail_image";"0"
"16068";"mg_thumbnail_contourplot";"Create a contour plot.";"147";"mg_thumbnail.html#mg_thumbnail_contourplot";"0"
"16067";"mg_thumbnail";"Dispatches data to proper helper routine to produce a simple thumbnail visualization of the data and returns the result as a true color image.";"147";"mg_thumbnail.html#mg_thumbnail";"0"
"16066";"mg_themeriver";"Create a theme river style plot.";"147";"mg_themeriver.html#mg_themeriver";"97"
"16065";"mg_textbackground";"Create a transparent box on a graphic.";"147";"mg_textbackground.html#mg_textbackground";"104"
"16064";"mg_textable";"Returns table containing allowable TeX sequences and their translation to IDL.";"147";"mg_tex2idl.html#mg_textable";"0"
"16063";"mg_tex2idl";"Convert a TeX string to a string with embedded IDL format codes.";"147";"mg_tex2idl.html#mg_tex2idl";"0"
"16062";"mg_ternaryplot";"Create a ternary plot.";"147";"mg_ternaryplot.html#mg_ternaryplot";"165"
"16061";"mg_temp_filename";"Create a temporary filename from a C-style format.";"147";"mg_temp_filename.html#mg_temp_filename";"98"
"16060";"mg_sysreport";"Prints system information.";"147";"mg_sysreport.html#mg_sysreport";"87"
"16059";"mg_sum_reverse_indices";"Calculate sum of the elements in each of the bins of a histogram.";"147";"mg_sum_reverse_indices.html#mg_sum_reverse_indices";"26"
"16058";"mg_subsuper";"Translate TeX superscript (^) or subscript (_) to proper IDL format codes.";"147";"mg_tex2idl.html#mg_subsuper";"0"
"16057";"mg_subs";"String substitution routine which substitutes values into a given string using the correspondences found in the provided hash or structure.";"147";"mg_subs.html#mg_subs";"188"
"16056";"mg_strwrap";"Wrap a string into a character width limit space.";"147";"mg_strwrap.html#mg_strwrap";"107"
"16055";"mg_strunmerge";"Splits a scalar string with newline characters into a string array.";"147";"mg_strunmerge.html#mg_strunmerge";"93"
"16054";"mg_struct_equal";"Compare two structures for equality.";"147";"mg_struct_equal.html#mg_struct_equal";"87"
"16053";"mg_strmerge";"Merges a string array into a single string separated by carriage return/linefeeds.";"147";"mg_strmerge.html#mg_strmerge";"88"
"16052";"mg_string_hash__define";"Define instance variables.";"147";"mg_string_hash__define.html#mg_string_hash__define";"37"
"16051";"mg_string_hash::init";"Initialize string hash object.";"147";"mg_string_hash__define.html#mg_string_hash::init";"0"
"16050";"mg_string_hash::hasKeys";"Determines if the hash has the given keys.";"147";"mg_string_hash__define.html#mg_string_hash::hasKeys";"0"
"16049";"mg_string_hash::_overloadBracketsRightSide";"Allows hash access with brackets.";"147";"mg_string_hash__define.html#mg_string_hash::_overloadBracketsRightSide";"0"
"16048";"mg_string_hash::_overloadBracketsLeftSide";"Allows setting values of the string hash by array index.";"147";"mg_string_hash__define.html#mg_string_hash::_overloadBracketsLeftSide";"0"
"16047";"mg_string__define";"Define instance variables.";"147";"mg_string__define.html#mg_string__define";"204"
"16045";"mg_string::init";"Initialize the object.";"147";"mg_string__define.html#mg_string::init";"0"
"16046";"mg_string::toString";"Returns the underlying IDL string.";"147";"mg_string__define.html#mg_string::toString";"0"
"16044";"mg_string::getProperty";"Get properties.";"147";"mg_string__define.html#mg_string::getProperty";"0"
"16043";"mg_string::_overloadPrint";"Called by the PRINT routine when this object is printed.";"147";"mg_string__define.html#mg_string::_overloadPrint";"0"
"16042";"mg_string::_overloadPound";"Called when the two strings or string objects are joined using a format code by the # operator.";"147";"mg_string__define.html#mg_string::_overloadPound";"0"
"16041";"mg_string::_overloadPlus";"Called when two strings or strings objects are concatenated with the + operator.";"147";"mg_string__define.html#mg_string::_overloadPlus";"0"
"16040";"mg_string::_overloadHelp";"Called by the HELP routine when information about this object is required.";"147";"mg_string__define.html#mg_string::_overloadHelp";"0"
"16039";"mg_string::_overloadForeach";"Called by the FOREACH routine when this object is looped over.";"147";"mg_string__define.html#mg_string::_overloadForeach";"0"
"16038";"mg_string::_overloadBracketsRightSide";"Called when a string object is accessed with the square brackets, i.e., [].";"147";"mg_string__define.html#mg_string::_overloadBracketsRightSide";"0"
"16037";"mg_streplace";"Handle string replacment with regular expressions.";"147";"mg_streplace.html#mg_streplace";"131"
"16036";"mg_stregex";"Wrapper for STREGEX which includes a FIND_ALL keyword to find all occurrences within a scalar string.";"147";"mg_stregex.html#mg_stregex";"79"
"16035";"mg_strcnt";"Count number of occurrences of a substring in a string.";"147";"mg_tex2idl.html#mg_strcnt";"0"
"16034";"mg_stepchart_plotflats";"Plot the flat portions of a graph on a predefined coordinate system.";"147";"mg_stepchart.html#mg_stepchart_plotflats";"96"
"16033";"mg_stepchart";"Plot the stepchart.";"147";"mg_stepchart.html#mg_stepchart";"0"
"16032";"mg_statusline";"Maintain a one-line status line on a VT100-compatible terminal (Unix only).";"147";"mg_statusline.html#mg_statusline";"142"
"16031";"mg_src_root";"Returns the absolute directory name (with a trailing slash) of the location of the source code for the routine that called this function.";"147";"mg_src_root.html#mg_src_root";"139"
"16030";"mg_spotmatrix_makeglyph";"Make a circle, filled in proportionally to its normalized value.";"147";"mg_spotmatrix.html#mg_spotmatrix_makeglyph";"179"
"16029";"mg_spotmatrix";"Create spot matrix table.";"147";"mg_spotmatrix.html#mg_spotmatrix";"69"
"16028";"mg_spline";"Creates a 2-dimensional spline curve through the given x- and y-coordinates.";"147";"mg_spline.html#mg_spline";"111"
"16027";"mg_spellcorrect_known_edits2";"Create hash of all correct edits of a word that are only 2 edits off from the original.";"147";"mg_spellcorrect.html#mg_spellcorrect_known_edits2";"138"
"16026";"mg_spellcorrect_known";"Creates a hash of the known words in a given hash of words.";"147";"mg_spellcorrect.html#mg_spellcorrect_known";"0"
"16025";"mg_spellcorrect_generate_hash";"Generates the known words hash.";"147";"mg_spellcorrect.html#mg_spellcorrect_generate_hash";"0"
"16024";"mg_spellcorrect_edits1";"Create hash of all edits of a word that are only 1 character off from the original.";"147";"mg_spellcorrect.html#mg_spellcorrect_edits1";"0"
"16023";"mg_spellcorrect";"Corrects the spelling of a word.";"147";"mg_spellcorrect.html#mg_spellcorrect";"0"
"16021";"mg_sparkline";"Writes a sparkline plot to a PNG file.";"147";"mg_sparkline.html#mg_sparkline";"92"
"16022";"mg_spectrogram";"Produce a spectrogram.";"147";"mg_spectrogram.html#mg_spectrogram";"857"
"16020";"mg_sparkdichotomous";"Create a dichotomous sparkline as a PNG image file.";"147";"mg_sparkdichotomous.html#mg_sparkdichotomous";"119"
"16019";"mg_sparkbar";"Create a sparkbar plot.";"147";"mg_sparkbar.html#mg_sparkbar";"105"
"16017";"mg_sort";"Radix sort input data.";"147";"mg_sort.html#mg_sort";"72"
"16018";"mg_sort_strings";"Handle special case of sorting string arrays.";"147";"mg_sort.html#mg_sort_strings";"45"
"16015";"mg_slopegraph";"Creates a comparison chart.";"147";"mg_slopegraph.html#mg_slopegraph";"76"
"16016";"mg_slopegraph_spread";"Spread out text lines that are too close to each other.";"147";"mg_slopegraph.html#mg_slopegraph_spread";"38"
"16013";"mg_sha1";"Find the SHA1 hash of the input.";"147";"mg_sha1.html#mg_sha1";"19"
"16014";"mg_sign";"Return the sign of the values of an array: -1 for negative values, 0 for 0 values, 1 for positive values.";"147";"mg_sign.html#mg_sign";"120"
"16012";"mg_setunion";"Find the union of two sets of indices.";"147";"mg_setunion.html#mg_setunion";"120"
"16011";"mg_setintersection";"Find the intersection of two sets of indices.";"147";"mg_setintersection.html#mg_setintersection";"82"
"16010";"mg_setdifference";"Find the difference of two sets of indices.";"147";"mg_setdifference.html#mg_setdifference";"92"
"16009";"mg_set_plot_display";"Sets the direct graphics device to the ""display"", i.e., 'X' on Unix-based systems or 'WIN' on Windows systems.";"147";"mg_set_plot_display.html#mg_set_plot_display";"82"
"16008";"mg_set_path";"Set the IDL path (!path) or DLM path (!dlm_path) given an array of directories.";"147";"mg_set_path.html#mg_set_path";"103"
"16007";"mg_serialize";"Serializes an array, object, or structure to a string.";"147";"mg_serialize.html#mg_serialize";"25"
"16006";"mg_semaphore__define";"Define MG_Semaphore class.";"147";"mg_semaphore__define.html#mg_semaphore__define";"51"
"16005";"mg_semaphore::setProperty";"Set properties.";"147";"mg_semaphore__define.html#mg_semaphore::setProperty";"0"
"16004";"mg_semaphore::release";"Release a resource limited by the semaphore.";"147";"mg_semaphore__define.html#mg_semaphore::release";"0"
"16003";"mg_semaphore::init";"Create a semaphore object.";"147";"mg_semaphore__define.html#mg_semaphore::init";"0"
"16002";"mg_semaphore::getProperty";"Get properties.";"147";"mg_semaphore__define.html#mg_semaphore::getProperty";"0"
"16001";"mg_semaphore::cleanup";"Free the resources of the semaphore object.";"147";"mg_semaphore__define.html#mg_semaphore::cleanup";"0"
"16000";"mg_semaphore::acquire";"Acquire a resource limited by the semaphore.";"147";"mg_semaphore__define.html#mg_semaphore::acquire";"0"
"15999";"mg_semaphore::_overloadPrint";"Get output for use with PRINT.";"147";"mg_semaphore__define.html#mg_semaphore::_overloadPrint";"0"
"15998";"mg_semaphore::_overloadHelp";"Overload routine used by HELP.";"147";"mg_semaphore__define.html#mg_semaphore::_overloadHelp";"0"
"15997";"mg_sdf_type";"Determine the type of scientific data format file given by the filename.";"147";"mg_sdf_type.html#mg_sdf_type";"96"
"15996";"mg_scatterplot_matrix";"Create a matrix of scatter plots.";"147";"mg_scatterplot_matrix.html#mg_scatterplot_matrix";"66"
"15995";"mg_scatter3d";"Display a 3-dimensional scatter plot.";"147";"mg_scatter3d.html#mg_scatter3d";"74"
"15994";"mg_scaleimage";"Piecewise-linearly scale an image.";"147";"mg_scaleimage.html#mg_scaleimage";"166"
"15993";"mg_scale";"Compute a transformation representing a scaling.";"147";"mg_scale.html#mg_scale";"79"
"15992";"mg_savefile__define";"Define instance variables and inheritance.";"147";"mg_savefile__define.html#mg_savefile__define";"84"
"15991";"mg_savefile::init";"Create a save file object.";"147";"mg_savefile__define.html#mg_savefile::init";"43"
"15990";"mg_savefile::get";"Return a particular item in the .sav file.";"147";"mg_savefile__define.html#mg_savefile::get";"0"
"15989";"mg_savefile::_overloadPrint";"Returns names of each type of save file item in the file.";"147";"mg_savefile__define.html#mg_savefile::_overloadPrint";"0"
"15988";"mg_savefile::_overloadHelp";"Print the help string for all the regular variables in a .sav file.";"147";"mg_savefile__define.html#mg_savefile::_overloadHelp";"0"
"15987";"mg_savefile::_overloadBracketsRightSide";"Allow hash-like subscripting to retrieve variable values.";"147";"mg_savefile__define.html#mg_savefile::_overloadBracketsRightSide";"0"
"15986";"mg_save_list";"Return a listing of the contents of a .sav file.";"147";"mg_save_list.html#mg_save_list";"5"
"15985";"mg_save_getdata";"Retrieve a variable from a save file.";"147";"mg_save_getdata.html#mg_save_getdata";"88"
"15984";"mg_save_dump";"Display a listing of the contents of a .sav file.";"147";"mg_save_dump.html#mg_save_dump";"76"
"15983";"mg_sample";"Get nIndices random indices for an array of size nValues (without repeating an index).";"147";"mg_sample.html#mg_sample";"168"
"15982";"mg_round";"Rounds value to integer value (or to nearest float value).";"147";"mg_round.html#mg_round";"94"
"15981";"mg_rotate";"Computes a transformation matrix representing a rotation.";"147";"mg_rotate.html#mg_rotate";"84"
"15980";"mg_rgb2index";"Convert RGB coordinates of colors to the decomposed color indices of the colors.";"147";"mg_rgb2index.html#mg_rgb2index";"112"
"15979";"mg_responsecode_message";"Get a message for a given response code.";"147";"mg_responsecode_message.html#mg_responsecode_message";"4"
"15977";"mg_repmat";"Create an ncolumns by nrows tiling of arr.";"147";"mg_repmat.html#mg_repmat";"5"
"15978";"mg_resolve_routine";"Routine to resolve a given routine without crashing.";"147";"mg_resolve_routine.html#mg_resolve_routine";"174"
"15976";"mg_repeat";"Repeats a vector nreps times.";"147";"mg_repeat.html#mg_repeat";"140"
"15975";"mg_relief";"Create simple relief visualization for an elevation data set.";"147";"mg_relief.html#mg_relief";"149"
"15974";"mg_reduce_reverse_indices";"Call a function on the elements in each of the bins of a histogram which reduces the elements to a single value, such as a total or product.";"147";"mg_reduce_reverse_indices.html#mg_reduce_reverse_indices";"3"
"15973";"mg_reads";;"147";"mg_reads.html#mg_reads";"78"
"15971";"mg_read_ascii";"Wrapper to READ_ASCII and ASCII_TEMPLATE.";"147";"mg_read_ascii.html#mg_read_ascii";"104"
"15972";"mg_read_config";"Reads a configuration file and returns an MGffOptions object with the results.";"147";"mg_read_config.html#mg_read_config";"340"
"15970";"mg_read";"Reads from the current graphics device (WIN, X, or Z devices) and returns the image in the TRUE format specified.";"147";"mg_read.html#mg_read";"145"
"15969";"mg_rasterpolyline";"Create a raster image of a set of lines.";"147";"mg_rasterpolyline.html#mg_rasterpolyline";"81"
"15968";"mg_range_union";"Union two ranges together to get a new range.";"147";"mg_range_union.html#mg_range_union";"22"
"15967";"mg_range_intersect";"Intersecy two ranges together to get a new range.";"147";"mg_range_intersect.html#mg_range_intersect";"16"
"15966";"mg_range";"Convenience function to compute the minimum and maximm value of an array.";"147";"mg_range.html#mg_range";"97"
"15964";"mg_queue__define";;"147";"mg_queue__define.html#mg_queue__define";"36"
"15965";"mg_radon";"Pure IDL implementation of the RADON routine.";"147";"mg_radon.html#mg_radon";"106"
"15963";"mg_psinfo";"Get/set header information in a PostScript file.";"147";"mg_psinfo.html#mg_psinfo";"120"
"15962";"mg_psfrag";"Processes specially formatted text output in .ps and .eps files with LaTeX.";"147";"mg_psfrag.html#mg_psfrag";"150"
"15960";"mg_psbegin";"Set IDL direct graphics system to PostScript plotting.";"147";"mg_psbegin.html#mg_psbegin";"104"
"15961";"mg_psend";"Used in conjunction with MG_PSBEGIN to end PostScript output.";"147";"mg_psend.html#mg_psend";"73"
"15959";"mg_prowl";"Send a message via Prowl.";"147";"mg_prowl.html#mg_prowl";"110"
"15958";"mg_proto2wrapper";"Convenience routine to convert a C prototype line to C wrapper code.";"147";"mg_proto2wrapper.html#mg_proto2wrapper";"75"
"15957";"mg_profiler_report";"Produce a report for the PROFILER.";"147";"mg_profiler_report.html#mg_profiler_report";"83"
"15956";"mg_process__define";"Class representing a process.";"147";"mg_process__define.html#mg_process__define";"42"
"15955";"mg_process::setProperty";"Set properties.";"147";"mg_process__define.html#mg_process::setProperty";"0"
"15954";"mg_process::join";"Wait for a process to complete; check status and error to determine if it completed (status 2), error (status 3), or was aborted (status 4).";"147";"mg_process__define.html#mg_process::join";"0"
"15953";"mg_process::init";"Create a process object.";"147";"mg_process__define.html#mg_process::init";"0"
"15952";"mg_process::getvar";"Get a variable from the process.";"147";"mg_process__define.html#mg_process::getvar";"0"
"15951";"mg_process::getProperty";"Retrieve properties.";"147";"mg_process__define.html#mg_process::getProperty";"0"
"15950";"mg_process::execute";"Execute a statement inside the process.";"147";"mg_process__define.html#mg_process::execute";"0"
"15949";"mg_process::cleanup";"Free resources.";"147";"mg_process__define.html#mg_process::cleanup";"0"
"15948";"mg_process::_overloadHelp";"Provides convenient output for HELP on NAME process object.";"147";"mg_process__define.html#mg_process::_overloadHelp";"0"
"15947";"mg_print_path";"Print a search path nicely in the output log.";"147";"mg_print_path.html#mg_print_path";"91"
"15945";"mg_povray";"Run POV-Ray on an .ini file and return an image of the result.";"147";"mg_povray.html#mg_povray";"118"
"15946";"mg_power2";"Finds the next power of 2.";"147";"mg_power2.html#mg_power2";"85"
"15944";"mg_pool__define";"Define MG_Pool class.";"147";"mg_pool__define.html#mg_pool__define";"43"
"15943";"mg_pool::status";"Returns the status, and optionally error messages, of the processes in the pool.";"147";"mg_pool__define.html#mg_pool::status";"0"
"15942";"mg_pool::setProperty";"Set properties.";"147";"mg_pool__define.html#mg_pool::setProperty";"0"
"15941";"mg_pool::map";"Execute a function/procedure on each item of an array and returns the result.";"147";"mg_pool__define.html#mg_pool::map";"0"
"15940";"mg_pool::init";"Create a process object.";"147";"mg_pool__define.html#mg_pool::init";"0"
"15939";"mg_pool::getProperty";"Retrieve properties.";"147";"mg_pool__define.html#mg_pool::getProperty";"0"
"15938";"mg_pool::get_process";"Retrieve a process from the pool by index.";"147";"mg_pool__define.html#mg_pool::get_process";"0"
"15937";"mg_pool::cleanup";"Free resources.";"147";"mg_pool__define.html#mg_pool::cleanup";"0"
"15936";"mg_pool::_overloadHelp";"Provides convenient output for HELP on NAME pool object.";"147";"mg_pool__define.html#mg_pool::_overloadHelp";"0"
"15934";"mg_polyline_simplify_dot";"Computes the dot product.";"147";"mg_polyline_simplify.html#mg_polyline_simplify_dot";"151"
"15935";"mg_polyline_simplify_dp";"This is the Douglas-Peucker recursive simplification routine.";"147";"mg_polyline_simplify.html#mg_polyline_simplify_dp";"49"
"15933";"mg_polyline_simplify_d2";"Computes the distance squared of difference between points x and y";"147";"mg_polyline_simplify.html#mg_polyline_simplify_d2";"0"
"15932";"mg_polyline_simplify";"MG_POLYLINE_SIMPLIFY uses the Douglas-Peucker (DP) approximation algorithm that is used extensively for both computer graphics and geographic information systems.";"147";"mg_polyline_simplify.html#mg_polyline_simplify";"0"
"15930";"mg_plotaspect";"Calculate aspect ratio for a plot.";"147";"mg_plotaspect.html#mg_plotaspect";"101"
"15931";"mg_plots";"Wrapper to PLOTS to specify COLOR and THICK on a per point basis.";"147";"mg_plots.html#mg_plots";"82"
"15929";"mg_plot_setdims";"Make sure that !d is set correctly.";"147";"mg_plot.html#mg_plot_setdims";"125"
"15928";"mg_plot";"Wrapper for PLOT routine which has several differences:   1.";"147";"mg_plot.html#mg_plot";"42"
"15927";"mg_platform_extension";"Returns the platform extension used by the PLATFORM_EXTENSION keyword to MAKE_DLL.";"147";"mg_platform_extension.html#mg_platform_extension";"86"
"15926";"mg_pinknoise";"Generates 1/f^a noise.";"147";"mg_pinknoise.html#mg_pinknoise";"152"
"15925";"mg_permutation";"Calculate a mathematical permutation.";"147";"mg_permutation.html#mg_permutation";"105"
"15923";"MG_OUTPUTFORMATFUNC";;"147";"mg_rust_example-dlm.html#MG_OUTPUTFORMATFUNC";"9"
"15924";"mg_parallel_coords";"Display a parallel coordinate graph.";"147";"mg_parallel_coords.html#mg_parallel_coords";"150"
"15921";"mg_options::parseArgs";"Parse arguments.";"147";"mg_options__define.html#mg_options::parseArgs";"290"
"15922";"mg_options__define";"Define instance variables.";"147";"mg_options__define.html#mg_options__define";"0"
"15920";"mg_options::init";"Create option parsing object.";"147";"mg_options__define.html#mg_options::init";"0"
"15919";"mg_options::get";"Get value of option.";"147";"mg_options__define.html#mg_options::get";"0"
"15918";"mg_options::cleanup";"Free resources.";"147";"mg_options__define.html#mg_options::cleanup";"0"
"15917";"mg_options::addParams";"Add a range of positional parameters.";"147";"mg_options__define.html#mg_options::addParams";"0"
"15916";"mg_options::addOption";"Add the definition of an option to the parser.";"147";"mg_options__define.html#mg_options::addOption";"0"
"15915";"mg_open_url";"Open an URL in the default web browser.";"147";"mg_open_url.html#mg_open_url";"219"
"15914";"mg_onlinehelp_lookup";"Determine if a name represents an IDL library function, procedure, or class and return the URL to the online help if it does.";"147";"mg_onlinehelp_lookup.html#mg_onlinehelp_lookup";"24"
"15913";"mg_object_event_handler";"Generic event handler for writing object widget programs.";"147";"mg_object_event_handler.html#mg_object_event_handler";"111"
"15912";"mg_object_cleanup";"Generic cleanup for writing object widget programs.";"147";"mg_object_cleanup.html#mg_object_cleanup";"102"
"15911";"mg_object__define";"Define instance variables.";"147";"mg_object__define.html#mg_object__define";"199"
"15910";"mg_object::toString";"Returns a string representation of the object.";"147";"mg_object__define.html#mg_object::toString";"0"
"15909";"mg_object::help";"Display internal help output with OBJECTS set for this object (so it shows instance data as well).";"147";"mg_object__define.html#mg_object::help";"0"
"15908";"mg_object::_overloadHelp";"Returns a string describing the object.";"147";"mg_object__define.html#mg_object::_overloadHelp";"0"
"15907";"mg_object::_getClassInfo";"Returns information about the class.";"147";"mg_object__define.html#mg_object::_getClassInfo";"0"
"15906";"mg_nexttoken";"Find the next token in a given string.";"147";"mg_tex2idl.html#mg_nexttoken";"0"
"15904";"mg_nc_putdata";"Routine for writing netCDF files.";"147";"mg_nc_putdata.html#mg_nc_putdata";"3"
"15905";"mg_newline";"Returns the newline separator(s) for the OS: linefeed on UNIX platforms and carriage return/linefeeds for Windows.";"147";"mg_newline.html#mg_newline";"183"
"15903";"mg_nc_list";"Return array of element names.";"147";"mg_nc_list.html#mg_nc_list";"8"
"15902";"mg_nc_getdata";"Pulls out a section of a netCDF variable.";"147";"mg_nc_getdata.html#mg_nc_getdata";"105"
"15901";"mg_nc_errormessage";"Convert a netCDF error code to a human readable error message.";"147";"mg_nc_errormessage.html#mg_nc_errormessage";"79"
"15900";"mg_nc_dump";"Parse and display a simple hierarchy of contents of a netCDF file.";"147";"mg_nc_dump.html#mg_nc_dump";"143"
"15899";"mg_nc_decompose";"Determines the type of element described by descriptor, i.e., invalid (0), attribute (1), variable (2), or group (3).";"147";"mg_nc_decompose.html#mg_nc_decompose";"12"
"15898";"mg_nc_browser_handleevents";"Thin procedural wrapper to call ::handleEvents event handler.";"147";"mg_nc_browser.html#mg_nc_browser_handleevents";"108"
"15897";"mg_nc_browser_cleanup";"Thin procedural wrapper to call ::_cleanupWidgets cleanup routine.";"147";"mg_nc_browser.html#mg_nc_browser_cleanup";"0"
"15896";"mg_nc_browser__define";"Define instance variables.";"147";"mg_nc_browser.html#mg_nc_browser__define";"0"
"15895";"mg_nc_browser::setTitle";"Set the window title based on the current filename.";"147";"mg_nc_browser.html#mg_nc_browser::setTitle";"0"
"15894";"mg_nc_browser::loadFiles";"Load netCDF files corresponding to filenames.";"147";"mg_nc_browser.html#mg_nc_browser::loadFiles";"0"
"15893";"mg_nc_browser::init";"Browse the contents of an netCDF file with a GUI browser program.";"147";"mg_nc_browser.html#mg_nc_browser::init";"0"
"15892";"mg_nc_browser::handleEvents";"Handle all events from the widget program.";"147";"mg_nc_browser.html#mg_nc_browser::handleEvents";"0"
"15891";"mg_nc_browser::cleanup";"Free resources";"147";"mg_nc_browser.html#mg_nc_browser::cleanup";"0"
"15890";"mg_nc_browser::_startXManager";"Start XMANAGER.";"147";"mg_nc_browser.html#mg_nc_browser::_startXManager";"0"
"15889";"mg_nc_browser::_realizeWidgets";"Draw the widget hierarchy.";"147";"mg_nc_browser.html#mg_nc_browser::_realizeWidgets";"0"
"15888";"mg_nc_browser::_openFiles";"Bring up pick file dialog to choose a file and load it.";"147";"mg_nc_browser.html#mg_nc_browser::_openFiles";"0"
"15887";"mg_nc_browser::_createWidgets";"Create the widget hierarchy.";"147";"mg_nc_browser.html#mg_nc_browser::_createWidgets";"0"
"15886";"mg_nc_browser::_cleanupWidgets";"Handle cleanup when the widget program is destroyed.";"147";"mg_nc_browser.html#mg_nc_browser::_cleanupWidgets";"0"
"15885";"mg_nc_browser";"Create the browser.";"147";"mg_nc_browser.html#mg_nc_browser";"0"
"15884";"mg_n_smallest";"Finds the n smallest elements of a data array.";"147";"mg_n_smallest.html#mg_n_smallest";"79"
"15883";"mg_n_elements";"In IDL 8.0, the number of elements of an object can be overloaded with the _overloadSize method for objects which inherit from IDL_Object.";"147";"mg_n_elements.html#mg_n_elements";"174"
"15881";"mg_md5";"Hash the input string using MD5.";"147";"mg_md5.html#mg_md5";"193"
"15882";"mg_min";"Returns minimum of an array or object which supports FOREACH loops.";"147";"mg_min.html#mg_min";"113"
"15880";"mg_max";"Returns maximum of an array or object which supports FOREACH loops.";"147";"mg_max.html#mg_max";"118"
"15878";"mg_match";"Routine to match values between two arrays.";"147";"mg_match.html#mg_match";"18"
"15879";"mg_matchdelim";"Returns the position in the input string of the closing curly brace that matches the first open curly brace, -1L if not found.";"147";"mg_tex2idl.html#mg_matchdelim";"0"
"15877";"mg_maketrue";"Converts an image in one TRUE format to another.";"147";"mg_maketrue.html#mg_maketrue";"125"
"15876";"mg_makerange";"Create an array ranging from the startValue and stopping before the stopValue.";"147";"mg_makerange.html#mg_makerange";"90"
"15875";"mg_makect";"Create a color table based on starting and ending colors (or optionally, a center color) and linearly interpolating.";"147";"mg_makect.html#mg_makect";"109"
"15874";"mg_make_zeromq_bindings";"Make 0MQ bindings.";"147";"mg_make_zeromq_bindings.html#mg_make_zeromq_bindings";"3"
"15873";"mg_make_rt";"Wrapper for MAKE_RT.";"147";"mg_make_rt.html#mg_make_rt";"85"
"15872";"mg_make_gsl_bindings";"Make GSL bindings.";"147";"mg_make_gsl_bindings.html#mg_make_gsl_bindings";"114"
"15871";"mg_make_dll";"Wrapper for MAKE_DLL that handles input and output directories more intelligently.";"147";"mg_make_dll.html#mg_make_dll";"212"
"15870";"mg_make_cula_bindings";"Build CULA wrappers.";"147";"mg_make_cula_bindings.html#mg_make_cula_bindings";"72"
"15869";"mg_make_cl_wrapper";"Create a UNIX wrapper script to call an IDL routine.";"147";"mg_make_cl_wrapper.html#mg_make_cl_wrapper";"92"
"15868";"mg_make_background_random";"Make a random (but smoothed) background texture.";"147";"mg_make_background.html#mg_make_background_random";"166"
"15867";"mg_make_background";"Make a background for computer desktop.";"147";"mg_make_background.html#mg_make_background";"0"
"15866";"mg_loremipsum";"Returns the Lorem Ipsum text.";"147";"mg_loremipsum.html#mg_loremipsum";"5"
"15865";"mg_log";"Messages are logged via this routine.";"147";"mg_log.html#mg_log";"186"
"15864";"mg_lock__define";"Define lock class.";"147";"mg_lock__define.html#mg_lock__define";"3"
"15862";"mg_lock::release";"Release the lock.";"147";"mg_lock__define.html#mg_lock::release";"0"
"15863";"mg_lock::setProperty";"Set properties.";"147";"mg_lock__define.html#mg_lock::setProperty";"0"
"15860";"mg_lock::getProperty";"Get properties.";"147";"mg_lock__define.html#mg_lock::getProperty";"0"
"15861";"mg_lock::init";"Create lock object.";"147";"mg_lock__define.html#mg_lock::init";"0"
"15859";"mg_lock::cleanup";"Free resources.";"147";"mg_lock__define.html#mg_lock::cleanup";"0"
"15858";"mg_lock::acquire";"Acquire a resource limited by the lock.";"147";"mg_lock__define.html#mg_lock::acquire";"0"
"15857";"mg_lock::_overloadPrint";"Get output for use with PRINT.";"147";"mg_lock__define.html#mg_lock::_overloadPrint";"0"
"15856";"mg_lock::_overloadHelp";"Overload routine used by HELP.";"147";"mg_lock__define.html#mg_lock::_overloadHelp";"0"
"15855";"mg_local_moment";"Computes the local moments for an array with a given window size.";"147";"mg_local_moment.html#mg_local_moment";"93"
"15854";"mg_loadct";"Load a pre-defined color table.";"147";"mg_loadct.html#mg_loadct";"3558"
"15852";"mg_lineplot";"Create a line plot.";"147";"mg_lineplot.html#mg_lineplot";"84"
"15853";"mg_list";"Lists elements of file at given level.";"147";"mg_list.html#mg_list";"17"
"15851";"mg_linear_function";"Create a function which maps in_range to out_range with a linear function and returns the coefficients.";"147";"mg_linear_function.html#mg_linear_function";"146"
"12677";"SETDEFAULTVALUE";"This procedure sets default values for positional and keyword arguments to IDL procedures and functions.";"118";"setdefaultvalue.html";"231"
"15850";"mg_lic";"Compute the line integral convolution for a vector field.";"147";"mg_lic.html#mg_lic";"996"
"15849";"mg_legend";"Create a legend.";"147";"mg_legend.html#mg_legend";"103"
"15848";"mg_lcm";"Find the least common multiple (LCM) for two positive integers.";"147";"mg_lcm.html#mg_lcm";"219"
"15847";"mg_julian2str";"Convert a Julian date/time to a string representation.";"147";"mg_julian2str.html#mg_julian2str";"12"
"15846";"mg_julian2epoch";"Convert Julian dates to epoch times.";"147";"mg_julian2epoch.html#mg_julian2epoch";"20"
"15845";"mg_julian2cf";"Convert a time value from Julian date to CF conventions.";"147";"mg_julian2cf.html#mg_julian2cf";"52"
"15844";"mg_itbrowser_event";"Handle events.";"147";"mg_itbrowser.html#mg_itbrowser_event";"76"
"15843";"mg_itbrowser_cleanup";"Cleanup resources.";"147";"mg_itbrowser.html#mg_itbrowser_cleanup";"0"
"15842";"mg_itbrowser_addids";"Add a component to the component tree.";"147";"mg_itbrowser.html#mg_itbrowser_addids";"0"
"15841";"mg_itbrowser";"Browse components and their properties of an iTool.";"147";"mg_itbrowser.html#mg_itbrowser";"0"
"15840";"mg_isscalar";"Determines if the argument is a scalar.";"147";"mg_isscalar.html#mg_isscalar";"68"
"15839";"mg_isinteger";"Determines if the argument is an integer type.";"147";"mg_isinteger.html#mg_isinteger";"83"
"15282";"ENVIOptimizedLinearStretchRaster";"Constructs an ENVIRaster from a source raster that has been stretched according to the Optimize Linear stretch function.";"159";"ENVIOptimizedLinearStretchRaster.html";"3198"
"17029";"Style Sheets for User Interface Elements";;"159";"StyleSheetsUserInterface.html";"126"
"12826";"M Routines";;"1";"M_list.html";"1788"
"15838";"mg_isarray";"Determines if the argument is an array.";"147";"mg_isarray.html#mg_isarray";"67"
"15837";"mg_install_fonts";"Install the special fonts with mglib.";"147";"mg_install_fonts.html#mg_install_fonts";"109"
"15836";"mg_index2rgb";"Converts color indices to RGB coordinates.";"147";"mg_index2rgb.html#mg_index2rgb";"127"
"15835";"mg_include";"Includes the contents of the given batch file at the calling level.";"147";"mg_include.html#mg_include";"96"
"15834";"mg_in";"Returns whether an element in contained in an array.";"147";"mg_in.html#mg_in";"82"
"15833";"mg_image_resize";"Resize an image similarly to CONGRID.";"147";"mg_image_resize.html#mg_image_resize";"115"
"15832";"mg_image_getsize";"Returns the size of the image array as a two element array, [xsize, ysize].";"147";"mg_image_getsize.html#mg_image_getsize";"170"
"15831";"mg_image_flip";"Flips an image upside down (for all interleaves).";"147";"mg_image_flip.html#mg_image_flip";"247"
"15830";"mg_image";"Displays an image scaled to a ""reasonable"" size with optional x- and y-axes.";"147";"mg_image.html#mg_image";"113"
"15829";"mg_idlversion";"Returns the IDL version number as a string or a boolean indicating whether a required version is met.";"147";"mg_idlversion.html#mg_idlversion";"84"
"15828";"mg_horizon";"Plot a horizon graph.";"147";"mg_horizon.html#mg_horizon";"166"
"15827";"mg_histplot";"Create a histogram plot.";"147";"mg_histplot.html#mg_histplot";"192"
"15826";"mg_hist_nd";"Find the histogram of a set of n-dimensional points.";"147";"mg_hist_nd.html#mg_hist_nd";"155"
"15825";"mg_hex_dump_makeprintable";"Convert byte array to string with printable characters.";"147";"mg_hex_dump.html#mg_hex_dump_makeprintable";"2"
"15824";"mg_hex_dump";"Display hex dump of contents of a file or a numeric array.";"147";"mg_hex_dump.html#mg_hex_dump";"0"
"15823";"mg_helpdef";"Print the declaration string for a variable.";"147";"mg_helpdef.html#mg_helpdef";"80"
"15822";"mg_help";"Prints out help information for a variable.";"147";"mg_help.html#mg_help";"137"
"15821";"mg_heapinfo";"Information about the current state of the heap.";"147";"mg_heapinfo.html#mg_heapinfo";"82"
"15820";"mg_hdf_list";"Dump contents of given HDF file.";"147";"mg_hdf_list.html#mg_hdf_list";"34"
"15819";"mg_hdf_getdata";"Pulls out a section of a HDF variable.";"147";"mg_hdf_getdata.html#mg_hdf_getdata";"181"
"15818";"mg_hdf_dump";"Dump contents of given HDF file.";"147";"mg_hdf_dump.html#mg_hdf_dump";"95"
"15817";"mg_hastag";"Determines if a structure has a given tag name.";"147";"mg_hastag.html#mg_hastag";"102"
"15816";"mg_hasroutine";"Determine if a given routine name is available to call.";"147";"mg_hasroutine.html#mg_hasroutine";"122"
"15815";"mg_h5_putdata";"Write data to a file.";"147";"mg_h5_putdata.html#mg_h5_putdata";"132"
"15814";"mg_h5_getdata";"Pulls out a section of a HDF5 variable.";"147";"mg_h5_getdata.html#mg_h5_getdata";"197"
"15813";"mg_h5_dump";"Parse and display a simple hierarchy of contents of a HDF5 file.";"147";"mg_h5_dump.html#mg_h5_dump";"152"
"15812";"mg_grstrwrap";"Wrap a string to a given width.";"147";"mg_grstrwrap.html#mg_grstrwrap";"14"
"15811";"mg_grib_list";"Return array of keys in a record.";"147";"mg_grib_list.html#mg_grib_list";"21"
"15810";"mg_grib_getdata";"Pulls out a section of a GRIB variable.";"147";"mg_grib_getdata.html#mg_grib_getdata";"20"
"15809";"mg_grib_dump_type";;"147";"mg_grib_dump.html#mg_grib_dump_type";"30"
"15808";"mg_grib_dump";"Parse and display a simple hierarchy of contents of a GRIB file.";"147";"mg_grib_dump.html#mg_grib_dump";"0"
"15807";"mg_graph_layout";"Create a [graphs graph].";"147";"mg_graph_layout.html#mg_graph_layout";"126"
"15806";"mg_graph_democlass__define";"Define instance variables.";"147";"mg_graph_democlass__define.html#mg_graph_democlass__define";"89"
"15805";"mg_graph_democlass::setProperty";"Set properties.";"147";"mg_graph_democlass__define.html#mg_graph_democlass::setProperty";"40"
"15804";"mg_graph_democlass::init";"Create graph demo class.";"147";"mg_graph_democlass__define.html#mg_graph_democlass::init";"0"
"15803";"mg_graph_democlass::getProperty";"Get properties.";"147";"mg_graph_democlass__define.html#mg_graph_democlass::getProperty";"0"
"15802";"mg_graph_democlass::cleanup";"Free resources.";"147";"mg_graph_democlass__define.html#mg_graph_democlass::cleanup";"0"
"15801";"mg_graph_democlass::addChild";"Add a child node.";"147";"mg_graph_democlass__define.html#mg_graph_democlass::addChild";"0"
"15800";"mg_graph2dot";"Writes a Graphviz .dot file representing a graph.";"147";"mg_graph2dot.html#mg_graph2dot";"208"
"15799";"mg_gradient";"Compute the gradient of an array.";"147";"mg_gradient.html#mg_gradient";"117"
"15798";"mg_google_lookup_define_buttons";"Trick to automatically add this to the ENVI menu.";"147";"mg_google_lookup.html#mg_google_lookup_define_buttons";"107"
"15797";"mg_google_lookup";"Event handler for ENVI menu.";"147";"mg_google_lookup.html#mg_google_lookup";"0"
"15796";"mg_glcm";"Computes the grey-level co-occurence matrix as defined here.";"147";"mg_glcm.html#mg_glcm";"69"
"15795";"mg_getscreendisplaysize";"Returns the ""usable for display"" size of the screen, i.e., excluding the Windows taskbar or Mac OS X menu.";"147";"mg_getscreendisplaysize.html#mg_getscreendisplaysize";"95"
"15793";"mg_getdata";"Pulls out a section of a variable in a file.";"147";"mg_getdata.html#mg_getdata";"80"
"15794";"mg_getpassword";"Get a password from the command line.";"147";"mg_getpassword.html#mg_getpassword";"143"
"15792";"mg_get_url_content";"Get the content for the given URL.";"147";"mg_get_url_content.html#mg_get_url_content";"148"
"15791";"mg_get_idl_routine_names";"Determine the names of the IDL library routines.";"147";"mg_get_idl_routine_names.html#mg_get_idl_routine_names";"65"
"15790";"mg_gcd";"Find the greatest common denominator (GCD) for two positive integers.";"147";"mg_gcd.html#mg_gcd";"89"
"15789";"mg_gc_venn";"Create a Venn Diagram using the Google Charts API.";"147";"mg_gc_venn.html#mg_gc_venn";"128"
"15788";"mg_gc_scatter";"Scatter plot using Google Charts API.";"147";"mg_gc_scatter.html#mg_gc_scatter";"216"
"15787";"mg_gc_piechart";"Create an image of a pie chart using the Google Charts API.";"147";"mg_gc_piechart.html#mg_gc_piechart";"593"
"15785";"mg_gc_base";"Interface to Google Charts API.";"147";"mg_gc_base.html#mg_gc_base";"85"
"15786";"mg_gc_base_processstr";"Process a string for inclusion in the URL: replace spaces with + signs, join multiple array elements with |'s, and add the param=.";"147";"mg_gc_base.html#mg_gc_base_processstr";"52"
"15784";"mg_gc_barchart";"Create an image of a pie chart using the Google Charts API.";"147";"mg_gc_barchart.html#mg_gc_barchart";"172"
"15783";"mg_force";"Spread data apart using a simple algorithm.";"147";"mg_force.html#mg_force";"73"
"15782";"mg_fontsize";"Calculates the size of a string.";"147";"mg_fontsize.html#mg_fontsize";"6"
"15781";"mg_fonts";"Utility to query fonts available in the system.";"147";"mg_fonts.html#mg_fonts";"93"
"15780";"mg_fmod";"Return the modulus of floating point values.";"147";"mg_fmod.html#mg_fmod";"9"
"15779";"mg_flatten";"Create a 1-dimensional array from a multi-dimensional input.";"147";"mg_flatten.html#mg_flatten";"4"
"15778";"mg_fits_diff";"Determine if two FITS files are equivalent (given some conditions on what to check and a numeric tolerance).";"147";"mg_fits_diff.html#mg_fits_diff";"10"
"15777";"mg_fits_browser_handleevents";"Thin procedural wrapper to call ::handle_events event handler.";"147";"mg_fits_browser.html#mg_fits_browser_handleevents";"7"
"15776";"mg_fits_browser_cleanup";"Thin procedural wrapper to call ::cleanup_widgets cleanup routine.";"147";"mg_fits_browser.html#mg_fits_browser_cleanup";"0"
"15775";"mg_fits_browser__define";"Define instance variables.";"147";"mg_fits_browser.html#mg_fits_browser__define";"0"
"15774";"mg_fits_browser::start_xmanager";"Start XMANAGER.";"147";"mg_fits_browser.html#mg_fits_browser::start_xmanager";"0"
"15773";"mg_fits_browser::set_title";"Set the window title based on the current filename.";"147";"mg_fits_browser.html#mg_fits_browser::set_title";"0"
"15772";"mg_fits_browser::set_status";"Set the text in the status bar.";"147";"mg_fits_browser.html#mg_fits_browser::set_status";"0"
"15771";"mg_fits_browser::realize_widgets";"Draw the widget hierarchy.";"147";"mg_fits_browser.html#mg_fits_browser::realize_widgets";"0"
"15770";"mg_fits_browser::load_files";"Load FITS files corresponding to filenames.";"147";"mg_fits_browser.html#mg_fits_browser::load_files";"0"
"15769";"mg_fits_browser::init";"Browse the contents of an FITS file with a GUI browser program.";"147";"mg_fits_browser.html#mg_fits_browser::init";"0"
"15768";"mg_fits_browser::handle_events";"Handle all events from the widget program.";"147";"mg_fits_browser.html#mg_fits_browser::handle_events";"0"
"15767";"mg_fits_browser::file_extensions";"Returns valid file extensions.";"147";"mg_fits_browser.html#mg_fits_browser::file_extensions";"0"
"11421";"BOXPLOT";"Creates a box and whiskers plot from a data series containing a sample minimum, lower quartile, median, upper quartile, and sample maximum.";"27";"BOXPLOT.html";"14967"
"11422";"CREATEBOXPLOTDATA";"Takes a raw input dataset and generates the data needed as input into the BOXPLOT function.";"27";"CREATEBOXPLOTDATA.html";"11705"
"11423";"IMAGE_THRESHOLD";"Generates a threshold value for an 8 or 16 bit image.";"29";"IMAGE_THRESHOLD.html";"13308"
"11424";"SCATTERPLOT3D";"Displays data as a collection of points, plotted using three-dimensional Cartesian coordinates.";"27";"SCATTERPLOT3D.html";"10555"
"11425";"TIC";"Stores the initial system time.";"76";"TIC.html";"13016"
"11426";"TIMESTAMPTOVALUES";;"1";"TIMESTAMPTOVALUES.html";"4981"
"11427";"TOC";"Records the final system time, then calculates and displays the total elapsed time";"76";"TOC.html";"10505"
"11428";"Custom File Readers";;"2";"CustomFileReaders.html";"7257"
"11429";"ENVI_TCIMF_MT_DOIT";"Performs the Mixture Tuned Target-Constrained Interference-Minimized Filter (MTTCIMF) target detection analysis.";"162";"ENVI_TCIMF_MT_DOIT.html";"3534"
"11430";"ENVITime";"Reference to a time object.";"155";"ENVITime.html";"4550"
"11431";"ENVI::AddCustomReader";"Adds a button to the ENVI menu under File > Open As > Custom that opens a custom open procedure.";"154";"ENVI__AddCustomReader.html";"5285"
"11432";"Save Custom File Readers";;"2";"SaveCustomFileReaders.html";"4019"
"11433";"Spatial Read Routines";;"2";"SpatialReadRoutines.html";"4215"
"11434";"Spectral Read Routines";;"2";"SpectralReadRoutines.html";"4711"
"11435";"Write a Custom Open Procedure";;"2";"WriteCustomOpenProcedure.html";"6205"
"11436";"IDL Tips and Tricks";;"135";"TipsAndTricks.html";"14052"
"11437";"Axis References in IDL Graphics";;"135";"AxesInGraphics.html";"11213"
"11438";"Colorbars";;"135";"Colorbars.html";"12923"
"11439";"Graphics Overview";;"135";"Graphics_Overview.html";"7890"
"11440";"Graphics Window Interface";;"135";"GraphicsWindowInterface.html";"11824"
"11441";"Image with a Map Projection";;"135";"ImageWithMapProjection.html";"10534"
"11442";"Image Thresholding";;"135";"ImageThresholding.html";"10476"
"11443";"Bar Plots";;"135";"barplots.html";"8466"
"11444";"Polar Plots";;"135";"polarplots.html";"7568"
"11445";"Surfaces";;"135";"surfaces.html";"7997"
"11446";"Streamline Vectors";;"135";"Streamlines.html";"8933"
"11447";"Vectors";;"135";"Vectors.html";"8390"
"11448";"Circles and Ovals";;"135";"ellipses.html";"9765"
"11449";"Graphics Methods";;"135";"Graphics_Methods.html";"7167"
"11450";"Miscellaneous Environment Topics";;"135";"MiscellaneousEnvironmentTopics.html";"7666"
"11451";"Miscellaneous Language Topics";;"135";"MiscellaneousLanguageTopics.html";"8624"
"11452";"Object Classes";;"135";"ObjectClasses.html";"1506"
"11453";"What's New in IDL 8.2";;"135";"Whats_New_in_82.html";"11667"
"11454";"What's New in IDL 8.2.1";;"135";"Whats_New_in_821.html";"14701"
"11463";"ISURFACE_EXAMPLE_KPB";"Demonstrate how to use iSurface to display topographic data. 		This program requires the topography and land-ocean data files and		access routines TOPO_READ_5_MINUTE_KPB and LAND_OCEAN_READ_KPB.";"151";"isurface_example_kpb.html";"133"
"11464";"ITOOL_COLOR_BAR_CRH";"This is a function to create a color bar object for use in iTools.";"151";"itool_color_bar_crh.html";"140"
"11465";"ITOOL_OPEN_ISV_KPB";"Open an iTool visualization saved as an ISV file.";"151";"itool_open_isv_kpb.html";"131"
"11466";"ITOOL_ROTATE_VIEW_KPB";"Rotate the specified view in an iTool around 'axis' by the amount 'rotation'.";"151";"itool_rotate_view_kpb.html";"127"
"11467";"ITOOL_SAVE_ISV_KPB";"Saves the current iTool as an ISV file.";"151";"itool_save_isv_kpb.html";"125"
"11468";"ITOOL_SPIN_MOVIE_KPB";"Create a series of images by spinning an iTools visualization. These can be 		combined to create an animation using various software (IDL or others).		NOTE WELL: this program deletes all existing files of the specified type 		in the o...";"151";"itool_spin_movie_kpb.html";"151"
"11469";"ITOOL_WRITE_GRAPHIC_KPB";"Write the current iTool window to a graphic file.";"151";"itool_write_graphic_kpb.html";"151"
"11470";"RUN_ISURFACE_EXAMPLE_KPB";"Demonstrate how to use iSurface to display topographic data. 		This program requires the topography and land-ocean data files and		access routines TOPO_READ_5_MINUTE_KPB and LAND_OCEAN_READ_KPB.";"151";"run_isurface_example_kpb.html";"31"
"11471";"LAND_OCEAN_EXAMPLE_KPB";"This function demonstrates how to read and use the ISLSCP land ocean masks.";"151";"land_ocean_example_kpb.html";"134"
"11472";"LAND_OCEAN_READ_KPB";"This function reads the ISLSCP land-water mask data sets and returns a		data structure containing the mask data and ancillary information.";"151";"land_ocean_read_kpb.html";"120"
"11473";"ARC_AZIMUTH_KPB";"Compute the arc distance and azimuth between pairs of points on the sphere		given the longitudes and latitudes of the points. By default coordinates are		assumed to be in degrees.		This program is based on the IDL library function MAP...";"151";"arc_azimuth_kpb.html";"226"
"11474";"INDEX_OF_NEAREST_KPB";"This function finds the index of the element of x whose value is nearest to x0. This is primarily useful for finding the index of a point in an ordered 1-dimensional array. For example, if x is an array of latitudes, this function wil...";"151";"index_of_nearest_kpb.html";"149"
"11475";"LL_ARC_AZIMUTH_KPB";"This procedure returns the longitudes and latitudes (x1 and y1) of points located at 		specified arc distances (arc_dist) and azimuths (az) from a set of initial points (x0 and y0).		By default coordinates are assumed to be in degrees...";"151";"ll_arc_azimuth_kpb.html";"135"
"11476";"PRES_TEMP_4D_RD";"This function is an IDL version of the netCDF tutorial program PRES_TEMP_4D_RD. It reads one time step from a netCDF input file (pres_temp_4d.nc) and returns a data structure containing two 12 x 6 x 2 arrays of single-precision floati...";"151";"pres_temp_4d_rd.html";"44"
"11477";"PRES_TEMP_4D_WR";"This program is an IDL version of the netCDF tutorial program PRES_TEMP_4D_WR. It creates a netCDF output file (pres_temp_4d.nc) and writes two 12 x 6 x 2 arrays of single-precision floating-point numbers, 'pressure' and 'temperature'...";"151";"pres_temp_4d_wr.html";"79"
"11478";"SFC_PRES_TEMP_RD";"This function is an IDL version of the netCDF tutorial program SFC_PRES_TEMP_RD. It reads a netCDF input file (sfc_pres_temp.nc) and returns a data structure containing two 12 x 6 x 2 arrays of single-precision floating-point numbers,...";"151";"sfc_pres_temp_rd.html";"84"
"11479";"SFC_PRES_TEMP_WR";"This program is an IDL version of the netCDF tutorial program SFC_PRES_TEMP_WR. It creates a netCDF output file (sfc_pres_temp.nc) and writes two 12 x 6 arrays of single-precision floating-point numbers, 'pressure' and 'temperature', ...";"151";"sfc_pres_temp_wr.html";"34"
"11480";"SIMPLE_XY_RD";"This function is an IDL version of the netCDF tutorial program SIMPLE_XY_RD. It reads a netCDF input file (simple_xy.nc) containing a 12 x 6 array of 32-bit integers. It is written as a FUNCTION rather than a PROCEDURE to illustrate o...";"151";"simple_xy_rd.html";"54"
"11481";"SIMPLE_XY_WR";"This program is an IDL version of the netCDF tutorial program SIMPLE_XY_WR. It creates a netCDF output file (simple_xy.nc) and writes a 12 x 6 array of 32-bit integers to the file. Error handling is not included in this example progra...";"151";"simple_xy_wr.html";"127"
"11482";"IS_NETCDF_KPB";"Determine whether a file is a netCDF file.";"151";"is_netcdf_kpb.html";"124"
"11483";"NCDF_READ_VAR_KPB";"This function reads a variable and all of its attributes from an open		netCDF file and returns the variable values and attributes in a structure.";"151";"ncdf_read_var_kpb.html";"50"
"11484";"NCDF_VAR_EXISTS_KPB";"This function determines whether a variable exists in an open netCDF file.";"151";"ncdf_var_exists_kpb.html";"35"
"11485";"TEST_ARC_AZIMUTH_KPB";;"151";"test_arc_azimuth_kpb.html";"34"
"11486";"TEST_LL_ARC_AZIMUTH_KPB";;"151";"test_ll_arc_azimuth_kpb.html";"110"
"11487";"CALDAT_NO_LEAP";"This procedure computes the pseudo-date for a calendar without leap days given 		a pseudo-Julian day. The reference date is taken to be 2001-01-01.		The inverse of this procedure is JULDAY_NO_LEAP.";"151";"caldat_no_leap.html";"198"
"11488";"CALDAY_TO_DATE";"This functions returns the date for a given year and day number. The day number is the integral number of days between t and January 1 of the same year. The day number of January 1 is 1.";"151";"calday_to_date.html";"419"
"11489";"CDATE__DEFINE";"This procedure defines the CDATE date structure.";"151";"cdate__define.html";"131"
"11490";"CDATE_NO_LEAP__DEFINE";"This procedure defines the CDATE_NO_LEAP date structure.";"151";"cdate_no_leap__define.html";"110"
"11491";"DATE_DIFF";"This computes the difference in seconds between date0 and date1.";"151";"date_diff.html";"188"
"11492";"DATE_INC";"This computes a new date given a start date and a time increment in seconds.";"151";"date_inc.html";"171"
"11493";"DATE_TO_TIME";"This converts a CDATE structure to a JTIME structure or a CDATE_NO_LEAP structure to a JTIME_NO_LEAP structure.";"151";"date_to_time.html";"247"
"11494";"DATE_TO_YEAR";"This converts a CDATE structure to a time in years (year plus decimal fraction).";"151";"date_to_year.html";"196"
"11495";"DAY_NUMBER";"This functions returns the day number for a given date or time, t. The day number is the integral number of days between t and January 1 of the same year. The day number of January 1 is 1.";"151";"day_number.html";"232"
"11496";"JTIME__DEFINE";"This procedure defines the JTIME date structure.";"151";"jtime__define.html";"122"
"11497";"JTIME_NO_LEAP__DEFINE";"This procedure defines the JTIME_NO_LEAP date structure.";"151";"jtime_no_leap__define.html";"112"
"11498";"JULDAY_NO_LEAP";"This function computes a pseudo-Julian day for a calendar without leap days given a 		pseudo-date (month, day, and year). The reference date is taken to be 1 January 2001. 		The inverse of this procedure is CALDAT_NO_LEAP.";"151";"julday_no_leap.html";"146"
"11499";"LAST_DAY";"This function returns the date for the last the day of the month specified by the input argument date. The year and month are not change. The hour, minute, and second are set to 0.";"151";"last_day.html";"46"
"11500";"MAKE_DATE";"This function creates a CDATE or a CDATE_NO_LEAP structure containing the specified values.";"151";"make_date.html";"272"
"11501";"MAKE_TIME";"This makes a Julian day plus seconds from a date and time.";"151";"make_time.html";"127"
"11502";"MONTH_NAME_KPB";"Return the name of a month.";"151";"month_name_kpb.html";"36"
"11503";"NEXT_DAY";"This functions returns the date of the day following the input date.";"151";"next_day.html";"87"
"11504";"NEXT_MONTH";"This functions returns the year and month of the month following the input argument date. The output day is set to 1; and hour, minute, and		second are set to 0.";"151";"next_month.html";"50"
"11505";"NEXT_YEAR";"This functions returns the year following the input argument date. 		The output month and day are set to 1; and hour, minute, and		second are set to 0.";"151";"next_year.html";"33"
"11506";"TIME_DIFF";"This computes the time difference in seconds between two times		expressed as Julian day and seconds.";"151";"time_diff.html";"289"
"11507";"TIME_INC";"This computes the time given a start time and an increment.";"151";"time_inc.html";"86"
"11508";"TIME_TO_DATE";"This converts a JTIME structure to a CDATE structure or 		a JTIME_NO_LEAP structure to a CDATE_NO_LEAP structure.";"151";"time_to_date.html";"144"
"11509";"TOPO_EXAMPLE_KPB";"This function demonstrates how to read and use the topographic/bathymetric data.";"151";"topo_example_kpb.html";"26"
"11510";"TOPO_READ_10_MINUTE_KPB";"This function reads the Navy gridded 10-minute global topographic data and		returns a structure containing the topographic data, along with the longitudes, 		latitudes, and areas of the grid.";"151";"topo_read_10_minute_kpb.html";"36"
"11511";"TOPO_READ_5_MINUTE_KPB";"This function reads the global NGDC TerrainBase 5-minute global topographic 		and bathymetric data and returns a structure containing the topographic data, 		along with the longitudes, latitudes, and areas of the grid.";"151";"topo_read_5_minute_kpb.html";"64"
"15551";"ENVIPointCloudQuery::GetPointsInRange";"Returns unsorted points from the dataset.";"3";"ENVIPointCloudQuery__GetPointsInRange.html";"1542"
"15550";"ENVIPointCloudQuery::Close";"Closes the ENVIPointCloudQuery for reading.";"3";"ENVIPointCloudQuery__Close.html";"1561"
"15549";"ENVIPointCloudQuery";"Reference to a point cloud object that has not been built into an optimized file format.";"3";"ENVIPointCloudQuery.html";"1937"
"15548";"ENVIPointCloudProductsInfo";"Stores the fully-qualified filenames for all products generated by ENVIPointCloudFeatureExtractionTask.";"3";"ENVIPointCloudProductsInfo.html";"1840"
"15547";"ENVIPointCloudMetadata";"Contains the metadata for the ENVI LiDAR project.";"3";"ENVIPointCloudMetadata.html";"1829"
"15546";"ENVIPointCloudFilter";"Used to filter the point data that will be returned from the point query methods of the ENVIPointCloud or ENVIPointCloudQuery objects.";"3";"ENVIPointCloudFilter.html";"2329"
"15545";"ENVIMessageHandler::OnMessage";"The ENVIBroadcastChannel calls this method to forward messages to all of its subscribers.";"154";"ENVIMessageHandler__OnMessage.html";"1789"
"15544";"ENVIMessageHandler";"Abstract class used as a superclass for other message handler classes.";"154";"ENVIMessageHandler.html";"1735"
"15543";"ENVIMessage";"Abstract class used as a superclass for other message classes.";"154";"ENVIMessage.html""";"1508"
"15542";"ENVILowClipRaster";"Constructs an ENVIRaster from a source raster where values below a threshold are set to the threshold.";"155";"ENVILowClipRaster.html";"1870"
"15541";"ENVIJagwireServer::QueryDataset";"Returns a hash table of dataset metadata.";"155";"ENVIJagwireServer__QueryDataset.html";"1614"
"15540";"ENVIJagwireServer::Query";"Returns a hash table of raster datasets available on the Jagwire server.";"155";"ENVIJagwireServer__Query.html";"1608"
"15538";"ENVIJagwireServer";"This is a reference to an ENVIJagwireServer object.";"155";"ENVIJagwireServer.html";"1847"
"15539";"ENVIJagwireServer::Close";"Closes the Jagwire server connection in ENVI.";"155";"ENVIJagwireServer__Close.html";"1551"
"15537";"ENVIHighClipRaster";"Constructs an ENVIRaster from a source raster where values above a threshold are set to the threshold.";"155";"ENVIHighClipRaster.html";"1780"
"15536";"ENVIGainOffsetWithThresholdRaster";"Constructs an ENVIRaster from a source raster with gains and offsets applied.";"155";"ENVIGainOffsetWithThresholdRaster.html";"1829"
"15535";"ENVIFinishMessage";"Constructs an ENVIFinishMessage object to send to the ENVIBroadcastChannel.";"154";"ENVIFinishMessage.html";"1880"
"15534";"ENVIDataValuesMaskRaster";"Constructs an ENVIRaster from an input raster and a specified data range, where each pixel within the data range will not be masked.";"155";"ENVIDataValuesMaskRaster.html";"1893"
"15533";"ENVIBroadcastChannel::Unsubscribe";"Allows an object to unsubscribe from the broadcast channel.";"154";"ENVIBroadcastChannel__Unsubscribe.html";"1655"
"15532";"ENVIBroadcastChannel::Subscribe";"Allows an object that implements ENVIMessageHandler to subscribe to the broadcast channel.";"154";"ENVIBroadcastChannel__Subscribe.html";"1793"
"15531";"ENVIBroadcastChannel::Broadcast";"Use the Broadcast method to send messages to subscribers.";"154";"ENVIBroadcastChannel__Broadcast.html";"1874"
"15530";"ENVIBroadcastChannel";"This is a reference to a broadcast channel object.";"154";"ENVIBroadcastChannel.html";"2033"
"15529";"ENVIBinaryLTThresholdRaster";"Constructs an ENVIRaster from a source raster where pixel values below a specified threshold are set to 1 and all others are set to 0.";"155";"ENVIBinaryLTThresholdRaster.html";"1873"
"15528";"ENVIBinaryGTThresholdRaster";"Constructs an ENVIRaster from a source raster where pixel values above a specified threshold are set to 1 and all others are set to 0.";"155";"ENVIBinaryGTThresholdRaster.html";"2217"
"15527";"ENVIAbortable";"Use this object class to communicate if an abort is requested.";"154";"ENVIAbortable.html";"2307"
"11548";"ENVIRasterSpatialRefGLT";"A reference to a geographic lookup table containing map locations for every pixel of the image it is associated with.";"155";"ENVIRasterSpatialRefGLT.html";"3640"
"11549";"BUBBLEPLOT";"Create a bubble chart that displays three dimensions of data in a two-dimensional Cartesian coordinate system.";"27";"BUBBLEPLOT.html";"63950"
"11550";"FILE_GUNZIP";"Uncompress a given GZIP input file.";"40";"FILE_GUNZIP.html";"7168"
"11551";"FILE_GZIP";"Compress a given input file using the DEFLATE compression algorithm.";"40";"FILE_GZIP.html";"5715"
"11552";"FILE_TAR";"Archive a given set of input files and directories into a TAR file.";"40";"FILE_TAR.html";"5477"
"11553";"FILE_UNTAR";"Uncompress a TAR file or TAR data stream.";"40";"FILE_UNTAR.html";"5425"
"11554";"FILE_UNZIP";"Uncompress ZIP files";"40";"FILE_UNZIP.html";"5130"
"11555";"FILE_ZIP";"Compress a given set of input files and directories into the PKWARE ZIP file format.";"40";"FILE_ZIP.html";"4798"
"11556";"QUERY_VIDEO";"Obtain information about a video file.";"98";"QUERY_VIDEO.html";"3962"
"11557";"READ_VIDEO";"Read video, audio, and/or data streams from a video file.";"98";"READ_VIDEO.html";"5547"
"11558";"TERMINAL_SIZE";"Retrieve the column width and number of lines that are used for IDL output to the console.";"74";"TERMINAL_SIZE.html";"3357"
"11559";"VOLUME";"Display a visual representation of a three-dimensional array of data.";"27";"Volume.html";"7989"
"11560";"WRITE_VIDEO";"Write video and/or audio streams to a video file.";"98";"WRITE_VIDEO.html";"7310"
"11561";"ZLIB_COMPRESS";"Compress a given input array using the DEFLATE compression algorithm.";"40";"ZLIB_COMPRESS.html";"10381"
"11562";"ZLIB_UNCOMPRESS";"Uncompress a given input byte array using the DEFLATE compression algorithm.";"40";"ZLIB_UNCOMPRESS.html";"4689"
"11563";"Executing Batch Jobs in IDL";;"135";"BatchJobs.html";"14812"
"11564";"The Bookmarks View";;"135";"BookmarksView.html";"7525"
"11565";"The Class Hierarchy";;"135";"ClassHierarchy.html";"5496"
"11566";"The Command History View";;"135";"CommandHistory.html";"6334"
"11567";"IDL-DE Preferences";;"135";"DEPreferences.html";"8205"
"11568";"The Editor View";;"135";"EditorView.html";"10082"
"11569";"The IDL Console View";;"135";"IDLConsoleView.html";"21922"
"11570";"The IDL Development Environment - Overview";;"135";"IDLDEOverview.html";"8743"
"11571";"Menubar and Toolbar Reference";;"135";"MenubarToolbar.html";"8558"
"11572";"The Outline View";;"135";"OutlineView.html";"5888"
"11573";"The Problems View";;"135";"ProblemsView.html";"5302"
"11574";"The Profiler View";;"135";"ProfilerView.html";"6673"
"11575";"The Project Explorer";;"135";"ProjectExplorer.html";"7229"
"11576";"The Tasks View";;"135";"TasksView.html";"19606"
"11577";"The Variables View";;"135";"VariablesView.html";"5737"
"11579";"Barplots and Histograms";;"135";"bar_plots_gallery.html";"6524"
"11580";"Basic Plots";;"135";"basic_plots_gallery.html";"12301"
"11581";"Contour Plots";;"135";"contour_plots_gallery.html";"6718"
"11582";"Image Analysis";;"135";"image_analysis_gallery1.html";"8587"
"11583";"Images";;"135";"images_gallery.html";"7793"
"11584";"Maps";;"135";"maps_gallery.html";"5695"
"11585";"Modifying Visualizations";;"135";"modifying_vis_gallery.html";"7770"
"11586";"Surfaces";;"135";"surfaces_gallery.html";"5027"
"11587";"Vectors and Streamlines";;"135";"vectors_gallery.html";"4823"
"11588";"visualize_old";;"135";"visualize_old.html";"249"
"11589";"IDL Graphics Gallery";;"135";"visualize_prototype.html";"55"
"11590";"Bubbleplot on a Map";;"135";"Bubbleplots.html";"7825"
"11591";"IDLffVideoRead";;"98";"IDLffVideoRead.html";"5412"
"11592";"What's New in IDL 8.2.2";;"135";"Whats_New_8_2_2.html";"6372"
"15526";"ENVI::QueryPointCloud";"Opens a single LAS file (.las, .laz, or .ntf) without processing it into an optimized file format.";"3";"ENVI__QueryPointCloud.html";"2134"
"11597";"Quality Assurance with ENVI LiDAR 3D Viewer";;"137";"Using3D.html";"9473"
"11598";"Contact Us";;"136";"using_envi_lidar_ContactUs.html";"2372"
"11599";"Legal and Copyright Notices";;"136";"using_envi_lidar_LegalAndCopyrightNotices.html";"7160"
"11600";"Annotate the View";;"137";"Annotations.html";"4360"
"11601";"Color the Display";;"137";"ColorData.html";"3604"
"11602";"Color by Height, Intensity, or RGB";;"137";"ColorPointsDSM.html";"7890"
"11603";"Coordinate System Settings";;"137";"CoordSystemSettings.html";"6936"
"11604";"Explore Data";;"137";"ExploreData.html";"3960"
"11605";"Filter Points by Height";;"137";"FilterByHeight.html";"4575"
"11606";"Generate a Density Map";;"137";"GenDensityMap.html";"6691"
"11607";"Height Palette Editor";;"137";"HeightPaletteEditor.html";"5184"
"11608";"Import Reference Data";;"137";"ImportingRefData.html";"5014"
"11609";"Measure the Difference Between Two Points";;"137";"MeasureTool.html";"5828"
"11610";"Observer Points Text File Format";;"137";"ObsPointsFileFormat.html";"1427"
"11611";"Start a New Project";;"137";"OpeningandImporting.html";"6730"
"11613";"Test DEM Precision";;"137";"TestDEMPrecision.html";"4517"
"11614";"Projects";;"136";"using_envi_lidar_Projects.html";"2249"
"11615";"Perform Viewshed Analysis";;"136";"using_envi_lidar_ViewshedAnalysis.html";"4435"
"11616";"Directories and Files for ENVI LiDAR-Generated Products";;"137";"FileStructure.html";"4807"
"11617";"The ENVI LiDAR User Interface";;"137";"GettingStarted.html";"7006"
"11618";"Introduction to ENVI LiDAR";;"136";"using_envi_lidar_Introduction.html";"4573"
"11620";"Area Definition Tab";;"137";"AreaDefinitionTab.html";"6430"
"11621";"Export Products";;"137";"Exporting.html";"5271"
"11622";"Open Generic ASCII Text Files";;"136";"GenericASCIIText.html";"5088"
"11623";"Launch ENVI LiDAR Products in Other Applications";;"137";"LaunchProducts.html";"4742"
"11624";"Outputs Tab";;"137";"OutputsTab.html";"6560"
"11625";"Production Parameters Tab";;"137";"ProductionParametersTab.html";"8007"
"11626";"Process the Data";;"137";"ProjectProperties.html";"6231"
"11627";"Correct and Reprocess Data";;"137";"CorrectAndReprocess.html";"5746"
"11628";"Make Manual Changes";;"137";"MakeManualChanges.html";"6051"
"11629";"Manage QA Change Lists";;"137";"ManageQAChangeLists.html";"4098"
"11630";"Perform Quality Assurance";;"137";"ReviewChangeResults.html";"6119"
"11631";"Review Processing Results";;"137";"ReviewProcessingResults.html";"4649"
"11632";"System Requirements";;"136";"SystemRequirements.html";"2431"
"11633";"Add an Extension Sample Code";;"136";"SampleAddCodeExtension.html";"3198"
"11634";"Annotate Highest Point Sample Code";;"136";"SampleAnnotateHighestPoint.html";"3059"
"15509";"ESE";"Provides a set of static methods that are valuable for introspection, finding tasks, controlling jobs and other functionality.";"171";"ESE.html";"3068"
"11636";"Tutorials and Code Samples";;"136";"TutorialsSamples.html";"4572"
"11637";"Create and Process a Project Tutorial";;"136";"TutorialProcessDataSample.html";"23187"
"11640";"Set  Preferences";;"136";"using_envi_lidar_Preferences.html";"3843"
"11642";"Contact Us";;"136";"using_envi_ContactUs.html";"3484"
"11643";"Anomaly Detection";;"136";"AnomalyDetection.html";"6573"
"11644";"RX Anomaly Detection";;"136";"RXAnomalyDetection.html";"7756"
"11645";"Change Detection Analysis";;"136";"ChangeDetectionAnalysis.html";"22732"
"11646";"Detection Tools";;"136";"DetectionTools.html";"4330"
"11647";"Image Change References";;"136";"IDReferences.html";"5216"
"11648";"Image Change";;"136";"ImageChange.html";"9753"
"11649";"Examine SAM Results";;"136";"BandMaxExamineSAMResults.html";"5691"
"11650";"Report the Results";;"136";"BandMaxReportResults.html";"4105"
"11651";"Select Background";;"136";"BandMaxSelectBackground.html";"4370"
"11652";"Select Band Subset";;"136";"BandMaxSelectBandSubset.html";"5218"
"11653";"Select Input Image";;"136";"BandMaxSelectInputImage.html";"4674"
"11654";"Select SAM Parameters";;"136";"BandMaxSelectSAMParameters.html";"8877"
"11655";"Select Targets";;"136";"BandMaxSelectTargets.html";"4417"
"11656";"SAM Target Finder with BandMax";;"136";"SAMTargetFinderWithBandMax.html";"5821"
"11657";"Apply MNF Transform";;"136";"TDApplyMNFTransform.html";"5655"
"11658";"Export Results";;"136";"TDExportResults.html";"4377"
"11659";"Filter Targets";;"136";"TDFilterTargets.html";"4812"
"11660";"Load Rule Images and Preview";;"136";"TDLoadRuleImagesPreview.html";"5254"
"11661";"Perform Atmospheric Correction";;"136";"TDPerformAtmosphericCorrection.html";"5309"
"11662";"Select Input/Output Files";;"136";"TDSelectInputOutputFiles.html";"4741"
"11663";"Select Target Detection Methods";;"136";"TDSelectMethods.html";"5640"
"11664";"Select Non-Target Spectra";;"136";"TDSelectNonTargetSpectra.html";"5789"
"11665";"Select Target Spectra";;"136";"TDSelectTargetSpectra.html";"4649"
"11666";"View Statistics and Report";;"136";"TDViewStatisticsReport.html";"4284"
"11667";"Target Detection";;"136";"TargetDetection.html";"5769"
"11668";"Target Detection Wizard";;"136";"TargetDetectionWizard.html";"6790"
"11669";"Thematic Change";;"136";"ThematicChange.html";"9580"
"11672";"NITF/NSIF Background";;"165";"BackgroundNITFNSIFFormat.html";"61537"
"11673";"NITF Tagged Record Extensions Background";;"165";"BackgroundNITFTaggedRecordExtensions.html";"7827"
"11675";"NITF PIA TREs Background";;"165";"BackgroundPIATREs.html";"6196"
"11676";"Pyramids Background";;"136";"BackgroundPyramids.html";"5366"
"11677";"Remote Data Sources Background";;"136";"BackgroundRemoteDataSources.html";"6842"
"11678";"Supported File Formats Background";;"136";"BackgroundSupportedFileFormats.html";"15247"
"11679";"Raster Color Slices";;"136";"ColorSlices.html";"10296"
"11681";"Count Features";;"136";"CountFeatures.html";"5436"
"11682";"Display Tools";;"136";"DisplayTools.html";"20373"
"11683";"ENVI Header Files";;"136";"ENVIHeaderFiles.html";"72616"
"11684";"ENVI Image Files";;"136";"ENVIImageFiles.html";"14762"
"11685";"The Print Layout View";;"136";"ESRI_Print_Layout.html";"22845"
"11686";"Enter Optional Header Information";;"136";"EnterOptionalHeaderInformation.html";"11196"
"15504";"Python Bridge";;"135";"Python.html";"9277"
"11688";"Explore Imagery";;"136";"ExploreImagery.html";"7011"
"11689";"Global Spatial Statistics";;"136";"GlobalSpatialStatistics.html";"6569"
"11690";"3D LiDAR Viewer";;"136";"LiDARDataViewer.html";"8916"
"11691";"Local Spatial Statistics";;"136";"LocalSpatialStatistics.html";"6567"
"11694";"Open and Browse Data";;"136";"OpenBrowseData.html";"6337"
"11695";"Open LAS Format LiDAR Files";;"136";"OpeningLASFormatLIDARFiles.html";"11892"
"11696";"Open and Display Files";;"136";"OpeningLocalFiles.html";"16328"
"11697";"Open Remote Datasets";;"136";"OpeningRemoteDatasets.html";"13743"
"11698";"Portals";;"136";"Portals.html";"6516"
"11699";"Raster Layers";;"136";"RasterLayers.html";"9839"
"11700";"Save to a Geodatabase";;"136";"SaveToGeodatabase.html";"6267"
"11701";"Save and Chip Output";;"136";"SavingFiles.html";"24055"
"11702";"Save NITF Files";;"165";"SavingNITFFiles.html";"15412"
"11703";"Scatter Plots";;"136";"using_envi_ScatterPlots.html";"32559"
"11704";"Spectral Library Viewer";;"136";"SpectralLibBrowser.html";"11466"
"11706";"Statistics";;"136";"Statistics.html";"18944"
"11707";"Supported File Types";;"136";"SupportedFormats.html";"18519"
"11708";"The Select Input File Dialog";;"136";"TheSelectInputFileDialog.html";"2937"
"11709";"View Metadata";;"136";"ViewFileMetadata.html";"16933"
"11710";"Image Window Views";;"136";"Views.html";"36958"
"11711";"Feature Support";;"136";"FeatureSupport.html";"4464"
"11713";"Adaptive Filters";;"136";"AdaptiveFilters.html";"13642"
"11714";"Convolution and Morphology Filters";;"136";"ConvolutionMorphologyFilters.html";"19288"
"11715";"Filters";;"136";"Filters.html";"5493"
"11716";"Frequency Filters";;"136";"FrequencyFilters.html";"6721"
"11717";"Texture Filters";;"136";"TextureFilters.html";"15014"
"11718";"Classification";;"136";"Classification.html";"49802"
"11719";"Classification";;"136";"ClassificationMain.html";"8485"
"11720";"Classification References";;"136";"ClassificationReferences.html";"5392"
"11721";"Adaptive Coherence Estimator";;"136";"AdaptiveCoherenceEstimator.html";"10358"
"11722";"Binary Encoding";;"136";"BinaryEncoding.html";"10760"
"11723";"Calculate Buffer Zone Images";;"136";"BufferZoneImages.html";"5451"
"11724";"Build a New Decision Tree";;"136";"BuildingNewDecisionTree.html";"15322"
"11725";"Calculate Confusion Matrices";;"136";"CalculatingConfusionMatrices.html";"41321"
"11728";"Classification Tools";;"136";"ClassificationTools.html";"8964"
"11729";"Classify from Rule Images";;"136";"ClassifyingFromRuleImages.html";"11680"
"11730";"Clump Classes";;"136";"ClumpingClasses.html";"10185"
"11731";"Collect Endmember Spectra";;"136";"CollectingEndmemberSpectra.html";"55576"
"11732";"Combine Classes";;"136";"CombiningClasses.html";"9273"
"11733";"Constrained Energy Minimization";;"136";"ConstrainedEnergyMinimization.html";"6261"
"15502";"Connectivity Bridges";;"135";"Bridges.html";"3145"
"11735";"Decision Tree";;"136";"DecisionTree.html";"7462"
"11736";"Display ROC Curves";;"136";"DisplayingROCCurves.html";"7963"
"11737";"Edit an Existing Decision Tree";;"136";"EditingExistingDecisionTree.html";"2664"
"11738";"Execute a Decision Tree";;"136";"ExecutingDecisionTree.html";"3226"
"11739";"Execute an Existing Decision Tree";;"136";"ExecutingExistingDecisionTree.html";"2153"
"11740";"Export Classes to Vector Layers";;"136";"ExportClassesToVectorLayers.html";"7584"
"11741";"Generate a Random Sample";;"136";"GeneratingRandomSample.html";"13342"
"11742";"ISODATA";;"136";"ISODATAClassification.html";"25374"
"11743";"Import Spectra";;"136";"ImportingSpectra.html";"5792"
"11744";"K-Means";;"136";"KMeansClassification.html";"14744"
"11745";"Mahalanobis Distance";;"136";"Mahalanobis.html";"7981"
"11746";"Majority/Minority Analysis";;"136";"MajorityMinorityAnalysis.html";"7714"
"11747";"Maximum Likelihood";;"136";"MaximumLikelihood.html";"26956"
"11748";"Minimum Distance";;"136";"MinimumDistance.html";"10621"
"11749";"Neural Net";;"136";"NeuralNet.html";"14036"
"11750";"Orthogonal Subspace Projection";;"136";"OrthogonalSubspaceProjection.html";"5323"
"11751";"Overlay Classes";;"136";"OverlayingClasses.html";"6466"
"11752";"Parallelepiped";;"136";"Parallelepiped.html";"10447"
"11753";"Sieve Classes";;"136";"SievingClasses.html";"44785"
"11754";"Spectral Angle Mapper";;"136";"SpectralAngleMapper.html";"24535"
"11755";"Spectral Information Divergence";;"136";"SpectralInformationDivergence.html";"8254"
"11756";"Support Vector Machine";;"136";"SupportVectorMachine.html";"10867"
"11757";"List of Attributes";;"136";"AttributeList.html";"8116"
"11758";"K Nearest Neighbor Background";;"136";"BackgroundKNN.html";"7320"
"11759";"Merge Algorithms Background";;"136";"BackgroundMergeAlgorithms.html";"5846"
"11760";"Principal Components Analysis Background";;"136";"BackgroundPCA.html";"6708"
"11761";"Rule Classification Background";;"136";"BackgroundRuleClassification.html";"5567"
"11762";"Support Vector Machine Background";;"136";"BackgroundSVM.html";"10114"
"11763";"Segmentation Algorithms Background";;"136";"BackgroundSegmentationAlgorithm.html";"9073"
"11765";"Example-Based Classification";;"164";"Example_Based_Classification.html";"25070"
"11766";"Extract Features";;"164";"ExtractFeatures.html";"78583"
"11767";"Rule-Based Classification";;"164";"Rule_Based_Classification.html";"31198"
"11768";"Extract Segments Only";;"164";"SegmentOnly.html";"8768"
"11769";"Automatically Edit Extracted Features";;"136";"AutomaticallyEditingExtractedFeatures.html";"3824"
"11770";"Calculate the Extracted Feature Length";;"136";"CalculatingExtractedFeatureLength.html";"2239"
"11771";"Export Intelligent Digitizer Layers to Shapefiles";;"136";"ExportingLayersToShapefiles.html";"2108"
"11772";"Extract Linear Features with Intelligent Digitizer";;"136";"ExtractingLinearFeatures.html";"5138"
"11773";"Manually Edit Extracted Features";;"136";"ManuallyEditingExtractedFeatures.html";"5305"
"11774";"Intelligent Digitizer Mouse Button Functions";;"136";"MouseButtonFunctions.html";"2419"
"11775";"Rename Intelligent Digitizer Layers";;"136";"RenamingLayers.html";"2249"
"11776";"Save Intelligent Digitizer Layers";;"136";"SavingLayers.html";"2030"
"11777";"Select Bands for Intelligent Digitizer";;"136";"SelectingBands.html";"2274"
"11778";"Select Different Bands";;"136";"SelectingDifferentBands.html";"2532"
"11779";"Set Length Attribute Parameters";;"136";"SettingLengthAttributeParameters.html";"2449"
"11780";"Set Intelligent Digitizer Parameters";;"136";"SettingParameters.html";"2301"
"11781";"Use the Intelligent Digitizer";;"136";"UsingIntelligentDigitizer.html";"3764"
"11782";"Correct MODIS Bow Tie Effect";;"136";"ApplyingCorrectionForMODISBowTieEffect.html";"3989"
"11783";"Coordinate Systems Background";;"136";"BackgroundCoordinateSystems.html";"26495"
"11784";"Frame and Line Central Projections";;"136";"BackgroundFrameLineCentralProjections.html";"1493"
"11785";"Background on NITF Map Information";;"165";"BackgroundNITFMapInformation.html";"4518"
"11786";"Non-Standard Projections Background";;"136";"BackgroundNonStandardProjections.html";"9252"
"11787";"Build ASTER Geometry Files";;"136";"BuildingASTERGeometryFiles.html";"5070"
"11788";"Build AVHRR Geometry Files";;"136";"BuildingAVHRRGeometryFiles.html";"5069"
"11789";"Build RPCs";;"136";"BuildingRPCs.html";"7358"
"11790";"Build SPOT Geometry Files";;"136";"BuildingSPOTGeometryFiles.html";"4734"
"11791";"Build SeaWiFS Geometry Files";;"136";"BuildingSeaWiFSGeometryFiles.html";"3912"
"11792";"Convert ASCII Coordinates";;"136";"ConvertingASCIICoordinates.html";"6447"
"11793";"Convert Map Coordinates";;"136";"ConvertingMapCoordinates.html";"7591"
"11794";"Create Coordinate System String";;"136";"CreateCoordinateSystemString.html";"5330"
"11795";"Digital (Frame Central)";;"136";"DigitalFrameCentral.html";"3386"
"11796";"Digital (Line Central)";;"136";"DigitalLineCentral.html";"3201"
"11797";"Frame Camera";;"136";"FrameCamera.html";"5964"
"11798";"Frame and Line Central Projections";;"136";"FrameLineCentralProjections.html";"3469"
"11799";"Georectify Imagery";;"136";"GeorectifyImagery.html";"6539"
"11800";"Georeference from Input Geometry";;"136";"GeoreferenceFromInputGeometry.html";"23306"
"11801";"Georeference ASTER Data";;"136";"GeoreferencingASTERDataHeader.html";"5805"
"11802";"Georeference AVHRR Data";;"136";"GeoreferencingAVHRRDataHeader.html";"5431"
"11803";"Georeference COSMO-SkyMed Data";;"136";"GeoreferencingCOSMOSkyMedData.html";"6155"
"11804";"Georeference ENVISAT";;"136";"GeoreferencingENVISAT.html";"4904"
"11805";"Georeference MODIS";;"136";"GeoreferencingMODIS.html";"9349"
"11806";"Georeference RADARSAT";;"136";"GeoreferencingRADARSAT.html";"5241"
"11807";"Georeference SPOT Data";;"136";"GeoreferencingSPOTDataHeader.html";"5701"
"11808";"Georeference SeaWiFS Data";;"136";"GeoreferencingSeaWiFSDataHeader.html";"4619"
"11809";"Georeferencing Tools";;"136";"GeoreferencingTools.html";"8017"
"11810";"Image Registration";;"136";"ImageRegistration.html";"16213"
"11811";"Mosaic Images";;"136";"MosaicImages.html";"20345"
"11812";"Parameters for Digital Cameras and Pushbroom Sensors";;"136";"ParametersForDigitalCamerasPushbroomSensors.html";"10682"
"11813";"Pushbroom Sensor";;"136";"PushbroomSensor.html";"4582"
"11814";"Accuracy Assessment Background";;"136";"AccuracyAssessmentBackground.html";"8809"
"11815";"GCP File Formats";;"136";"GCPFileFormats.html";"9798"
"11816";"RPC Background";;"136";"RPCBackground.html";"6436"
"11817";"RPC Orthorectification";;"136";"RPCOrthorectification.html";"17342"
"11818";"Automatic Image to Image Registration";;"136";"RegistrationImageToImage.html";"14451"
"11819";"Image to Map Registration";;"136";"RegistrationImageToMap.html";"9591"
"11820";"Reproject Images";;"136";"ReprojectImages.html";"9823"
"11821";"Retain RPC Information from ASTER, SPOT, and FORMOSAT-2 Data";;"136";"RetainingRPCInformation.html";"3978"
"11822";"Collect and Edit Ground Control Points";;"166";"CollectingEditingGroundControlPoints.html";"24869"
"11823";"Collect and Edit Tie Points";;"166";"CollectingEditingTiePoints.html";"9437"
"11824";"Rigorous Orthorectification";;"166";"Introduction.html";"71777"
"11825";"Layout Manager";;"166";"LayoutManager.html";"6701"
"11826";"Reordering Images and Defining Cutlines";;"166";"ReorderingImagesDefiningCutlines.html";"7493"
"11827";"Select Output Parameters";;"166";"SelectingOutputParameters.html";"5513"
"11828";"Start Rigorous Orthorectification";;"166";"StartingENVIOrthoModule.html";"8685"
"11829";"Supported Image Formats for the ENVI Orthorectification Module";;"166";"SupportedImageFormats.html";"6979"
"11830";"The ENVI Orthorectification Wizard";;"166";"TheENVIOrthorectificationWizard.html";"5220"
"11831";"Select a Coordinate System";;"136";"SelectCoordinateSystem.html";"8823"
"11832";"Select Input File";;"136";"SelectInputFileBuildRPCs.html";"2526"
"11833";"Warp and Resample";;"136";"WarpingResampling.html";"12819"
"11835";"Legal and Copyright Notices";;"136";"using_envi_LegalAndCopyrightNotices.html";"3985"
"15501";"Create and Process a Project Tutorial";;"137";"LiDARProcessDataTutorial.html";"4093"
"11837";"Class Layers";;"136";"ClassLayers.html";"2140"
"11838";"ENVI File Type File";;"136";"ENVIFileTypeFile.html";"1294"
"11839";"ENVI Sensor File";;"136";"ENVISensorFile.html";"3632"
"17027";"ENVIUI::CreateFromDialog";"Displays a dialog containing a specified user interface (UI) element for selecting object or task parameters.";"156";"ENVIUI__CreateFromDialog.html";"116"
"15500";"Reproject LAS File Sample Code";;"136";"SampleLiDARReprojectLASFile.html";"2009"
"15499";"Map Forest Density Sample Code";;"136";"SampleLiDARForestDensity.html";"1912"
"15498";"Color Point Cloud Sample Code";;"136";"SampleLiDARColorPointCloud.html";"2120"
"15497";"Generate Point Clouds";;"136";"GeneratePointClouds.html";"3281"
"11850";"Spatial/Spectral Subsetting";;"136";"Subsetting.html";"20554"
"11851";"ENVI Classic Plot Functions";;"136";"UsingInteractivePlotFunctions.html";"3268"
"11853";"System Requirements";;"136";"using_envi_PlatformSupportTable.html";"7505"
"11855";"Atmospheric Correction";;"136";"AtmosphericCorrection.html";"29982"
"11856";"Band Math";;"136";"BandMath.html";"29425"
"11857";"Band Ratios";;"136";"BandRatios.html";"14645"
"11858";"Calibrate AVHRR and TIMS Data";;"136";"CalibrateAVHRR_TIMS.html";"8345"
"11859";"Manage Raster Data";;"136";"ManageRasterData.html";"60286"
"11860";"Other Radiometric Correction Tools";;"136";"OtherRadiometricCorrectionTools.html";"9948"
"11861";"Preprocess Imagery";;"136";"PreprocessImagery.html";"8736"
"11862";"About the Atmospheric Correction Module";;"163";"AboutAtmosphericCorrectionModule.html";"105691"
"11863";"FLAASH Background";;"163";"BackgroundFLAASH.html";"41079"
"11864";"QUAC Background";;"163";"BackgroundQUAC.html";"8026"
"11865";"Radiance and Scale Factors Background";;"163";"BackgroundRadianceScaleFactors.html";"8646"
"11866";"Fast Line-of-sight Atmospheric Analysis of Hypercubes (FLAASH)";;"163";"FLAASH.html";"32853"
"11867";"FLAASH Advanced Options";;"163";"FLAASHAdvancedOptions.html";"8700"
"11868";"QUick Atmospheric Correction (QUAC)";;"163";"QUAC.html";"16241"
"11869";"Radiometric Calibration";;"136";"RadiometricCalibration.html";"35617"
"11870";"Radiometric Correction Tools";;"136";"RadiometricCorrectionTools.html";"10167"
"11871";"CN Spectral Sharpening";;"136";"CNSpectralSharpening.html";"18925"
"11872";"Color Normalized (Brovey) Sharpening";;"136";"ColorNormalizedSharpening.html";"3421"
"11873";"Color Transforms";;"136";"ColorTransforms.html";"5768"
"11874";"Decorrelation Stretch";;"136";"DecorrelationStretch.html";"8164"
"11875";"Gram-Schmidt Pan Sharpening";;"136";"GramSchmidtSpectralSharpening.html";"10368"
"11876";"HSV Sharpening";;"136";"HSVSharpening.html";"4451"
"11877";"Image Sharpening";;"136";"ImageSharpening.html";"8560"
"11878";"Independent Components Analysis";;"136";"IndependentComponentsAnalysis.html";"13582"
"11879";"Minimum Noise Fraction Transform";;"136";"MinimumNoiseFractionTransform.html";"22659"
"11880";"PC Spectral Sharpening";;"136";"PCSpectralSharpening.html";"10363"
"11881";"Photographic Stretch";;"136";"PhotographicStretch.html";"4943"
"11882";"Principal Components Analysis";;"136";"PrincipalComponentAnalysis.html";"16214"
"11883";"Saturation Stretch";;"136";"SaturationStretch.html";"6892"
"11884";"Synthetic Color Images";;"136";"SyntheticColorImages.html";"5834"
"11885";"Tasseled Cap";;"136";"TasseledCap.html";"11170"
"15492";"Set Raster Metadata";;"136";"EditRasterMetadata.html";"2707"
"15490";"Projects";;"137";"using_envi_Projects.html";"14183"
"15491";"Set  Preferences";;"137";"LiDARPreferences.html";"2172"
"11888";"Transforms";;"136";"Transforms.html";"5710"
"11889";"Vegetation Suppression";;"136";"VegetationSuppression.html";"8803"
"11890";"Active Layers";;"136";"ActiveLayers.html";"1954"
"11891";"Vector Records Background";;"136";"BackgroundVectorRecords.html";"4671"
"11892";"Convert ROIs to Shapefile";;"136";"ConvertROIsToShapefiles.html";"8500"
"11894";"ROIs, Vectors, and Annotations";;"136";"ROIVectorAnno.html";"5011"
"11895";"Regions of Interest";;"136";"ROIs.html";"15428"
"11896";"Raster to Vector";;"136";"RasterToVector.html";"9899"
"11897";"Vector Tools";;"136";"VectorTools.html";"4371"
"11898";"Attribute Viewer";;"136";"ViewingAttributes.html";"3825"
"11899";"Annotations";;"136";"WorkWithAnnotations.html";"7005"
"11900";"Vectors";;"136";"WorkwithVectors.html";"8512"
"11901";"Polarization Signatures Background";;"136";"BackgroundPolarizationSignatures.html";"7499"
"11902";"Calibrate to Beta Nought";;"136";"CalibratingBetaNought.html";"21713"
"11903";"Calibrate to Sigma Nought";;"136";"CalibratingSigmaNought.html";"15007"
"11904";"Convert TOPSAR Data";;"136";"ConvertingTOPSARData.html";"4689"
"11905";"Generate AIRSAR Scattering Classification Images";;"136";"GenerateAIRSARScatterClassImgs.html";"6283"
"11906";"Generate Pedestal Height Images";;"136";"GeneratePedestalHtImages.html";"6531"
"11907";"Generate Incidence Angle Images";;"136";"GeneratingIncidenceAng.html";"6205"
"11908";"Generate Phase Images";;"136";"GeneratingPhaseImages.html";"4219"
"11909";"Multilook SIR-C Compressed Data";;"136";"MultilookSIR-CCompressedData.html";"21981"
"11910";"Radar Tools";;"136";"RadarTools.html";"6203"
"11911";"Remove Antenna Gain Variations";;"136";"RemovingAntennaGainVar.html";"4981"
"11912";"Resample to Ground Ranges";;"136";"ResamplingtoGroundRange.html";"5629"
"11913";"Synthesize JPL AIRSAR Data";;"136";"SynthesizingJPLAIRSARData.html";"5333"
"11914";"Synthesize SIR-C Data";;"136";"SynthesizingSIR-CData.html";"7388"
"11915";"View Radar Headers";;"136";"ViewRadarHeaders.html";"5658"
"11916";"Automated Spectral Hourglass";;"136";"AutomatedSpectralHourglass.html";"5667"
"11917";"Continuum Removal";;"136";"ContinuumRemoval.html";"9638"
"11918";"General n-D Controls Dialog Functions";;"136";"GeneralNDVisualizerControlDialogFunctions.html";"4911"
"11919";"General n-D Visualizer Plot Window Functions";;"136";"GeneralNDVisualizerPlotWindowFunctions.html";"4416"
"11920";"Image Cubes";;"136";"ImageCubes.html";"6888"
"11921";"LS-Fit (Linear Band Prediction)";;"136";"LSFitLinearBandPrediction.html";"4790"
"11922";"Linear Spectral Unmixing";;"136";"LinearSpectralUnmixing.html";"16111"
"11923";"Mixture Tuned Matched Filtering";;"136";"MTMF.html";"10017"
"11924";"Manage n-D Visualizer States";;"136";"ManagingNDVisualizerStates.html";"4393"
"11925";"Matched Filtering";;"136";"MatchedFiltering.html";"7705"
"11926";"Multi Range Spectral Feature Fitting";;"136";"MultiRangeSFF.html";"5474"
"11927";"n-D Visualizer Background";;"136";"NDVBackground.html";"5183"
"11928";"n-D Visualizer/Controls Options";;"136";"NDVisualizerControlsOptions.html";"6863"
"11929";"Pixel Purity Index";;"136";"PixelPurityIndex.html";"22055"
"11930";"Data Dimensionality and Spatial Coherence";;"136";"SHDataDimensionalitySpatialCoherence.html";"8428"
"11931";"Derive Endmembers from the Input Image";;"136";"SHDerivingEndmembersFromInputImage.html";"6138"
"11932";"Input/Output File Selection";;"136";"SHInputOutputFileSelection.html";"4626"
"11933";"Minimum Noise Transform";;"136";"SHMinimumNoiseTransform.html";"5932"
"11934";"Perform Classification, MTMF, and Spectral Unmixing";;"136";"SHPerformingClassification.html";"6429"
"11935";"Summary Report";;"136";"SHSummaryReport.html";"4052"
"11936";"Wizard Basics";;"136";"SHWizardBasics.html";"4427"
"11937";"SMACC";;"136";"SMACC.html";"23618"
"11938";"Auto-Flicker";;"136";"AutoFlicker.html";"6366"
"11939";"SPEAR Google Earth Bridge";;"136";"GoogleEarthBridge.html";"21676"
"11940";"SPEAR Anomaly Detection";;"136";"SPEARAnomalyDetection.html";"5249"
"11941";"SPEAR Atmospheric Correction";;"136";"SPEARAtmosphericCorrection.html";"10209"
"11942";"SPEAR Change Detection";;"136";"SPEARChangeDetection.html";"8125"
"11943";"Coregistration";;"136";"SPEARCoregistration.html";"6198"
"11944";"SPEAR Image to Map Registration";;"136";"SPEARImageToMapRegistration.html";"4995"
"11945";"SPEAR Independent Components Analysis";;"136";"SPEARIndependentComponentsAnalysis.html";"29273"
"11946";"SPEAR Lines of Communication (LOC) - Roads";;"136";"SPEARLinesOfCommunicationRoads.html";"5020"
"11947";"SPEAR Lines of Communication (LOC) - Water";;"136";"SPEARLinesOfCommunicationWater.html";"5737"
"11948";"SPEAR Metadata Browser";;"136";"SPEARMetadataBrowser.html";"4388"
"11949";"SPEAR Orthorectification";;"136";"SPEAROrthorectification.html";"6004"
"11950";"SPEAR Pan Sharpening";;"136";"SPEARPanSharpening.html";"14070"
"11951";"SPEAR Relative Water Depth";;"136";"SPEARRelativeWaterDepth.html";"8406"
"11952";"SPEAR Spectral Analogues";;"136";"SPEARSpectralAnalogues.html";"7311"
"11953";"SPEAR Vegetation Delineation";;"136";"SPEARVegetationDelineation.html";"5830"
"11954";"SPEAR Vertical Stripe Removal";;"136";"SPEARVerticalStripeRemoval.html";"6920"
"11955";"SPEAR Watercraft Finder";;"136";"SPEARWatercraftFinder.html";"6352"
"11956";"SPEAR Tools";;"136";"SpearTools.html";"6608"
"11957";"TERCAT";;"136";"TERCAT.html";"5778"
"11958";"Spectral Analyst";;"136";"SpectralAnalyst.html";"8440"
"11959";"Spectral Feature Fitting";;"136";"SpectralFeatureFitting.html";"8445"
"11960";"Spectral Hourglass Wizard";;"136";"SpectralHourglassWizard.html";"7521"
"11961";"Spectral Libraries";;"136";"SpectralLibraries.html";"52912"
"11962";"Mapping Methods";;"136";"SpectralMappingMethods.html";"5218"
"11963";"Spectral Math";;"136";"SpectralMath.html";"12900"
"11964";"Spectral Resampling";;"136";"SpectralResampling.html";"7805"
"11965";"Spectral Slices";;"136";"SpectralSlices.html";"5323"
"11966";"Spectral Tools";;"136";"SpectralTools.html";"7772"
"11967";"Spectral Tools References";;"136";"SpectralToolsReferences.html";"8432"
"11968";"Spectral Unmixing";;"136";"SpectralUnmixing.html";"6164"
"11969";"Start the n-D Visualizer with a Pre-clustered Result";;"136";"StartingNDVisualizerWithPreclusteredResult.html";"4681"
"11970";"Start the n-D Visualizer";;"136";"StartingTheNDVisualizer.html";"5702"
"11971";"THOR Anomaly Detection";;"136";"THORAnomalyDetection.html";"5103"
"11972";"THOR Atmospheric Correction";;"136";"THORAtmosphericCorrection.html";"7927"
"11973";"Automatically Create Tie Points";;"136";"THORAutoTiePointSelection.html";"1919"
"11974";"Automated Band Selection";;"136";"THORAutomatedBandSelection.html";"2453"
"11975";"Background Signature Selection";;"136";"THORBackgroundSignatureSelection.html";"7161"
"11976";"Bad Data Mitigation Tools";;"136";"THORBadDataTools.html";"8925"
"11977";"THOR Change Detection";;"136";"THORChangeDetection.html";"4752"
"11978";"Check Coregistration Accuracy";;"136";"THORCheckingCoregistrationAccuracy.html";"1601"
"11979";"Control Bar";;"136";"THORControlBar.html";"1023"
"11980";"THOR Coregistration";;"136";"THORCoregistration.html";"5511"
"11981";"Create Tie Points";;"136";"THORCreatingTiePoints.html";"7313"
"11982";"Dimensionality Reduction and Band Selection";;"136";"THORDimensionalityReduction.html";"7889"
"11983";"Edit Metadata";;"136";"THOREditMetadata.html";"5013"
"11984";"Export Library";;"136";"THORExportLibrary.html";"5181"
"11985";"Export Targets";;"136";"THORExportTargets.html";"5823"
"11986";"File Selection";;"136";"THORFileSelection.html";"6702"
"11987";"Fix Tie Points";;"136";"THORFixingTiePoints.html";"1329"
"11988";"Image Transform";;"136";"THORImageTransform.html";"2558"
"11989";"Import Signatures";;"136";"THORImportSignatures.html";"6454"
"11990";"THOR LOCs - Water and Trails";;"136";"THORLOCsWaterTrails.html";"4575"
"11991";"Manual Band Selection";;"136";"THORManualBandSelection.html";"2189"
"11992";"Material Identification";;"136";"THORMaterialIdentification.html";"6095"
"11993";"Review Detections";;"136";"THORReviewDetections.html";"4224"
"11994";"Review Tie Points";;"136";"THORReviewingTiePoints.html";"1915"
"11995";"Rule Thresholding";;"136";"THORRuleThresholding.html";"5389"
"11996";"Shared Tools";;"136";"THORSharedTools.html";"6069"
"11997";"Signature Matching";;"136";"THORSignatureMatching.html";"6826"
"11998";"Spatial Filtering";;"136";"THORSpatialFiltering.html";"6007"
"11999";"THOR Spectral Library Builder";;"136";"THORSpectralLibraryBuilder.html";"5527"
"12000";"Spectral Library Viewer";;"136";"THORSpectralLibraryViewer.html";"7927"
"12001";"THOR Stressed Vegetation";;"136";"THORStressedVegetation.html";"5400"
"12002";"Target Controller";;"136";"THORTargetController.html";"929"
"12003";"THOR Target Detection";;"136";"THORTargetDetection.html";"5291"
"12004";"Target Signature Selection";;"136";"THORTargetSignatureSelection.html";"7739"
"12005";"Transform Band Weights";;"136";"THORTransformBandWeights.html";"10503"
"12006";"THOR Workflows";;"136";"THORWorkflows.html";"7491"
"12007";"Using the THOR Viewer";;"136";"UsingTHORViewer.html";"1850"
"12008";"The n-D Visualizer";;"136";"nDimensionalVisualizer.html";"8184"
"12009";"Using 3D SurfaceView";;"136";"3DSurfaceView.html";"67232"
"12010";"Topographic Modeling Background";;"136";"BackgroundTopographicModeling.html";"11129"
"12011";"Convert Vector Topographic Maps into Raster DEMs";;"136";"ConvertingVectorTopoMaps.html";"9276"
"12012";"Create Hill Shade Images";;"136";"CreatingHillShadeImages.html";"8001"
"12013";"DEM Editing Tool";;"167";"DEMEditingTool.html";"7795"
"12014";"Collect Tie Points";;"167";"CollectingTiePoints.html";"6965"
"12015";"DEM Extraction Wizard";;"167";"DEMExtractionWizard.html";"4504"
"12016";"Examine the DEM Result";;"167";"ExaminingDEMResult.html";"5752"
"12017";"Generate Epipolar Images";;"167";"GeneratingEpipolarImages.html";"6308"
"12018";"Select DEM Extraction Parameters";;"167";"SelectingDEMExtractionParameters.html";"4788"
"12019";"Select Ground Control Points";;"167";"SelectingGroundControlPoints.html";"7007"
"12020";"Select Input Files for DEM Extraction";;"167";"SelectingStereoImagePair.html";"7380"
"12021";"Set Output DEM Projection";;"167";"SettingOutputDEMProjection.html";"4763"
"12022";"View, Add, and Edit GCPs";;"167";"ViewingAddingEditingGCPs.html";"7011"
"12023";"View, Add, and Edit Tie Points";;"167";"ViewingAddingEditingTiePoints.html";"18140"
"12024";"Epipolar 3D Cursor Tool";;"167";"Epipolar3DCursorTool.html";"7422"
"12025";"Build Epipolar Images";;"167";"BuildingEpipolarImages.html";"4390"
"12026";"Extract a DEM";;"167";"ExtractingDEM.html";"4708"
"12027";"Individual Processes";;"167";"OverviewIndividualProcesses.html";"3218"
"12028";"Select Stereo GCPs";;"167";"SelectingStereoGCPs.html";"4080"
"12029";"Select Stereo Tie Points";;"167";"SelectingStereoTiePoints.html";"4495"
"12030";"DEM Extraction Module";;"167";"IntroductionToDEMExtraction.html";"70156"
"12031";"Stereo Pair 3D Measurement Tool";;"167";"StereoPair3DMeasurementTool.html";"6001"
"12032";"Extract Topographic Features";;"136";"ExtractingTopographicFeatures.html";"6875"
"12033";"Topographic Modeling";;"136";"ModelTopographicFeatures.html";"8115"
"12034";"Rasterize Point Data";;"136";"RasterizingPointData.html";"5049"
"12035";"Replace Bad Values";;"136";"ReplacingBadValues.html";"6630"
"12036";"Topographic Tools";;"136";"TopographicTools.html";"4491"
"12037";"Viewshed Analysis";;"137";"ViewshedAnalysis.html";"7990"
"16791";"ENVIBinaryLTThresholdRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIBinaryLTThresholdRaster__Dehydrate.html";"124"
"16790";"ENVIBinaryGTThresholdRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIBinaryGTThresholdRaster__Hydrate.html";"128"
"16787";"ENVI::RestoreSession";"Restores a specified ENVI session file";"154";"ENVI__RestoreSession.html";"116"
"16788";"ENVI::SaveSession";"Creates an ENVI session file that specifies a layout configuration, files loaded into views, and their properties";"154";"ENVI__SaveSession.html";"107"
"16789";"ENVIBinaryGTThresholdRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIBinaryGTThresholdRaster__Dehydrate.html";"112"
"12049";"Annotations Tutorial";;"136";"AnnotationTutorial.html";"7395"
"12050";"Calibrating Images Tutorial";;"136";"CalibratingImagesTutorial.html";"17314"
"12052";"Vectors Tutorial";;"136";"VectorTutorial.html";"5591"
"12053";"ENVI Tutorials";;"136";"Tutorials.html";"28657"
"12054";"Anomaly Detection Tutorial";;"136";"AnomalyDetectionTutorial.html";"10910"
"12055";"Classification Tutorial";;"136";"ClassificationTutorial.html";"15961"
"12056";"Feature Extraction with Example-Based Classification Tutorial";;"136";"FXExampleBasedTutorial.html";"15118"
"12057";"Feature Extraction with Rule-Based Classification Tutorial";;"136";"FXRuleBasedTutorial.html";"13791"
"12058";"Image Change Tutorial";;"136";"ImageChangeTutorial.html";"17239"
"12059";"Image Registration Tutorial";;"136";"ImageRegTutorial.html";"9366"
"12060";"RPC Orthorectification Tutorial";;"136";"RPCOrthoTutorial.html";"14131"
"12061";"Thematic Change Tutorial";;"136";"ThematicChangeTutorial.html";"13822"
"12062";"Viewshed Analysis Tutorial";;"136";"ViewshedTutorial.html";"6433"
"12063";"Agricultural Stress Tool";;"136";"AgriculturalStressTool.html";"11859"
"12064";"Broadband Greenness";;"136";"BroadbandGreenness.html";"34874"
"12065";"Canopies";;"136";"Canopies.html";"6224"
"12066";"Canopy Nitrogen";;"136";"CanopyNitrogen.html";"10234"
"12067";"Canopy Water Content";;"136";"CanopyWaterContent.html";"17069"
"12068";"Dry or Senescent Carbon";;"136";"DrySenescentCarbon.html";"53691"
"12069";"Fire Fuel Tool";;"136";"FireFuelTool.html";"7314"
"12070";"Forest Health Tool";;"136";"ForestHealthTool.html";"15197"
"12071";"Leaf Pigments";;"136";"LeafPigments.html";"11841"
"12072";"Light Use Efficiency";;"136";"LightUseEfficiency.html";"12535"
"12074";"Narrowband Greenness";;"136";"NarrowbandGreenness.html";"37908"
"12075";"Non-Photosynthetic Vegetation";;"136";"NonPhotosyntheticVegetation.html";"7891"
"12076";"Plant Foliage";;"136";"PlantFoliage.html";"10990"
"12077";"Vegetation and Its Reflectance Properties";;"136";"UnderstandingVegetation.html";"7426"
"12078";"Vegetation Analysis";;"136";"VegetationAnalysis.html";"10303"
"12079";"Vegetation Analysis Tools";;"136";"VegetationAnalysisTools.html";"3683"
"12080";"Vegetation Index Calculator";;"136";"VegetationIndexCalculator.html";"19652"
"15494";"GMTED2010 Overview";;"136";"GMTED2010Overview.html";"14311"
"12082";"What's New in ENVI 5.4";;"136";"using_envi_WhatsNew.html";"95438"
"12180";"IDLnetJPIP::GetUuid";"Provides a way to get the data field from the specified UUID (Universally Unique Identifier) box.";"73";"IDLnetJPIP_GetUuid.html";"2236"
"12181";"IDLnetJPIP::Init";"Initializes an IDLnetJPIP object.";"73";"IDLnetJPIP_Init.html";"2170"
"12182";"IDLnetJPIP::Open";"Opens an image from a remote JPIP server.";"73";"IDLnetJPIP_Open.html";"2213"
"12183";"IDLnetJPIP Properties";;"73";"IDLnetJPIP_Properties.html";"2565"
"12184";"IDLnetJPIP::SetProperty";"Sets the properties on the IDLnetJPIP object.";"73";"IDLnetJPIP_SetProperty.html";"2050"
"12185";"IDLnetURL::Delete";"Deletes a file on an HTTP server.";"73";"IDLnetURL__Delete.html";"2371"
"12186";"IDLUNIT";"Performs basic dimensional analysis, conversions, and mathematical operations, all while factoring units.";"55";"IDLUNIT.html";"9795"
"12187";"JIDLAbortedException";"An unchecked exception thrown when a call to IDL is interrupted by an abort request.";"140";"JIDLAbortedException.html";"2840"
"12188";"LAMBERTW";"Returns the value W(z) of the Lambert W function, also known as the omega function or product logarithm function.";"8";"LAMBERTW.html";"3625"
"12189";"ORDEREDHASH";"Creates a new ordered hash.";"76";"ORDEREDHASH.html";"6916"
"12190";"SIGNUM";"Returns the sign of each element of an array.";"17";"SIGNUM.html";"7761"
"12191";"TIMER";"Provides IDL with non-blocking timers.";"19";"TIMER.html";"7690"
"12193";"COM Object Creation";;"135";"COMObjectCreation.html";"2729"
"12194";"C++ Client Code Sample";;"135";"CplusplusClientCodeSample.html";"4088"
"12195";"C# Code Sample";;"135";"CsharpCodeSample.html";"4982"
"12196";"Sample IDL Object";;"135";"SampleIDLObject.html";"217"
"12197";"Visual Basic 6 Code Sample";;"135";"VisualBasic6CodeSample.html";"5098"
"12198";"Visual Basic .NET Code Sample";;"135";"VisualBasicdotNETCodeSample.html";"4170"
"12199";"Package Summary";;"135";"PackageSummary.html";"2734"
"12200";"Java Object Initiation With Parameters";;"135";"JavaObjectInitiationWithParameters.html";"3327"
"12201";"Java Object Initiation Without Parameters";;"135";"JavaObjectInitiationWithoutParameters.html";"2512"
"12202";"Sample IDL Object";;"135";"SampleIDLObject.html";"0"
"12203";"2D Array Examples";;"135";"2DArrayExamples.html";"5728"
"12204";"Multidimensional Array Storage and Access Overview";;"135";"MASAOverview.html";"4985"
"12205";"Storage and Access in COM and IDL";;"135";"StorageandAccessinCOMandIDL.html";"2644"
"12206";"Why Storage and Access Matter";;"135";"WhyStorageandAccessMatter.html";"2266"
"12207";"About This Guide";;"135";"AboutThisGuide.html";"22"
"12208";"COM Objects and IDL";;"135";"COMObjectsandIDL.html";"1402"
"12211";"About COM Export Object Examples";;"135";"AboutCOMExportObjectExamples.html";"3191"
"12212";"COM IDLgrWindow Based Histogram Plot Generator";;"135";"COMIDLgrWindowBasedHistogramPlotGenerator.html";"3041"
"12213";"COM IDLitWindow Surface Manipulation";;"135";"COMIDLitWindowSurfaceManipulation.html";"2748"
"12215";"Debugging COM Wrapper Objects";;"135";"DebuggingCOMWrapperObjects.html";"2576"
"12216";"Drawable COM Export Examples";;"135";"DrawableCOMExportExamples.html";"4774"
"12217";"IDL Internals - Error Handling";;"135";"using_idl_ErrorHandling.html";"21"
"12218";"Event Handling";;"135";"EventHandling.html";"197"
"12219";"Nondrawable COM Export Example";;"135";"NondrawableCOMExportExample.html";"2386"
"12220";"Overview of COM Export Objects";;"135";"OverviewOfCOMExportObjects.html";"2507"
"12221";"Stock COM Wrapper Methods";;"135";"StockCOMWrapperMethods.html";"3011"
"12223";"About The IDL Connector Object";;"135";"AboutTheIDLConnectorObject.html";"3152"
"12224";"Connector Object COM Examples";;"135";"ConnectorObjectCOMExamples.html";"2411"
"12225";"Connector Object Java Examples";;"135";"ConnectorObjectJavaExamples.html";"2979"
"12226";"Data Manipulation with a COM Connector Object";;"135";"DataManipulationwithaCOMConnectorObject.html";"2721"
"12227";"Data Manipulation with a Java Connector Object";;"135";"DataManipulationwithaJavaConnectorObject.html";"3393"
"12228";"Hello World Example with a COM Connector Object";;"135";"HelloWorldExamplewithaCOMConnectorObject.html";"2442"
"12229";"Hello World Example with a Java Connector Object";;"135";"HelloWorldExamplewithaJavaConnectorObject.html";"3176"
"12230";"IDL Command Line with Java Connector Object";;"135";"IDLCommandLinewithJavaConnectorObject.html";"3041"
"12231";"IDL Command Line with a COM Connector Object";;"135";"IDLCommandLinewithaCOMConnectorObject.html";"2487"
"12232";"Preparing To Use The IDL Connector Object";;"135";"PreparingToUseTheIDLConnectorObject.html";"2480"
"12233";"Using The Connector Object";;"135";"UsingTheConnectorObject.html";"2679"
"12234";"Building An Object";;"135";"BuildingAnObject.html";"2364"
"12235";"Export Bridge Assistant Overview";;"135";"ExportBridgeAssistantOverview.html";"3189"
"12236";"Exporting a Source Object's Superclasses";;"135";"ExportingASourceObjectsSuperclasses.html";"5322"
"12237";"Exporting An Object";;"135";"ExportingAnObject.html";"2482"
"12238";"Information Skipped During Export";;"135";"InformationSkippedDuringExport.html";"2396"
"12239";"Modifying a Source Object After Export";;"135";"ModifyingASourceObjectAfterExport.html";"2256"
"12240";"Running The Assistant";;"135";"RunningTheAssistant.html";"2952"
"12241";"Specifying Information For Exporting";;"135";"SpecifyingInformationForExporting.html";"2945"
"12242";"Using The Export Bridge Assistant";;"135";"UsingTheAssistant.html";"4316"
"12243";"Working With A Project";;"135";"WorkingWithAProject.html";"2939"
"12244";"Wrapper Generation Example";;"135";"WrapperGenerationExample.html";"2858"
"12245";"Configuring Build And Client Machines";;"135";"ConfiguringBuildAndClientMachines.html";"2642"
"12246";"Drawable Object Canvas Examples";;"135";"DrawableObjectCanvasExamples.html";"9483"
"12247";"Event Handling";;"135";"EventHandling.html";"0"
"12248";"Exporting Drawable Objects";;"135";"ExportingDrawableObjects.html";"23978"
"12249";"IDL Access";;"135";"IDLAccess.html";"2645"
"12250";"Object Lifecycle";;"135";"ObjectLifecycle.html";"2297"
"12251";"Overview Of Exporting IDL Objects";;"135";"OverviewOfExportingIDLObjects.html";"2361"
"12252";"Overview Of Writing IDL Objects For Exporting";;"135";"OverviewOfWritingIDLObjectsForExporting.html";"2341"
"12253";"Parameter Passing And Type Conversion";;"135";"ParameterPassingAndTypeConversion.html";"3408"
"12254";"Programming Limitations";;"135";"ProgrammingLimitations.html";"2244"
"12255";"Supported Platforms And IDL Modes";;"135";"SupportedPlatformsAndIDLModes.html";"2725"
"12256";"Wrapper Objects";;"135";"WrapperObjects.html";"2649"
"12257";"About Java Export Object Examples";;"135";"AboutJavaExportObjectExamples.html";"3497"
"12258";"Debugging Java Wrapper Objects";;"135";"DebuggingJavaWrapperObjects.html";"2468"
"12259";"Drawable Java Export Examples";;"135";"DrawableJavaExportExamples.html";"2953"
"12260";"IDL Internals - Error Handling";;"135";"using_idl_ErrorHandling.html";"0"
"12261";"Event Handling";;"135";"EventHandling.html";"0"
"12262";"Java IDLgrWindow Based Histogram Plot Generator";;"135";"JavaIDLgrWindowBasedHistogramPlotGenerator.html";"5352"
"12263";"Java IDLitWindow Surface Manipulation";;"135";"JavaIDLitWindowSurfaceManipulation.html";"2493"
"12264";"Java Wrapper Objects";;"135";"JavaWrapperObjects.html";"3003"
"12265";"Nondrawable Java Export Example";;"135";"NondrawableJavaExportExample.html";"2622"
"12266";"Overview Of Java Export Objects";;"135";"OverviewOfJavaExportObjects.html";"2643"
"12267";"Stock Java Wrapper Methods";;"135";"StockJavaWrapperMethods.html";"3891"
"12277";"About Using COM Objects In IDL";;"135";"AboutUsingCOMObjects.html";"3099"
"12278";"COM-IDL Data Type Mapping";;"135";"COM-IDLDataTypeMapping.html";"2703"
"12279";"Creating IDLcomIDispatch Objects";;"135";"CreatingIDLcomIDispatchObjects.html";"2374"
"12280";"Destroying IDLcomIDispatch Objects";;"135";"DestroyingIDLcomIDispatchObjects.html";"2235"
"12281";"Example RSIDemoComponent";;"135";"ExampleRSIDemoComponent.html";"2861"
"12282";"IDLcomIDispatch Object Naming Scheme";;"135";"IDLcomIDispatchObjectNamingScheme.html";"3341"
"12283";"Managing COM Object Properties";;"135";"ManagingCOMObjectProperties.html";"2512"
"12284";"Method Calls On IDLcomIDispatch Objects";;"135";"MethodCallsOnIDLcomIDispatchObjects.html";"3154"
"12285";"Passing Parameter Arrays By Reference";;"135";"PassingParameterArraysByReference.html";"4344"
"12286";"References To Other COM Objects";;"135";"ReferencesToOtherCOMObjects.html";"2220"
"12287";"Accessing Arrays Example";;"135";"AccessingArraysExample.html";"2940"
"12288";"Accessing Grayscale Images Example";;"135";"AccessingGrayscaleImagesExample.html";"3577"
"12289";"Accessing RGB Images Example";;"135";"AccessingRGBImagesExample.html";"3457"
"12290";"Accessing URLs Example";;"135";"AccessingURLsExample.html";"2475"
"12509";"ENVIRPCRasterSpatialRef::ConvertFileToMap";"Converts a set of file (pixel) x,y coordinates to a set of map (x-easting, y-northing) coordinates within one spatial reference.";"155";"ENVIRPCRasterSpatialRef__ConvertFileToMap.html";"3425"
"12510";"ENVIRPCRasterSpatialRef::ConvertLonLatToLonLat";"Converts a set of geographic latitude/longitude coordinates in one spatial reference to the same location in another spatial reference.";"155";"ENVIRPCRasterSpatialRef__ConvertLonLatToLonLat.html";"3514"
"12511";"ENVIRPCRasterSpatialRef::ConvertLonLatToMGRS";"Converts a set of geographic latitude/longitude coordinates to Military Grid Reference System (MGRS) coordinates within one spatial reference.";"155";"ENVIRPCRasterSpatialRef__ConvertLonLatToMGRS.html";"3403"
"12512";"ENVIRPCRasterSpatialRef::ConvertLonLatToMap";"Converts a set of geographic latitude/longitude coordinates to map coordinates (x-eastings, y-northings) within one spatial reference.";"155";"ENVIRPCRasterSpatialRef__ConvertLonLatToMap.html";"3574"
"12513";"ENVIRPCRasterSpatialRef::ConvertMGRSToLonLat";"Converts Military Grid Reference System (MGRS) coordinates to a set of geographic latitude/longitude coordinates within one spatial reference.";"155";"ENVIRPCRasterSpatialRef__ConvertMGRSToLonLat.html";"3378"
"12514";"ENVIRPCRasterSpatialRef::ConvertMapToFile";"Converts a set of map coordinates (x-easting, y-northing) to a set of file (pixel) x,y coordinates within one spatial reference.";"155";"ENVIRPCRasterSpatialRef__ConvertMapToFile.html";"3487"
"12515";"ENVIRPCRasterSpatialRef::ConvertMapToLonLat";"Converts a set of map coordinates (x-eastings, y-northings) to a set of geographic latitude and longitude coordinates within one spatial reference. ";"155";"ENVIRPCRasterSpatialRef__ConvertMapToLonLat.html";"3348"
"12516";"ENVIRPCRasterSpatialRef::ConvertMapToMap";"Converts a set of map coordinates (x-eastings, y-northings) in one spatial reference to the same location in a second spatial reference.";"155";"ENVIRPCRasterSpatialRef__ConvertMapToMap.html";"3389"
"12517";"ENVIRasterLayer::AddROI";"Creates and returns a new ENVIROILayer object.";"155";"enviRasterLayer__AddRoi.html";"4303"
"12518";"ENVIRasterLayer::GetLayer";"Returns the top-most ENVIROILayer.";"156";"enviRasterLayer__GetLayer.html";"3265"
"12519";"ENVIRaster::Export";"Saves a raster to a specific format.";"155";"ENVIRaster__Export.html";"10201"
"12520";"ENVIRaster::ExportROIs";"Outputs the pixel locations for a given ENVIROI with an ENVIRaster to an ENVI Classic .roi file, a Comma Separated Value .csv file, or an ESRI Shapefile .shp.";"155";"ENVIRaster__ExportRois.html";"5328"
"12521";"ENVIRaster::Subset";"Returns an ENVIRaster object that is a spatial and/or spectral subset of the original raster.";"155";"ENVIRaster__Subset.html";"8496"
"12522";"ENVIROILayer";"Reference to an ROI layer object.";"156";"ENVIRoiLayer.html";"4005"
"12523";"ENVIROILayer::Close";"Closes the ROI within the collection.";"156";"ENVIRoiLayer__Close.html";"3408"
"12524";"ENVIROILayer::GetView";"Returns the ENVIView where collection of ROIs reside.";"156";"ENVIRoiLayer__GetView.html";"3637"
"12525";"ENVIROILayer::MoveDown";"Moves the ROI region down one level in the order stack within the Region of Interest Container.";"156";"ENVIRoiLayer__MoveDown.html";"3333"
"12526";"ENVIROILayer::MoveToBottom";"Moves the ROI region to the bottom of the order stack within the Region of Interest Container.";"156";"ENVIRoiLayer__MoveToBottom.html";"3565"
"12527";"ENVIROILayer::MoveToTop";"Moves the ROI region to the top of the order stack within the ROI collection.";"156";"ENVIRoiLayer__MoveToTop.html";"3443"
"12528";"ENVIROILayer::MoveUp";"Moves the ROI region up one level in the order stack within the Region of Interest Container.";"156";"ENVIRoiLayer__MoveUp.html";"3424"
"12529";"ENVIROI";"Reference to an ROI object.";"155";"ENVIRoi.html";"6538"
"12530";"ENVIROI::AddGeometry";"Adds polygons, polylines, or points to an ROI.";"155";"ENVIRoi__AddGeometry.html";"5400"
"12531";"ENVIROI::AddPixels";"Adds pixels to an ROI.";"155";"ENVIRoi__AddPixels.html";"5148"
"12532";"ENVIROI::AddThreshold";"Adds a band threshold definition to an ROI.";"155";"ENVIRoi__AddThreshold.html";"7221"
"12533";"ENVIROI::AddVectorRecords";"Adds geometry records from an ENVIVector to an ROI.";"155";"ENVIRoi__AddVectorRecords.html";"5219"
"12534";"ENVIROI::ClearGeometry";"Clears all the defined geometry records for the given ENVIRasterLayer from an ROI.";"155";"ENVIRoi__ClearGeometry.html";"3734"
"12535";"ENVIROI::ClearPixels";"Clears all pixels from an ROI.";"155";"ENVIRoi__ClearPixels.html";"3825"
"12536";"ENVIROI::ClearThresholds";"Removes all the threshold definitions from an ROI.";"155";"ENVIRoi__ClearThresholds.html";"3351"
"12537";"ENVIROI::ClearVectorRecords";"Clears all the defined vector records for a given ENVIVector from an ROI.";"155";"ENVIRoi__ClearVectorRecords.html";"3736"
"12538";"ENVIROI::Close";"Closes the ENVIROI for reading and removes any layers displaying it.";"155";"ENVIRoi__Close.html";"3316"
"12539";"ENVIROI::GrowRegion";"Takes the existing seed locations of an ENVIROI and spatially grows those pixels to surrounding pixels that meet a set of statistical criteria for the given ENVIRaster image.";"155";"ENVIRoi__GrowRegion.html";"5073"
"12540";"ENVIROI::PixelAddresses";"Returns a list of the pixel locations that comprise the ROI for the given ENVIRaster.";"155";"ENVIRoi__PixelAddresses.html";"5832"
"12541";"ENVIROI::PixelCount";"Returns the number of pixel locations that comprise the ROI for the given ENVIRaster.";"155";"ENVIRoi__PixelCount.html";"4141"
"12542";"ENVIROI::Pixelate";"Converts any geometry or threshold definitions of an ROI into rasterized pixels of the given ENVIRaster.";"155";"ENVIRoi__Pixelate.html";"4638"
"12543";"ENVIROI::Revert";"Reverts an unsaved ENVIROI back to a clean state.";"155";"ENVIRoi__Revert.html";"3474"
"12544";"ENVIROI::Save";"Saves an ENVIROI to an .xml file.";"155";"ENVIRoi__Save.html";"3857"
"12545";"ENVIStandardRasterSpatialRef";"Reference to an ENVIStandardRasterSpatialRef object.";"155";"ENVIStandardRasterSpatialRef.html";"7137"
"12546";"ENVIStandardRasterSpatialRef::ConvertFileToFile";"Eonverts a set of pixel (x,y) coordinates in one spatial reference to the same pixel location in another spatial reference.";"155";"ENVIStandardRasterSpatialRef__ConvertFileToFile.html";"4220"
"12547";"ENVIStandardRasterSpatialRef::ConvertFileToMap";"Converts a set of file (pixel) x,y coordinates to a set of map (x-easting, y-northing) coordinates within one spatial reference.";"155";"ENVIStandardRasterSpatialRef__ConvertFileToMap.html";"3915"
"12548";"ENVIStandardRasterSpatialRef::ConvertLonLatToLonLat";"Converts a set of geographic latitude/longitude coordinates in one spatial reference to the same location in another spatial reference.";"155";"ENVIStandardRasterSpatialRef__ConvertLonLatToLonLat.html";"12506"
"12549";"ENVIStandardRasterSpatialRef::ConvertLonLatToMGRS";"Converts a set of geographic latitude/longitude coordinates to Military Grid Reference System (MGRS) coordinates within one spatial reference.";"155";"ENVIStandardRasterSpatialRef__ConvertLonLatToMGRS.html";"3691"
"12550";"ENVIStandardRasterSpatialRef::ConvertLonLatToMap";"Converts a set of geographic latitude/longitude coordinates to map coordinates (x-eastings, y-northings) within one spatial reference.";"155";"ENVIStandardRasterSpatialRef__ConvertLonLatToMap.html";"3930"
"12551";"ENVIStandardRasterSpatialRef::ConvertMGRSToLonLat";"Converts Military Grid Reference System (MGRS) coordinates to a set of geographic latitude/longitude coordinates within one spatial reference.";"155";"ENVIStandardRasterSpatialRef__ConvertMGRSToLonLat.html";"3844"
"12552";"ENVIStandardRasterSpatialRef::ConvertMapToFile";"Converts a set of map coordinates (x-easting, y-northing) to a set of file (pixel) x,y coordinates within one spatial reference.";"155";"ENVIStandardRasterSpatialRef__ConvertMapToFile.html";"3545"
"12553";"ENVIStandardRasterSpatialRef::ConvertMapToLonLat";"Converts a set of map coordinates (x-eastings, y-northings) to a set of geographic latitude and longitude coordinates within one spatial reference. ";"155";"ENVIStandardRasterSpatialRef__ConvertMapToLonLat.html";"3814"
"12554";"ENVIStandardRasterSpatialRef::ConvertMapToMap";"Converts a set of map coordinates (x-eastings, y-northings) in one spatial reference to the same location in a second spatial reference. ";"155";"ENVIStandardRasterSpatialRef__ConvertMapToMap.html";"3502"
"12555";"ENVITask";"Accepts a task name and returns an object reference to the task.";"159";"ENVITask.html";"15845"
"12556";"ENVITaskParameter";"Returns a reference to an object that lists the requirements for a given property of an ENVITask, along with its current settings.";"159";"ENVITaskParameter.html";"4410"
"12557";"ENVITaskParameter::Validate";"Returns a flag that indicates success (1) or failure (0) if the properties for an ENVITaskParameter meet the required criteria for successful execution of the associated task.";"159";"ENVITaskParameter__Validate.html";"8388"
"15404";"MGH_ADJACENT";"Given a 2D array defining a land-sea mask (sea=true; land=false), return an array of the same shape marked with 1s on all the sea cells that are adjacent to the land. NB: Here 'adjacent' means sharing a side with a land cell, not just...";"144";"mgh_adjacent.html";"88"
"15405";"MGH_BLOCKMEAN";"Given (x,y,z) data--where x & y are vectors representing position on a 2D plane and z is a matching vector representing a scalar value at each position--and a 2D rectilinear or curvilinear grid, this function filters the input data an...";"144";"mgh_blockmean.html";"42"
"12561";"ENVITask::Execute";"Runs the associated ENVITask.";"159";"ENVITask__Execute.html";"4828"
"12562";"ENVITask::Parameter";"Returns a copy of the ENVITaskParameter object with the requested property.";"159";"ENVITask__Parameter.html";"5371"
"12563";"ENVITask::ParameterNames";"Returns a sorted list of all properties for a given task.";"159";"ENVITask__ParameterNames.html";"4771"
"12564";"ENVITask::Validate";"Returns a flag that indicates success (1) or failure (0) if the properties for an ENVITask meet the required criteria for successful execution.";"159";"ENVITask__Validate.html";"8910"
"16792";"ENVIBinaryLTThresholdRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIBinaryLTThresholdRaster__Hydrate.html";"114"
"12566";"ENVIUI::Hourglass";"Enables an 'hourglass-shaped'cursor for all ENVI dialogs.";"156";"ENVIUI__Hourglass.html";"3284"
"12567";"ENVIView::ConvertFileToWindow";"Converts a set of file coordinates to IDL window coordinates.";"156";"ENVIView__ConvertFileToWindow.html";"3711"
"12568";"ENVIView::ConvertWindowToFile";"Converts a set of IDL window coordinates into file coordinates.";"156";"ENVIView__ConvertWindowToFile.html";"3520"
"12569";"ENVIView::HitTest";"Returns an array of visualizations located at a mouse event or within a user-specified box.";"156";"ENVIView__HitTest.html";"3714"
"12570";"Event Handler Class";;"2";"EventHandlerClass.html";"5899"
"12571";"Event Handlers";;"2";"EventHandlerLandingPage.html";"3415"
"12572";"Keyboard Event Handlers";;"2";"EventHandlersKeyboard.html";"4794"
"12573";"Mouse Event Handlers";;"2";"EventHandlersMouse.html";"6328"
"12574";"Selection Change Event Handlers";;"2";"EventHandlersSelectionChange.html";"4141"
"12575";"Image Processing Routines";;"2";"ImageProcessing.html";"4168"
"12576";"Obsolete Routines";;"2";"Obsolete.html";"4266"
"12577";"Write and Deploy Toolbox Extensions";;"2";"ToolboxExtensions.html";"10977"
"12578";"Open ECRG Datasets";;"136";"OpenECRGDatasets.html";"157"
"12580";"NPP VIIRS Datasets";;"136";"OpenNPPVIIRS_Data.html";"24361"
"12581";"Georectify Imagery Reference";;"136";"GeorectifyImageryReference.html";"125"
"12582";"Save and Restore Views and Layers";;"136";"SaveRestoreSession.html";"5878"
"12583";"Explore Imagery Reference";;"136";"ExploreImageryReference.html";"120"
"12584";"Seamless Mosaic";;"136";"MosaicSeamless.html";"35349"
"12585";"Feature Extraction Reference";;"136";"ReferenceLandingPage.html";"160"
"12586";"ENVI - Environment for Visualizing Images";;"136";"using_envi_Home.html";"108269"
"12587";"Edit Plot Values";;"136";"EditPlotValues.html";"1443"
"12589";"Export Plot Data";;"136";"ExportPlotData.html";"2848"
"12590";"Import Plot Data";;"136";"ImportPlotData.html";"2059"
"12591";"Scale Incoming Curve Data";;"136";"ScaleIncomingCurve.html";"1815"
"12592";"Compute AVHRR Sea Surface Temperature";;"136";"AVHRRSeaSurfaceTemperature.html";"6249"
"12593";"ROI Pixel Inclusion Background";;"136";"BackgroundROIPixelInclusion.html";"2576"
"12594";"ROI Pixel Reprojection Background";;"136";"BackgroundROIReprojection.html";"2286"
"12595";"Vector Auxiliary Files Background";;"136";"BackgroundVectorAuxiliaryFiles.html";"4398"
"12596";"Convert an ENVI Classic .evf File to a Shapefile";;"136";"ClassicEVFToShapefile.html";"8948"
"12597";"Regions of Interest";;"136";"ROITools.html";"3961"
"12598";"Region of Interest (ROI) Tool";;"136";"RegionOfInterestTool.html";"48527"
"12599";"Keyboard Shortcuts";;"136";"Shortcuts.html";"4598"
"12600";"Profiles and Plots";;"136";"Profiles.html";"21489"
"12601";"Hyperspectral Material Identification";;"136";"THORHyperspectralMaterialIdentification.html";"5464"
"12602";"Basic Hyperspectral Analysis Tutorial";;"136";"HyperspectralAnalysisTutorial.html";"25760"
"12603";"Preprocessing AVIRIS Data Tutorial";;"136";"PreprocessAVIRIS.html";"16362"
"12604";"Mosaic Tutorial: Advanced Workflow";;"136";"MosaicAdvancedTutorial.html";"7846"
"12605";"Mosaic Tutorial: Simple Workflow";;"136";"MosaicTutorial.html";"16272"
"12644";"CGOTSU_THRESHOLD";"The purpose of this function is to find an optimal threshold for separating a bimodal distribution of pixels in an image histogram.";"118";"cgotsu_threshold.html";"57"
"12633";"CGKML_GROUNDOVERLAY__DEFINE";"This program implements the KML GroundOverlay element.";"118";"cgkml_groundoverlay__define.html";"37"
"13783";"ERROR_MESSAGE";"This procedure creates an error message modal dialog box.";"150";"error_message.html";"301"
"13791";"SHARPEN";"Returns sharpened version of the given image.";"142";"sharpen.html";"2"
"13790";"PICKCOLOR";"Allow user to pick a color from current color table.";"142";"pickcolor.html";"19"
"13789";"THRESHOLD_QUANTILE";"This function estimates the quantiles of the given thresholds in the input data array.";"145";"threshold_quantile.html";"33"
"13788";"QUANTILE_THRESHOLD";"This function estimates the thresholds in the input data array corresponding to the specified quantiles.";"145";"quantile_threshold.html";"740"
"13792";"WHOAMI";"Returns to the calling routine its directory and name.";"142";"whoami.html";"107"
"13793";"WHOCALLEDME";"Returns to calling routine its parent's directory and name.";"142";"whocalledme.html";"111"
"13794";"AL_LEGENDTEST";"Demo program to show capabilities of the al_legend procedure.";"119";"al_legendtest.html";"101"
"13795";"SAFE_CORRELATE";"This function computes the probability by which the null hypothesis of uncorrelated data may be rejected while accounting for uncertainty in the data values.";"119";"safe_correlate.html";"61"
"13796";"SIP_EVAL";"Compute distorted coordinates given SIP (simple imaging polynomial) coefficients.";"119";"sip_eval.html";"80"
"13797";"SOLVE_ASTRO";"Solve for an TANgent-plane astrometric plate solution with optional distortion terms";"119";"solve_astro.html";"204"
"13798";"TNX_EVAL";"Compute distorted coordinates given TNX (Tangent + Iraf tnx distortion polynomial) coefficients.";"119";"tnx_eval.html";"32"
"13799";"TPV_EVAL";"Compute distorted coordinates given TPV (Tangent + PV_ polynomial) coefficients.";"119";"tpv_eval.html";"31"
"13800";"ADJUSTPOSITION";"This is a program for interactively adjusting the plot position coordinates. The result of the function is a four-element floating point array of normalized coordinates, suitable for passing to the POSITION keyword of most IDL graphic...";"118";"adjustposition.html";"241"
"13801";"ANSI_VALUE";"Provides a way to display non-printable characters in widget elements.";"118";"ansi_value.html";"149"
"13802";"ARCSAMPLE";"Given X and Y points that describe a closed curve in 2D space, this function returns an output curve that is sampled a specified number of times at approximately equal arc distances.";"118";"arcsample.html";"213"
"13803";"ASINHSCL";"This is a utility routine to perform an inverse hyperbolic sine function intensity transformation on an image. I think of this as a sort of 'tuned' gamma or power-law function. The algorithm, and notion of 'asinh magnitudes', comes fr...";"118";"asinhscl.html";"186"
"13804";"BINARY";"This function is used to display a binary representation of byte, integer, and long integer values.";"118";"binary.html";"319"
"13805";"BLOB_ANALYZER__DEFINE";"The purpose of this routine is to create a system for analyzing regions of interest (ROIs) or (more commonly) 'blobs' inside images. In particular, given a suitable image (this will require judgement on your part), the program will au...";"118";"blob_analyzer__define.html";"591"
"13806";"CAPFIRSTLETTER";"Given a string, separates the parts by white space, commas, semi-colons, or colons. Each part has the first letter capitalized. The returned string has the capitalized parts separated by a space.";"118";"capfirstletter.html";"152"
"13807";"CGARROW";"Provides a device-independent and color-model-independent way of drawing an arrow in a specified color.";"118";"cgarrow.html";"215"
"13808";"CGAXIS";"Provides a device-independent and color-model-independent way to draw an axis into a graphics window. It is a wrapper to the AXIS command.";"118";"cgaxis.html";"468"
"13809";"CGBARPLOT";"Provides a device-independent and color-model-independent way to create a bar plot or to overplot on an existing bar plot.";"118";"cgbarplot.html";"405"
"13810";"CGBITGET";"The program is used to obtain the value of a particular bit in an integer number.";"118";"cgbitget.html";"112"
"13811";"CGBLENDIMAGE";"This alpha blends two 24-bit images and displays them with the cgImage command.";"118";"cgblendimage.html";"259"
"13812";"CGBOXPLOT";"This is graphics routine to display a box plot, also known as a box and whisker plot, in IDL direct graphics. The box encloses the interquartile range (IQR), defined at IQR75-IQR25. The whiskers extend out to the maximum or minimum va...";"118";"cgboxplot.html";"508"
"13813";"CGCHECKFORSYMBOLS";"The purpose of this funciton is to check a string for symbols, encased in escape characters, that should be revolved with cgSymbol. The cgSymbol name will appear with the characters '$' prepended to the name, and the character '$' ap...";"118";"cgcheckforsymbols.html";"541"
"13814";"CGCMDWINDOW__DEFINE";"Creates a 'command' window for IDL traditional commands (Plot, Contour, Surface, etc. or for Coyote Graphics routines, cgPlot, cgContour, cgSurf, etc.). In addition, the window contents can be saved as PostScript files or as raster im...";"118";"cgcmdwindow__define.html";"286"
"13815";"CGCOLOR";"The purpose of this function is to obtain drawing colors by name and in a device/decomposition independent way. The color names and values may be read in as a file, or 192 color names and values are supplied with the program. These co...";"118";"cgcolor.html";"1440"
"13816";"CGCOLORBAR";"The purpose of this routine is to add a color bar to the current graphics window.";"118";"cgcolorbar.html";"515"
"13817";"CGCOLORFILL";"Provides a device-independent and color-model-independent way to fill a polygon with a particular color. This is a wrapper to the PolyFill command in IDL.";"118";"cgcolorfill.html";"101"
"13818";"CGCONLEVELS";"This program is designed to create 'nicely formatted' contour levels for use in contour plots. The idea is to be able to produce evenly spaced contour intervals with the contour levels rounded off to the preferred degree of accuracy. ...";"118";"cgconlevels.html";"104"
"13819";"CGCONTAINER__DEFINE";"A modified IDL container with properties needed for Coyote Graphics routines.";"118";"cgcontainer__define.html";"74"
"13820";"CGCONTOUR";"The purpose of cgContour is to create a wrapper for the traditional IDL graphics command, Contour. The Contour command has a number of deficiencies that make it difficult to use in a modern computing environment. cgContour corrects th...";"118";"cgcontour.html";"473"
"13821";"CGCONTROL";"Allows the user to set various properties of an cgWindow object. This is essentially a wrapper to the cgWindow SetProperty method.";"118";"cgcontrol.html";"109"
"13822";"CGCOORD__DEFINE";"An object for maintaining a coordinate system for data annotation or display. Simply calling the Draw method of the object sets up the data coordinate system.";"118";"cgcoord__define.html";"77"
"13823";"CGDCBAR";"The purpose of this routine is to add a discrete color bar to a graphics plot. A 'discrete' color bar is one with a handful of colors. Labels are centered beneath or beside the color fields.";"118";"cgdcbar.html";"115"
"13824";"CGDEFAULTCOLOR";"The purpose of this function is to choose a default color for Coyote Graphics routines.";"118";"cgdefaultcolor.html";"143"
"13825";"CGDEFCHARSIZE";"Defines a default character size for Coyote Graphics routines (cgPlot, cgContour, etc.) IF !P.Charsize is set, the function simply returns !P.Charsize.";"118";"cgdefcharsize.html";"147"
"13826";"CGDELETE";"Allows the user to delete one or more cgWindow applications. The cgWindow can be identifed by window index number, widget identifier, title, or object reference, depending on which keywords are set.";"118";"cgdelete.html";"77"
"13827";"CGDEMODATA";"The purpose of this function is to read a selection of standard data sets that are found in the normal IDL distribution in the subdirectory $IDL_DIR/examples/data. At least 25 data sets are available in all categories of data. The use...";"118";"cgdemodata.html";"93"
"13828";"CGDISPLAY";"The purpose of cgDisplay is to open a graphics window on the display, or in the PostScript device, or in the Z-graphics buffer, depending upon the current graphics device. In PostScript a window of the proper aspect ratio is created w...";"118";"cgdisplay.html";"285"
"13829";"CGDRAWSHAPES";"This program draws the entities in a shapefile, containing latitude and longitude polygons or polylines, on a map projection. To draw the shapefile entities automatically, no matter what kind of values the polygon vertices have, and w...";"118";"cgdrawshapes.html";"127"
"13830";"CGDRAWVECTORS";"Plots the velocity vectors of particles at their position. Vectors may be overplotted onto other IDL graphics plots.";"118";"cgdrawvectors.html";"237"
"13831";"CGERASE";"Provides a device-independent and color-model-independent way to erase a graphics window with a particular color.";"118";"cgerase.html";"134"
"13832";"CGFILESELECT__DEFINE";;"118";"cgfileselect__define.html";"82"
"13833";"CGFINDCOYOTEFILES";"This procedure looks for Coyote Library routines in every directory in the IDL path and reports the directories that it strongly suspects contain Coyote Library files. The purpose of this is to aid in eliminating old and out-dated Coy...";"118";"cgfindcoyotefiles.html";"89"
"13834";"CGFINDPATHTO";"The purpose of this function is to search for a file, primarily in 'resources' directories. It might be used, for example, to find the name of bitmap files to use as widget button values. This program can be slow, depending upon how m...";"118";"cgfindpathto.html";"109"
"13835";"CGGEOMAP";"The purpose of this function is to translate a GEOTIFF structure (as returned by QUERY_TIFF or READ_TIFF) into a map coordinate object (cgMap) that can be used to georeference images with a map data coordinate system. The Coyote Libra...";"118";"cggeomap.html";"257"
"13836";"CGGOOGLE_METERSPERPIXEL";"This funtion returns the number of meters per pixel for a particular zoom level in images returned using Google's Static Image API.";"118";"cggoogle_metersperpixel.html";"160"
"13837";"CGGOOGLEMAPMARKER__DEFINE";"This program is the definition module for a Google Map Marker structure, which is used in the GoogleMapWidget object to add markers to Google Static Map images.";"118";"cggooglemapmarker__define.html";"104"
"13838";"CGGOOGLEMAPWIDGET";"This is the driver for the cgGoogleMapWidget object, which is a compound widget object that obtains a Google static map from Google Maps and displays it in the program's draw widget window. It can be used either as a stand-alone progr...";"118";"cggooglemapwidget.html";"98"
"13839";"CGGOOGLEMAPWIDGET__DEFINE";"This is a compound widget object that obtains a Google static map from Google Maps and displays it in the program's draw widget window. It can be used either as a stand-alone program or to create a map image in draw widget in a larger...";"118";"cggooglemapwidget__define.html";"77"
"13840";"CGGRAPHICSKEYWORDS__DEFINE";"Provides an object interface to handle IDL direct graphics plotting keywords. Basically, any graphics keyword that is common to IDL plotting routines (e.g. Plot, Contour, Surface, etc.) is supported here. See the IDL documentation for...";"118";"cggraphicskeywords__define.html";"92"
"13841";"CGHISTOPLOT";"This program is used to draw a histogram plot in an IDL direct graphics window..";"118";"cghistoplot.html";"458"
"13842";"CGIMAGE";"The purpose of this program is to create a TV command that works the way the TV command would be expected to work if it was written today, rather than 25 years ago. In other words, it knows the difference between an 8-bit device and a...";"118";"cgimage.html";"1280"
"13843";"CGIMAGEGROUP__DEFINE";"The initialization module for the cgImageGroup object creates a specific instance of the object.";"118";"cgimagegroup__define.html";"62"
"13844";"CGIMAGEINFO";"The purpose of this program is allow interactive inquiry of image position and values for images displayed with cgImage. After a call to cgImage, cgImageInfo can be called and the user can use the cursor to click in the image display ...";"118";"cgimageinfo.html";"121"
"13845";"CGIMAGEINFODESCRIBEVALUES";"Provide information about the selected xy-pixel from an image, or a hash of images.";"118";"cgimageinfodescribevalues.html";"114"
"13846";"CGLEGEND";"The purpose of this program is to a create simple legend that can be drawn in a graphics window. Users needing more complex legends may prefer to use AL_Legend from the NASA Astronomy IDL Library. This program has a more limited set o...";"118";"cglegend.html";"128"
"13847";"CGLEGENDITEM__DEFINE";"The purpose of this program is to create a simple legend object that can be drawn on a data plot. The user can include any number of legend 'items' in the final legend.";"118";"cglegenditem__define.html";"96"
"13848";"CGLINEINTERSECT";"This function returns the intersection of two line segments, represented by four points.";"118";"cglineintersect.html";"29"
"13849";"CGLOADCT";"This is a drop-in replacement for the IDL-supplied program LOADCT. The same keywords used with LOADCT apply. In addition, a REVERSE keyword is supplied to reverse the color table vectors, and a CLIP keyword is supplied to be able to c...";"118";"cgloadct.html";"596"
"13850";"CGLOGGEN";"This function creates an evenly spaced vector of points in log space.";"118";"cgloggen.html";"73"
"13851";"CGMAP__DEFINE";"Provides an easy way to set up a map projection coordinate space using GCTP map projections normally accessed via Map_Proj_Init. Allows an unlimited number of map overlays, and can provide a fresh map structure on demand, eliminating ...";"118";"cgmap__define.html";"162"
"13852";"CGMAP_CONTINENTS";"Provides a simple wrapper to the MAP_CONTINENTS command in IDL that can be used to draw map continental outlines in a device and color independent way with Coyote Graphics programs.";"118";"cgmap_continents.html";"213"
"13853";"CGMAP_GRID";"This program provides a significantly modified MAP_GRID command that can be used with other Coyote Graphics routines. Description of known MAP_GRID problems:: http://www.idlcoyote.com/map_tips/noclip.html http://www.idlcoyote.com/map_...";"118";"cgmap_grid.html";"231"
"13854";"CGMAP_GSHHS";"The program uses files from the Globally Self-consistent Hierarchical High-resolution Shoreline (GSHHS) data base to draw shorelines in the manner of MAP_CONTINENTS. In other words, it is assumed that a map coordinate data space has b...";"118";"cgmap_gshhs.html";"150"
"13855";"CGMAP_SET";"Provides a modified MAP_SET command that can work together with other Coyote Graphics commands and be used in resizeable graphics windows. Any keyword appropriate for MAP_SET, MAP_CONTINENTS, or MAP_GRID can be used with this routine....";"118";"cgmap_set.html";"194"
"13856";"CGMAPCONTINENTS__DEFINE";"Provides an object wrapper to the cgMAP_CONTINENTS or the cgMap_GSHHS commands. Coyote Library routines are required.";"118";"cgmapcontinents__define.html";"70"
"13857";"CGMAPGRID__DEFINE";"This object is a wrapper for the cgMap_Grid routine in IDL. It provides a simple way to allow map grids on images which use a cgMAP object to set up the map projection space. A map coordinate space must be in effect at the time the Dr...";"118";"cgmapgrid__define.html";"72"
"13858";"CGMAPPLOTS__DEFINE";"This object is a wrapper for the cgPlotS routine in IDL. It provides a simple way to allow lines and symbols to be placed as annotations on map projections created with the cgMap coordinate object. Note that it may be easier and more ...";"118";"cgmapplots__define.html";"120"
"13859";"CGMAPVECTOR__DEFINE";"This object allows vectors (arrows) to be placed as annotations on map projections created with the cgMap coordinate object.";"118";"cgmapvector__define.html";"85"
"13860";"CGMINMAX";"Prints the minimum and maximum of an IDL variable.";"118";"cgminmax.html";"112"
"13861";"CGNCDFMAP";"The purpose of this function is to translate map projection information found in a netCDF file into a map coordinate object (cgMap) that can be used to georeference images with a map data coordinate system. The Coyote Library is requi...";"118";"cgncdfmap.html";"82"
"13862";"CGOPLOT";"The purpose of cgOPlot is to create a drop-in replacement for the traditional IDL command, OPlot. It simply calls cgPlot with the OVERPLOT keyword set.";"118";"cgoplot.html";"411"
"13863";"CGOVERPLOT__DEFINE";"The purpose of this program is to create a data object that can be plotted or drawn on a set of axes set up by another plotting command.";"118";"cgoverplot__define.html";"80"
"13864";"CGPICKFILE";"This is a utility program for selecting data files. It is a wrapper for DIALOG_PICKFILE, with the additional functionality of being able to 'remember' the name and directory of the last file selected by the program. It basically allow...";"118";"cgpickfile.html";"85"
"13865";"CGPIXMAP";"Creates an invisible graphics window for IDL traditional commands (Plot, Contour, Surface, etc. or for Coyote Graphics routines, cgPlot, cgContour, cgSurf, etc.). In addition, the window contents can be saved as PostScript files or as...";"118";"cgpixmap.html";"113"
"13866";"CGPIXMAPWINDOW__DEFINE";"This is the 'object' behind cgPixmap. It is a subclassed cgCmdWindow object and behaves almost identically, except that normally the draw widget at the heart of the window is invisible. That is, it is a pixmap. Default properties of t...";"118";"cgpixmapwindow__define.html";"66"
"13867";"CGPLOT";"The purpose of cgPlot is to create a wrapper for the traditional IDL graphics command, Plot. The primary purpose of this is to create plot commands that work and look identically both on the display and in PostScript files. Program de...";"118";"cgplot.html";"840"
"13868";"CGPLOTS";"The purpose of cgPlotS is to create a wrapper for the traditional IDL graphics command, PlotS. The primary purpose of this is to create plot commands that work and look identically both on the display and in PostScript files.";"118";"cgplots.html";"592"
"13869";"CGPOLYGON";"Provides a device-independent and color-model-independent way to draw a filled or unfilled polygon.";"118";"cgpolygon.html";"158"
"13870";"CGPS2PDF";"Converts a PostScript file to a PDF file. This program requires the `Ghostscript &lt;http://www.ghostscript.com/download/&gt;` program to be installed on the user's computer, unless you are using a Macintosh computer or an alterntive ...";"118";"cgps2pdf.html";"177"
"13871";"CGPS2RASTER";"The purpose of this program is to convert a PostScript file to a high resolution raster file, using the ImageMagick convert command to do the conversion. `ImageMagick &lt;http://www.imagemagick.org/script/index.php&gt;` must be instal...";"118";"cgps2raster.html";"186"
"13872";"CGPS_SETUP__DEFINE";"The purpose of cgPS_SETUP__DEFINE is to define a structure that is used by cgPS_Open and cgPS_Close to communicate PostScript set-up information back and forth. The idea is to allow simple and error set-up of PostScript and raster fil...";"118";"cgps_setup__define.html";"39"
"13873";"CGPSDIMS";"The purpose of this function is to return the dimensions of the bounding box of a PostScript file.";"118";"cgpsdims.html";"20"
"13874";"CGPSWINDOW";"This function is used to calculate the size of a PostScript window that has the same aspect ratio (ratio of height to width) as the current display graphics window. It creates the largest possible PostScript output window with the des...";"118";"cgpswindow.html";"68"
"13875";"CGQUERY";"Provides information about any cgWindow applications currently on the display. Returns the window index numbers of any cgWindow applications current on the display.";"118";"cgquery.html";"189"
"13876";"CGRANDOMINDICES";"This function returns random indices without replacement. You can, for example, select 100 random, unique indices from a vector of 10000 random indices. The program uses an `algorithm offered by JD Smith &lt;http://www.idlcoyote.com/c...";"118";"cgrandomindices.html";"83"
"13877";"CGRESIZERASTER";"The purpose of this program is to resize a raster file according to instructions from the user. It was designed specifically to resize the extremely large raster files created by IDL's function graphics commands from within an IDL pro...";"118";"cgresizeraster.html";"41"
"13878";"CGSCATTER2D";"The purpose of cgScatter2d is to create a two-dimensional scatter plot with the option of drawing a correlation coefficient on the plot.";"118";"cgscatter2d.html";"137"
"13879";"CGSET";"Allows the user to select the cgWindow application to be the 'current' application. Selection can be made based on window index number, widget identifier, object reference, or window title.";"118";"cgset.html";"186"
"13880";"CGSHADE_SURF";"The purpose of cgShade_Surf is simply to make it easier for people to remember how to create a shaded surface with cgSurf. See the documentation for cgSurf to learn more about surface rendering. All this program does is make sure the ...";"118";"cgshade_surf.html";"84"
"13881";"CGSHOW";"Allows the user to select the cgWindow application to be the brought forward on the display. Selection can be made based on window index number, widget identifier, object reference, or window title. This is the equivalent of WShow for...";"118";"cgshow.html";"130"
"13882";"CGSNAPSHOT";"To get accurate screen dumps with the IDL command TVRD on 24-bit PC and Macintosh computers, you have to be sure to set color decomposition on. This program adds that capability automatically. In addition, the program will optionally ...";"118";"cgsnapshot.html";"264"
"13883";"CGSOURCEDIR";"The purpose of this function is to provide a portable way of finding the source directory of a program distribution. The directory that is returned is the directory in which the source file using cgSourceDir() resides. The program is ...";"118";"cgsourcedir.html";"55"
"13884";"CGSURF";"The purpose of cgSurf is to create a wrapper for the traditional IDL graphics commands, Surface and Shade_Surf. The primary purpose of this is to create surface commands that work and look identically both on the display and in PostSc...";"118";"cgsurf.html";"155"
"13885";"CGSURFACE";"The purpose of cgSurface is to create a window where a surface is displayed. Surfaces can be wire-framed, shaded surfaces, and surfaces with texture maps draped on top of them, among other types of surfaces. LEFT mouse button rotates ...";"118";"cgsurface.html";"334"
"13886";"CGSYMBOL";"This function provides a device-independent way to ask for commonly-used symbols (e.g., less than or equal to, Angstrom, degree symbol, subscripts, superscripts, etc.), including all 24 Greek symbols in upper and lower case, to displa...";"118";"cgsymbol.html";"622"
"13887";"CGSYMCAT";"This function provides a symbol catalog for specifying a number of plotting symbols.";"118";"cgsymcat.html";"230"
"13888";"CGTEXT";"Provides a device-independent and color-model-independent way to write text into a graphics window. It is a wrapper to the XYOUTS command.";"118";"cgtext.html";"432"
"13889";"CGWHOAMI";"This is a function that will identify the name of the procedure or function which calls this function.";"118";"cgwhoami.html";"44"
"13890";"CGWHOCALLEDME";"This is a function that will identify the caller of the program module that contains this funciton.";"118";"cgwhocalledme.html";"26"
"13891";"CGWINDOW";"Creates a resizeable graphics window for IDL traditional commands (Plot, Contour, Surface, etc. or for Coyote Graphics routines, `cgPlot`, `cgContour`, `cgSurf`, etc.). In addition, the window contents can be saved as PostScript, PDF,...";"118";"cgwindow.html";"462"
"13892";"CGWINDOW_GETDEFS";"Allows the user to get the global defaults for resizeable cgWindow programs.";"118";"cgwindow_getdefs.html";"76"
"13893";"CGWINDOW_SETDEFS";"Allows the user to set global defaults for resizeable cgWindow programs.";"118";"cgwindow_setdefs.html";"117"
"13894";"CGZPLOT";"This program creates a 'zoomable' line plot in an interactive window. The user can zoom into or out of the plot. Once a plot is zoomed, the user can then pan the plot in both the X and Y directions. See the operating instructions for ...";"118";"cgzplot.html";"168"
"13895";"CGZPLOT__DEFINE";"This program creates a 'zoomable' line plot in an interactive, resizable window. The user can zoom into or out of the plot. Once a plot is zoomed, the user can then pan the plot in both the X and Y directions. See the operating instru...";"118";"cgzplot__define.html";"85"
"13896";"CHECKERBOARD";"This function returns a 2D image, with boxes of alternating colors. Checkerboard images are useful in certain types of image processing procedures and for making blended image masks.";"118";"checkerboard.html";"116"
"13897";"CINDEX";"This is a program for viewing the current colors in the colortable with their index numbers overlayed on each color. On 24-bit systems you must click the cursor in the graphics window to see the colors in the current color table.";"118";"cindex.html";"110"
"13898";"CLIPSCL";"This is a utility routine to perform linear scaling (similar to BYTSCL) on image arrays. If differs from BYTSCL only in that a user-specified percentage of pixels can be clipped from the image histogram, prior to scaling. By default, ...";"118";"clipscl.html";"122"
"13899";"COLORBUTTONBITMAP";"The purpose of this program is to create a 24-bit bitmap that can be used to create a colored widget button.";"118";"colorbuttonbitmap.html";"147"
"13900";"COLORSAREIDENTICAL";"Returns a 1 if the two input colors refer to the same color, otherwise returns a 0.";"118";"colorsareidentical.html";"84"
"13901";"CONTRASTZOOM";"The purpose of this program is to demonstrate how to zoom an image 'in place' and how to window and level (set 'contrast and brightness') an image using object graphics functionality. The exercise involves using multiple views in an o...";"118";"contrastzoom.html";"66"
"13902";"CONVERT_TO_TYPE";"Converts its input argument to a specified data type.";"118";"convert_to_type.html";"116"
"13903";"CW_DRAWCOLOR";"This compound widget is used to place a label or color name next to a color patch. Clicking on the color patch allows the user to select another color";"118";"cw_drawcolor.html";"65"
"13904";"DIRPATH";"The purpose of this function is to return a device-independent name of a directory. It is similar to the IDL-supplied FILEPATH routine, except that a file name is not required.";"118";"dirpath.html";"143"
"13905";"ERRORLOGGER__DEFINE";"The purpose of this program is to log program errors or text messages during program execution as an aid to debugging such a program at a later date. The ErrorLogger program is written as an object so that it will persist in the IDL s...";"118";"errorlogger__define.html";"82"
"13906";"FIND_BOUNDARY";"This program finds the boundary points about a region of interest (ROI) represented by pixel indices. It uses a 'chain-code' algorithm for finding the boundary pixels.";"118";"find_boundary.html";"191"
"13907";"FIT_ELLIPSE";"This program fits an ellipse to an ROI given by a vector of ROI indices.";"118";"fit_ellipse.html";"240"
"17016";"Install and Administer the Flexera License Server Service on Windows";;"169";"flexnetserver-windows-install.html";"63"
"17015";"Install and Administer the Flexera License Server Service on Linux";;"169";"flexnetserver-linux-install.html";"69"
"13909";"FLOATS_EQUAL";"The purpose of this function is to compare two floating-point values or arrays to determine if the values or arrays are equal. Arrays are equal if they have the same number of elements, and each element is equal. To learn why determin...";"118";"floats_equal.html";"128"
"13910";"FPUFIX";"This is a utility routine to examine a variable and fix problems that will create floating point underflow errors.";"118";"fpufix.html";"148"
"13911";"FSC_COLORBAR__DEFINE";"The purpose of this routine is to implement a FSC_COLORBAR object class. The ColorBar is rendered in the direct graphics system.";"118";"fsc_colorbar__define.html";"123"
"13912";"FSC_COLORSELECT";"The purpose of this compound widget is to provide a means for selecting a new color or color table in a widget program. The program consists of a label, a non-editable text widget, and a button to make a color or color table selection...";"118";"fsc_colorselect.html";"427"
"13913";"FSC_DROPLIST";"The purpose of this compound widget is to provide an alternative to the DROPLIST widget offered in the IDL distribution. What has always annoyed me about a droplist is that you can't get the current 'value' of a droplist easily. This ...";"118";"fsc_droplist.html";"93"
"13914";"FSC_FIELD";"The purpose of this compound widget is to provide an alternative to the CW_FIELD widget offered in the IDL distribution. One weakness of the CW_FIELD compound widget is that the text widgets do not look editable to the users on Window...";"118";"fsc_field.html";"223"
"13915";"FSC_FILESELECT";"The purpose of this compound widget is to provide a means by which the user can type or select a file name. The program is written as an 'object widget', meaning that the guts of the program is an object of class FSC_FILESELECT. This ...";"118";"fsc_fileselect.html";"133"
"13916";"FSC_INPUTFIELD";"The purpose of this compound widget is to provide an alternative to the CW_FIELD widget offered in the IDL distribution. What has always bothered me about CW_FIELD is that the text widgets do not look editable to the users on Windows ...";"118";"fsc_inputfield.html";"127"
"13917";"FSC_PLOTWINDOW";"The purpose of this compound widget is to create a resizeable 'plot window' inside a larger 'page window'. I'm not sure it has any value except as a utility routine for the PostScript configuration object FSC_PSCONFIG__DEFINE, but it'...";"118";"fsc_plotwindow.html";"92"
"13918";"FSC_PSCONFIG__DEFINE";"The purpose of this program is to implement an object that can keep track of--and allow the user to change--the current configuration of the PostScript device.";"118";"fsc_psconfig__define.html";"93"
"13919";"GAUSSSCL";"This is a utility routine to perform a gaussian gray-level pixel transformation stretch on a image.";"118";"gaussscl.html";"80"
"13920";"GET_OBJECT_ID";"The purpose of this function is to be able to obtain a unique object identifier string for a heap variable (object or pointer).";"118";"get_object_id.html";"103"
"13921";"GETIMAGE";"The purpose of this function is to allow the user to open either unformmated or XDR binary image files of up to eight dimensions.";"118";"getimage.html";"122"
"13922";"GETPRIMARYSCREENSIZE";"Provides a way to get the screen size of the primary monitor, especially when there are several being used.";"118";"getprimaryscreensize.html";"82"
"13923";"GMASCL";"This is a utility routine to perform basic gray-level pixel transformations of images. I think of it as BYTSCL on steroids. It is similar to IMADJUST in _Digital Image Processing with MATLAB_ by Gonzales, Wood, and Eddins. It performs...";"118";"gmascl.html";"120"
"13924";"HCOLORBAR__DEFINE";"The purpose of this program is to create a horizontal colorbar object to be used in conjunction with other IDL 5 graphics objects.";"118";"hcolorbar__define.html";"118"
"13925";"HELP_VAR";"The purpose of this program is to display HELP on just the variables at the level in which HELP_VAR is called. It is similar to the HELP command, except that compiled functions and procedures are not displayed.";"118";"help_var.html";"72"
"13926";"HISTOMATCH";"This is a function for Histogram Matching, in which an image is manipulated in such a way that it's final histogram approximates the histogram of an input image or histogram. Histogram matching allows the user to specify the shape of ...";"118";"histomatch.html";"177"
"13927";"IMAGE_BLEND";"The purpose of this program is to demonstrate how to use the alpha channel to blend one image into another. The specific purpose is to see a color image on top of a gray-scale image, with the gray-scale image showing through behind th...";"118";"image_blend.html";"159"
"13928";"IMAGE_DIMENSIONS";"The purpose of this function is to return the various dimensions of the image, and also to extract relevant image information via output keywords. The function works only with 2D and 3D (24-bit) images, with or without alpha channels.";"118";"image_dimensions.html";"99"
"13929";"IMAGESELECT";"The purpose of this program is to allow the user to select a formatted image file for reading. The image data is returned as the result of the function. The program allows the user to see a thumbnail version of the image, along with i...";"118";"imageselect.html";"86"
"13930";"INSIDE";"The purpose of this function is to indicate whether a specified 2D point is inside (returns a 1) a specified 2D polygon or outside (returns a 0).";"118";"inside.html";"129"
"13931";"JD2TIME";"The purpose of this function is to convert a Julian day number into a time string of the form '16 Mar 2009'.";"118";"jd2time.html";"122"
"13932";"LEFTJUSTIFY";"This is a utility routine to create a string that is left-justified with respect to a string width.";"118";"leftjustify.html";"104"
"13933";"LINKEDLIST__DEFINE";"The purpose of this program is to implement a list that is linked in both the forward and backward directions. There is no restriction as to what can be stored in a linked list node. The linked list is implemented as an object.";"118";"linkedlist__define.html";"170"
"13934";"LIST_SELECTOR";"The purpose of this function is to implement a pop-up dialog widget for the purpose of selecting 'names'. Names can be names of variables, names of files, etc. Any string array can be used.";"118";"list_selector.html";"105"
"13935";"LOGSCL";"This is a utility routine to perform a log intensity transformation on an image. For exponent values greater than 1.0, the upper and lower values of the image are compressed and centered on the mean. Larger exponent values provide ste...";"118";"logscl.html";"135"
"13936";"MAXMIN";"Prints the maximum and minimum of an IDL variable.";"118";"maxmin.html";"96"
"13937";"MAXWINDOWSIZE";"Returns the resolution of the largest unobstructed graphics window that can be created on this particular graphics device. Works properly for Windows and UNIX computers, excluding Macintosh computers. There is no known way to find the...";"118";"maxwindowsize.html";"81"
"13938";"NAME_SELECTOR";"The purpose of this function is to implement a pop-up dialog widget for the purpose of selecting 'names'. Names can be names of variables, names of files, etc. Any string array can be used.";"118";"name_selector.html";"74"
"13939";"NCDF_ATTRIBUTE__DEFINE";"The pupose of this NCDF_Attribute object is to store information about a netCDF global or variable attribute. The object is principally used as a utility routine for the NCDF_FILE object. Given the attribute name, the object will acqu...";"118";"ncdf_attribute__define.html";"73"
"13940";"NCDF_BROWSER";"This program is designed to make it easier to browse and read the data and metadata in netCDF and HDF files. The user can browse files, and read the data and metadata into main-level IDL variables. New netCDF and HDF files can be open...";"118";"ncdf_browser.html";"439"
"13941";"NCDF_CASTDATATYPE";"This is a utility routine to turn IDL data types into the equivalent netCDF data type. In other words, change 'STRING' to 'CHAR' and so on.";"118";"ncdf_castdatatype.html";"77"
"13942";"NCDF_CONTAINER__DEFINE";"This is a beefed-up IDL_CONTAINER object written as a utility object for the NCDF_FILE object and related objects. In particular, two new container methods have been added. The FindByID method searches container objects by object ID, ...";"118";"ncdf_container__define.html";"98"
"13943";"NCDF_DATA__DEFINE";"This program is designed to make it easier to browse and read the data and metadata in netCDF and HDF files. The user can browse files, and read the data and metadata into main-level IDL variables. New netCDF and HDF files can be open...";"118";"ncdf_data__define.html";"365"
"13944";"NCDF_DIMENSION__DEFINE";"The pupose of this NCDF_Dimension object is to store information about a netCDF dimension. The object is principally used as a utility routine for the NCDF_FILE object. Given the dimension name, the object will acquire additional info...";"118";"ncdf_dimension__define.html";"88"
"13945";"NCDF_FILE__DEFINE";"The pupose of this NCDF_File object is three-fold. (1) Allow the user to easily determine what information is inside a netCDF file and allow easy access to such information. (2) Allow the user to easily create a netCDF file from scrat...";"118";"ncdf_file__define.html";"104"
"13946";"NCDF_FILE_EXAMPLES";"This is a utility routine demonstrates the several ways it is possible to use the NCDF_FILE object to create netCDF files, copy information from one netCDF file to another, and to read information from a netCDF file.";"118";"ncdf_file_examples.html";"86"
"13947";"NCDF_ISVALIDFILE";"Utility routine to determine if a file is a valid netCDF file or not. Returns a 1 if the file is valid and a 0 otherwise.";"118";"ncdf_isvalidfile.html";"120"
"13948";"NCDF_VARIABLE__DEFINE";"The pupose of this NCDF_Variable object is to store information about a netCDF variable. The object is principally used as a utility routine for the NCDF_FILE object. Given the variable name, the object will acquire additional informa...";"118";"ncdf_variable__define.html";"121"
"13949";"PICKCOLOR";"A modal dialog widget allowing the user to select the RGB color triple specifying a color. The return value of the function is the color triple specifying the color or the 'name' of the color if the NAME keyword is set.";"118";"pickcolor.html";"0"
"13950";"PRECIPMAP";"This is a program that demonstrates how to place an IDL map projection onto an image that is already in a map projection space. It uses a NOAA precipitation image that is in a polar stereographic map projection, and for which the lati...";"118";"precipmap.html";"170"
"13951";"PRINTPATH";"This is a utility program for printing the IDL path in a simplied format for easy browsing.";"118";"printpath.html";"156"
"13952";"PRINTWINDOW";;"118";"printwindow.html";"79"
"13953";"PS_BACKGROUND";"Provides a device-independent way to set the background color in the PostScript device.";"118";"ps_background.html";"212"
"13954";"PWD";"This is a utility program simply prints the current IDL working directory.";"118";"pwd.html";"227"
"13955";"RANDOMNUMBERGENERATOR__DEFINE";"Allows the user to obtain a sequence of pseudo-random numbers. The object maintains the random number generator seed in such a way that subsequent calls to GetRandomNumbers will guarentee that you don't get the same random numbers eac...";"118";"randomnumbergenerator__define.html";"134"
"13956";"RANGEOF";"This function returns the range (i.e., the minimum and maximum value) of its argument.";"118";"rangeof.html";"142"
"13957";"REPMAT";"This program replicates a matrix or array in the style of the MATLAB RebMat command. The matrix or array is 'tiled' in some integer number of columns and rows.";"118";"repmat.html";"648"
"13958";"RESOLVE_OBJECT";"The purpose of this function is to resolve object methods in files that have the object methods in the same file as the object class definition module (i.e., object__define.pro). It is particularly useful in restoring object methods f...";"118";"resolve_object.html";"129"
"13959";"REVERSE_AXES";"The purpose of this program is to extend the SIMPLE_SURFACE program to demonstrate how to create reversible axes in object graphics.";"118";"reverse_axes.html";"88"
"13960";"SAVETOMAIN";"This is used primarily in debugging mode to save a variable to the main IDL level for later inspection.";"118";"savetomain.html";"131"
"13961";"SCALEMODIS";"MODIS corrected reflectance images often appear drab when initially processed and displayed on a computer using BYTSCL. In fact, the resulting true-color images look nothing like the images you can find on the MODIS Rapid Response web...";"118";"scalemodis.html";"84"
"13962";"SCROLLWINDOW";"This procedure is more or less a drop-in replacement for the WINDOW command. The main difference is that if the requested window size is larger then the current display size, the window is created in a base widget with scroll bars so ...";"118";"scrollwindow.html";"164"
"13963";"SDEVSCL";"This is a utility routine to perform standard deviation scaling on image arrays. The user defines a multiple of the standard deviation and this is used with the standard deviation of the pixels in the image to create a threshold for l...";"118";"sdevscl.html";"100"
"13964";"SELECT_OBJECTS";"The purpose of this program is to demonstrate how to select and move objects in an object graphics window. Once the objects appear in the window, use your mouse to select the objects and move them in the window. The window is resizeab...";"118";"select_objects.html";"72"
"13965";"SHARPEN";"This function sharpens an image using a Laplacian kernel. The final result is color adjusted to match the histogram of the input image.";"118";"sharpen.html";"0"
"13966";"SORT_ND";"Efficiently perform an N-dimensional sort along any dimension of an array.";"118";"sort_nd.html";"219"
"13967";"STATIONPLOT";"This is routine for drawing station plots on a map or other display. Normally, this routine is used in conjunction with WINDBARB.";"118";"stationplot.html";"95"
"13968";"STR_SIZE";"The purpose of this function is to return the proper character size to make a specified string a specifed width in a window. The width is specified in normalized coordinates. The function is extremely useful for sizing strings and lab...";"118";"str_size.html";"207"
"13969";"TEXTBOX";"This function allows the user to type some text in a pop-up dialog widget and have it returned to the program. This is an example of a Pop-Up Dialog Widget.";"118";"textbox.html";"166"
"13970";"TEXTLINEFORMAT";"This is a utility program for taking a line of text and shortening it to a defined maximum length. The result of the function is a string array in which no line of text in the string array is longer than the maximum length. The text i...";"118";"textlineformat.html";"73"
"13971";"TEXTURE_SURFACE";"The purpose of this program is to demonstrate how to create a simple surface plot with an image applied as a texture in object graphics.";"118";"texture_surface.html";"54"
"13972";"THEMONTHS";"This is a utility program for obtaining the months of the year in various string formats. Primarily used for graphic labeling and the like.";"118";"themonths.html";"72"
"13973";"TRANSFORM_VOLUME";"The purpose of this program is to transform (e.g., rotate, scale, and translate) a 3D array or volume.";"118";"transform_volume.html";"175"
"13974";"UNDEFINE";"The purpose of this program is to delete or undefine an IDL program variable from within an IDL program or at the IDL command line. It is a more powerful DELVAR. Pointer and structure variables are traversed recursively to undefine an...";"118";"undefine.html";"479"
"13975";"VCOLORBAR__DEFINE";"The purpose of this program is to create a vertical colorbar object to be used in conjunction with other IDL 5 graphics objects.";"118";"vcolorbar__define.html";"142"
"13976";"WINDBARB";"This is routine for drawing wind barbs on a map.";"118";"windbarb.html";"509"
"13977";"WINDOWAVAILABLE";"This function returns a 1 if the specified window index number is currently open or available. It returns a 0 if the window is currently closed or unavailable.";"118";"windowavailable.html";"78"
"13978";"WINDOWIMAGE";"Allows the user to interactively adjust image contrast by means of 'windowing and leveling' the image. Move the cursor vertically in the window to adjust the image stretch 'window'. Move the cursor horizontally in the window to adjust...";"118";"windowimage.html";"66"
"13979";"XCOLORS";"The purpose of this program is to interactively change color tables in a manner similar to XLoadCT. No common blocks are used so multiple copies of XColors can be on the display at the same time (if each has a different `Title`). XCol...";"118";"xcolors.html";"203"
"17014";"Classification Tutorial 1: Create an Attribute Image";;"136";"ClassificationCreateAttributeImageTutorial.html";"192"
"13982";"FIXED_MAP_GRID";"The MAP_GRID procedure draws the graticule of parallels and meridians, according to the specifications established by MAP_SET.";"118";"fixed_map_grid.html";"137"
"17013";"Classification Tutorial 2: Collect Training Data";;"136";"ClassificationCollectTrainingData.html";"163"
"13993";"Alphabetical List of Spectral Indices";;"136";"AlphabeticalListSpectralIndices.html";"6830"
"13994";"Band Math and Spectral Indices";;"136";"BandMathSpectralIndices.html";"6969"
"13995";"Burn Indices Background";;"136";"BackgroundBurnIndices.html";"8724"
"13996";"Geology Indices Background";;"136";"BackgroundGeologyIndices.html";"11114"
"13997";"Miscellaneous Indices Background";;"136";"BackgroundOtherIndices.html";"12986"
"13998";"Vegetation Indices Background";;"136";"BackgroundVegetationIndices.html";"9893"
"13999";"Spectral Indices Background Topics";;"136";"SpectralIndicesBackgroundTopics.html";"3096"
"14000";"Spectral Indices";;"136";"SpectralIndices.html";"19292"
"14001";"Animate a Data Series";;"136";"AnimateDataSeries.html";"4206"
"14002";"ENVI Classification Files";;"136";"ENVIClassificationFiles.html";"5221"
"14003";"Placemarks";;"136";"Placemarks.html";"3324"
"14004";"Play Videos";;"136";"PlayVideos.html";"3846"
"14005";"Spatiotemporal Analysis";;"136";"SpatiotemporalAnalysis.html";"6997"
"14006";"Sum Data Bands";;"136";"SumDataBands.html";"3772"
"14007";"Temporal Processing Examples";;"136";"TemporalProcessingExamples.html";"3839"
"15503";"IDL to Python Bridge";;"135";"IDLToPython.html";"7359"
"14009";"View Statistics File";;"136";"ViewStatisticsFile.html";"2860"
"14010";"Classification Aggregation";;"136";"ClassificationAggregation.html";"4142"
"14011";"GLT and Bowtie Correction Background";;"136";"BackgroundGLTBowtieCorrection.html";"3419"
"14012";"Select Input Files";;"136";"SelectInputFiles.html";"1310"
"14013";"Preview";;"136";"PreviewTableMatrix.html";"1151"
"14014";"Example: Multispectral Sensors and FLAASH";;"136";"ExampleMSSensorsFLAASH.html";"8655"
"15493";"Metadata";;"136";"Metadata.html";"2198"
"14016";"NNDiffuse Pan Sharpening";;"136";"NNDiffusePanSharpening.html";"4273"
"14017";"Burn Indices Tutorial";;"136";"BurnIndicesTutorial.html";"9762"
"14018";"EO-1 Hyperion Vegetation Analysis Tutorial";;"136";"HyperionVegetationAnalysisTutorial.html";"16224"
"14019";"Landsat Time Series Tutorial";;"136";"TimeSeriesTutorial.html";"7846"
"14020";"Hyperspectral Analysis: SAM&#160;and SFF Tutorial";;"136";"Whole-Pixel_Hyperspectral_Analysis_Tutorial.html";"8600"
"14021";"Display Height Legend";;"137";"DisplayHeightLegend.html";"3120"
"14022";"Attributes for Building Perimeters";;"137";"OutputsPerimeterAttributes.html";"984"
"14026";"Programming Tasks";;"135";"Programming_Tasks.html";"118"
"14027";"Start the IDL Command Line from Windows Explorer";;"135";"StartCLWindows.html";"4264"
"14028";"The Profiler View";;"135";"CodeCoverage.html";"4051"
"14029";"Generate Code";;"135";"GenerateCode.html";"1183"
"14030";"EigensystemOverview";;"135";"EigensystemOverview.html";"13"
"14031";"Eigensystem Routines";;"135";"EigensystemRoutines.html";"29"
"14032";"Error Analysis and Accuracy";;"135";"ErrorAnalysis.html";"71"
"14033";"Reformulating Generalized Eigenvalue Problems";;"135";"Reformulating.html";"65"
"14034";"Ill-Conditioning and Singularity";;"135";"IllConditioning.html";"65"
"14035";"Lease-squares Solution and QR Factorization";;"135";"LeastSquaresSolution.html";"66"
"14036";"Linear Systems Routines";;"135";"LinearSystemsRoutines.html";"250"
"14037";"Matrix Factorizations";;"135";"MatrixFactorizations.html";"61"
"14038";"Matrix Inversion";;"135";"MatrixInversion.html";"179"
"14039";"Multiple Righthand Sides";;"135";"MultipleRightHandSides.html";"18"
"14040";"Notation";;"135";"Notation.html";"32"
"14041";"Singular Value Decomposition and Generalized Inverse";;"135";"SingularValueDecomp.html";"130"
"14042";"Solving Systems of Linear Equations";;"135";"SolvingSystLinearEquations.html";"226"
"14043";"Sparse Matrices: Direct Methods";;"135";"SparseMatricesDirect.html";"76"
"14044";"Sparse Matrices: Iterative Methods";;"135";"SparseMatricesIterative.html";"40"
"14045";"Sparse Matrices: Matrix Storage Modes";;"135";"SparseMatricesStorage.html";"614"
"14046";"Sparse Matrices: Utilities";;"135";"SparseMatricesUtilities.html";"48"
"14047";"About IDL Analyst";;"135";"About_IDL_Analyst.html";"275"
"14048";"Using the IDL&#160;Analyst Documentation";;"135";"Using_IDL_Analyst_docs.html";"31"
"14049";"IDL Analyst Error Handling";;"135";"using_idl_Error_Handling.html";"2876"
"14050";"Generate Code Method";;"135";"GenerateCode_Method.html";"3153"
"14051";"Coordinates of 3D Graphics";;"135";"Coordinates3DGraphics.html";"3864"
"14052";"Applying Lookup Tables Using Shaders";;"135";"ApplyLUTShaders.html";"268"
"14053";"Basic LUT Shader Object Class";;"135";"BasicLUTShaderObjClass.html";"27"
"14054";"Filter Chain Example";;"135";"FilterChainExample.html";"164"
"14055";"Filter Chain Shaders";;"135";"FilterChainShaders.html";"204"
"14056";"Hardware Shader Program for LUT&#160;Shader";;"135";"HardwareShaderProgramLUT.html";"786"
"14057";"High Precision Images";;"135";"HighPrecisionImages.html";"64"
"14058";"Examples of Handling High Precision Images";;"135";"HighPrecisionImagesExamples.html";"87"
"14059";"Image Filter Shaders";;"135";"ImageFilterShaders.html";"217"
"14060";"Introduction to Shader Objects";;"135";"IntroShaders.html";"3736"
"14061";"Library of Pre-Built Shader Objects";;"135";"LibraryShaderObj.html";"46"
"14062";"Passing Information to a Shader Program";;"135";"PassingInfoShader.html";"75"
"14063";"How Shaders Enhance Performance";;"135";"ShaderPerformance.html";"3150"
"14064";"Shader Objects in IDL";;"135";"ShaderTOC.html";"3110"
"14065";"Overview of Shader Objects";;"135";"ShadersOverview.html";"3224"
"14066";"Uniform Variable for LUT Example";;"135";"UniformVarForLUTExample.html";"222"
"14067";"Using Shaders in an IDL Application";;"135";"UsingShadersIDL.html";"29"
"14068";"What's New in IDL 8.3";;"135";"Whats_New_8_3.html";"3120"
"14118";"ENVIPreferenceItem";"Manages an individual preference.";"154";"ENVIPreferenceItem.html";"3247"
"15283";"Variable Attributes";;"76";"Variable_Attributes.html";"4832"
"14116";"ENVINNDiffusePanSharpeningRaster";"Creates an ENVIRaster to which NNDiffuse pan sharpening has been applied.";"155";"ENVINNDiffusePanSharpeningRaster.html";"3306"
"14115";"ENVIMetaspectralRaster";"Constructs an ENVIRaster from a stack of source rasters with the same spatial dimensions.";"155";"ENVIMetaspectralRaster.html";"4142"
"14114";"ENVILogStretchRaster";"Constructs an ENVIRaster from a source raster that has been stretched according to the Linear Range stretch function.";"155";"ENVILogStretchRaster.html";"2998"
"14113";"ENVILinearRangeStretchRaster";"Constructs an ENVIRaster from a source raster that has been stretched according to the Linear Range stretch function.";"155";"ENVILinearRangeStretchRaster.html";"2940"
"14112";"ENVILinearPercentStretchRaster";"Constructs an ENVIRaster from a source raster that has been stretched according to the Linear Percent stretch function.";"155";"ENVILinearPercentStretchRaster.html";"3047"
"14111";"ENVIGridDefinition::Union";"Returns the spatial extent of the geometric union between two ENVIGridDefinition objects.";"155";"ENVIGridDefinition__Union.html";"3042"
"14110";"ENVIGridDefinition::Intersection";"Returns the spatial extent of the geometric intersection between two ENVIGridDefinition objects.";"155";"ENVIGridDefinition__Intersection.html";"3210"
"14109";"ENVIGridDefinition::CreateGridFromCoordSys";"Returns a new grid definition with the same spatial extent as the original but in a different coordinate system.";"155";"ENVIGridDefinition__CreateGridFromCoordSys.html";"2985"
"14108";"ENVIGridDefinition::ConvertMapToGrid";"Returns the closest (row, column) index for a given map coordinate.";"155";"ENVIGridDefinition__ConvertMapToGrid.html";"2711"
"14107";"ENVIGridDefinition::ConvertGridToMap";"Returns the map coordinates for a given (row, column) index.";"155";"ENVIGridDefinition__ConvertGridToMap.html";"2740"
"14103";"Application Control Routines";;"154";"ApplicationControl.html";"2714"
"14104";"ENVIEqualizationStretchRaster";"Constructs an ENVIRaster from a source raster that has been stretched according to the Equalization stretch function.";"155";"ENVIEqualizationStretchRaster.html";"3327"
"14105";"ENVIGaussianStretchRaster";"Constructs an ENVIRaster from a source raster that has been stretched according to the Gaussian stretch function.";"155";"ENVIGaussianStretchRaster.html";"3319"
"14106";"ENVIGridDefinition";"This is a reference to a grid definition, which provides the information needed to georeference rasters and vectors to a common coordinate system.";"155";"ENVIGridDefinition.html";"4304"
"14130";"ENVIRasterSeriesLayer::Set";"Sets the raster series layer to the frame associated with a specific index.";"155";"ENVIRasterSeriesLayer__Set.html";"2601"
"14129";"ENVIRasterSeriesLayer::Previous";"Sets the raster series layer to the previous frame.";"155";"ENVIRasterSeriesLayer__Previous.html";"2587"
"14128";"ENVIRasterSeriesLayer::Next";"Sets the raster series layer to the next frame.";"155";"ENVIRasterSeriesLayer__Next.html";"2503"
"14127";"ENVIRasterSeriesLayer::Last";"Sets the raster series layer to the last frame.";"155";"ENVIRasterSeriesLayer__Last.html";"1779"
"14126";"ENVIRasterSeriesLayer::First";"Sets the raster series layer to the first frame.";"155";"ENVIRasterSeriesLayer__First.html";"1839"
"14125";"ENVIRasterSeriesLayer";"Reference to a raster series layer.";"155";"ENVIRasterSeriesLayer.html";"2974"
"14124";"ENVIPreferences::Save";"Saves ENVI preferences to a file.";"154";"ENVIPreferences__Save.html";"2811"
"14123";"ENVIPreferences::RestoreDefaults";"Restores all ENVI preferences to their default values.";"154";"ENVIPreferences__RestoreDefaults.html";"2887"
"14122";"ENVIPreferences::Load";"Loads preferences from the a file.";"154";"ENVIPreferences__Load.html";"2804"
"14121";"ENVIPreferences";"Reference to a preference object that holds and manages ENVI preferences.";"154";"ENVIPreferences.html";"3119"
"14120";"ENVIPreferenceItem::Save";"saves the value of an individual preference to the ENVI preferences file.";"154";"ENVIPreferenceItem__Save.html";"2932"
"14119";"ENVIPreferenceItem::RestoreDefault";"Restores the default value of a preference.";"154";"ENVIPreferenceItem__RestoreDefault.html";"2803"
"14131";"ENVIRasterSeries";"Reference to a raster series object, which is a series of images for spatiotemporal analysis.";"155";"ENVIRasterSeries.html";"3684"
"14132";"ENVIRasterSeries::Close";"Closes an ENVIRasterSeries.";"155";"ENVIRasterSeries__Close.html";"2664"
"14133";"ENVIRasterSeries::First";"Sets the current raster to the first one in a raster series.";"155";"ENVIRasterSeries__First.html";"2888"
"14134";"ENVIRasterSeries::GetData";"Retrieves the data from a raster series.";"155";"ENVIRasterSeries__GetData.html";"2589"
"14135";"ENVIRasterSeries::GetKey";"Retrieves metadata from a raster series based on a metadata key.";"155";"ENVIRasterSeries__GetKey.html";"2813"
"14136";"ENVIRasterSeries::Last";"Sets the current raster to the last one in a raster series.";"155";"ENVIRasterSeries__Last.html";"2749"
"14137";"ENVIRasterSeries::Next";"Steps to the next raster in the series.";"155";"ENVIRasterSeries__Next.html";"2485"
"14138";"ENVIRasterSeries::Previous";"Steps to the previous raster in the series.";"155";"ENVIRasterSeries__Previous.html";"3035"
"14139";"ENVIRasterSeries::Query";"Returns the index of the raster whose metadata is closest to what you specify.";"155";"ENVIRasterSeries__Query.html";"2537"
"14140";"ENVIRasterSeries::Raster";"Retrieves the current raster so that you can work with it like any other ENVIRaster.";"155";"ENVIRasterSeries__Raster.html";"2917"
"14141";"ENVIRasterSeries::Set";"Sets the current raster based on its positional index within a raster series.";"155";"ENVIRasterSeries__Set.html";"2736"
"14142";"ENVIRasterStatistics";"Returns statistics from a given ENVIRaster object.";"155";"ENVIRasterStatistics.html";"3939"
"14143";"ENVIResampleRaster";"Constructs an ENVIRaster from a source raster that has been resampled or spatially resized.";"155";"ENVIResampleRaster.html";"4184"
"14144";"ENVIRootStretchRaster";"Constructs an ENVIRaster from a source raster that has been stretched according to the Root stretch function.";"155";"ENVIRootStretchRaster.html";"3495"
"14145";"ENVISpatialGridRaster";"Constructs an ENVIRaster from a source raster that has been reprojected and resampled to a grid with a standard spatial reference, a pre-defined pixel size, and the same number of rows and columns.";"155";"ENVISpatialGridRaster.html";"3769"
"14146";"ENVISpectralIndexRaster";"Constructs an ENVIRaster from a source raster that has a spectral index applied.";"155";"ENVISpectralIndexRaster.html";"4273"
"14147";"ENVISubsetRaster";"Constructs an ENVIRaster from a source raster that has been spatially and/or spectrally subsetted.";"155";"ENVISubsetRaster.html";"6699"
"14148";"ENVIAutoChangeThresholdClassificationTask";"This task uses pre-defined thresholding techniques to automatically classify change detection between two images.";"159";"ENVIAutoChangeThresholdClassificationTask.html";"3432"
"14149";"ENVIBuildBandStackTask";"Builds a band-stacked raster (also called a metaspectral raster), which is a stack of ENVIRasters with the same dimensions.";"159";"ENVIBuildBandStackTask.html";"4553"
"14150";"ENVIBuildRasterSeriesTask";"Builds an ENVI raster series file for spatiotemporal analysis.";"159";"ENVIBuildRasterSeriesTask.html";"3509"
"14151";"ENVIBuildTimeSeriesTask";"Sorts a series of ENVIRasters by acquisition time and builds an ENVI raster series file.";"159";"ENVIBuildTimeSeriesTask.html";"3490"
"14152";"ENVIChangeThresholdClassificationTask";"This task lets you manually set the threshold needed to classify change detection between two images.";"159";"ENVIChangeThresholdClassificationTask.html";"2908"
"14153";"ENVIClassificationAggregationTask";"Aggregates smaller class regions to a larger, adjacent region as part of the classification cleanup.";"159";"ENVIClassificationAggregationTask.html";"3432"
"14154";"ENVIClassificationSmoothingTask";"Removes speckling noise from a classification image.";"159";"ENVIClassificationSmoothingTask.html";"3529"
"14155";"ENVIClassificationToShapefileTask";"Converts one or more classes to a single vector file.";"159";"ENVIClassificationToShapefileTask.html";"3196"
"14156";"ENVIColorSliceClassificationTask";"Creates a classification raster by thresholding on select data ranges and colors to highlight areas of a raster.";"159";"ENVIColorSliceClassificationTask.html";"3586"
"14157";"ENVIDarkSubtractionCorrectionTask";"Performs a simple atmospheric correction by subtracting a user-specified digital number (DN) from each band to account for atmospheric scattering (haze).";"159";"ENVIDarkSubtractionCorrectionTask.html";"3784"
"14158";"ENVIDimensionsResampleRasterTask";"Resamples a raster to different dimensions.";"159";"ENVIDimensionsResampleRasterTask.html";"3241"
"14159";"ENVIEqualizationStretchRasterTask";"Returns a raster with a histogram equalization stretch applied.";"159";"ENVIEqualizationStretchRasterTask.html";"3071"
"14160";"ENVIFXSegmentationTask";"Extracts segments from a raster without performing classification.";"159";"ENVIFXSegmentationTask.html";"3822"
"14161";"ENVIForwardICATransformTask";"Performs an independent component analysis (ICA) procedure to transform a set of mixed, random signals into components that are mutually independent.";"159";"ENVIForwardICATransformTask.html";"3140"
"14162";"ENVIForwardMNFTransformTask";"Performs a minimum noise fraction (MNF) transform to determine the inherent dimensionality of image data, to segregate noise in the data, and to reduce the computational requirements for subsequent processing.";"159";"ENVIForwardMNFTransformTask.html";"3357"
"14163";"ENVIForwardPCATransformTask";"Performs a principal components analysis (PCA) transform to produce uncorrelated output bands, to segregate noise components, and to reduce the dimensionality of data sets.";"159";"ENVIForwardPCATransformTask.html";"3275"
"14164";"ENVIGaussianStretchRasterTask";"Returns a raster with a Gaussian stretch applied.";"159";"ENVIGaussianStretchRasterTask.html";"2881"
"14165";"ENVIGramSchmidtPanSharpeningTask";"Performs Gram-Schmidt Pan Sharpening using a low-resolution raster and a high-resolution panchromatic raster.";"159";"ENVIGramSchmidtPanSharpeningTask.html";"3416"
"14166";"ENVIISODATAClassificationTask";"Clusters pixels in a dataset based on statistics only, without requiring you to define training classes. It uses the ISODATA unsupervised method for classification.";"159";"ENVIISODATAClassificationTask.html";"3759"
"14167";"ENVIImageBandDifferenceTask";"Performs a difference analysis on a specific band in two images.";"159";"ENVIImageBandDifferenceTask.html";"2794"
"14168";"ENVIImageIntersectionTask";"Takes two rasters as input and it outputs two rasters that cover only the overlapping area of two inputs.";"159";"ENVIImageIntersectionTask.html";"2866"
"14169";"ENVIImageThresholdToROITask";"Creates ROIs from band thresholds.";"159";"ENVIImageThresholdToROITask.html";"3602"
"14170";"ENVILinearPercentStretchRasterTask";"Returns a raster with a linear percent stretch applied.";"159";"ENVILinearPercentStretchRasterTask.html";"3095"
"14171";"ENVILinearRangeStretchRasterTask";"Returns a raster with a linear stretch applied, based on specified minimum and maximum pixel values.";"159";"ENVILinearRangeStretchRasterTask.html";"2738"
"14172";"ENVILogStretchRasterTask";"Returns a raster with a logarithmic stretch applied.";"159";"ENVILogStretchRasterTask.html";"2714"
"14173";"ENVIMahalanobisDistanceClassificationTask";"Performs a Mahalanobis Distance supervised classification.";"159";"ENVIMahalanobisDistanceClassificationTask.html";"3222"
"14174";"ENVIMappingResampleRasterTask";"Resamples a raster to different dimensions using column and row mapping.";"159";"ENVIMappingResampleRasterTask.html";"3009"
"14175";"ENVIMaximumLikelihoodClassificationTask";"Performs a Maximum Likelihood supervised classification.";"159";"ENVIMaximumLikelihoodClassificationTask.html";"3435"
"14176";"ENVIMinimumDistanceClassificationTask";"Performs a Minimum Distance supervised classification.";"159";"ENVIMinimumDistanceClassificationTask.html";"3252"
"14177";"ENVINNDiffusePanSharpeningTask";"Performs NNDiffuse pan sharpening using a low-resolution raster and a high-resolution panchromatic raster.";"159";"ENVINNDiffusePanSharpeningTask.html";"3192"
"14178";"ENVIOptimizedLinearStretchRasterTask";"Returns a raster with an optimized linear stretch applied.";"159";"ENVIOptimizedLinearStretchRasterTask.html";"2715"
"14179";"ENVIPCPanSharpeningTask";"Performs Principal Components Pan Sharpening using a low-resolution raster and a high-resolution panchromatic raster.";"159";"ENVIPCPanSharpeningTask.html";"3099"
"14180";"ENVIPercentThresholdClassificationTask";"Segments the an image into anomalous and non-anomalous regions.";"159";"ENVIPercentThresholdClassificationTask.html";"2734"
"14181";"ENVIPixelScaleResampleRasterTask";"Resamples a raster to different dimensions by multiplying the pixel size by a scale factor.";"159";"ENVIPixelScaleResampleRasterTask.html";"3150"
"14182";"ENVIQuerySpectralIndicesTask";"Returns a string array of the spectral indices that can be computed for a given input raster, based on its wavelength metadata.";"159";"ENVIQuerySpectralIndicesTask.html";"3060"
"14183";"ENVIROIToClassificationTask";"Creates a classification image from regions of interest (ROIs).";"159";"ENVIROIToClassificationTask.html";"3392"
"14184";"ENVIRXAnomalyDetectionTask";"Uses the Reed-Xiaoli Detector (RXD) algorithm to identify the spectral or color differences between a region to test and its neighboring pixels or the entire dataset.";"159";"ENVIRXAnomalyDetectionTask.html";"3061"
"14185";"ENVIRadiometricNormalizationTask";"Creates a radiometric normalized image from two rasters.";"159";"ENVIRadiometricNormalizationTask.html";"3044"
"14186";"ENVIRasterStatisticsTask";"Computes statistics on a raster.";"159";"ENVIRasterStatisticsTask.html";"3324"
"14187";"ENVIRasterViewshedTask";"Calculates a viewshed from an elevation raster such as a digital elevation model (DEM).";"159";"ENVIRasterViewshedTask.html";"2870"
"17037";"ENVIConfusionMatrix::ColumnTotals";"Returns the column totals in the confusion matrix.";"173";"ENVIConfusionMatrix__ColumnTotals.html";"102"
"17036";"ENVIConfusionMatrix::Accuracy";"Returns the overall accuracy of a confusion matrix.";"173";"ENVIConfusionMatrix__Accuracy.html";"121"
"17035";"ENVIConfusionMatrix";"Returns a reference to an ENVIConfusionMatrix object, which contains a confusion matrix and classification accuracy metrics that indicate how well a classifier performed.";"173";"ENVIConfusionMatrix.html";"186"
"14191";"ENVIRegridRasterTask";"Regrids an ENVIRaster to a spatial grid raster, which is a raster that has been reprojected and resampled to a grid with a standard spatial reference, pre-defined pixel size, and the same number of rows and columns.";"159";"ENVIRegridRasterTask.html";"3628"
"14192";"ENVIRootStretchRasterTask";"Returns a raster with a root stretch applied, using a specified degree for the root.";"159";"ENVIRootStretchRasterTask.html";"2931"
"14193";"ENVISpectralAngleMapperClassificationTask";"Performs a Spectral Angle Mapper (SAM) supervised classification.";"159";"ENVISpectralAngleMapperClassificationTask.html";"3593"
"14194";"ENVISpectralIndexTask";"Creates a spectral index raster from one pre-defined spectral index.";"159";"ENVISpectralIndexTask.html";"3510"
"14195";"ENVISpectralIndicesTask";"Creates a spectral index raster with one or more bands, where each band represents a different spectral index.";"159";"ENVISpectralIndicesTask.html";"3979"
"14196";"ENVIThematicChangeTask";"Takes two classification images of the same scene taken at different times and identifies differences between them.";"159";"ENVIThematicChangeTask.html";"3331"
"14197";"ENVITrainingClassificationStatisticsTask";"Computes statistics from classification training regions.";"159";"ENVITrainingClassificationStatisticsTask.html";"2932"
"14198";"ENVIVectorAttributeToROIsTask";"Creates regions of interest (ROIs) from geometry records in a vector.";"159";"ENVIVectorAttributeToROIsTask.html";"3131"
"14199";"ENVIVectorRecordsToROITask";"Creates a single region of interest (ROI) from all geometry records in a vector.";"159";"ENVIVectorRecordsToROITask.html";"3115"
"14200";"ENVIVegetationSuppressionTask";"Removes the vegetation spectral signature using information from red and near-infrared bands.";"159";"ENVIVegetationSuppressionTask.html";"2945"
"14201";"ENVIVideoToRasterSeriesTask";"Exports frames from a video file to a raster series.";"159";"ENVIVideoToRasterSeriesTask.html";"2759"
"14202";"ENVIUI::SelectTaskParameters";"Displays a dialog in which the user can select parameters for a given ENVITask.";"156";"ENVIUI__SelectTaskParameters.html";"3357"
"14203";"ENVIView::ChipToVideo";"Saves an animation from spatiotemporal analysis to a video file.";"156";"ENVIView__ChipToVideo.html";"3228"
"14204";"Data Processing using ENVITask";;"159";"DataProcessingUsingENVITask.html";"4654"
"14205";"Working with Metaspectral Datasets in the ENVI&#160;API";;"2";"MetaspectralDatasets.html";"2549"
"14206";"Advanced Concepts";;"2";"ProgrammingGuideAdvancedConcepts.html";"2762"
"14207";"Display Control";;"2";"ProgrammingGuideDisplayControl.html";"3201"
"14208";"Getting Started";;"2";"ProgrammingGuideGettingStarted.html";"5911"
"14209";"ENVI API Programming Guide";;"2";"ProgrammingGuideIntroduction.html";"8617"
"14210";"Map Information";;"2";"ProgrammingGuideMapInformation.html";"5320"
"14211";"Raster Metadata";;"2";"ProgrammingGuideMetadata.html";"4091"
"14212";"Processing Large Rasters Using Tile Iterators";;"2";"ProgrammingGuideTileIterators.html";"4267"
"14213";"Working with Rasters";;"2";"ProgrammingGuideWorkingWithRasters.html";"7806"
"14214";"ALOG2";"Returns the logarithm to the base 2 of X.";"65";"ALOG2.html";"2756"
"14215";"BigInteger";"Allows you to create and manipulate integer numbers of any size.";"89";"BIGINTEGER.html";"4440"
"14216";"BOOLARR";"Creates a boolean vector or array with every element set to false (0).";"10";"BOOLARR.html";"2454"
"14217";"BOOLEAN";"Returns a result equal to Expression converted to boolean.";"89";"BOOLEAN.html";"6509"
"14218";"CODE_COVERAGE";"Returns information on which lines of code within a routine were not executed.";"76";"CODE_COVERAGE.html";"4571"
"14219";"FFT_POWERSPECTRUM";"Computes the Fourier power spectrum of an array.";"8";"FFT_PowerSpectrum.html";"7467"
"14220";"FOLDERWATCH";"Monitors folders for changes and invokes a user-defined callback whenever a change occurs.";"35";"FOLDERWATCH.html";"3664"
"14222";"IDL_Object Properties";;"172";"IDL_Object_Properties.html";"1682"
"15295";"HDF_PARSE";"Recursively descends through an HDF4 file and creates an ordered hash containing object information and data.";"103";"HDF_PARSE.html";"1779"
"14224";"IDLitComponent::UnregisterProperty";"Unregisters a previously-registered property.";"41";"IDLitComponent__Unregister.html";"1641"
"14225";"IDL_Container::Equals";"Tests the value of each item in a container against an input value.";"172";"IDL_Container__Equals.html";"2057"
"14226";"LAMBDA";"Creates small, inline functions that can be passed around as IDL strings.";"76";"LAMBDA.html";"4395"
"14227";"LAMBDAP";"Creates small, inline procedures that can be passed around as IDL strings.";"76";"LAMBDAP.html";"2810"
"14228";"IDL_Integer";"This class contains static methods that are available for integers.";"76";"IDL_Integer.html";"3453"
"14229";"IDL_Number";"This class contains static methods that are available for all IDL numbers.";"76";"IDL_Number.html";"4287"
"14230";"IDL_Pointer";"This class contains static methods that are available for all IDL pointers.";"76";"IDL_Pointer.html";"2214"
"14231";"IDL_String";"This class contains static methods that are available for all IDL strings.";"76";"IDL_String.html";"9392"
"14232";"IDL_Variable";"This class contains static methods that are available for all IDL variables except objects and structures.";"76";"IDL_Variable.html";"6842"
"15766";"mg_fits_browser::erase";"Erase the draw window.";"147";"mg_fits_browser.html#mg_fits_browser::erase";"0"
"15765";"mg_fits_browser::display_image";"Display the given data as an image.";"147";"mg_fits_browser.html#mg_fits_browser::display_image";"0"
"17145";"Distributing Runtime Applications on Removable Media";;"135";"DistributingRTAppsRemovableMedia.html";"93"
"17144";"Task Templates";;"2";"TaskTemplates.html";"126"
"17143";"Sample Task Template";;"2";"SampleTaskTemplate.html";"112"
"15764";"mg_fits_browser::create_widgets";"Create the widget hierarchy.";"147";"mg_fits_browser.html#mg_fits_browser::create_widgets";"0"
"15763";"mg_fits_browser::cleanup_widgets";"Handle cleanup when the widget program is destroyed.";"147";"mg_fits_browser.html#mg_fits_browser::cleanup_widgets";"0"
"15761";"mg_fits_browser";"Create the browser.";"147";"mg_fits_browser.html#mg_fits_browser";"0"
"15762";"mg_fits_browser::cleanup";"Free resources";"147";"mg_fits_browser.html#mg_fits_browser::cleanup";"0"
"15760";"mg_find_pattern";"Finds a 1-dimensional pattern in an array.";"147";"mg_find_pattern.html#mg_find_pattern";"104"
"15759";"mg_filename";"Compose and/or decompose a filename.";"147";"mg_filename.html#mg_filename";"176"
"15758";"mg_file_which";"Wrapper for FILE_WHICH, but has an ALL keyword to find all matches.";"147";"mg_file_which.html#mg_file_which";"109"
"15757";"mg_file";"Wrapper to create a file object.";"147";"mg_file.html#mg_file";"144"
"15756";"mg_factor";"Returns the prime factorization of a given integer value n.";"147";"mg_factor.html#mg_factor";"131"
"15755";"mg_expm";"Exponential of a matrix.";"147";"mg_expm.html#mg_expm";"125"
"15754";"mg_evalexpr";"Evaluates a mathematical expression.";"147";"mg_evalexpr.html#mg_evalexpr";"132"
"15753";"mg_eval_poly2d";"Function to use coefficients from surf_fit and create polynomial surface.";"147";"mg_eval_poly2d.html#mg_eval_poly2d";"6"
"15752";"mg_escape_xml";"Makes a string safe for inclusion in an XML file by expanding special characters into their XML entities.";"147";"mg_escape_xml.html#mg_escape_xml";"92"
"15751";"mg_escape_latex";"Filters a line to make it safe for LaTeX output, i.e., escaping certain characters with backslashes.";"147";"mg_escape_latex.html#mg_escape_latex";"99"
"15750";"mg_equal";"Determines whether two values are equal, or within a given tolerance.";"147";"mg_equal.html#mg_equal";"92"
"15749";"mg_epoch2julian";"Convert epoch times to Julian times.";"147";"mg_epoch2julian.html#mg_epoch2julian";"6"
"15747";"mg_encode_png";"Create a PNG byte stream of a 2- or 3-dimensional image.";"147";"mg_encode_png.html#mg_encode_png";"86"
"15748";"mg_endian";"Determines the byte order of the platform running this routine.";"147";"mg_endian.html#mg_endian";"78"
"15746";"mg_element_printf";"Convenience routine to print arrays elementwise.";"147";"mg_element_printf.html#mg_element_printf";"3"
"15745";"mg_element_print";"Convenience routine to print arrays elementwise.";"147";"mg_element_print.html#mg_element_print";"16"
"15744";"mg_dump";"Determine the data file type and display a simple listing of the contents of the file.";"147";"mg_dump.html#mg_dump";"130"
"15743";"mg_dot2graph";"Create a graph representation from a .dot file.";"147";"mg_dot2graph.html#mg_dot2graph";"122"
"15742";"mg_docgen";"Generate docs for a given directory.";"147";"mg_docgen.html#mg_docgen";"14"
"15741";"mg_dlm__define";"Define instance variables.";"147";"mg_dlm__define.html#mg_dlm__define";"157"
"15740";"mg_dlm::write";"Writes the .c and .dlm files to the BASENAME location.";"147";"mg_dlm__define.html#mg_dlm::write";"0"
"15739";"mg_dlm::setProperty";"Set properties.";"147";"mg_dlm__define.html#mg_dlm::setProperty";"0"
"15738";"mg_dlm::register";"Register the DLM.";"147";"mg_dlm__define.html#mg_dlm::register";"0"
"15737";"mg_dlm::load";"Load the DLM.";"147";"mg_dlm__define.html#mg_dlm::load";"28"
"15736";"mg_dlm::init";"Create the DLM object.";"147";"mg_dlm__define.html#mg_dlm::init";"0"
"15734";"mg_dlm::cleanup";"Free resources.";"147";"mg_dlm__define.html#mg_dlm::cleanup";"0"
"15735";"mg_dlm::getProperty";"Get properties.";"147";"mg_dlm__define.html#mg_dlm::getProperty";"0"
"15733";"mg_dlm::build";"Compiles and links the DLM.";"147";"mg_dlm__define.html#mg_dlm::build";"0"
"15732";"mg_dlm::addVariableAccessor";"Adds wrapper routine to access the given #define value.";"147";"mg_dlm__define.html#mg_dlm::addVariableAccessor";"0"
"15731";"mg_dlm::addRoutinesFromHeaderFile";"Adds wrapper routines from a header file.";"147";"mg_dlm__define.html#mg_dlm::addRoutinesFromHeaderFile";"0"
"15730";"mg_dlm::addRoutineFromString";"Add a routine to the DLM.";"147";"mg_dlm__define.html#mg_dlm::addRoutineFromString";"0"
"15729";"mg_dlm::addRoutineFromPrototype";"Adds a wrapper routine defined by a prototype given by a string to the DLM.";"147";"mg_dlm__define.html#mg_dlm::addRoutineFromPrototype";"0"
"15728";"mg_dlm::addRoutineFromFile";"Add a routine defined a file to the DLM.";"147";"mg_dlm__define.html#mg_dlm::addRoutineFromFile";"0"
"15727";"mg_dlm::addRoutine";"Adds a routine to the DLM.";"147";"mg_dlm__define.html#mg_dlm::addRoutine";"0"
"15726";"mg_dlm::addLibrary";"Add a library to the link line.";"147";"mg_dlm__define.html#mg_dlm::addLibrary";"0"
"15725";"mg_dlm::addInclude";"Add an include file to the DLM.";"147";"mg_dlm__define.html#mg_dlm::addInclude";"0"
"15724";"mg_dialog_pickcolor";"Widget dialog for picking a color.";"147";"mg_dialog_pickcolor.html#mg_dialog_pickcolor";"91"
"15723";"mg_deserialize";"Deserialize a string to the original variable.";"147";"mg_deserialize.html#mg_deserialize";"15"
"15722";"mg_decomposed";"Set the decomposed mode, if available in the current graphics device i.e.";"147";"mg_decomposed.html#mg_decomposed";"86"
"15721";"mg_decode_png";"Decodes a PNG byte stream to a 2- or 3-dimensional image array.";"147";"mg_decode_png.html#mg_decode_png";"120"
"15720";"mg_datavase";"Create a datavase plot.";"147";"mg_datavase.html#mg_datavase";"75"
"15719";"mg_cula_demo";"Example of calling CULA routines.";"147";"mg_cula_demo.html#mg_cula_demo";"85"
"15718";"mg_cubehelix";"Calculate a ""cube helix"" color table and set the current direct graphics color table (unless RGB_TABLE is present).";"147";"mg_cubehelix.html#mg_cubehelix";"214"
"15717";"mg_create_ctfile";"Create a new color table file suitable for use with MODIFYCT, LOADCT, XLOADCT, and IDLgrPalette::loadCT.";"147";"mg_create_ctfile.html#mg_create_ctfile";"111"
"15715";"mg_cpt2ct";"Converts a GMT color table file to an RGB color table.";"147";"mg_cpt2ct.html#mg_cpt2ct";"119"
"15716";"mg_create_bubbles";"Factory function to create an array of bubbles.";"147";"mg_create_bubbles.html#mg_create_bubbles";"98"
"15714";"mg_convert_subsuper";"Convert TeX superscripts and subscripts in a given string to IDL format codes.";"147";"mg_tex2idl.html#mg_convert_subsuper";"0"
"15713";"mg_convert_read_image";"Attempt to read an image file.";"147";"mg_convert.html#mg_convert_read_image";"146"
"15712";"mg_convert_fraction";"Convert TeX fractions in a given string to IDL format codes.";"147";"mg_tex2idl.html#mg_convert_fraction";"48"
"15710";"mg_contour";"Produce a contour plot.";"147";"mg_contour.html#mg_contour";"180"
"15711";"mg_convert";"Use ImageMagick to convert a file between formats.";"147";"mg_convert.html#mg_convert";"50"
"15709";"mg_constants";"Defines constants for values of LINESTYLE, PSYM, and [XYZ]STYLE keywords.";"147";"mg_constants.html#mg_constants";"89"
"15708";"mg_connected";"Determine if connected to the internet.";"147";"mg_connected.html#mg_connected";"8"
"15707";"mg_compress";"Compress a byte array.";"147";"mg_compress.html#mg_compress";"8"
"15706";"mg_complement";"Returns the complement of an index array.";"147";"mg_complement.html#mg_complement";"227"
"15705";"mg_colorlic";"Create a LIC visualization where color denotes magnitude of the vector field.";"147";"mg_colorlic.html#mg_colorlic";"95"
"15703";"mg_color";"Get an RGB color value for the specified color name.";"147";"mg_color.html#mg_color";"123"
"15704";"mg_colorbar";"Produce a colorbar in direct graphics.";"147";"mg_colorbar.html#mg_colorbar";"139"
"15702";"mg_cmp_version";"Compares two version numbers for the more updated number.";"147";"mg_cmp_version.html#mg_cmp_version";"114"
"15701";"mg_clineprofile";"Creates color coded HTML output of line profiling output.";"147";"mg_clineprofile.html#mg_clineprofile";"82"
"15699";"mg_choose";"Calculate a mathematical combination.";"147";"mg_choose.html#mg_choose";"179"
"15700";"mg_class_hierarchy";"Retrieves or prints a class hierarchy for an object or classname.";"147";"mg_class_hierarchy.html#mg_class_hierarchy";"71"
"15698";"mg_checkerboard";"Returns a checkerboard pattern suitable for use with the PATTERN keyword to POLYFILL.";"147";"mg_checkerboard.html#mg_checkerboard";"129"
"15697";"mg_checkeasing";"Validation tool for tests easing functions.";"147";"mg_checkeasing.html#mg_checkeasing";"81"
"15696";"mg_check_path";"Check a file path to see if it exists.";"147";"mg_check_path.html#mg_check_path";"23"
"15694";"mg_cf2julian";"Convert a time value from CF conventions to a Julian date.";"147";"mg_cf2julian.html#mg_cf2julian";"25"
"15695";"mg_char";"Convenience routine to convert a 1-element string to a character value.";"147";"mg_char.html#mg_char";"94"
"15693";"mg_capture";"Returns output log output from an IDL command.";"147";"mg_capture.html#mg_capture";"2"
"15692";"mg_called_routines";"Finds the routines (normal functions and procedures) needed for the code inside a file, i.e., the routines it calls, the routines those routines call, etc.";"147";"mg_called_routines.html#mg_called_routines";"99"
"15691";"mg_build_lineplots";"Build the lineplots DLM.";"147";"mg_build_lineplots.html#mg_build_lineplots";"75"
"15690";"mg_bubblechart_overplot";"Plot the bubbles.";"147";"mg_bubblechart.html#mg_bubblechart_overplot";"76"
"15689";"mg_bubblechart";"Make bubble chart.";"147";"mg_bubblechart.html#mg_bubblechart";"42"
"15688";"mg_breakpoint";"A helpful wrapper for BREAKPOINT which finds files in the !path and allows relative line numbers within routines.";"147";"mg_breakpoint.html#mg_breakpoint";"71"
"15687";"mg_boxplot";"Create a box and whisker plot.";"147";"mg_boxplot.html#mg_boxplot";"146"
"15686";"mg_blend";"Blend two images together using the given alpha channel.";"147";"mg_blend.html#mg_blend";"237"
"15685";"mg_bezier_binomial";"Computes the binomial coefficients for a given degree.";"147";"mg_bezier.html#mg_bezier_binomial";"129"
"15684";"mg_bezier";"Returns the Bezier curve between points.";"147";"mg_bezier.html#mg_bezier";"61"
"15683";"mg_battery_plot_extract_number";"Extract one value from a section of the battery log line.";"147";"mg_battery_plot.html#mg_battery_plot_extract_number";"17"
"15682";"mg_battery_plot_extract";"Extract battery information from a line in the battery log file.";"147";"mg_battery_plot.html#mg_battery_plot_extract";"0"
"15681";"mg_battery_plot";"Make plot of battery data created from running battery.sh script on OS X.";"147";"mg_battery_plot.html#mg_battery_plot";"2"
"15680";"mg_base64encode";"Encode a string using Base64, performs the inverse operation as MG_BASE64DECODE.";"147";"mg_base64encode.html#mg_base64encode";"103"
"15679";"mg_base64decode";"Decode a string in Base64, performs the inverse operation as MG_BASE64ENCODE.";"147";"mg_base64decode.html#mg_base64decode";"92"
"15678";"mg_base64_image";"Base64 encode a byte-valued array, splitting it into rows of column_size characters delimited by the platform newline characters.";"147";"mg_base64_image.html#mg_base64_image";"18"
"15677";"mg_backspace";"Backspaces a nchars characters.";"147";"mg_backspace.html#mg_backspace";"84"
"15676";"mg_atanh";"Inverse hyperbolic tangent.";"147";"mg_atanh.html#mg_atanh";"272"
"15675";"mg_asinh";"Inverse hyperbolic sine.";"147";"mg_asinh.html#mg_asinh";"114"
"15674";"mg_ascii_template";"Programmatically creates a structure of the type returned by ASCII_TEMPLATE.";"147";"mg_ascii_template.html#mg_ascii_template";"97"
"15673";"mg_arg";"Handle an argument to a routine.";"147";"mg_arg.html#mg_arg";"10"
"15672";"mg_arclength";"Computes the arc length of a path.";"147";"mg_arclength.html#mg_arclength";"4"
"15671";"mg_arclength";"Computes the arc length of a path.";"147";"mg_arclength.html#mg_arclength";"0"
"15669";"mg_ansicode";"Set ANSI color codes for the given text.";"147";"mg_ansicode.html#mg_ansicode";"213"
"15670";"mg_any";"Determine whether any elements of an array of logical values is true.";"147";"mg_any.html#mg_any";"15"
"15668";"mg_alogm";"Natural logarithm of a matrix.";"147";"mg_alogm.html#mg_alogm";"111"
"15667";"mg_all";"Determine whether all elements of an array of logical values are true.";"147";"mg_all.html#mg_all";"10"
"15666";"mg_acosh";"Inverse hyperbolic cosine.";"147";"mg_acosh.html#mg_acosh";"125"
"15665";"man_width";"Wrapper for MG_TERMCOLUMNS in case it is not available.";"147";"man.html#man_width";"167"
"15663";"man_routineinfo";"Print comments about a routine.";"147";"man.html#man_routineinfo";"0"
"15664";"man_termavailable";"Determines if a term capable of paging is available:";"147";"man.html#man_termavailable";"0"
"15662";"man_resolveroutine";"Routine to resolve a given routine without crashing.";"147";"man.html#man_resolveroutine";"0"
"15661";"man_printdocs";"Print header docs for a routine in a given file.";"147";"man.html#man_printdocs";"0"
"15660";"man_print";"Print a string by splitting it across lines on spaces and indents every line except the first using the value of the INDENT keyword.";"147";"man.html#man_print";"0"
"15659";"man_checkroutine";"Checks to see if routine is in list.";"147";"man.html#man_checkroutine";"0"
"15658";"man";"Print comments about a routine or finds matching routines.";"147";"man.html#man";"185"
"15268";"PM";"Performs formatted output of arrays using the standard linear algebraic convention (row, column)";"141";"PM.html";"1896"
"15269";"RM";"Performs formatted input of arrays using the standard linear algebraic convention (row, column)";"141";"RM.html";"2105"
"15270";"Overview: Random Number Generation";;"141";"RandomNumberGeneration.html";"1618"
"15278";"IMSP_SP_BDPDSOL";"Solves a symmetric positive definite system of linear equations Ax = b in band symmetric storage mode.";"141";"IMSP_SP_BDPDSOL.html";"692"
"15277";"IMSP_SP_BDPDFAC";"Computes the RTR Cholesky factorization of symmetric positive definite matrix, A, in band symmetric storage mode.";"141";"IMSP_SP_BDPDFAC.html";"732"
"15279";"IMSP_SP_CG";"Solves a real symmetric definite linear system using a conjugate gradient method.";"141";"IMSP_SP_CG.html";"833"
"15280";"IMSP_SP_GMRES";"Solves a linear system Ax = b using the restarted generalized minimum residual (GMRES) method.";"141";"IMSP_SP_GMRES.html";"727"
"15281";"IMSP_SP_MVMUL";"Computes a matrix-vector product involving sparse matrix and a dense vector.";"141";"IMSP_SP_MVMUL.html";"738"
"15284";"Open Hierarchical Data";;"136";"OpenHierarchicalData.html";"5229"
"15505";"Python to IDL Bridge";;"135";"PythonToIDL.html";"4602"
"15286";"Application User Directory";;"136";"ApplicationUserDirectory.html";"1127"
"15287";"Radar Backscatter";;"136";"RadarBackscatter.html";"3889"
"17012";"Softmax Regression Background";;"136";"BackgroundSoftmaxRegression.html";"44"
"17142";"Deploy Custom Task Files";;"2";"DeployTasks.html";"113"
"17141";"Custom Tasks Tutorial";;"136";"TutorialCustomTasks.html";"240"
"15293";"Using Include Files in Routines";;"135";"IncludeFiles.html";"2007"
"15294";"What's New in IDL 8.6";;"135";"WhatsNew.html";"24460"
"15324";"IDL_Object::_overloadPoundPound";"Defines the behavior of the matrix multiplication (##) operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadPoundPound.html";"1255"
"15325";"IDL_Object::_overloadPrint";"Return a variable of any type to be printed out, although in this default method the self object reference is returned to the PRINT/PRINTF procedures.";"172";"IDL_Object_overloadPrint.html";"1297"
"15326";"IDL_Object::_overloadSize";"Returns a vector of values representing the object's 'dimensions'.";"172";"IDL_Object_overloadSize.html";"1424"
"15327";"IDL_Object::_overloadSlash";"Defines the behavior of the division (/) operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadSlash.html";"1240"
"15328";"IDL_Object::_overloadTilde";"Defines the behavior of the unary logical NOT (~) operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadTilde.html";"1152"
"15329";"IDL_Object::_overloadXOR";"Defines the behavior of the bitwise XOR operator for instances of objects that inherit from the IDL_Object class.";"172";"IDL_Object_overloadXOR.html";"1318"
"15330";"LOCALE_SET";"Sets the current locale of the IDL process.";"43";"LOCALE_SET.html";"1229"
"15331";"NCDF_GET";"Retrieves variables and attributes from a NetCDF file.";"101";"NCDF_GET.html";"3287"
"15332";"NCDF_LIST";"Lists the variables and attributes in a NetCDF file.";"101";"NCDF_LIST.html";"3228"
"15333";"NCDF_PUT";"Writes variables and attributes to a NetCDF file.";"101";"NCDF_PUT.html";"1941"
"15334";"READ_EXIF";"Reads Exif (Exchangeable image file format) metadata from JPEG, TIFF, and BigTIFF files.";"36";"READ_EXIF.html";"1952"
"15335";"TS_HANTS";"The Harmonic ANalysis of Time Series function can be used to smooth noisy data or interpolate data to reconstruct incomplete images.";"8";"TS_HANTS.html";"2348"
"15336";"ESE Classes";NULL;"171";"ESE_Functions.html";"2956"
"15518";"DIALOG_COLORPICKER";"Allows you to interactively select a color using a selection dialog.";"21";"DIALOG_COLORPICKER.html";"1311"
"15511";"ESECatalog";"Represents an ESE server's catalog and allows the user to examine its contents.";"171";"ESECatalog.html";"2499"
"15512";"ESEFolder";"Represents an ESE folder. Folders contain other folders and services.";"171";"ESEFolder.html";"2364"
"15513";"ESEJob";"Represents the ESE job that is produced whenever a task is run.";"171";"ESEJob.html";"2630"
"15514";"ESEServer";"Provides the ability to introspect an ESE installation, get a task, upload, and download files.";"171";"ESEServer.html";"2539"
"15516";"ESETask";"Tasks represent algorithms and jobs represent the execution of an algorithm.";"171";"ESETask.html";"2646"
"15346";"ENVIGainOffsetRaster";"Constructs an ENVIRaster from a source raster that has gains and offsets applied.";"155";"ENVIGainOffsetRaster.html";"2269"
"15347";"ENVIIrregularGridMetaspatialRaster";"Constructs an ENVIRaster from an array of source rasters that overlap or contain gaps in coverage.";"155";"ENVIIrregularGridMetaspatialRaster.html";"2345"
"15348";"ENVIMaskRaster";"Constructs an ENVIRaster from an input raster and an input mask.";"155";"ENVIMaskRaster.html";"3263"
"15349";"ENVIMetaspatialRaster";"Constructs an ENVIRaster from an array of non-overlapping and non-gapping source rasters that have the same spatial dimensions.";"155";"ENVIMetaspatialRaster.html";"2218"
"15350";"ENVIRadarBackscatterRaster";"Constructs an ENVIRaster from a radar amplitude source raster that has been calibrated to sigma nought backscatter, in decibels.";"155";"ENVIRadarBackscatterRaster.html";"2042"
"15351";"ENVIROIMaskRaster";"Constructs an ENVIRaster from an input raster and an ENVIROI that defines the area not to mask.";"155";"ENVIRoiMaskRaster.html";"3102"
"15353";"ApplyGainOffset";"This task applies custom gain and offset values to each band of a raster, updating the pixel values accordingly.";"159";"ENVIApplyGainOffsetTask.html";"2749"
"15354";"BuildIrregularGridMetaspatialRaster";;"159";"ENVIBuildIrregularGridMetaspatialRasterTask.html";"2233"
"15355";"BuildMetaspatialRaster";"This task constructs an ENVIRaster from an array of source rasters that overlap or contain gaps in coverage.";"159";"ENVIBuildMetaspatialRasterTask.html";"2205"
"15356";"ClassificationClumping";"This task performs a clumping method on a classification image.";"159";"ENVIClassificationClumpingTask.html";"2676"
"15357";"ClassificationSieving";"This task removes isolated classified pixels using blob grouping.";"159";"ENVIClassificationSievingTask.html";"2464"
"15358";"ConvertGeographicToMapCoordinates";"This task converts geographic (latitude/longitude) coordinates to map (northings/eastings) coordinates.";"159";"ENVIConvertGeographicToMapCoordinatesTask.html";"2557"
"15359";"ConvertMapToGeographicCoordinates";"This task converts map (northings/eastings) coordinates to geographic (latitude/longitude) coordinates.";"159";"ENVIConvertMapToGeographicCoordinatesTask.html";"2284"
"15360";"ConvertMapToPixelCoordinates";"This task converts map (northings/eastings) coordinates to pixel coordinates.";"159";"ENVIConvertMapToPixelCoordinatesTask.html";"2086"
"15361";"ConvertPixelToMapCoordinates";"This task converts pixel coordinates to map (northings/eastings) coordinates.";"159";"ENVIConvertPixelToMapCoordinatesTask.html";"2455"
"15362";"ExportRasterToPNG";"This task exports a full-resolution raster to a PNG file.";"159";"ENVIExportRasterToPNGTask.html";"2390"
"17033";"ENVICalculateConfusionMatrixFromRaster";"Returns a reference to an ENVIConfusionMatrix object computed from a classification raster and truth regions of interest (ROIs).";"173";"ENVICalculateConfusionMatrixFromRaster.html";"140"
"15364";"FilterTiePointsByGlobalTransform";"This task uses the global transform to filter tie points.";"159";"ENVIFilterTiePointsByGlobalTransformTask.html";"2439"
"15365";"FilterTiePointsByGlobalTransformWithOrthorectification";"This task uses the global transform to filter the tie points.";"159";"ENVIFilterTiePointsByGlobalTransformWithOrthorectificationTask.html";"2573"
"17032";"ENVIApplyGainOffsetToExamples";"Applies a gain and offset to the examples in an ENVIExamples object.";"173";"ENVIApplyGainOffsetToExamples.html";"142"
"15367";"GenerateTiePointsByCrossCorrelation";"This task performs automatic tie point generation using cross correlation as a similarity measure.";"159";"ENVIGenerateTiePointsByCrossCorrelationTask.html";"2718"
"15368";"GenerateTiePointsByCrossCorrelationWithOrthorectification";"This task performs automatic tie point generation using cross correlation as a similarity measure.";"159";"ENVIGenerateTiePointsByCrossCorrelationWithOrthorectificationTask.html";"2337"
"15369";"GenerateTiePointsByMutualInformation";"This task performs automatic tie point generation using mutual information as a similarity measure.";"159";"ENVIGenerateTiePointsByMutualInformationTask.html";"2652"
"15370";"GenerateTiePointsByMutualInformationWithOrthorectification";"This task performs automatic tie point generation using mutual information as a similarity measure.";"159";"ENVIGenerateTiePointsByMutualInformationWithOrthorectificationTask.html";"4246"
"15371";"GeographicSubsetRaster";"This task subsets a raster spatially (by geographic location) and/or spectrally.";"159";"ENVIGeographicSubsetRasterTask.html";"2418"
"15372";"ImageToImageRegistration";"This task warps an input raster to align with the base raster using tie points.";"159";"ENVIImageToImageRegistrationTask.html";"2473"
"15373";"QUAC";"Performs QUick Atmospheric Correction (QUAC) on multispectral or hyperspectral imagery.";"159";"ENVIQUACTask.html";"3276"
"15374";"RPCOrthorectification";"Performs RPC Orthorectification on an ENVIRaster, using an optional digital elevation model (DEM) and ground control points (GCP) file.";"159";"ENVIRPCOrthorectificationTask.html";"2953"
"15375";"RadarBackscatter";"This task calibrates a radar amplitude raster to sigma nought backscatter, in decibels.";"159";"ENVIRadarBackscatterTask.html";"2172"
"15376";"RasterProperties";"This task retrieves the properties of an ENVIRaster.";"159";"ENVIRasterPropertiesTask.html";"2328"
"15377";"ReprojectGLT";"This task georeferences NPP VIIRS or MODIS imagery, while also removing any bowtie artifacts.";"159";"ENVIReprojectGLTTask.html";"2633"
"15378";"SpectralAdaptiveCoherenceEstimator";"This task performs Adaptive Coherence Estimator (ACE) target detection analysis.";"159";"ENVISpectralAdaptiveCoherenceEstimatorTask.html";"2452"
"15379";"SubsetRaster";"This task subsets a raster spatially (by pixel coordinates) and/or spectrally.";"159";"ENVISubsetRasterTask.html";"2749"
"15380";"ENVITaskFromProcedure";"This class calls the user-defined IDL procedure referenced by the ROUTINE property when ENVITask::Execute is called.";"159";"ENVITaskFromProcedure.html";"2525"
"15381";"ENVITaskFromProcedure::DoExecute";"This method is called by ENVITask::Execute after a successful call to the PreExecute method.";"159";"ENVITaskFromProcedure__DoExecute.html";"2176"
"15382";"ENVITaskFromProcedure::PostExecute";"This method is called by ENVITask::Execute after a successfull call to the DoExecute method.";"159";"ENVITaskFromProcedure__PostExecute.html";"2040"
"15383";"ENVITaskFromProcedure::PreExecute";"This method is called first when ENVITask::Execute runs.";"159";"ENVITaskFromProcedure__PreExecute.html";"2284"
"15384";"ENVITiePointSet";"Reference to an ENVITiePointSet object, which contains a set of tie points used for image-to-image registration.";"155";"ENVITiePointSet.html";"2485"
"15385";"ENVITiePointSet::Add";"Adds a new tie point to an ENVITiePointSet object.";"155";"ENVITiePointSet__Add.html";"3046"
"15386";"ENVITiePointSet::Count";"Returns the number of tie points in an ENVITiePointSet object.";"155";"ENVITiePointSet__Count.html";"1868"
"15387";"ENVITiePointSet::Export";"Saves an ENVITiePointSet object to an ASCII text file.";"155";"ENVITiePointSet__Export.html";"1931"
"15388";"ENVITiePointSet::Get";"Retrieves one or more elements from an ENVITiePointSet object.";"155";"ENVITiePointSet__Get.html";"1917"
"15389";"ENVITiePointSet::Offset";"Subtracts pixel offsets from all of the tie points in an ENVITiePointSet object.";"155";"ENVITiePointSet__Offset.html";"2104"
"15390";"ENVITiePointSet::Remove";"Removes tie points from an ENVITiePointSet object.";"155";"ENVITiePointSet__Remove.html";"1680"
"15391";"ENVITiePointSet::Scale";"Scales the pixel coordinates of all tie points in an ENVITiePointSet object.";"155";"ENVITiePointSet__Scale.html";"2069"
"15392";"ENVIUI::SelectGridDefinition";"Displays a dialog for the user to select parameters to create a new ENVIGridDefinition object.";"156";"ENVIUI__SelectGridDefinition.html";"1877"
"15393";"ENVIUI::SelectPseudoRasterSpatialRef";"Displays a dialog for the user to select parameters to create a new ENVIPseudoRasterSpatialRef object.";"156";"ENVIUI__SelectPseudoRasterSpatialRef.html";"1929"
"15394";"ENVIUI::SelectRPCRasterSpatialRef";"Displays a dialog for the user to select parameters to create a new ENVIRPCRasterSpatialRef object.";"156";"ENVIUI__SelectRPCRasterSpatialRef.html";"1889"
"15395";"ENVIUI::SelectSpatialRef";"Displays a dialog for the user to select parameters to create a new Spatial Reference object.";"156";"ENVIUI__SelectSpatialRef.html";"2302"
"15396";"ENVIUI::SelectStandardRasterSpatialRef";"Displays a dialog for the user to select parameters to create a new ENVIStandardRasterSpatialRef object.";"156";"ENVIUI__SelectStandardRasterSpatialRef.html";"1927"
"15397";"ENVIVectorMaskRaster";"Constructs an ENVIRaster from an input raster and an ENVIVector that defines the area not to mask.";"155";"ENVIVectorMaskRaster.html";"2876"
"15403";"Custom Tasks";;"159";"ProgrammingGuideCustomENVITasks.html";"3957"
"15406";"MGH_CD_STICKY";"A procedure to replace boilerplate directory-switching code in widget applications";"144";"mgh_cd_sticky.html";"25"
"15407";"MGH_CLASS_EXISTS";"Determine whether the given name represents a class in IDL (actually tests whether structures of that name are automatically created or have already been created";"144";"mgh_class_exists.html";"28"
"15408";"MGH_DT_MONTH_AVG";"Given a time series, calculate monthly averages.";"144";"mgh_dt_month_avg.html";"18"
"15409";"MGH_EDIT";"The procedure opens a text editor to edit the specified file(s).";"144";"mgh_edit.html";"38"
"15410";"MGH_EXAMPLE_POLYFILL";"Testing various methods of polygon filling. This routine has been used to compare the behaviour of various filling methods when the polygon vertices move out of the positive quarter plane, see http://groups.google.com/groups?hl=en&thr...";"144";"mgh_example_polyfill.html";"18"
"15411";"MGH_FORMAT_INTEGER";"This function returns a string representation of an integer numeric value. It is designed for use in widget applications, where one wants an editable value, with no extraneous digits, that can be converted easily back to numeric form.";"144";"mgh_format_integer.html";"16"
"15412";"MGH_HAS_VIDEO";"Determine whether the current IDL environment supports the IDLffVideoWrite class and (optionally) the specified format and codec";"144";"mgh_has_video.html";"8"
"15413";"MGH_IMAGE_FILE_SEQUENCER";"Display images from a seuqnce of files.";"144";"mgh_image_file_sequencer.html";"9"
"15414";"MGH_LINE_COEFF";"Given a pair of points in an X-Y plane, return the coefficients of the equation ax + by + c = 0 defining a line through the points. This is a utility function used in describing polygon-clipping operations. See MGH_POLYFILLG.";"144";"mgh_line_coeff.html";"10"
"15415";"MGH_LIST__DEFINE";"A wrapper for the List object";"144";"mgh_list__define.html";"15"
"15416";"MGH_OBJ_LIST";"Search the heap for and return a list of all objects matching one or more classes.";"144";"mgh_obj_list.html";"13"
"15417";"MGH_PERIM";"For a 2D rectilinear or curvilinear grid, return the perimeter locations";"144";"mgh_perim.html";"9"
"15418";"MGH_POLYFILLA";"Given a 2-D polygon and a rectangular grid, this function returns an array indicating which of the pixels in the grid is inside the polygon. See also MGH_POLYFILLG.";"144";"mgh_polyfilla.html";"23"
"15419";"MGH_RECIPROCAL";"This function is designed for use with the DATA_TRANSFORMaTION keyword of various graphics routines. Given a numeric value, it returns the reciprocal, or multiplicative inverse.";"144";"mgh_reciprocal.html";"4"
"15420";"MGH_RECIPROCAL_POSITIVE";"A function like MGH_RECIPROCAL, intended for use with the DATA_TRANSFORMATION keyword of various graphics routines to produce plots of the reciprocal of a variable, but intended specifically to handle (ie. ignore) zeroes or negative v...";"144";"mgh_reciprocal_positive.html";"12"
"15421";"MGH_REFORM_XYZ";"Given three vectors x, y and z, thought to contain data from a rectilinear grid, where x & y are the 1D coordiante variables and z is the 2D data variable, recover the original gridded data.";"144";"mgh_reform_xyz.html";"20"
"15422";"MGH_ROTATE";"This provides a handy shortcut for rotation of vectors on the X,Y plane. Given arguments x & 7 representing x & y components, respectively, and an angle, the procedure rotates the (x,y) vector through the angle using the mathematical ...";"144";"mgh_rotate.html";"28"
"15423";"MGH_SCALAR";"This function converts a one-element array into a scalar. Passing a multi-element array results in an error.";"144";"mgh_scalar.html";"21"
"15424";"MGH_SKIPLINE";"Skip a specified number of lines in a text file, by reading and discarding a string";"144";"mgh_skipline.html";"20"
"15425";"MGH_STRUCT_EQUAL";"Test whether two structure are equal";"144";"mgh_struct_equal.html";"17"
"15426";"MGH_STRUCT_EVAL";"Return data for a named tag in a structure";"144";"mgh_struct_eval.html";"14"
"15427";"MGH_STRUCT_HASH";"For a specified structure, calculate and return an integer hash value: http://en.wikipedia.org/wiki/Hash_function";"144";"mgh_struct_hash.html";"16"
"15428";"MGH_SUBSET2";"Given a polygonal region (defined by a list of vertices in X & Y) and a curvilinear grid (defined by 2-D position arrays X & Y), this function returns the range of indices for the grid lines that intersect the region";"144";"mgh_subset2.html";"14"
"15429";"MGH_TIME_EXTEND";"Determine the time taken to accumulate a set of elements of similar data type, then save the results to an array. POSITIONAL PARAMATERS: option (input, scalar integer, optional): Specify the method: 0 - Array, extended at every step. ...";"144";"mgh_time_extend.html";"12"
"15430";"MGH_VAR_CLONE";"Given an IDL variable, this function generates and returns a copy. It is therefore handy when passing a variable to a routine and wanting to protect it from modification";"144";"mgh_var_clone.html";"19"
"15510";"Programming with the ESE API";;"171";"ESEAPIOverview.html";"3423"
"15517";"ESETaskParameter";"Every parameter of an ESETask is accessed via an ESETaskParameter object.";"171";"ESETaskParameter.html";"2314"
"15515";"ESEService";"Objects of this type can be used to discover tasks.";"171";"ESEService.html";"2605"
"15431";"CGASINHSCL";"This is a utility routine to perform an inverse hyperbolic sine function intensity transformation on an image. I think of this as a sort of 'tuned' gamma or power-law function. The algorithm, and notion of 'asinh magnitudes', comes fr...";"118";"cgasinhscl.html";"67"
"15432";"CGCLIPSCL";"This is a utility routine to perform linear scaling (similar to BYTSCL) on image arrays. If differs from BYTSCL only in that a user-specified percentage of pixels can be clipped from the image histogram, prior to scaling. By default, ...";"118";"cgclipscl.html";"89"
"15433";"CGCOMPRESSSCL";"This is a utility routine to perform a compression transformation on an image. For exponent values greater than 1.0, the upper and lower values of the image are compressed and centered on the mean. Larger exponent values provide steep...";"118";"cgcompressscl.html";"25"
"15434";"CGGAUSSSCL";"This is a utility routine to perform a gaussian gray-level pixel transformation stretch on an image.";"118";"cggaussscl.html";"30"
"15435";"CGGMASCL";"This is a utility routine to perform basic gray-level pixel transformations of images. I think of it as BYTSCL on steroids. It is similar to IMADJUST in _Digital Image Processing with MATLAB_ by Gonzales, Wood, and Eddins. It performs...";"118";"cggmascl.html";"22"
"15436";"CGLOGSCL";"This is a utility routine to perform a logarithmic transformation on an image. The shape of the transformation is similar to the gamma curve (see cgGmaScl), except that the shape of the gamma curve is variable, while the log curve is ...";"118";"cglogscl.html";"12"
"15437";"CGSDEVSCL";"This is a utility routine to perform standard deviation scaling on image arrays. The user defines a multiple of the standard deviation and this is used with the standard deviation of the pixels in the image to create a threshold for l...";"118";"cgsdevscl.html";"12"
"15438";"LIBRARIES_CLIPBOARD";"The purpose of this program is to copy the contents of a graphics window to the clipboard for subsequent pasting into applications such as Photoshop or Powerpoint.";"118";"libraries_clipboard.html";"18"
"15439";"JB_RGBPNG";"Turn individual image frames into an RGB PNG image file.";"149";"jb_rgbpng.html";"23"
"15440";"REDSHIFT_AXIS";"For a plotting coordinate system that is set up in terms of cosmic time in Gyr, adds a redshift axis.";"149";"redshift_axis.html";"25"
"15441";"JBBILATERALFILTER";"Implements the bilateral filter on an image.";"149";"jbbilateralfilter.html";"60"
"15442";"JBMAJORITYFILTER";;"149";"jbmajorityfilter.html";"58"
"15443";"LIBRARIES_TANH";"Calculates the hyperbolic tan function (tanh).";"149";"libraries_tanh.html";"19"
"15444";"SHRINKINTTYPE";"Reduces the memory occupied by an integer-type array if possible by shrinking it into a byte or unsigned short int.";"149";"shrinkinttype.html";"19"
"15448";"BIT_GET";"Pick out specified bits from a value.";"142";"bit_get.html";"78"
"15449";"BIT_PUT";"Insert specified bits in a target.";"142";"bit_put.html";"11"
"15450";"BIT_REVERSE";"Reverse all the bits in the given item.";"142";"bit_reverse.html";"18"
"15451";"BIT_SHIFT";"Shift bits in a byte array by any amount.";"142";"bit_shift.html";"31"
"15452";"BIT_SHOW";"Shows bits of an integer data type.";"142";"bit_show.html";"27"
"15453";"BIT_UNPACK";"Unpack bit string arrays from a given byte array.";"142";"bit_unpack.html";"40"
"15454";"DATE_RANGE_TO_JS";"Convert a given range of dates to Julian Seconds.";"142";"date_range_to_js.html";"10"
"15455";"DEEP_COPY";"Copy an item using deep copy.";"142";"deep_copy.html";"26"
"15456";"EDIT_NAME";"Edit a given text string to be suitable for a file name.";"142";"edit_name.html";"16"
"15457";"ELL_SPEED";"Compute speed and course between given points.";"142";"ell_speed.html";"17"
"15458";"LIBRARIES_FILE_TEST";"Test if file readable &, optionally, has specified contents.";"142";"libraries_file_test.html";"15"
"15459";"FPRINT";"Turn print statements into a text file.";"142";"fprint.html";"57"
"15460";"GCD_MOD";"Find the greatest common divisor of two integers by modulo.";"142";"gcd_mod.html";"28"
"15461";"HASH_DEEP_COPY";"Copy a hash using deep copy.";"142";"hash_deep_copy.html";"12"
"15462";"HASH_FROM_STRUCT";"Convert a nested structure to a nested hash.";"142";"hash_from_struct.html";"10"
"15463";"HASH_TO_STRUCT";"Convert a nested hash to a nested structure.";"142";"hash_to_struct.html";"63"
"15464";"IMG_MERGE_LAYERS";"Merge two images as layers with transparency.";"142";"img_merge_layers.html";"13"
"15465";"LIBRARIES_IZOOM";"Zoom an image and display with labeled axes.";"142";"libraries_izoom.html";"30"
"15466";"LCM_MOD";"Find the least common multiple of two integers with gcd_mod.";"142";"lcm_mod.html";"13"
"15467";"LIBRARIES_M_LIST";"List values in global areas saved by m_put.";"142";"libraries_m_list.html";"0"
"15468";"MAKESTR";"Make a nested structure for testing.";"142";"makestr.html";"69"
"15469";"MAP_CYL_RESCALE";"Rescale a cylindrical projection map in the current window.";"142";"map_cyl_rescale.html";"16"
"15470";"MAPBOX2B";"Two button interactive map box, can return a position box.";"142";"mapbox2b.html";"28"
"15471";"MAPCURR";"Set current window to a cylindrical map, no margins.";"142";"mapcurr.html";"15"
"15472";"LIBRARIES_NCDF_GET";"Get a set of variables from a NetCDF file.";"142";"libraries_ncdf_get.html";"32"
"15473";"LIBRARIES_NCDF_LIST";"List variables in a Net CDF file.";"142";"libraries_ncdf_list.html";"36"
"15474";"LIBRARIES_NCDF_PUT";"Write given data to a NetCDF file.";"142";"libraries_ncdf_put.html";"33"
"15475";"PLOT_ELLIPSE";"Plot specified ellipse on the current plot device.";"142";"plot_ellipse.html";"28"
"15476";"QMAP";"Draw a quick map.";"142";"qmap.html";"128"
"15477";"RECPOL_FUNC";"2-D rectangular coordinates to polar as a function.";"142";"recpol_func.html";"15"
"15478";"REP_MARKED_LINES";"Edit a text array by replacing lines that have markers.";"142";"rep_marked_lines.html";"19"
"15479";"SCALEDATA";"Linearly scale data from one range to another (allow missing).";"142";"scaledata.html";"10"
"15480";"STR_PARSE";"Parse tag=str_val pairs in an input string.";"142";"str_parse.html";"59"
"15481";"STR_REORDER";"Reorder the columns of a text array.";"142";"str_reorder.html";"17"
"15482";"STRREV";"Reverse a string or string array.";"142";"strrev.html";"44"
"15483";"SUBIMG_LOC";"Locate a subimage within an image.";"142";"subimg_loc.html";"23"
"15484";"TAG_CLASH";"Find and fix a potential structure tag clash.";"142";"tag_clash.html";"9"
"15485";"TAG_LIST";"List tags (keys) in a structure or hash.";"142";"tag_list.html";"47"
"15486";"TAG_MODIFY";"Modify a structure using given functions.";"142";"tag_modify.html";"15"
"15487";"TEXT_GRAB";"Copy and paste text into an IDL string array.";"142";"text_grab.html";"19"
"15488";"TEXT_STATS";"For entered text give a line, word, and character count.";"142";"text_stats.html";"16"
"15489";"LIBRARIES_TIMER";"Measure elapsed time between calls.";"142";"libraries_timer.html";"20"
"15553";"ENVIPointCloudSpatialRef::ConvertLonLatToMap";"Converts a set of geographic latitude and longitude coordinates (using WGS84 datum) to a set of map coordinates (x-eastings, y-northings) in the target spatial reference.";"3";"ENVIPointCloudSpatialRef__ConvertLonLatToMap.html";"1643"
"15554";"ENVIPointCloudSpatialRef::ConvertMapToLonLat";"Converts a set of map coordinates (x-eastings, y-northings) to a set of geographic latitude and longitude coordinates using WGS84 datum.";"3";"ENVIPointCloudSpatialRef__ConvertMapToLonLat.html";"1621"
"15555";"ENVIPointCloudSpatialRef::ConvertMapToMap";"Converts a set of map coordinates (x-eastings, y-northings) from the source (input) spatial reference to the same location in the target (output) spatial reference.";"3";"ENVIPointCloudSpatialRef__ConvertMapToMap.html";"1671"
"15556";"ENVIPointCloudViewer";"Starts the ENVI LiDAR application and returns an object reference to the instance of the application.";"3";"ENVIPointCloudViewer.html";"1959"
"15557";"ENVIPointCloudViewer::Close";"Closes the ENVI LiDAR application.";"3";"ENVIPointCloudViewer__Close.html";"1521"
"15558";"ENVIPointCloudViewer::Display";"Opens an ENVIPointCloud object in the ENVI LiDAR application.";"3";"ENVIPointCloudViewer__Display.html";"1727"
"15559";"ENVIPointCloudViewer::DisplayShapefile";"Opens a shapefile in the ENVI LiDAR application.";"3";"ENVIPointCloudViewer__DisplayShapefile.html";"1519"
"15560";"ENVIPointCloudViewer::GetOpenData";"Returns a reference to an ENVIPointCloud object that is already open in the ENVI LiDAR application.";"3";"ENVIPointCloudViewer__GetOpenData.html";"1576"
"15561";"ENVIPointCloudViewer::GetViewExtents";"Returns a four-element array containing the extents of magenta region selection box in the ENVI LiDAR navigation window, in the form [xmin, ymin, xmax, ymax].";"3";"ENVIPointCloudViewer__GetViewExtents.html";"1645"
"15562";"ENVIPointCloudViewer::SetProgress";"Sets the position of the progress bar at the bottom left of the ENVI LiDAR application.";"3";"ENVIPointCloudViewer__SetProgress.html";"1514"
"15563";"ENVIPointCloudViewer::SetViewExtents";"Sets the extents of the selection box in the ENVI LiDAR navigation window, in the form [xmin, ymin, xmax, ymax].";"3";"ENVIPointCloudViewer__SetViewExtents.html";"1476"
"15564";"ENVIPointCloud";"Reference to a point cloud object.";"3";"ENVIPointCloud.html";"2773"
"15565";"ENVIPointCloud::Close";"Closes the ENVIPointCloud for reading.";"3";"ENVIPointCloud__Close.html";"1795"
"15566";"ENVIPointCloud::GetPointsInCircle";"Returns the points that lie within the circle region.";"3";"ENVIPointCloud__GetPointsInCircle.html";"1782"
"15567";"ENVIPointCloud::GetPointsInPolygon";"Returns points that lie within the polygon region.";"3";"ENVIPointCloud__GetPointsInPolygon.html";"1852"
"15568";"ENVIPointCloud::GetPointsInRange";"Returns unsorted points from the dataset. It is useful for iterating over the entire dataset in chunks.";"3";"ENVIPointCloud__GetPointsInRange.html";"1677"
"15569";"ENVIPointCloud::GetPointsInRect";"Returns the points that lie within the rectangular region.";"3";"ENVIPointCloud__GetPointsInRect.html";"2037"
"15570";"ENVIPointCloud::GetPointsInTile";;"3";"ENVIPointCloud__GetPointsInTile.html";"1978"
"15571";"ENVIPointCloud::Init";"Returns the points that lie within the specified tile.";"3";"ENVIPointCloud__Init.html";"818"
"15572";"ENVIPointCloud::Save";"Closes the ENVIPointCloud object for writing.";"3";"ENVIPointCloud__Save.html";"1733"
"15573";"ENVIPointCloud::WritePoints";"Writes points to a new .las file.";"3";"ENVIPointCloud__WritePoints.html";"1999"
"15574";"ENVIProgressMessage";"Constructs an ENVIProgressMessage object to send to the ENVIBroadcastChannel.";"154";"ENVIProgressMessage.html";"2112"
"15575";"ENVIQUACRaster";"Constructs an ENVIRaster from a source raster that has QUick Atmospheric Correction (QUAC) applied.";"155";"ENVIQUACRaster.html";"1908"
"15576";"ENVIReprojectRaster";"Constructs an ENVIRaster from a source raster that has been reprojected to a different coordinate system.";"155";"ENVIReprojectRaster.html";"2163"
"15577";"ENVIROI::GetExtent";"Returns the pixel coordinates boundary of the ROI for a given ENVIRaster.";"155";"ENVIRoi__GetExtent.html";"1840"
"15578";"ENVISpatialSubsetPointCloud";"Creates a new ENVISpatialSubsetPointCloud object which is a spatial subset of an existing ENVIPointCloud object.";"3";"ENVISpatialSubsetPointCloud.html";"1834"
"15579";"ENVISpectralLibrary";"Returns a reference to an ENVI Spectral Library.";"155";"ENVISpectralLibrary.html";"2106"
"15580";"ENVISpectralLibrary::GetSpectrum";"Returns the details of a specified spectrum.";"155";"ENVISpectralLibrary__GetSpectrum.html";"2002"
"15581";"ENVIStartMessage";"Constructs an ENVIStartMessage object to send to the ENVIBroadcastChannel.";"154";"ENVIStartMessage.html";"2126"
"15582";"ENVIAbortableTaskFromProcedure";"This class calls the user-defined IDL procedure referenced by the ROUTINE property when ENVITask::Execute is called.";"154";"ENVIAbortableTaskFromProcedure.html";"1789"
"15583";"ENVIAbortableTaskFromProcedure::DoExecute";"This method is called by ENVITask::Execute after a successful call to the PreExecute method.";"159";"ENVIAbortableTaskFromProcedure__DoExecute.html";"1743"
"15584";"ENVIAbortableTaskFromProcedure::PostExecute";"This method is called by ENVITask::Execute after a successful call to the DoExecute method";"159";"ENVIAbortableTaskFromProcedure__PostExecute.html";"1294"
"15585";"ENVIAbortableTaskFromProcedure::PreExecute";"This  method is called first when ENVITask::Execute runs.";"159";"ENVIAbortableTaskFromProcedure__PreExecute.html";"1753"
"15586";"ENVIAdditiveLeeAdaptiveFilterTask";"Applies a Lee adaptive filter to smooth noisy data that has an additive component.";"159";"ENVIAdditiveLeeAdaptiveFilterTask.html";"2255"
"15587";"ENVIAdditiveMultiplicativeLeeAdaptiveFilterTask";"Applies a Lee adaptive filter to smooth noisy data that has both an additive and a multiplicative component.";"159";"ENVIAdditiveMultiplicativeLeeAdaptiveFilterTask.html";"2058"
"15588";"ENVIBinaryGTThresholdRasterTask";"Creates a new raster where values above a specified threshold are set to 1 and all other values are set to 0.";"159";"ENVIBinaryGTThresholdRasterTask.html";"1888"
"15589";"ENVIBinaryLTThresholdRasterTask";"Creates a new raster where values below a specified threshold are set to 1 and all other values are set to 0. ";"159";"ENVIBinaryLTThresholdRasterTask.html";"1728"
"15590";"ENVIBitErrorAdaptiveFilterTask";"Applies a bit error adaptive filter to a raster, to remove bit-error noise, which is usually the result of spikes in the data caused by isolated pixels that have extreme values unrelated to the image scene.";"159";"ENVIBitErrorAdaptiveFilterTask.html";"2320"
"15591";"ENVIBuildMosaicRasterTask";"Builds a mosaic raster based on a set of input rasters.";"159";"ENVIBuildMosaicRasterTask.html";"2256"
"15592";"ENVICalculateQUACGainOffsetTask";"Calculates the gain and offset for QUick Atmospheric Correction (QUAC) on multispectral or hyperspectral imagery.";"159";"ENVICalculateQUACGainOffsetTask.html";"2049"
"15593";"ENVICreatePointCloudSubProjectTask";"Divides an existing ENVI LiDAR project into a number of subprojects for simultaneous processing by a number of ENVI Services Engine (ESE) workers. ";"159";"ENVICreatePointCloudSubProjectTask.html";"1770"
"15594";"ENVIDataValuesMaskRasterTask";"Exports a data values mask raster to an ENVI-format file.";"159";"ENVIDataValuesMaskRasterTask.html";"2213"
"15595";"ENVIDirectionalFilterTask";"Performs directional filtering.";"159";"ENVIDirectionalFilterTask.html";"2407"
"15596";"ENVIDirectionalKernelTask";"Returns a directional kernel for use with convolution filtering.";"159";"ENVIDirectionalKernelTask.html";"1919"
"15597";"ENVIEnhancedFrostAdaptiveFilterTask";"Applies an enhanced Frost filter to a raster, to reduce speckling in radar imagery while simultaneously preserving texture information.";"159";"ENVIEnhancedFrostAdaptiveFilterTask.html";"1982"
"15598";"ENVIEnhancedLeeAdaptiveFilterTask";"Applies an enhanced Lee filter to a raster, to reduce speckling while preserving texture information.";"159";"ENVIEnhancedLeeAdaptiveFilterTask.html";"2112"
"15599";"ENVIExportColorSlicesTask";"Exports raster color slices to a density slice range (DSR) file.";"159";"ENVIExportColorSlicesTask.html";"2203"
"15600";"ENVIFrostAdaptiveFilterTask";"Applies a Frost filter to a raster, to reduce speckling while preserving edges.";"159";"ENVIFrostAdaptiveFilterTask.html";"2276"
"15601";"ENVIGammaAdaptiveFilterTask";"Applies a gamma filter to a raster, to reduce speckle while preserving edges in radar images.";"159";"ENVIGammaAdaptiveFilterTask.html";"2076"
"15602";"ENVIGaussianHighPassFilterTask";"Performs Gaussian high pass filtering.";"159";"ENVIGaussianHighPassFilterTask.html";"2256"
"15603";"ENVIGaussianHighPassKernelTask";"Returns a Gaussian high pass kernel for use with convolution filtering.";"159";"ENVIGaussianHighPassKernelTask.html";"2353"
"15604";"ENVIGaussianLowPassFilterTask";"Performs Gaussian low pass filtering.";"159";"ENVIGaussianLowPassFilterTask.html";"2428"
"15605";"ENVIGaussianLowPassKernelTask";"Returns a Gaussian low pass kernel for use with convolution filtering.";"159";"ENVIGaussianLowPassKernelTask.html";"1969"
"15606";"ENVIGeneratePointCloudsByDenseImageMatching";"Generates point clouds from two or more images taken from different view points using a dense image matching method.";"159";"ENVIGeneratePointCloudsByDenseImageMatchingTask.html";"2562"
"15607";"ENVIGeoJSONToROITask";"Converts GeoJSON features to a region of interest (ROI).";"159";"ENVIGeoJSONToROITask.html";"1992"
"15608";"ENVIGeoPackageToShapefileTask";"Converts GeoPackage vector files to Shapefile format.";"159";"ENVIGeoPackageToShapefileTask.html";"1773"
"15609";"ENVIGetColorSliceRangesTask";"Retrieves data ranges and colors from a density slice range file (.dsr).";"159";"ENVIGetColorSlicesTask.html";"2127"
"17034";"ENVIClassifyRaster";"Classifies a raster using a trained classifier.";"173";"ENVIClassifyRaster.html";"126"
"15611";"ENVIHighClipRasterTask";"Creates a new raster where values above a threshold are set to the threshold.";"159";"ENVIHighClipRasterTask.html";"1921"
"15612";"ENVIHighPassFilterTask";"Performs high pass filtering.";"159";"ENVIHighPassFilterTask.html";"2404"
"15613";"ENVIHighPassKernelTask";"Returns a high pass kernel of a specified size for use with convolution filtering.";"159";"ENVIHighPassKernelTask.html";"2049"
"15614";"ENVIKuanAdaptiveFilterTask";"Applies a Kuan filter to a raster, to reduce speckle while preserving edges in radar images.";"159";"ENVIKuanAdaptiveFilterTask.html";"2034"
"15615";"ENVILaplacianFilterTask";"Performs Laplacian filtering.";"159";"ENVILaplacianFilterTask.html";"2422"
"15616";"ENVILaplacianKernelTask";"Returns a Laplacian kernel for use with convolution filtering.";"159";"ENVILaplacianKernelTask.html";"2040"
"15617";"ENVILocalSigmaAdaptiveFilterTask";"Applies a Local Sigma adaptive filter to a raster, to preserve fine detail (even in low contrast areas) and to reduce speckle significantly.";"159";"ENVILocalSigmaAdaptiveFilterTask.html";"1943"
"15618";"ENVILowClipRasterTask";"Creates a new raster where values below a threshold are set to the threshold.";"159";"ENVILowClipRasterTask.html";"1701"
"15619";"ENVILowPassFilterTask";"Performs low pass filtering.";"159";"ENVILowPassFilterTask.html";"2498"
"15620";"ENVILowPassKernelTask";"Returns a low pass kernel of a specified size, for use with convolution filtering.";"159";"ENVILowPassKernelTask.html";"1912"
"15621";"ENVIMaskRasterTask";"Exports a mask raster to an ENVI-format file.";"159";"ENVIMaskRasterTask.html";"1931"
"15622";"ENVIMedianFilterTask";"Performs median convolution filtering.";"159";"ENVIMedianFilterTask.html";"2497"
"15623";"ENVIMultiplicativeLeeAdaptiveFilterTask";"Applies a Lee adaptive filter to smooth noisy data that has a multiplicative component.";"159";"ENVIMultiplicativeLeeAdaptiveFilterTask.html";"1826"
"15624";"ENVIPointCloudFeatureExtractionTask";"Performs feature extraction on point cloud data.";"159";"ENVIPointCloudFeatureExtractionTask.html";"2433"
"15625";"ENVIPointCloudFeatureExtractionTask::Validate";"Returns a flag that indicates success (1) or failure (0) if the properties for an ENVIPointCloudFeatureExtractionTask meet the required criteria for successful execution.";"159";"ENVIPointCloudFeatureExtractionTask__Validate.html";"1676"
"15626";"ENVIQuerySpectralLibraryTask";"Queries a spectral library, returning the names of all spectra in the library.";"159";"ENVIQuerySpectralLibraryTask.html";"1792"
"15627";"ENVIQueryTaskCatalogTask";"Returns a list of the tasks available in ENVI.";"159";"ENVIQueryTaskCatalogTask.html";"1740"
"15628";"ENVIQueryTaskTask";"Returns a hash that describes the properties of a selected ENVITask.";"159";"ENVIQueryTaskTask.html";"1854"
"15629";"ENVIROIMaskRasterTask";"Exports an ROI mask raster to an ENVI-format file.";"159";"ENVIROIMaskRasterTask.html";"2123"
"15630";"ENVIRasterConvolutionTask";"Performs convolution filtering on a raster.";"159";"ENVIRasterConvolutionTask.html";"2100"
"15631";"ENVIRasterHistogramTask";"Computes a histogram for a raster.";"159";"ENVIRasterHistogramTask.html";"2154"
"15632";"ENVIRasterMetadataItemTask";"Retrieves the value of a given raster metadata key.";"159";"ENVIRasterMetadataItemTask.html";"1840"
"15633";"ENVIRegridRasterSeriesTask";"Reprojects a series of rasters to a common spatial grid, using a custom grid definition.";"159";"ENVIRegridRasterSeriesTask.html";"2109"
"15634";"ENVIReprojectRasterTask";"Reprojects a raster to a standard spatial reference based on a specified coordinate system.";"159";"ENVIReprojectRasterTask.html";"2536"
"15635";"ENVIResampleSpectrumTask";"Resamples a given spectrum to a different set of wavelengths, typically from a hyperspectral image.";"159";"ENVIResampleSpectrumTask.html";"2060"
"15636";"ENVIRobertsFilterTask";"Performs Roberts filtering.";"159";"ENVIRobertsFilterTask.html";"2256"
"15637";"ENVISetRasterMetadataTask";"Sets metadata values for a raster file and writes a header file (.hdr) to disk.";"159";"ENVISetRasterMetadataTask.html";"2455"
"15638";"ENVISobelFilterTask";"Performs Sobel filtering: a non-linear, edge-enhancing, special-case filter that uses an approximation of the true Sobel function.";"159";"ENVISobelFilterTask.html";"2337"
"15639";"ENVISpectralAdaptiveCoherenceEstimatorUsingSubspaceBackgroundStatisticsTask";"Performs Adaptive Coherence Estimator (ACE) target detection analysis, using the mean and covariance from subspace background statistics.";"159";"ENVISpectralAdaptiveCoherenceEstimatorUsingSubspaceBackgroundStatisticsTask.html";"2156"
"16793";"ENVICalibrateRaster";"Constructs an ENVIRaster from a source raster that has been calibrated to radiance, top-of-atmosphere (TOA) reflectance, or brightness temperatures";"155";"ENVICalibrateRaster.html";"171"
"15641";"ENVIVectorMaskRasterTask";"Exports a vector mask raster to an ENVI-format file.";"159";"ENVIVectorMaskRasterTask.html";"2177"
"15642";"ENVIVectorRecordsToSeparateROITask";"Creates individual ROIs from each geometry record in a vector.";"159";"ENVIVectorRecordsToSeparateROITask.html";"1831"
"15643";"ENVIView::Chip";"Creates a new ENVIRaster from the contents of a view.";"156";"ENVIView__Chip.html";"2155"
"15644";"ENVIView::ChipToFile";"Chips the contents of a view directly to a file.";"156";"ENVIView__ChipToFile.html";"2280"
"15645";"Custom Task Base Classes";"A custom base class maps the parameters from your IDL procedure to an ENVITask.";"159";"CustomBaseClasses.html";"1154"
"15646";"Image Threshold Procedure";;"2";"ImageThresholdProcedure.html";"1167"
"15647";"Image Threshold Task Execution";;"2";"ImageThresholdTaskExecution.html";"1079"
"15648";"Max Entropy Threshold Task";;"2";"MaxEntropyThresholdTask.html";"998"
"15649";"Mean Threshold Task";;"2";"MeanThresholdTaskTemplate.html";"1016"
"15650";"Min Error Threshold Task";;"2";"MinErrorThresholdTask.html";"1085"
"15656";"Messaging";;"154";"ProgrammingGuideMessaging.html";"1985"
"15657";"Virtual Rasters";;"159";"VirtualRasterList.html";"1756"
"16436";"mggrellipsoid::cleanup";"Free resources.";"147";"mggrellipsoid__define.html#mggrellipsoid::cleanup";"0"
"16437";"mggrellipsoid::getProperty";"Get properties of the ellipsoid.";"147";"mggrellipsoid__define.html#mggrellipsoid::getProperty";"0"
"16438";"mggrellipsoid::init";"Initialize ellipsoid.";"147";"mggrellipsoid__define.html#mggrellipsoid::init";"0"
"16439";"mggrellipsoid::print";"Prints position, radius, and density of the ellipsoid for debugging purposes.";"147";"mggrellipsoid__define.html#mggrellipsoid::print";"0"
"16440";"mggrellipsoid::setProperty";"Set properties of the ellipsoid.";"147";"mggrellipsoid__define.html#mggrellipsoid::setProperty";"0"
"16441";"mggrellipsoid__define";"Define member variables.";"147";"mggrellipsoid__define.html#mggrellipsoid__define";"0"
"16442";"mggrfisheyelens::cleanup";"Free resources.";"147";"mggrfisheyelens__define.html#mggrfisheyelens::cleanup";"109"
"16443";"mggrfisheyelens::getProperty";"Get properties.";"147";"mggrfisheyelens__define.html#mggrfisheyelens::getProperty";"0"
"16444";"mggrfisheyelens::init";"Create a fisheye lens.";"147";"mggrfisheyelens__define.html#mggrfisheyelens::init";"0"
"16445";"mggrfisheyelens::setProperty";"Set properties.";"147";"mggrfisheyelens__define.html#mggrfisheyelens::setProperty";"0"
"16446";"mggrfisheyelens::update";"Update view.";"147";"mggrfisheyelens__define.html#mggrfisheyelens::update";"0"
"16447";"mggrfisheyelens__define";"Define instance variables.";"147";"mggrfisheyelens__define.html#mggrfisheyelens__define";"0"
"16448";"mggrflow::init";"Create a flow display.";"147";"mggrflow__define.html#mggrflow::init";"133"
"16449";"mggrflow__define";"Define inheritance and instance variables.";"147";"mggrflow__define.html#mggrflow__define";"0"
"16450";"mggrimagedestination::cleanup";"Free resources.";"147";"mggrimagedestination__define.html#mggrimagedestination::cleanup";"128"
"16451";"mggrimagedestination::draw";"Draw the scene.";"147";"mggrimagedestination__define.html#mggrimagedestination::draw";"0"
"16452";"mggrimagedestination::getProperty";"Get properties.";"147";"mggrimagedestination__define.html#mggrimagedestination::getProperty";"0"
"16453";"mggrimagedestination::init";"Create image destination.";"147";"mggrimagedestination__define.html#mggrimagedestination::init";"0"
"16454";"mggrimagedestination::setProperty";"Set properties.";"147";"mggrimagedestination__define.html#mggrimagedestination::setProperty";"0"
"16455";"mggrimagedestination__define";"Define instance variables.";"147";"mggrimagedestination__define.html#mggrimagedestination__define";"0"
"16456";"mggrimagefile::cleanup";"Free resources.";"147";"mggrimagefile__define.html#mggrimagefile::cleanup";"162"
"16457";"mggrimagefile::draw";"Draw the given scene to an image file.";"147";"mggrimagefile__define.html#mggrimagefile::draw";"26"
"16458";"mggrimagefile::getProperty";"Get properties of the image file destination.";"147";"mggrimagefile__define.html#mggrimagefile::getProperty";"0"
"16459";"mggrimagefile::init";"Create an image file destination.";"147";"mggrimagefile__define.html#mggrimagefile::init";"0"
"16460";"mggrimagefile::setProperty";"Set properties of the image file destination.";"147";"mggrimagefile__define.html#mggrimagefile::setProperty";"0"
"16461";"mggrimagefile__define";"Define instance variables.";"147";"mggrimagefile__define.html#mggrimagefile__define";"0"
"16462";"mggrmodel::rotate";"Rotate the model, possibly about a non-origin point.";"147";"mggrmodel__define.html#mggrmodel::rotate";"105"
"16463";"mggrmodel__define";"Define instance variables.";"147";"mggrmodel__define.html#mggrmodel__define";"0"
"16464";"mggrpalette::loadCT";"Load a Brewer color table by index.";"147";"mggrpalette__define.html#mggrpalette::loadCT";"1187"
"16465";"mggrpalette__define";"Define instance variables.";"147";"mggrpalette__define.html#mggrpalette__define";"496"
"16466";"mggrparallelanimator::animate";"Do the transition.";"147";"mggrparallelanimator__define.html#mggrparallelanimator::animate";"88"
"16467";"mggrparallelanimator::getProperty";"Get properties.";"147";"mggrparallelanimator__define.html#mggrparallelanimator::getProperty";"0"
"16468";"mggrparallelanimator::reset";"Reset the animator.";"147";"mggrparallelanimator__define.html#mggrparallelanimator::reset";"0"
"16469";"mggrparallelanimator__define";"Define the instance variables.";"147";"mggrparallelanimator__define.html#mggrparallelanimator__define";"0"
"16470";"mggrpolyline2d::init";"Create polyline object.";"147";"mggrpolyline2d__define.html#mggrpolyline2d::init";"104"
"16471";"mggrpolyline2d__define";"Define instance variables.";"147";"mggrpolyline2d__define.html#mggrpolyline2d__define";"24"
"16472";"mggrpovray::cleanup";"Free resources.";"147";"mggrpovray__define.html#mggrpovray::cleanup";"122"
"16473";"mggrpovray::draw";"Write the object graphics rooted at the specified scene or view.";"147";"mggrpovray__define.html#mggrpovray::draw";"0"
"16474";"mggrpovray::getProperty";"Get properties.";"147";"mggrpovray__define.html#mggrpovray::getProperty";"0"
"16475";"mggrpovray::init";"Create POV-Ray output destination for object graphics.";"147";"mggrpovray__define.html#mggrpovray::init";"0"
"16476";"mggrpovray::setProperty";"Set properties.";"147";"mggrpovray__define.html#mggrpovray::setProperty";"0"
"16477";"mggrpovray__define";"Define instance variables.";"147";"mggrpovray__define.html#mggrpovray__define";"0"
"16478";"mggrpovrayfinish::getProperty";"Get properties.";"147";"mggrpovrayfinish__define.html#mggrpovrayfinish::getProperty";"114"
"16479";"mggrpovrayfinish::init";"Create a finish.";"147";"mggrpovrayfinish__define.html#mggrpovrayfinish::init";"0"
"16480";"mggrpovrayfinish::setProperty";"Set properties.";"147";"mggrpovrayfinish__define.html#mggrpovrayfinish::setProperty";"34"
"16481";"mggrpovrayfinish__define";"Define instance variables.";"147";"mggrpovrayfinish__define.html#mggrpovrayfinish__define";"0"
"16482";"mggrpovraygrid::cleanup";"Free resources.";"147";"mggrpovraygrid__define.html#mggrpovraygrid::cleanup";"112"
"16483";"mggrpovraygrid::getProperty";"Get properties.";"147";"mggrpovraygrid__define.html#mggrpovraygrid::getProperty";"0"
"16484";"mggrpovraygrid::init";"Create a POV-Ray grid object.";"147";"mggrpovraygrid__define.html#mggrpovraygrid::init";"42"
"16485";"mggrpovraygrid::setProperty";"Set properties.";"147";"mggrpovraygrid__define.html#mggrpovraygrid::setProperty";"0"
"16486";"mggrpovraygrid__define";"Define instance variables.";"147";"mggrpovraygrid__define.html#mggrpovraygrid__define";"0"
"16487";"mggrpovraylight::getProperty";"Get properties.";"147";"mggrpovraylight__define.html#mggrpovraylight::getProperty";"168"
"16488";"mggrpovraylight::init";"Create a light object.";"147";"mggrpovraylight__define.html#mggrpovraylight::init";"0"
"16489";"mggrpovraylight::setProperty";"Set properties.";"147";"mggrpovraylight__define.html#mggrpovraylight::setProperty";"0"
"16490";"mggrpovraylight__define";"Define instance variables.";"147";"mggrpovraylight__define.html#mggrpovraylight__define";"0"
"16491";"mggrpovraypolygon::cleanup";"Free resources.";"147";"mggrpovraypolygon__define.html#mggrpovraypolygon::cleanup";"99"
"16492";"mggrpovraypolygon::getProperty";"Get properties.";"147";"mggrpovraypolygon__define.html#mggrpovraypolygon::getProperty";"0"
"16493";"mggrpovraypolygon::init";"Create MGgrPOVRayPolygon object.";"147";"mggrpovraypolygon__define.html#mggrpovraypolygon::init";"0"
"16494";"mggrpovraypolygon::setProperty";"Set properties.";"147";"mggrpovraypolygon__define.html#mggrpovraypolygon::setProperty";"0"
"16495";"mggrpovraypolygon__define";"Define instance variables.";"147";"mggrpovraypolygon__define.html#mggrpovraypolygon__define";"0"
"16496";"mggrpovraytubes::cleanup";"Free resources.";"147";"mggrpovraytubes__define.html#mggrpovraytubes::cleanup";"158"
"16497";"mggrpovraytubes::getProperty";"Get properties.";"147";"mggrpovraytubes__define.html#mggrpovraytubes::getProperty";"0"
"16498";"mggrpovraytubes::init";"Create a POV-Ray tube object.";"147";"mggrpovraytubes__define.html#mggrpovraytubes::init";"0"
"16499";"mggrpovraytubes::setProperty";"Set properties.";"147";"mggrpovraytubes__define.html#mggrpovraytubes::setProperty";"0"
"16500";"mggrpovraytubes__define";"Define instance variables.";"147";"mggrpovraytubes__define.html#mggrpovraytubes__define";"0"
"16501";"mggrpovrayview::getProperty";"Get properties.";"147";"mggrpovrayview__define.html#mggrpovrayview::getProperty";"141"
"16502";"mggrpovrayview::init";"Create a POV-Ray view object.";"147";"mggrpovrayview__define.html#mggrpovrayview::init";"0"
"16503";"mggrpovrayview::setProperty";"Set properties.";"147";"mggrpovrayview__define.html#mggrpovrayview::setProperty";"0"
"16504";"mggrpovrayview__define";"Define instance variables.";"147";"mggrpovrayview__define.html#mggrpovrayview__define";"0"
"16505";"mggrpovraywindow::cleanup";"Free resources.";"147";"mggrpovraywindow__define.html#mggrpovraywindow::cleanup";"94"
"16506";"mggrpovraywindow::draw";"Draws graphics hierarchy to the window using MGgrPOVRay.";"147";"mggrpovraywindow__define.html#mggrpovraywindow::draw";"0"
"16507";"mggrpovraywindow::getProperty";"Get properties.";"147";"mggrpovraywindow__define.html#mggrpovraywindow::getProperty";"0"
"16508";"mggrpovraywindow::init";"Create a MGgrPOVRayWindow instance.";"147";"mggrpovraywindow__define.html#mggrpovraywindow::init";"0"
"16509";"mggrpovraywindow::setProperty";"Set properties.";"147";"mggrpovraywindow__define.html#mggrpovraywindow::setProperty";"0"
"16510";"mggrpovraywindow__define";"Define instance variables.";"147";"mggrpovraywindow__define.html#mggrpovraywindow__define";"0"
"16511";"mggrrect::aspectRatio";"Determine aspect ratio of rectangle.";"147";"mggrrect__define.html#mggrrect::aspectRatio";"99"
"16512";"mggrrect::copy";"Make a copy of the rectangle.";"147";"mggrrect__define.html#mggrrect::copy";"0"
"16513";"mggrrect::distance";"Find the distance.";"147";"mggrrect__define.html#mggrrect::distance";"0"
"16514";"mggrrect::getProperty";"Get properties.";"147";"mggrrect__define.html#mggrrect::getProperty";"0"
"16515";"mggrrect::init";"Create rectangle.";"147";"mggrrect__define.html#mggrrect::init";"0"
"16516";"mggrrect::setProperty";"Set properties.";"147";"mggrrect__define.html#mggrrect::setProperty";"0"
"16517";"mggrrect__define";"Define instance variables.";"147";"mggrrect__define.html#mggrrect__define";"0"
"16518";"mggrrotateanimator::animate";"Do the transition.";"147";"mggrrotateanimator__define.html#mggrrotateanimator::animate";"132"
"16519";"mggrrotateanimator::init";"Create a rotate animator.";"147";"mggrrotateanimator__define.html#mggrrotateanimator::init";"0"
"16520";"mggrrotateanimator__define";"Define instance variables.";"147";"mggrrotateanimator__define.html#mggrrotateanimator__define";"0"
"16521";"mggrscaleanimator::animate";"Do the transition.";"147";"mggrscaleanimator__define.html#mggrscaleanimator::animate";"191"
"16522";"mggrscaleanimator::init";"Create a scale animator.";"147";"mggrscaleanimator__define.html#mggrscaleanimator::init";"0"
"16523";"mggrscaleanimator__define";"Define instance variables.";"147";"mggrscaleanimator__define.html#mggrscaleanimator__define";"0"
"16524";"mggrsequenceanimator::animate";"Do the transition.";"147";"mggrsequenceanimator__define.html#mggrsequenceanimator::animate";"110"
"16525";"mggrsequenceanimator::getProperty";"Get properties.";"147";"mggrsequenceanimator__define.html#mggrsequenceanimator::getProperty";"0"
"16526";"mggrsequenceanimator::reset";"Reset the animator.";"147";"mggrsequenceanimator__define.html#mggrsequenceanimator::reset";"0"
"16527";"mggrsequenceanimator__define";"Define the instance variables.";"147";"mggrsequenceanimator__define.html#mggrsequenceanimator__define";"0"
"16528";"mggrsimpletreemapmodel::cleanup";"Free resources.";"147";"mggrsimpletreemapmodel__define.html#mggrsimpletreemapmodel::cleanup";"111"
"16529";"mggrsimpletreemapmodel::getProperty";"Get properties.";"147";"mggrsimpletreemapmodel__define.html#mggrsimpletreemapmodel::getProperty";"0"
"16530";"mggrsimpletreemapmodel::init";"Create simple treemap model.";"147";"mggrsimpletreemapmodel__define.html#mggrsimpletreemapmodel::init";"0"
"16531";"mggrsimpletreemapmodel::setProperty";"Set properties.";"147";"mggrsimpletreemapmodel__define.html#mggrsimpletreemapmodel::setProperty";"0"
"16532";"mggrsimpletreemapmodel__define";"Define instance variables.";"147";"mggrsimpletreemapmodel__define.html#mggrsimpletreemapmodel__define";"0"
"16533";"mggrslicetreemaplayout__define";"Define instance variables.";"147";"mggrslicetreemaplayout__define.html#mggrslicetreemaplayout__define";"70"
"16534";"mggrslicetreemaplayout__layoutBest";"Layout.";"147";"mggrslicetreemaplayout__define.html#mggrslicetreemaplayout__layoutBest";"0"
"16535";"mggrsquarifiedtreemaplayout::aspect";"Calculate aspect ratio.";"147";"mggrsquarifiedtreemaplayout__define.html#mggrsquarifiedtreemaplayout::aspect";"83"
"16536";"mggrsquarifiedtreemaplayout::cleanup";"Free resources.";"147";"mggrsquarifiedtreemaplayout__define.html#mggrsquarifiedtreemaplayout::cleanup";"0"
"16537";"mggrsquarifiedtreemaplayout::getProperty";"Get properties.";"147";"mggrsquarifiedtreemaplayout__define.html#mggrsquarifiedtreemaplayout::getProperty";"0"
"16538";"mggrsquarifiedtreemaplayout::init";"Create squarified treemap layout object.";"147";"mggrsquarifiedtreemaplayout__define.html#mggrsquarifiedtreemaplayout::init";"0"
"16539";"mggrsquarifiedtreemaplayout::layout";"Layout.";"147";"mggrsquarifiedtreemaplayout__define.html#mggrsquarifiedtreemaplayout::layout";"0"
"16540";"mggrsquarifiedtreemaplayout::normAspect";"Calculate value which normalizes aspect ratios less than 1, or aspect ratio itself if bigger than 1.";"147";"mggrsquarifiedtreemaplayout__define.html#mggrsquarifiedtreemaplayout::normAspect";"0"
"16541";"mggrsquarifiedtreemaplayout::setProperty";"Set properties.";"147";"mggrsquarifiedtreemaplayout__define.html#mggrsquarifiedtreemaplayout::setProperty";"0"
"16542";"mggrsquarifiedtreemaplayout::sum";"Find total size of items.";"147";"mggrsquarifiedtreemaplayout__define.html#mggrsquarifiedtreemaplayout::sum";"0"
"16543";"mggrsquarifiedtreemaplayout__define";"Define instance variables.";"147";"mggrsquarifiedtreemaplayout__define.html#mggrsquarifiedtreemaplayout__define";"0"
"16544";"mggrsvg::cleanup";"Free resources.";"147";"mggrsvg__define.html#mggrsvg::cleanup";"84"
"16545";"mggrsvg::draw";"Write the object graphics rooted at the specified scene or view.";"147";"mggrsvg__define.html#mggrsvg::draw";"0"
"16546";"mggrsvg::getProperty";"Get properties.";"147";"mggrsvg__define.html#mggrsvg::getProperty";"43"
"16547";"mggrsvg::init";"Create an SVG destination.";"147";"mggrsvg__define.html#mggrsvg::init";"0"
"16548";"mggrsvg::setProperty";"Set properties.";"147";"mggrsvg__define.html#mggrsvg::setProperty";"0"
"16549";"mggrsvg__define";"Define instance variables.";"147";"mggrsvg__define.html#mggrsvg__define";"0"
"16550";"mggrtransformanimator::animate";"Do the transition.";"147";"mggrtransformanimator__define.html#mggrtransformanimator::animate";"92"
"16551";"mggrtransformanimator::init";"Create a transform animator.";"147";"mggrtransformanimator__define.html#mggrtransformanimator::init";"0"
"16552";"mggrtransformanimator__define";"Define instance variables.";"147";"mggrtransformanimator__define.html#mggrtransformanimator__define";"0"
"16553";"mggrtranslateanimator::animate";"Do the transition.";"147";"mggrtranslateanimator__define.html#mggrtranslateanimator::animate";"95"
"16554";"mggrtranslateanimator::init";"Create a translate animator.";"147";"mggrtranslateanimator__define.html#mggrtranslateanimator::init";"0"
"16555";"mggrtranslateanimator__define";"Define instance variables.";"147";"mggrtranslateanimator__define.html#mggrtranslateanimator__define";"0"
"16556";"mggrtreemapitem::cleanup";"Free resources.";"147";"mggrtreemapitem__define.html#mggrtreemapitem::cleanup";"93"
"16557";"mggrtreemapitem::getProperty";"Get properties.";"147";"mggrtreemapitem__define.html#mggrtreemapitem::getProperty";"0"
"16558";"mggrtreemapitem::init";"Create treemap item object.";"147";"mggrtreemapitem__define.html#mggrtreemapitem::init";"0"
"16559";"mggrtreemapitem::setProperty";"Set properties.";"147";"mggrtreemapitem__define.html#mggrtreemapitem::setProperty";"0"
"16560";"mggrtreemapitem__define";"Define instance variables.";"147";"mggrtreemapitem__define.html#mggrtreemapitem__define";"0"
"16561";"mggrtreemaplayout::getProperty";"Get properties.";"147";"mggrtreemaplayout__define.html#mggrtreemaplayout::getProperty";"91"
"16562";"mggrtreemaplayout::layout";"Layout items.";"147";"mggrtreemaplayout__define.html#mggrtreemaplayout::layout";"0"
"16563";"mggrtreemaplayout__define";"Define instance variables.";"147";"mggrtreemaplayout__define.html#mggrtreemaplayout__define";"0"
"16564";"mggrtreemapmodel::cleanup";"Free resources.";"147";"mggrtreemapmodel__define.html#mggrtreemapmodel::cleanup";"103"
"16565";"mggrtreemapmodel::init";"Create treemap model object.";"147";"mggrtreemapmodel__define.html#mggrtreemapmodel::init";"0"
"16566";"mggrtreemapmodel__define";"Define instance variables.";"147";"mggrtreemapmodel__define.html#mggrtreemapmodel__define";"0"
"16567";"mggrwindow3d::cleanup";"Free resources.";"147";"mggrwindow3d__define.html#mggrwindow3d::cleanup";"125"
"16568";"mggrwindow3d::draw";"Draw the picture in 3D.";"147";"mggrwindow3d__define.html#mggrwindow3d::draw";"0"
"16569";"mggrwindow3d::getProperty";"Get properties of the MGgrWindow3D.";"147";"mggrwindow3d__define.html#mggrwindow3d::getProperty";"0"
"16570";"mggrwindow3d::init";"Initialize Window3D object.";"147";"mggrwindow3d__define.html#mggrwindow3d::init";"0"
"16571";"mggrwindow3d::setProperty";"Set properties of the MGgrWindow3D.";"147";"mggrwindow3d__define.html#mggrwindow3d::setProperty";"0"
"16572";"mggrwindow3d__define";"Destination for object graphics that automatically creates a 3d anaglyph appropriate to view with red-blue glasses.";"147";"mggrwindow3d__define.html#mggrwindow3d__define";"0"
"16573";"mggrx3d::cleanup";"Free resources.";"147";"mggrx3d__define.html#mggrx3d::cleanup";"97"
"16574";"mggrx3d::draw";"Draw the given scene and send its output to the file specified by the FILENAME property.";"147";"mggrx3d__define.html#mggrx3d::draw";"0"
"16575";"mggrx3d::getProperty";"Retrieve properties.";"147";"mggrx3d__define.html#mggrx3d::getProperty";"0"
"16576";"mggrx3d::init";"Retrieve properties.";"147";"mggrx3d__define.html#mggrx3d::init";"0"
"16577";"mggrx3d::setProperty";"Set properties.";"147";"mggrx3d__define.html#mggrx3d::setProperty";"0"
"16578";"mggrx3d__define";"Define instance variables.";"147";"mggrx3d__define.html#mggrx3d__define";"0"
"16579";"mgnetgvoice::cleanup";"Cleanup resources.";"147";"mgnetgvoice__define.html#mgnetgvoice::cleanup";"215"
"16580";"mgnetgvoice::init";"Initialize MGnetGVoice.";"147";"mgnetgvoice__define.html#mgnetgvoice::init";"0"
"16581";"mgnetgvoice::login";"Login to Google Voice.";"147";"mgnetgvoice__define.html#mgnetgvoice::login";"0"
"16582";"mgnetgvoice::logout";"Logout of Google Voice.";"147";"mgnetgvoice__define.html#mgnetgvoice::logout";"0"
"16583";"mgnetgvoice::send_sms";"Send SMS.";"147";"mgnetgvoice__define.html#mgnetgvoice::send_sms";"0"
"16584";"mgnetgvoice::setProperty";"Set properties.";"147";"mgnetgvoice__define.html#mgnetgvoice::setProperty";"0"
"16585";"mgnetgvoice__define";"Define instance variables.";"147";"mgnetgvoice__define.html#mgnetgvoice__define";"0"
"16586";"mgnetrequest::_initializeHeaders";"Add some default headers that are always present (but can be changed).";"147";"mgnetrequest__define.html#mgnetrequest::_initializeHeaders";"148"
"16587";"mgnetrequest::_printf";"Sends its output to the given socket LUN and, if self.debug is set, to standard output.";"147";"mgnetrequest__define.html#mgnetrequest::_printf";"0"
"16588";"mgnetrequest::_send";"General method for sending a request.";"147";"mgnetrequest__define.html#mgnetrequest::_send";"0"
"16589";"mgnetrequest::_sendNetUrl";"Connect via IDLnetURL instead of SOCKET.";"147";"mgnetrequest__define.html#mgnetrequest::_sendNetUrl";"0"
"16590";"mgnetrequest::addHeader";"Add a header field to the request.";"147";"mgnetrequest__define.html#mgnetrequest::addHeader";"0"
"16591";"mgnetrequest::cleanup";"Free resources.";"147";"mgnetrequest__define.html#mgnetrequest::cleanup";"0"
"16592";"mgnetrequest::connect";"Send a CONNECT request.";"147";"mgnetrequest__define.html#mgnetrequest::connect";"0"
"16593";"mgnetrequest::delete";"Send a DELETE request.";"147";"mgnetrequest__define.html#mgnetrequest::delete";"0"
"16594";"mgnetrequest::get";"Send a GET request.";"147";"mgnetrequest__define.html#mgnetrequest::get";"0"
"16595";"mgnetrequest::getProperty";"Get property values.";"147";"mgnetrequest__define.html#mgnetrequest::getProperty";"0"
"16596";"mgnetrequest::head";"Send a HEAD request.";"147";"mgnetrequest__define.html#mgnetrequest::head";"0"
"16597";"mgnetrequest::init";"Create a request object.";"147";"mgnetrequest__define.html#mgnetrequest::init";"0"
"16598";"mgnetrequest::options";"Send a OPTIONS request.";"147";"mgnetrequest__define.html#mgnetrequest::options";"0"
"16599";"mgnetrequest::post";"Send a POST request.";"147";"mgnetrequest__define.html#mgnetrequest::post";"0"
"16600";"mgnetrequest::put";"Send a PUT request.";"147";"mgnetrequest__define.html#mgnetrequest::put";"0"
"16601";"mgnetrequest::setProperty";"Set property values.";"147";"mgnetrequest__define.html#mgnetrequest::setProperty";"0"
"16602";"mgnetrequest::trace";"Send a TRACE request.";"147";"mgnetrequest__define.html#mgnetrequest::trace";"0"
"16603";"mgnetrequest__define";"Define instance variables.";"147";"mgnetrequest__define.html#mgnetrequest__define";"0"
"16604";"mgnetsocket::accept";"Accepts a requested TCP/IP connection and returns an MGnetSocket on which I/O can be performed.";"147";"mgnetsocket__define.html#mgnetsocket::accept";"379"
"16605";"mgnetsocket::check";"Return the number of bytes waiting in the socket buffer.";"147";"mgnetsocket__define.html#mgnetsocket::check";"0"
"16606";"mgnetsocket::cleanup";"Free resources held by the socket object.";"147";"mgnetsocket__define.html#mgnetsocket::cleanup";"0"
"16607";"mgnetsocket::close";"Close a socket.";"147";"mgnetsocket__define.html#mgnetsocket::close";"0"
"16608";"mgnetsocket::connect";"Connect to a TCP socket listener on a specified host and port or  opens a UDP socket and sets its default destination host and port.";"147";"mgnetsocket__define.html#mgnetsocket::connect";"0"
"16609";"mgnetsocket::createPort";"Creates a socket listening on the specified port.";"147";"mgnetsocket__define.html#mgnetsocket::createPort";"0"
"16610";"mgnetsocket::getProperty";"Get properties of the socket.";"147";"mgnetsocket__define.html#mgnetsocket::getProperty";"0"
"16611";"mgnetsocket::host2Name";"Return a hostname as string given a ULONG host ID.";"147";"mgnetsocket__define.html#mgnetsocket::host2Name";"0"
"16612";"mgnetsocket::init";"Create a socket object.";"147";"mgnetsocket__define.html#mgnetsocket::init";"0"
"16613";"mgnetsocket::name2Host";"Return a host ID as ULONG given a string hostname.";"147";"mgnetsocket__define.html#mgnetsocket::name2Host";"0"
"16614";"mgnetsocket::readBuffer";"Return data stored in the local (object's) buffer.";"147";"mgnetsocket__define.html#mgnetsocket::readBuffer";"0"
"16615";"mgnetsocket::receive";"Receive data.";"147";"mgnetsocket__define.html#mgnetsocket::receive";"0"
"16616";"mgnetsocket::send";"Send data.";"147";"mgnetsocket__define.html#mgnetsocket::send";"0"
"16617";"mgnetsocket::sendTo";"Send data to a specified host and port.";"147";"mgnetsocket__define.html#mgnetsocket::sendTo";"0"
"16618";"mgnetsocket::setProperty";"Set properties of the socket.";"147";"mgnetsocket__define.html#mgnetsocket::setProperty";"0"
"16619";"mgnetsocket__define";"Defines instance variables.";"147";"mgnetsocket__define.html#mgnetsocket__define";"0"
"16620";"mgneturlquoter::init";"Create a quoter object.";"147";"mgneturlquoter__define.html#mgneturlquoter::init";"91"
"16621";"mgneturlquoter::quote";"Convert special characters in str using the %xx escape sequence.";"147";"mgneturlquoter__define.html#mgneturlquoter::quote";"0"
"16622";"mgneturlquoter::quotePlus";"Similar to the quote method, but converts spaces to + signs instead of the normal %xx notation.";"147";"mgneturlquoter__define.html#mgneturlquoter::quotePlus";"0"
"16623";"mgneturlquoter::unquote";"Replace %xx escape sequences by their single-character equivalent.";"147";"mgneturlquoter__define.html#mgneturlquoter::unquote";"0"
"16624";"mgneturlquoter::unquotePlus";"Replace %xx escape sequences by their single-character equivalent and replace + sign with space.";"147";"mgneturlquoter__define.html#mgneturlquoter::unquotePlus";"0"
"16625";"mgneturlquoter__define";"Define instance variables.";"147";"mgneturlquoter__define.html#mgneturlquoter__define";"0"
"16626";"mgtmdocbook__define";"Define MGtmDocbook class for processing Docbook markup.";"147";"mgtmdocbook__define.html#mgtmdocbook__define";"75"
"16627";"mgtmhtml::markup_listing";"Add markup to specify prompts and output as opposed to input.";"147";"mgtmhtml__define.html#mgtmhtml::markup_listing";"84"
"16628";"mgtmhtml__define";"Define MGtmHTML class for processing HTML.";"147";"mgtmhtml__define.html#mgtmhtml__define";"0"
"16629";"mgtmlanguage::_textMerge";"Merges two string arrays into a single string array where the last line of the first and first line of the second are concatenated onto a single line in the middle of the result.";"147";"mgtmlanguage__define.html#mgtmlanguage::_textMerge";"100"
"16630";"mgtmlanguage::markup_listing";"Add markup to specify prompts and output as opposed to input.";"147";"mgtmlanguage__define.html#mgtmlanguage::markup_listing";"0"
"16631";"mgtmlanguage::process";"Process a MGtmNode tree of markup to produce a string array of the result.";"147";"mgtmlanguage__define.html#mgtmlanguage::process";"0"
"16632";"mgtmlanguage__define";"Parent class for all markup language definitions.";"147";"mgtmlanguage__define.html#mgtmlanguage__define";"0"
"16633";"mgtmlatex__define";"Define MGtmLaTeX class for processing LaTeX.";"147";"mgtmlatex__define.html#mgtmlatex__define";"97"
"16634";"mgtmnode::_clone";"Implement cloning.";"147";"mgtmnode__define.html#mgtmnode::_clone";"172"
"16635";"mgtmnode::_print";"Interface that MGtmTag and MGtmText should implement.";"147";"mgtmnode__define.html#mgtmnode::_print";"0"
"16636";"mgtmnode::cleanup";"Free resources of node.";"147";"mgtmnode__define.html#mgtmnode::cleanup";"0"
"16637";"mgtmnode::getProperty";"Get properties of the node.";"147";"mgtmnode__define.html#mgtmnode::getProperty";"0"
"16638";"mgtmnode::init";"Create a node in the markup tree.";"147";"mgtmnode__define.html#mgtmnode::init";"0"
"16639";"mgtmnode__define";"Node representing text or markup of some kind.";"147";"mgtmnode__define.html#mgtmnode__define";"0"
"16640";"mgtmplain__define";"Define MGtmPlain class for producing plain output.";"147";"mgtmplain__define.html#mgtmplain__define";"80"
"16641";"mgtmrst__define";"Define MGtmRST class for processing restructured text.";"147";"mgtmrst__define.html#mgtmrst__define";"142"
"16642";"mgtmtag::_clone";"Implement cloning.";"147";"mgtmtag__define.html#mgtmtag::_clone";"105"
"16643";"mgtmtag::_print";"Helper routine for debugging.";"147";"mgtmtag__define.html#mgtmtag::_print";"0"
"16644";"mgtmtag::addAttribute";"Add an attribute to the tag.";"147";"mgtmtag__define.html#mgtmtag::addAttribute";"0"
"16645";"mgtmtag::addChild";"Add a child to the node.";"147";"mgtmtag__define.html#mgtmtag::addChild";"0"
"16646";"mgtmtag::cleanup";"Free resources.";"147";"mgtmtag__define.html#mgtmtag::cleanup";"0"
"16647";"mgtmtag::getAttribute";"Get the value of an attribute.";"147";"mgtmtag__define.html#mgtmtag::getAttribute";"0"
"16648";"mgtmtag::getChild";"Get child at pos of the node.";"147";"mgtmtag__define.html#mgtmtag::getChild";"0"
"16649";"mgtmtag::getProperty";"Get properties of the text node.";"147";"mgtmtag__define.html#mgtmtag::getProperty";"0"
"16650";"mgtmtag::init";"Create a markup tag node.";"147";"mgtmtag__define.html#mgtmtag::init";"0"
"16651";"mgtmtag::isEmpty";"Indicates if this tag has any children.";"147";"mgtmtag__define.html#mgtmtag::isEmpty";"0"
"16652";"mgtmtag::removeChild";"Remove a child from the node.";"147";"mgtmtag__define.html#mgtmtag::removeChild";"0"
"16653";"mgtmtag__define";"Define a tag node.";"147";"mgtmtag__define.html#mgtmtag__define";"0"
"16654";"mgtmtext::_clone";"Implement cloning.";"147";"mgtmtext__define.html#mgtmtext::_clone";"133"
"16655";"mgtmtext::_print";"Helper routine for debugging.";"147";"mgtmtext__define.html#mgtmtext::_print";"0"
"16656";"mgtmtext::cleanup";"Free resources of the text node.";"147";"mgtmtext__define.html#mgtmtext::cleanup";"0"
"16657";"mgtmtext::getProperty";"Get properties of the text node.";"147";"mgtmtext__define.html#mgtmtext::getProperty";"0"
"16658";"mgtmtext::init";"Creates a text node.";"147";"mgtmtext__define.html#mgtmtext::init";"0"
"16659";"mgtmtext::isBlank";"Indicates whether this is a blank line.";"147";"mgtmtext__define.html#mgtmtext::isBlank";"0"
"16660";"mgtmtext__define";"Defines MGtmText which is a MGtmNode that contains text.";"147";"mgtmtext__define.html#mgtmtext__define";"0"
"16661";"mgwidobjectwidget::cleanup";"Cleanup resources.";"147";"mgwidobjectwidget__define.html#mgwidobjectwidget::cleanup";"94"
"16662";"mgwidobjectwidget::cleanup_widgets";"Called when the widget program is being destroyed.";"147";"mgwidobjectwidget__define.html#mgwidobjectwidget::cleanup_widgets";"0"
"16663";"mgwidobjectwidget::create_widgets";"Create widget hierarchy.";"147";"mgwidobjectwidget__define.html#mgwidobjectwidget::create_widgets";"0"
"16664";"mgwidobjectwidget::getProperty";"Get properties of the object widget.";"147";"mgwidobjectwidget__define.html#mgwidobjectwidget::getProperty";"0"
"16665";"mgwidobjectwidget::handle_events";"Event handler for all widgets in the program.";"147";"mgwidobjectwidget__define.html#mgwidobjectwidget::handle_events";"0"
"16666";"mgwidobjectwidget::init";"Create on object widget.";"147";"mgwidobjectwidget__define.html#mgwidobjectwidget::init";"0"
"16667";"mgwidobjectwidget::realize_widgets";"Override in subclasses to do actions that must be done after realization.";"147";"mgwidobjectwidget__define.html#mgwidobjectwidget::realize_widgets";"0"
"16668";"mgwidobjectwidget::setProperty";"Set properties of the object widget.";"147";"mgwidobjectwidget__define.html#mgwidobjectwidget::setProperty";"0"
"16669";"mgwidobjectwidget::start_xmanager";"Start XMANAGER.";"147";"mgwidobjectwidget__define.html#mgwidobjectwidget::start_xmanager";"0"
"16670";"mgwidobjectwidget__define";"Define member variables.";"147";"mgwidobjectwidget__define.html#mgwidobjectwidget__define";"0"
"16671";"more";"Page the contents of the filename to the screen.";"147";"more.html#more";"0"
"16672";"pwd";"Prints the IDL's current directory to the output log like the UNIX command of the same name.";"147";"pwd.html#pwd";"0"
"16673";"readScalarsAttribute";"Reads a scalars attribute.";"147";"mgffserialvtk__define.html#readScalarsAttribute";"0"
"16677";"IDL IPython Notebook Kernel";;"135";"IDL_Kernel.html";"4252"
"16678";"ENVI_FILE_MNG";"This procedure is used to manage ENVI Classic files in memory and on disk.";"160";"ENVI_FILE_MNG.html";"2062"
"16679";"ENVI_GET_CONFIGURATION_VALUES";"Returns an anonymous structure of the current ENVI Classic configuration settings for ENVI Classic only.";"154";"ENVI_GET_CONFIGURATION_VALUES.html";"826"
"16680";"ENVI_GET_FILE_IDS";"Returns an array of file IDs for all open ENVI Classic files.";"155";"ENVI_GET_FILE_IDS.html";"1095"
"16681";"ENVI_OUTPUT_TO_EXTERNAL_FORMAT";"Outputs image data to external formats.";"155";"ENVI_OUTPUT_TO_EXTERNAL_FORMAT.html";"1789"
"16682";"ENVI_SMACC_DOIT";"Performs Sequential Maximum Angle Convex Cone (SMACC) processing.";"159";"ENVI_SMACC_DOIT.html";"1199"
"16683";"MNF_INV_DOIT";"Perform an inverse Minimum Noise Fraction (MNF) transform.";"159";"MNF_INV_DOIT.html";"1150"
"16684";"ENVICoordSys::Dehydrate";"Returns a hash describing the object.";"155";"ENVICoordSys__Dehydrate.html";"1636"
"16685";"ENVIGCPSet::Dehydrate";"Returns a hash describing this object.";"155";"ENVIGCPSet__Dehydrate.html";"1687"
"16686";"ENVIGridDefinition::Dehydrate";"Returns a hash describing this object.";"155";"ENVIGridDefinition__Dehydrate.html";"1234"
"16687";"ENVIHydratable";"This is an abstract interface class that is subclassed by any class that wants to support serialization to a hash representation.";"155";"ENVIHydratable.html";"1526"
"16688";"ENVIHydratable::Dehydrate";"Returns a hash describing this object.";"155";"ENVIHydratable__Dehydrate.html";"1421"
"16689";"ENVIHydrate";"Creates an ENVI object from a hash description of its properties instead of using their dedicated routines.";"155";"ENVIHydrate.html";"1728"
"16690";"ENVIMessage";"Abstract class used as a superclass for other message classes.";"154";"ENVIMessage.html";"0"
"17030";"User Interface Elements";;"159";"UserInterfaceElements.html";"129"
"16692";"ENVINITFMetadata";"Returns an IDL dictionary of NITF metadata from a specified NITF raster.";"155";"ENVINITFMetadata.html";"2127"
"16693";"NITF API Metadata Background";;"155";"NITF_API_Metadata_Background.html";"1457"
"16694";"ENVIPixelwiseBandMathRaster";"Constructs an ENVIRaster from a source raster that has a simple mathematical expression applied on a pixel-by-pixel basis.";"155";"ENVIPixelwiseBandMathRaster.html";"1390"
"16695";"ENVIPseudoRasterSpatialRef::Dehydrate";"Returns a hash describing this object.";"155";"ENVIPseudoRasterSpatialRef__Dehydrate.html";"1484"
"16696";"ENVIRPCRasterSpatialRef::Dehydrate";"Returns a hash describing this object.";"155";"ENVIRPCRasterSpatialRef__Dehydrate.html";"1258"
"16697";"ENVIRasterLayer::Export";"Saves a raster layer to an image format.";"156";"enviRasterLayer__Export.html";"1332"
"16698";"ENVIRasterMetadata::Dehydrate";"Returns a hash describing this object.";"155";"ENVIRasterMetadata__Dehydrate.html";"1298"
"16699";"ENVIRasterMetadata::HasTag";"Checks if a specified metadata field exists.";"155";"ENVIRasterMetadata__HasTag.html";"1675"
"16700";"ENVIRasterSeries::Dehydrate";"Returns a hash describing this object.";"155";"ENVIRasterSeries__Dehydrate.html";"1486"
"16701";"ENVIRaster::Dehydrate";"Returns a hash describing this object.";"155";"ENVIRaster__Dehydrate.html";"1498"
"16702";"ENVIROI::Dehydrate";"Returns a hash describing this object.";"155";"ENVIRoi__Dehydrate.html";"1453"
"16703";"ENVISpectralLibrary::Dehydrate";"Returns a hash describing this object.";"155";"ENVISpectralLibrary__Dehydrate.html";"1468"
"16704";"ENVIStandardRasterSpatialRef::Dehydrate";"Returns a hash describing this object.";"155";"ENVIStandardRasterSpatialRef__Dehydrate.html";"1463"
"17031";"Classification Routines";;"173";"ClassificationRoutines.html";"100"
"16706";"ENVIGenerateGCPsFromReferenceImageTask";"Generates ground control points (GCPs) for an input raster by matching and using the geographic coordinates of a reference image.";"159";"ENVIGenerateGCPsFromReferenceImageTask.html";"1535"
"16707";"ENVIGenerateGCPsFromTiePointsTask";"Generates two sets of ground control points (GCPs) from input tie points.";"159";"ENVIGenerateGCPsFromTiePointsTask.html";"1510"
"16708";"ENVIRPCOrthorectificationUsingReferenceImageTask";"Performs a refined RPC orthorectification by automatically generating ground control points (GCPs) from a reference image.";"159";"ENVIRPCOrthorectificationUsingReferenceImageTask.html";"1402"
"16709";"ENVIRadiometricCalibrationTask";"Calibrates an image to radiance, top-of-atmosphere reflectance, or brightness temperatures.";"159";"ENVIRadiometricCalibrationTask.html";"7225"
"16710";"ENVIRegisterRasterWithGeoServerTask";"Registers a raster with a GeoServer so that it can be rendered on a web client.";"159";"ENVIRegisterRasterWithGeoServerTask.html";"1289"
"16711";"ENVIRegisterVectorWithGeoServerTask";"Registers a vector with an OGC server so that it can be rendered on a web client.";"159";"ENVIRegisterVectorWithGeoServerTask.html";"1157"
"16712";"ENVISpectralSubspaceBackgroundStatisticsTask";"Computes background statistics by excluding anomalous pixels.";"159";"ENVISpectralSubspaceBackgroundStatisticsTask.html";"1868"
"16713";"ENVITiePointSet::Dehydrate";"Returns a hash describing this object.";"155";"ENVITiePointSet__Dehydrate.html";"1423"
"16714";"ENVITime::Dehydrate";"Returns a hash describing this object.";"155";"ENVITime__Dehydrate.html";"1222"
"16715";"ENVIURLRaster";"Creates a new ENVIRaster from a file or uniform resource indicator (URI).";"155";"ENVIURLRaster.html";"1451"
"16716";"ENVIVector::Dehydrate";"Returns a hash describing this object.";"155";"ENVIVector__Dehydrate.html";"1156"
"16717";"ENVIView::Export";"Exports all contents of a view to an RGB 24-bit image file.";"156";"ENVIView__Export.html";"1630"
"16718";"GeoServer Configuration Template";;"2";"GeoServerConfigurationTemplate.html";"799"
"16719";"E3DLasHeader";"Contains the information read from the LAS file header.";"157";"E3DLasHeader.html";"1232"
"16720";"E3DLidar";"Reference to a lidar object.";"157";"E3DLidar.html";"1357"
"16721";"E3DLidarPointFilter";"Used to filter the point data that will be returned from the point query methods of the E3DLidar object.";"157";"E3DLidarPointFilter.html";"1414"
"16722";"E3DLidarSpatialRef";"An E3DLidarSpatialRef object can be created directly, or it can be retrieved though the SPATIALREF property of E3DLidar.";"157";"E3DLidarSpatialRef.html";"1379"
"16723";"E3DLidar::Close";"Closes the E3DLidar for reading and closes it in the ENVI LiDAR application if it is open.";"157";"E3DLidar__Close.html";"1162"
"16724";"E3DLidar::GetDataRange";"Returns a six-element array containing the boundary of the entire data space.";"157";"E3DLidar__GetDataRange.html";"1391"
"16725";"E3DLidar::GetLasHeader";"Returns E3DLasHeader objects populated with the header information from existing LAS files.";"157";"E3DLidar__GetLasHeader.html";"1339"
"16726";"E3DLidar::GetPointsInCircle";"Returns the points that lie within the circle region.";"157";"E3DLidar__GetPointsInCircle.html";"1169"
"16727";"E3DLidar::GetPointsInPolygon";"Returns points that lie within the polygon region.";"157";"E3DLidar__GetPointsInPolygon.html";"1278"
"16728";"E3DLidar::GetPointsInRange";"Returns unsorted points from the dataset.";"157";"E3DLidar__GetPointsInRange.html";"1217"
"16729";"E3DLidar::GetPointsInRect";"Returns the points that lie within the rectangular region.";"157";"E3DLidar__GetPointsInRect.html";"1288"
"16730";"E3DLidar::GetPointsInTile";"Returns the points that lie within the specified tile.";"157";"E3DLidar__GetPointsInTile.html";"1527"
"16731";"E3DLidar::Init";"Initializes the E3DLidar object.";"157";"E3DLidar__Init.html";"1254"
"16732";"E3DLidar::Save";"Closes the E3DLidar for writing and converts it to read-only, DIRECT_READ mode.";"157";"E3DLidar__Save.html";"1105"
"16733";"E3DLidar::WritePoints";"Writes points to a new .las file.";"157";"E3DLidar__WritePoints.html";"1479"
"16734";"E3DProductionParameters";"Allows inspection and modification of the automated feature extraction production parameters.";"157";"E3DProductionParameters.html";"1557"
"16735";"E3DProductionParameters::Save";"Saves changes to the production parameters.";"157";"E3DProductionParameters__Save.html";"1042"
"16736";"E3DProductsInfo";"Stores the fully-qualified file names for all products generated by ENVI LiDAR processing.";"157";"E3DProductsInfo.html";"1103"
"16737";"E3De";"Reference to an ENVI LiDAR object that is the currently-running application.";"157";"E3De.html";"1804"
"16738";"E3De::AddAnnotation";"Adds a text annotation to the display.";"157";"E3De__AddAnnotation.html";"1333"
"16739";"E3De::AddExtension";"Allows a Toolbox extension to rename the entry in the extensions folder, and optionally to place the Toolbox entry inside a user-defined folder structure.";"157";"E3De__AddExtension.html";"1172"
"16740";"E3De::Close";"Closes ENVI LiDAR.";"157";"E3De__Close.html";"1219"
"16741";"E3De::CreateLidarFromSubrect";"Allows the user to create a spatial subset of a LiDAR dataset.";"157";"E3De__CreateLidarFromSubrect.html";"1163"
"16742";"E3De::DeleteAnnotation";"Deletes a text annotation from the display.";"157";"E3De__DeleteAnnotation.html";"1381"
"16743";"E3De::DisplayShapefile";"Opens a shapefile in the ENVI LiDAR application.";"157";"E3De__DisplayShapefile.html";"1177"
"16744";"E3De::GenerateProducts";"Generates products from LiDAR data.";"157";"E3De__GenerateProducts.html";"1319"
"16745";"E3De::GetOpenData";"Returns a reference to an E3DLidar object that is already open.";"157";"E3De__GetOpenData.html";"1218"
"16746";"E3De::GetProductionParameters";"Returns an E3DProductionParameters object which can be modified and passed to E3De::GenerateProducts.";"157";"E3De__GetProductionParameters.html";"1272"
"16747";"E3De::GetProductsInfo";"Returns an E3DProductsInfo object which contains the fully-qualified file names for all the products generated by ENVI LiDAR processing.";"157";"E3De__GetProductsInfo.html";"1261"
"16748";"E3De::GetViewExtents";"Returns the extent of the region visible in the Main window.";"157";"E3De__GetViewExtents.html";"1143"
"16749";"E3De::OpenLidar";"Opens one or more LAS files.";"157";"E3De__OpenLidar.html";"1852"
"16750";"E3De::SetProgress";"Sets the value of the progress bar.";"157";"E3De__SetProgress.html";"1258"
"16751";"E3De::SetViewExtents";"Enables the user to set the extents of the region visible in the Main window";"157";"E3De__SetViewExtents.html";"1222"
"16752";"ImageThresholdClass";;"2";"ImageThresholdClass.html";"672"
"16753";"ENVI&#160;API Frequently Asked Questions";;"2";"ProgrammingGuideFAQ.html";"2751"
"16754";"What's New in IDL 8.5";;"135";"Whats_New_8_5.html";"2308"
"16755";"IDLnetURL::URLDecode";"Decodes a string using 'percent encoding' to remove escaped characters.";"73";"IDLnetURL__URLDecode.html";"766"
"16756";"IDLnetURL::URLEncode";"Encodes a string using 'percent encoding' to escape reserved characters.";"73";"IDLnetURL__URLEncode.html";"799"
"16757";"FILE_MODTIME";"Returns the modification time of the specified file or files.";"35";"FILE_MODTIME.html";"1152"
"16758";"HDF_VG_ATTRFIND";"Returns an attribute's index number given the name of an attribute associated with the specified VGroup.";"103";"HDF_VG_ATTRFIND.html";"763"
"16759";"HDF_VG_ATTRGET";"Retrieves the data within a VGroup's attribute.";"103";"HDF_VG_ATTRGET.html";"809"
"16760";"HDF_VG_ATTRINFO";"Retrieves attribute information from an HDF VGroup.";"103";"HDF_VG_ATTRINFO.html";"802"
"16761";"HDF_VG_ATTRSET";"Writes a VGroup attribute to the currently attached HDF VGroup structure.";"103";"HDF_VG_ATTRSET.html";"784"
"16762";"About ENVI";;"136";"AboutENVI.html";"1766"
"16763";"Calculate Viewshed Analysis";;"136";"LidarViewshedAnalysis.html";"1643"
"16764";"Introduction to ENVI LiDAR";;"136";"IntroductionLidar.html";"3125"
"16765";"Stretch Types Background";;"136";"BackgroundStretchTypes.html";"2461"
"16766";"Toolbox";;"136";"Toolbox.html";"31"
"16767";"Create Segmentation Images";;"136";"CreatingSegmentationImages.html";"2061"
"16768";"Generate GCPs from Reference Image";;"136";"GenerateGCPsFromReferenceImage.html";"1812"
"16769";"RPC Orthorectification Using Reference Image";;"136";"RPCOrthorectificationUsingReferenceImage.html";"1847"
"16770";"2D Scatter Plots";;"136";"2DScatterPlotsClassic.html";"1349"
"16771";"Enter Pixel Size";;"136";"EnterPixelSize.html";"37"
"16772";"Interactive Stretching";;"136";"InteractiveStretchingClassic.html";"1028"
"16773";"Overlay Annotations";;"136";"OverlayingAnnotations.html";"547"
"16774";"Overlay Classes";;"136";"OverlayingClassesDisplayGroups.html";"182"
"16775";"Overlay Contours";;"136";"OverlayingContoursDisplayGroups.html";"290"
"16776";"Overlay Density Slices";;"136";"OverlayingDensitySliceDisplayGroups.html";"679"
"16778";"Overlay ROIs";;"136";"OverlayingROIsDisplayGroups.html";"226"
"16779";"Overlay Vectors";;"136";"OverlayingVectorsDisplayGroups.html";"567"
"16780";"Create a Cloud Mask for Landsat";;"136";"CalculateCloudMaskUsingFmask.html";"6428"
"16781";"Transform HSV, HLS, or USGS Munsell HSV to RGB";;"136";"TransformingBackToRGB.html";"340"
"16782";"Transform RGB to HSV, HLS, or USGS Munsell HSV";;"136";"TransformingRGBToOthers.html";"725"
"16784";"Generate Point Clouds Tutorial";;"136";"GeneratePointCloudsTutorial.html";"2202"
"16785";"A Quick Start to ENVI 5";;"136";"QuickStartENVI5Tutorial.html";"15527"
"16786";"Vegetation Indices";;"136";"VegetationIndices.html";"6324"
"16794";"ENVICalibrateRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVICalibrateRaster__Dehydrate.html";"113"
"16795";"ENVICalibrateRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVICalibrateRaster__Hydrate.html";"132"
"16796";"ENVICoordSys::Hydrate";"Creates the object from its dehydrated form";"155";"ENVICoordSys__Hydrate.html";"109"
"16797";"ENVIDataValuesMaskRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIDataValuesMaskRaster__Dehydrate.html";"110"
"16798";"ENVIDataValuesMaskRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIDataValuesMaskRaster__Hydrate.html";"136"
"16799";"ENVIEqualizationStretchRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIEqualizationStretchRaster__Dehydrate.html";"114"
"16800";"ENVIEqualizationStretchRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIEqualizationStretchRaster__Hydrate.html";"102"
"16801";"ENVIFirstOrderEntropyTextureRaster";"Constructs an ENVIRaster from a source raster where a first-order entropy texture has been computed on an input raster";"155";"ENVIFirstOrderEntropyTextureRaster.html";"141"
"16802";"ENVIFirstOrderEntropyTextureRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIFirstOrderEntropyTextureRaster__Dehydrate.html";"125"
"16803";"ENVIFirstOrderEntropyTextureRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIFirstOrderEntropyTextureRaster__Hydrate.html";"115"
"16804";"ENVIGCPSet::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIGCPSet__Hydrate.html";"120"
"16805";"ENVIGLTRasterSpatialRef::ConvertFileToFile";"Converts a set of pixel (x,y) coordinates in one spatial reference to the same pixel location in another spatial reference";"155";"ENVIGLTRasterSpatialRef__ConvertFileToFile.html";"110"
"16806";"ENVIGLTRasterSpatialRef::ConvertFileToMap";"Converts a set of file (pixel) x,y coordinates to a set of map (x-easting, y-northing) coordinates within one spatial reference";"155";"ENVIGLTRasterSpatialRef__ConvertFileToMap.html";"123"
"16807";"ENVIGLTRasterSpatialRef::ConvertLonLatToLonLat";"Converts a set of geographic latitude/longitude coordinates in one spatial reference to the same location in another spatial reference";"155";"ENVIGLTRasterSpatialRef__ConvertLonLatToLonLat.html";"110"
"16808";"ENVIGLTRasterSpatialRef::ConvertLonLatToMGRS";"Converts a set of geographic latitude/longitude coordinates to Military Grid Reference System (MGRS) coordinates within one spatial referenc";"155";"ENVIGLTRasterSpatialRef__ConvertLonLatToMGRS.html";"109"
"16809";"ENVIGLTRasterSpatialRef::ConvertLonLatToMap";"Converts a set of geographic latitude/longitude coordinates to map coordinates (x-eastings, y-northings) within one spatial reference";"155";"ENVIGLTRasterSpatialRef__ConvertLonLatToMap.html";"103"
"16810";"ENVIGLTRasterSpatialRef::ConvertMGRSToLonLat";"Converts Military Grid Reference System (MGRS) coordinates to a set of geographic latitude/longitude coordinates within one spatial reference";"155";"ENVIGLTRasterSpatialRef__ConvertMGRSToLonLat.html";"100"
"16811";"ENVIGLTRasterSpatialRef::ConvertMaptoFile";"Converts a set of map coordinates (x-easting, y-northing) to a set of file (pixel) x,y coordinates within one spatial reference";"155";"ENVIGLTRasterSpatialRef__ConvertMapToFile.html";"106"
"16812";"ENVIGLTRasterSpatialRef::ConvertMapToLonLat";"Converts a set of map coordinates (x-eastings, y-northings) to a set of geographic latitude and longitude coordinates within one spatial reference";"155";"ENVIGLTRasterSpatialRef__ConvertMapToLonLat.html";"112"
"16813";"ENVIGLTRasterSpatialRef::ConvertMapToMap";"Converts a set of map coordinates (x-eastings, y-northings) in one spatial reference to the same location in a second spatial reference";"155";"ENVIGLTRasterSpatialRef__ConvertMapToMap.html";"99"
"16814";"ENVIGLTRasterSpatialRef::Dehydrate";"Returns a hash describing this object";"155";"ENVIGLTRasterSpatialRef__Dehydrate.html";"111"
"16815";"ENVIGLTRasterSpatialRef::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIGLTRasterSpatialRef__Hydrate.html";"127"
"16816";"ENVIGainOffsetRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIGainOffsetRaster__Dehydrate.html";"104"
"16817";"ENVIGainOffsetRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIGainOffsetRaster__Hydrate.html";"110"
"16818";"ENVIGainOffsetWithThresholdRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIGainOffsetWithThresholdRaster__Dehydrate.html";"120"
"16819";"ENVIGainOffsetWithThresholdRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIGainOffsetWithThresholdRaster__Hydrate.html";"115"
"16820";"ENVIGaussianStretchRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIGaussianStretchRaster__Dehydrate.html";"120"
"16821";"ENVIGaussianStretchRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIGaussianStretchRaster__Hydrate.html";"117"
"16822";"ENVIGeoJSON";"This object is a wrapper around a GeoJSON representation that is stored as an IDL Hash";"155";"ENVIGeoJSON.html";"124"
"16823";"ENVIGridDefinition::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIGridDefinition__Hydrate.html";"124"
"16824";"ENVIGridLinesLayer";"This is a reference to an ENVIGridLinesLayer object";"156";"ENVIGridLinesLayer.html";"105"
"16825";"ENVIGridLinesLayer::Close";"Closes the ENVIGridLinesLayer";"156";"ENVIGridLinesLayer__Close.html";"126"
"16826";"ENVIGridLinesLayer::GetView";"Returns the ENVIView where the layer resides";"156";"ENVIGridLinesLayer__GetView.html";"107"
"16827";"ENVIGridLinesLayer::MoveDown";"Moves the layer down one level in the order stack";"156";"ENVIGridLinesLayer__MoveDown.html";"127"
"16828";"ENVIGridLinesLayer::MoveToBottom";"Moves the layer to the bottom of the order stack";"156";"ENVIGridLinesLayer__MoveToBottom.html";"125"
"16829";"ENVIGridLinesLayer::MoveToTop";"Moves the layer to the top of the order stack";"156";"ENVIGridLinesLayer__MoveToTop.html";"108"
"16830";"ENVIGridLinesLayer::MoveUp";"Moves the layer up one level in the order stack";"156";"ENVIGridLinesLayer__MoveUp.html";"109"
"16831";"ENVIHighClipRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIHighClipRaster__Dehydrate.html";"111"
"16832";"ENVIHighClipRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIHighClipRaster__Hydrate.html";"124"
"16833";"ENVIIrregularGridMetaspatialRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIIrregularGridMetaspatialRaster__Dehydrate.html";"111"
"16834";"ENVIIrregularGridMetaspatialRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIIrregularGridMetaspatialRaster__Hydrate.html";"116"
"16835";"ENVILabelEntropyTextureRaster";"Constructs an ENVIRaster from a source raster where a first-order entropy texture has been computed on a the label bands of a rank-strength-texture raster";"155";"ENVILabelEntropyTextureRaster.html";"123"
"16836";"ENVILabelEntropyTextureRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVILabelEntropyTextureRaster__Dehydrate.html";"114"
"16837";"ENVILabelEntropyTextureRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVILabelEntropyTextureRaster__Hydrate.html";"109"
"16838";"ENVILayerStackRaster";"Constructs a layer-stacked ENVIRaster from source rasters that have been regridded to a common spatial grid";"155";"ENVILayerStackRaster.html";"183"
"16839";"ENVILayerStackRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVILayerStackRaster__Dehydrate.html";"119"
"16840";"ENVILayerStackRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVILayerStackRaster__Hydrate.html";"128"
"16841";"ENVILinearPercentStretchRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVILinearPercentStretchRaster__Dehydrate.html";"112"
"16842";"ENVILinearPercentStretchRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVILinearPercentStretchRaster__Hydrate.html";"104"
"16843";"ENVILinearRangeStretchRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVILinearRangeStretchRaster__Dehydrate.html";"112"
"16844";"ENVILinearRangeStretchRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVILinearRangeStretchRaster__Hydrate.html";"108"
"16845";"ENVILogStretchRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVILogStretchRaster__Dehydrate.html";"114"
"16846";"ENVILogStretchRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVILogStretchRaster__Hydrate.html";"111"
"16847";"ENVILowClipRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVILowClipRaster__Dehydrate.html";"117"
"16848";"ENVILowClipRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVILowClipRaster__Hydrate.html";"116"
"16849";"ENVIMaskRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIMaskRaster__Dehydrate.html";"132"
"16850";"ENVIMaskRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIMaskRaster__Hydrate.html";"128"
"16851";"ENVIMetaspatialRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIMetaspatialRaster__Dehydrate.html";"94"
"16852";"ENVIMetaspatialRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIMetaspatialRaster__Hydrate.html";"112"
"16853";"ENVIMetaspectralRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIMetaspectralRaster__Dehydrate.html";"116"
"16854";"ENVIMetaspectralRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIMetaspectralRaster__Hydrate.html";"103"
"16855";"ENVIMirrorRaster";"Constructs an ENVIRaster from a source raster that is reflected (flipped) horizontally, vertically, or both";"155";"ENVIMirrorRaster.html";"147"
"16856";"ENVIMirrorRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIMirrorRaster__Dehydrate.html";"117"
"16857";"ENVIMirrorRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIMirrorRaster__Hydrate.html";"115"
"16858";"ENVIMosaicRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIMosaicRaster__Dehydrate.html";"120"
"16859";"ENVIMosaicRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIMosaicRaster__Hydrate.html";"116"
"16860";"ENVINNDiffusePanSharpeningRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVINNDiffusePanSharpeningRaster__Dehydrate.html";"109"
"16861";"ENVINNDiffusePanSharpeningRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVINNDiffusePanSharpeningRaster__Hydrate.html";"119"
"16862";"ENVIOptimizedLinearStretchRaster::Dehydrate";"Returns a hash describing this object";"159";"ENVIOptimizedLinearStretchRaster__Dehydrate.html";"106"
"16863";"ENVIOptimizedLinearStretchRaster::Hydrate";"Creates the object from its dehydrated form";"159";"ENVIOptimizedLinearStretchRaster__Hydrate.html";"118"
"16864";"ENVIPixelwiseBandMathRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIPixelwiseBandMathRaster__Dehydrate.html";"120"
"16865";"ENVIPixelwiseBandMathRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIPixelwiseBandMathRaster__Hydrate.html";"116"
"16866";"ENVIPointCloudProductsInfo::Dehydrate";"Returns a hash describing this object";"3";"ENVIPointCloudProductsInfo__Dehydrate.html";"117"
"16867";"ENVIPointCloudProductsInfo::Hydrate";"Creates the object from its dehydrated form";"3";"ENVIPointCloudProductsInfo__Hydrate.html";"131"
"16868";"ENVIPointCloudSpatialRef::Dehydrate";"Returns a hash describing this object";"3";"ENVIPointCloudSpatialRef__Dehydrate.html";"123"
"16869";"ENVIPointCloudSpatialRef::Hydrate";"Creates the object from its dehydrated form";"3";"ENVIPointCloudSpatialRef__Hydrate.html";"120"
"16870";"ENVIPointCloud::Dehydrate";"Returns a hash describing this object";"3";"ENVIPointCloud__Dehydrate.html";"126"
"16871";"ENVIPointCloud::Hydrate";"Creates the object from its dehydrated form";"3";"ENVIPointCloud__Hydrate.html";"119"
"16872";"ENVIPseudoRasterSpatialRef::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIPseudoRasterSpatialRef__Hydrate.html";"99"
"16873";"ENVIQUACRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIQUACRaster__Dehydrate.html";"130"
"16874";"ENVIQUACRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIQUACRaster__Hydrate.html";"113"
"16875";"ENVIRGBToHSIRaster";"Constructs an ENVIRaster from a source raster that has been transformed from a red/green/blue (RGB) to hue/saturation/intensity (HSI) color space";"155";"ENVIRGBToHSIRaster.html";"133"
"16876";"ENVIRGBToHSIRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIRGBToHSIRaster__Dehydrate.html";"106"
"16877";"ENVIRGBToHSIRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIRGBToHSIRaster__Hydrate.html";"114"
"16878";"ENVIROIMaskRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIROIMaskRaster__Dehydrate.html";"121"
"16879";"ENVIROIMaskRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIROIMaskRaster__Hydrate.html";"118"
"16880";"ENVIRPCRasterSpatialRef::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIRPCRasterSpatialRef__Hydrate.html";"124"
"16881";"ENVIRadarBackscatterRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIRadarBackscatterRaster__Dehydrate.html";"105"
"16882";"ENVIRadarBackscatterRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIRadarBackscatterRaster__Hydrate.html";"122"
"16883";"ENVIRankStrengthTextureRaster";"Constructs an ENVIRaster from a source raster for which rank-based strength and label texture metrics have been computed";"155";"ENVIRankStrengthTextureRaster.html";"129"
"16884";"ENVIRankStrengthTextureRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIRankStrengthTextureRaster__Dehydrate.html";"110"
"16885";"ENVIRankStrengthTextureRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIRankStrengthTextureRaster__Hydrate.html";"113"
"16886";"ENVIRasterMetadata::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIRasterMetadata__Hydrate.html";"121"
"16887";"ENVIRasterSeries::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIRasterSeries__Hydrate.html";"102"
"16888";"ENVIRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIRaster__Hydrate.html";"133"
"16889";"ENVIReprojectRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIReprojectRaster__Dehydrate.html";"122"
"16890";"ENVIReprojectRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIReprojectRaster__Hydrate.html";"114"
"16891";"ENVIResampleRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIResampleRaster__Dehydrate.html";"114"
"16892";"ENVIResampleRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIResampleRaster__Hydrate.html";"120"
"16893";"ENVIROI::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIRoi__Hydrate.html";"123"
"16894";"ENVIRootStretchRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIRootStretchRaster__Dehydrate.html";"119"
"16895";"ENVIRootStretchRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIRootStretchRaster__Hydrate.html";"118"
"16896";"ENVISpatialGridRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVISpatialGridRaster__Dehydrate.html";"112"
"16897";"ENVISpatialGridRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVISpatialGridRaster__Hydrate.html";"126"
"16898";"ENVISpatialSubsetPointCloud::Dehydrate";"Returns a hash describing this object";"3";"ENVISpatialSubsetPointCloud__Dehydrate.html";"117"
"16899";"ENVISpatialSubsetPointCloud::Hydrate";"Creates the object from its dehydrated form";"3";"ENVISpatialSubsetPointCloud__Hydrate.html";"109"
"16900";"ENVISpectralIndexRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVISpectralIndexRaster__Dehydrate.html";"116"
"16901";"ENVISpectralIndexRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVISpectralIndexRaster__Hydrate.html";"130"
"16902";"ENVISpectralLibrary::Hydrate";"Creates the object from its dehydrated form";"155";"ENVISpectralLibrary__Hydrate.html";"114"
"16903";"ENVIStandardRasterSpatialRef::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIStandardRasterSpatialRef__Hydrate.html";"106"
"16904";"ENVISubsetRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVISubsetRaster__Dehydrate.html";"112"
"16905";"ENVISubsetRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVISubsetRaster__Hydrate.html";"117"
"16906";"ENVICalculateCloudMaskForProductTask";"Uses the Fmask algorithm to calculate a cloud mask";"159";"ENVICalculateCloudMaskForProductTask.html";"177"
"16907";"ENVICalculateCloudMaskUsingFmaskTask";"Calculates a cloud mask.";"159";"ENVICalculateCloudMaskUsingFmaskTask.html";"169"
"16908";"ENVIColorPointCloudTask";"Colorizes a point cloud using raster data";"159";"ENVIColorPointCloudTask.html";"138"
"16909";"ENVIExportRasterToENVITask";"Exports a raster to ENVI file format";"159";"ENVIExportRasterToENVITask.html";"122"
"16910";"ENVIExportRastersToDirectoryTask";"Exports multiple virtual rasters to a specified directory on disk";"159";"ENVIExportRastersToDirectoryTask.html";"127"
"16911";"ENVIFilterTiePointsByFundamentalMatrixTask";"Uses the fundamental matrix to constrain the location of the tie points";"159";"ENVIFilterTiePointsByFundamentalMatrixTask.html";"147"
"16912";"ENVIFilterTiePointsByPushbroomModelTask";"Uses the pushbroom model to filter the tie points";"159";"ENVIFilterTiePointsByPushbroomModelTask.html";"142"
"16913";"ENVIFirstOrderEntropyTextureTask";"Computes first-order entropy texture metrics on an input raster";"159";"ENVIFirstOrderEntropyTextureTask.html";"129"
"16914";"ENVIGetSpectrumFromLibraryTask";"Retrieves the details of a specified material from a spectral library.";"159";"ENVIGetSpectrumFromLibraryTask.html";"136"
"16915";"ENVILabelEntropyTextureTask";"Computes first-order entropy texture metrics on the label bands of a rank-strength-texture raster";"159";"ENVILabelEntropyTextureTask.html";"138"
"16916";"ENVIMirrorRasterTask";"Constructs an ENVIRaster from a source raster that is reflected (flipped) horizontally, vertically, or both";"159";"ENVIMirrorRasterTask.html";"120"
"16917";"ENVIQueryAllTasksTask";"Returns a hash where each key is the task name and each task name key contains a hash of the task's properties";"159";"ENVIQueryAllTasksTask.html";"109"
"16918";"ENVIRGBToHSIRasterTask";"Creates a new raster that has been transformed from a red/green/blue (RGB) to hue/saturation/intensity color space";"159";"ENVIRGBToHSIRasterTask.html";"154"
"16919";"ENVIRPCOrthorectificationUsingDSMFromDenseImageMatchingTask";"Performs RPC orthorectification using a digital surface model (DSM) generated from a dense image matching method";"159";"ENVIRPCOrthorectificationUsingDSMFromDenseImageMatchingTask.html";"124"
"16920";"ENVIRankStrengthTextureTask";"Computes rank-based strength and label texture metrics on a raster";"159";"ENVIRankStrengthTextureTask.html";"147"
"16921";"ENVIRegridRasterSeriesByIndex";"Reprojects a series of rasters to a different spatial grid, using the spatial reference of a selected raster index within the series.";"159";"ENVIRegridRasterSeriesByIndexTask.html";"139"
"16922";"ENVIRegridRasterSeriesByIntersection";"Regrids a series of rasters to a different spatial grid, using the geometric intersection of the source rasters.";"159";"ENVIRegridRasterSeriesByIntersectionTask.html";"135"
"16923";"ENVIRegridRasterSeriesByUnion";"Regrids a series of rasters to a different spatial grid, using the geometric union of the source rasters.";"159";"ENVIRegridRasterSeriesByUnionTask.html";"133"
"16924";"ENVITaskParameter::QueryProperty";"Returns information about the properties of the parameter";"159";"ENVITaskParameter__QueryProperty.html";"128"
"16925";"ENVITask::AddParameter";"Allows the addition of an ENVITaskParameter after ENVITask creation";"159";"ENVITask__AddParameter.html";"176"
"16926";"ENVITask::RemoveParameter";"Allows the removal of an ENVITaskParameter after ENVITask creation";"159";"ENVITask__RemoveParameter.html";"157"
"16927";"ENVITransposeRasterTask";"Constructs an ENVIRaster from a source raster where rows are interchanged with columns";"159";"ENVITransposeRasterTask.html";"122"
"16928";"ENVICreateSubrectsFromDistanceTask";"Creates a 2D array of subrects based on a specified distance";"159";"ENVICreateSubrectsFromDistanceTask.html";"142"
"16929";"ENVICreateSubrectsFromPixelsTask";"Creates a 2D array of subrects based on a specified number of pixels";"159";"ENVICreateSubrectsFromPixelsTask.html";"140"
"16930";"ENVICreateSubrectsFromTileCountTask";"Creates a 2D array of subrects based on the specified number of tiles";"159";"ENVICreateSubrectsFromTileCountTask.html";"138"
"16931";"ENVICreateSubrectsFromVectorTask";"Creates a 2D array of subrects based on the spatial extent of individual vector records";"159";"ENVICreateSubrectsFromVectorTask.html";"127"
"16932";"ENVIDiceRasterByDistanceTask";"Separates a raster into tiles based on a specified distance";"159";"ENVIDiceRasterByDistanceTask.html";"125"
"16933";"ENVIDiceRasterByPixelTask";"Separates a raster into tiles based on number of pixels in the X and Y directions";"159";"ENVIDiceRasterByPixelTask.html";"152"
"16934";"ENVIDiceRasterBySubrectsTask";"Creates an array of rasters based on subrects";"159";"ENVIDiceRasterBySubrectsTask.html";"129"
"16935";"ENVIDiceRasterByTileCountTask";"Separates a raster into a specified number of tiles in the X and Y direction";"159";"ENVIDiceRasterByTileCountTask.html";"129"
"16936";"ENVIDiceRasterByVectorTask";"Separates a raster into tiles based on the spatial extent of individual vector records";"159";"ENVIDiceRasterByVectorTask.html";"170"
"16937";"ENVITiePointSet::Hydrate";"Creates the object from its dehydrated form";"155";"ENVITiePointSet__Hydrate.html";"114"
"16938";"ENVITime::Hydrate";"Creates the object from its dehydrated form";"155";"ENVITime__Hydrate.html";"113"
"16939";"ENVITransposeRaster";"Constructs an ENVIRaster from a source raster where rows are interchanged with columns";"155";"ENVITransposeRaster.html";"140"
"16940";"ENVITransposeRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVITransposeRaster__Dehydrate.html";"130"
"16941";"ENVITransposeRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVITransposeRaster__Hydrate.html";"106"
"16942";"ENVIVectorMaskRaster::Dehydrate";"Returns a hash describing this object";"155";"ENVIVectorMaskRaster__Dehydrate.html";"121"
"16943";"ENVIVectorMaskRaster::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIVectorMaskRaster__Hydrate.html";"115"
"16944";"ENVIVector::Hydrate";"Creates the object from its dehydrated form";"155";"ENVIVector__Hydrate.html";"115"
"16945";"ENVIView::CreateGridLinesLayer";"Creates and returns a new ENVIGridLinesLayer object";"156";"ENVIView__CreateGridLinesLayer.html";"122"
"16946";"Bash Shell Script Example";;"2";"BashShellScriptExample.html";"143"
"16948";"ENVI Services Engine";;"2";"ENVIServicesEngine.html";"101"
"16949";"ENVITaskEngine Examples";;"2";"ENVITaskEngineExamples.html";"139"
"16950";"Run ENVI&#160;Analytics at the Command Line";;"2";"RunENVIAnalyticsCommandLine.html";"165"
"16951";"Data Type Support for ENVITaskEngine";;"2";"SupportedDataTypes.html";"131"
"16952";"Windows Batch Script Example";;"2";"WindowsBatchScriptExample.html";"136"
"16953";"Python Bridge: Parameter Passing and Data Conversion";;"135";"PythonDataConvert.html";"164"
"16956";"IDL Tasks";;"135";"IDL_Tasks_Overview.html";"126"
"16957";"Custom IDL&#160;Tasks";;"135";"ProgrammingGuideCustomIDLTasks.html";"183"
"16958";"IDLTask";"An object-oriented API to encapsulate IDL procedures";"135";"IDLTask.html";"119"
"16959";"IDLTaskFromProcedure";"Calls the user-defined IDL procedure referenced by the ROUTINE property when IDLTask::Execute is called";"135";"IDLTaskFromProcedure.html";"32"
"16960";"IDLParameterBoolean";"Used when an IDLTask has a parameter defined as type of BOOLEAN";"135";"IDLParameterBoolean.html";"62"
"16961";"IDLParameterBooleanArray";"Used when an IDLTask has a parameter defined as type of BOOLEANARRAY";"135";"IDLParameterBooleanArray.html";"95"
"16962";"IDLParameterByte";"Used when an IDLTask has a parameter defined as type of BYTE";"135";"IDLParameterByte.html";"60"
"16963";"IDLParameterByteArray";"Used when an IDLTask has a parameter defined as type of BYTEARRAY";"135";"IDLParameterByteArray.html";"69"
"16964";"IDLParameterComplex";"Used when an IDLTask has a parameter defined as type of COMPLEX";"135";"IDLParameterComplex.html";"23"
"16965";"IDLParameterComplexArray";"Used when an IDLTask has a parameter defined as type of COMPLEXARRAY";"135";"IDLParameterComplexArray.html";"67"
"16966";"IDLParameterDComplexArray";"Used when an IDLTask has a parameter defined as type of DCOMPLEXARRAY";"135";"IDLParameterDComplexArray.html";"11"
"16967";"IDLParameterDComplex";"Used when an IDLTask has a parameter defined as type of DCOMPLEX";"135";"IDLParameterDcomplex.html";"16"
"16968";"IDLParameterDictionary";"Used when an IDLTask has a parameter defined as type of DICTIONARY";"135";"IDLParameterDictionary.html";"71"
"16969";"IDLParameterDouble";"Used when an IDLTask has a parameter defined as type of DOUBLE";"135";"IDLParameterDouble.html";"59"
"16970";"IDLParameterDoubleArray";"Used when an IDLTask has a parameter defined as type of DOUBLEARRAY";"135";"IDLParameterDoubleArray.html";"16"
"16971";"IDLParameterFloat";"Used when an IDLTask has a parameter defined as type of FLOAT";"135";"IDLParameterFloat.html";"85"
"16972";"IDLParameterFloatArray";"Used when an IDLTask has a parameter defined as type of FLOATARRAY";"135";"IDLParameterFloatArray.html";"90"
"16973";"IDLParameterHash";"Used when an IDLTask has a parameter defined as type of HASH";"135";"IDLParameterHash.html";"71"
"16974";"IDLParameterIDLTaskInfo";"Used when an IDLTask has a parameter defined as type of IDLTaskInfo";"135";"IDLParameterIDLTaskInfo.html";"14"
"16975";"IDLParameterInt";"Used when an IDLTask has a parameter defined as type of INT";"135";"IDLParameterInt.html";"15"
"16976";"IDLParameterIntArray";"Used when an IDLTask has a parameter defined as type of INTARRAY";"135";"IDLParameterIntArray.html";"67"
"16977";"IDLParameterList";"Used when an IDLTask has a parameter defined as type of LIST";"135";"IDLParameterList.html";"20"
"16978";"IDLParameterLong";"Used when an IDLTask has a parameter defined as type of LONG";"135";"IDLParameterLong.html";"13"
"16979";"IDLParameterLong64";"Used when an IDLTask has a parameter defined as type of LONG64";"135";"IDLParameterLong64.html";"12"
"16980";"IDLParameterLong64Array";"Used when an IDLTask has a parameter defined as type of LONG64ARRAY";"135";"IDLParameterLong64Array.html";"69"
"16981";"IDLParameterLongArray";"Used when an IDLTask has a parameter defined as type of LONGARRAY";"135";"IDLParameterLongArray.html";"58"
"16982";"IDLParameterOrderedHash";"Used when an IDLTask has a parameter defined as type of ORDEREDHASH";"135";"IDLParameterOrderedHash.html";"15"
"16983";"IDLParameterPrimitive";"Used when an IDLTask defined as type of PRIMITIVE";"135";"IDLParameterPrimitive.html";"22"
"16984";"IDLParameterString";"Used when an IDLTask has a parameter defined as type of STRING";"135";"IDLParameterString.html";"13"
"16985";"IDLParameterStringArray";;"135";"IDLParameterStringArray.html";"91"
"16986";"IDLParameterUint";"Used when an IDLTask has a parameter defined as type of UINT";"135";"IDLParameterUint.html";"63"
"16987";"IDLParameterUintArray";"Used when an IDLTask has a parameter defined as type of UINTARRAY";"135";"IDLParameterUintArray.html";"15"
"16988";"IDLParameterUlong";"Used when an IDLTask has a parameter defined as type of ULONG";"135";"IDLParameterUlong.html";"64"
"16989";"IDLParameterUlong64";"Used when an IDLTask has a parameter defined as type of ULONG64";"135";"IDLParameterUlong64.html";"23"
"16990";"IDLParameterUlong64Array";"Used when an IDLTask has a parameter defined as type of ULONG64ARRAY";"135";"IDLParameterUlong64Array.html";"54"
"16991";"IDLParameterUlongArray";"Used when an IDLTask has a parameter defined as type of ULONGARRAY";"135";"IDLParameterUlongArray.html";"66"
"16993";"IDLTaskEngine Examples";;"135";"IDLTaskEngineExamples.html";"191"
"16994";"IDL Task Engine";;"135";"RunIDLAnalyticsCommandLine.html";"195"
"16995";"IDLQueryAllTasksTask";"Returns a hash where each key is the task name and each task name key contains a hash of the task's properties";"135";"IDLQueryAllTasksTask.html";"40"
"16996";"IDLQueryTaskCatalogTask";"Returns a list of the tasks available in IDL";"135";"IDLQueryTaskCatalogTask.html";"45"
"16997";"IDLQueryTaskTask";"Returns a hash that describes the properties of an IDL task";"135";"IDLQueryTaskTask.html";"41"
"16998";"What's New in IDL&#160;8.5.1";;"135";"Whats_New_8_5_1.html";"101"
"17000";"IDLDehydrate";"Takes its input argument and transforms it into IDL primitives or collections of IDL primitives";"76";"IDLDehydrate.html";"72"
"17001";"IDLHydrate";"Transforms its IDL primitive input argument into the desired type";"76";"IDLHydrate.html";"73"
"17002";"IDL_PRIMITIVE";"Creates a new IDL_PRIMITIVE. An IDL_PRIMITIVE is a container for IDL primitive data types including any mixture of scalars, arrays, lists, hashes, and other dictionaries";"76";"IDL_PRIMITIVE.html";"53"
"17003";"NCDF_IS_NCDF";"Determines if one or more files are in NetCDF-3 format";"101";"NCDF_IS_NCDF.html";"86"
"17004";"NCDF_PARSE";"Recursively descends through a NetCDF-3 or NetCDF-4 file and creates an ordered hash containing object information and data";"101";"NCDF_PARSE.html";"87"
"17005";"Color the Point Cloud";;"136";"ColorPointCloud.html";"107"
"17006";"Edit Classification Images";;"136";"EditClassificationImages.html";"233"
"17007";"Rank-Strength-Texture Algorithm Background";;"136";"BackgroundRankStrengthTextureAlgorithm.html";"37"
"17008";"Texture Metrics Background";;"136";"BackgroundTextureMetrics.html";"149"
"17009";"Overlay Grid Lines";;"136";"OverlayGridLines.html";"128"
"17010";"RPC Orthorectification Using DSM from Dense Image Matching";;"136";"RPCOrthorectificationUsingDSMFromDenseImageMatching.html";"103"
"17011";"NDVI";;"136";"NDVI.html";"213"
"17017";"Activate Licenses Online";;"169";"license-activate-online.html";"107"
"17018";"Creating $MAIN$ Programs";;"135";"Creating__MAIN__Programs.html";"32"
"17019";"C printf-Style Format Codes";;"135";"Format_Codes_CPrintf.html";"208"
"17020";"FORTRAN-Style Format Codes";;"135";"Format_Codes_Fortran.html";"416"
"17021";"Creating Variable Functions";;"135";"Variable_Functions.html";"113"
"17022";"Using Variable Functions and Attributes";;"135";"Variable_Functions_Using.html";"151"
"17023";"Distributing Runtime Applications on Removable Media";;"135";"DistributingRTApplicationsOnRemovableMedia.html";"44"
"17024";"Command Line Input and Output";;"135";"using_idl_CommandLineInputOutput.html";"98"
"17025";"Using&#160;IDL Objects";;"135";"UsingIDLObjects.html";"155"
"17026";"List of Variable Functions and Attributes";;"1";"Variable_Functions_List.html";"162"
"17038";"ENVIConfusionMatrix::CommissionError";"Returns the errors of commission from the confusion matrix.";"173";"ENVIConfusionMatrix__CommissionError.html";"121"
"17039";"ENVIConfusionMatrix::ConfusionMatrix";"Returns the actual confusion matrix computed from the input truth values and predicted values.";"173";"ENVIConfusionMatrix__ConfusionMatrix.html";"97"
"17040";"ENVIConfusionMatrix::Dehydrate";"Returns a hash describing this object.";"173";"ENVIConfusionMatrix__Dehydrate.html";"113"
"17041";"ENVIConfusionMatrix::F1";"Returns the F1 score, which is the harmonic mean of the User Accuracy and Producer Accuracy values.";"173";"ENVIConfusionMatrix__F1.html";"126"
"17042";"ENVIConfusionMatrix::GetParameters";"Retrieves the parameters of the object.";"173";"ENVIConfusionMatrix__GetParameters.html";"113"
"17043";"ENVIConfusionMatrix::GetProperties";"Retrieves the properties of the object.";"173";"ENVIConfusionMatrix__GetProperties.html";"112"
"17044";"ENVIConfusionMatrix::Hydrate";"Creates the object from its dehydrated form.";"173";"ENVIConfusionMatrix__Hydrate.html";"128"
"17045";"ENVIConfusionMatrix::KappaCoefficient";"Returns the kappa coefficient.";"173";"ENVIConfusionMatrix__KappaCoefficient.html";"116"
"17046";"ENVIConfusionMatrix::OmissionError";"Returns the errors of omission.";"173";"ENVIConfusionMatrix__OmissionError.html";"115"
"17047";"ENVIConfusionMatrix::Precision";"Returns a precision value, which is the same as User Accuracy.";"173";"ENVIConfusionMatrix__Precision.html";"122"
"17048";"ENVIConfusionMatrix::ProducerAccuracy";"Returns a producer accuracy value.";"173";"ENVIConfusionMatrix__ProducerAccuracy.html";"111"
"17049";"ENVIConfusionMatrix::Recall";"Returns the recall value from a confusion matrix, as an array with one value per class.";"173";"ENVIConfusionMatrix__Recall.html";"109"
"17050";"ENVIConfusionMatrix::RowTotals";"Returns the totals of each row in the confusion matrix.";"173";"ENVIConfusionMatrix__RowTotals.html";"114"
"17051";"ENVIConfusionMatrix::Save";"Saves information about the object to a binary file so that you can restore it later using ENVIRestoreObject.";"173";"ENVIConfusionMatrix__Save.html";"108"
"17052";"ENVIConfusionMatrix::UserAccuracy";"Returns a user accuracy value.";"173";"ENVIConfusionMatrix__UserAccuracy.html";"116"
"17053";"ENVIEvaluateClassifier";"Uses the classifier and truth examples to calculate predicted class values.";"173";"ENVIEvaluateClassifier.html";"118"
"17054";"ENVIExamples";"Contains examples and class values used as input to the training method of a classification trainer and to evaluate the performance of a classifier.";"173";"ENVIExamples.html";"132"
"17055";"ENVIExamples::Dehydrate";"Returns a hash describing this object.";"173";"ENVIExamples__Dehydrate.html";"109"
"17056";"ENVIExamples::GetParameters";"Retrieves the parameters of the object.";"173";"ENVIExamples__GetParameters.html";"113"
"17057";"ENVIExamples::GetProperties";"Retrieves the properties of the object.";"173";"ENVIExamples__GetProperties.html";"112"
"17058";"ENVIExamples::Hydrate";"Creates the object from its dehydrated form.";"173";"ENVIExamples__Hydrate.html";"124"
"17059";"ENVIExamples::Save";"Saves information about the object to a binary file so that you can restore it later using ENVIRestoreObject.";"173";"ENVIExamples__Save.html";"132"
"17060";"ENVIExamples::SetExampleData";"Sets attribute names, examples, and class values for an ENVIExamples object.";"173";"ENVIExamples__SetExampleData.html";"117"
"17061";"ENVIExtractExamplesFromRaster";"Creates an ENVIExamples object that contains examples, class values, and other properties from an input raster and regions of interest (ROIs).";"173";"ENVIExtractExamplesFromRaster.html";"119"
"17062";"ENVIGradientDescentTrainer";"Uses a Gradient Descent algorithm to train a classifier that reports a gradient; for example, Softmax Regression.";"173";"ENVIGradientDescentTrainer.html";"117"
"17063";"ENVIGradientDescentTrainer::Dehydrate";"Returns a hash describing this object.";"173";"ENVIGradientDescentTrainer__Dehydrate.html";"110"
"17064";"ENVIGradientDescentTrainer::GetParameters";"Retrieves the parameters of the object.";"173";"ENVIGradientDescentTrainer__GetParameters.html";"113"
"17065";"ENVIGradientDescentTrainer::GetProperties";"Retrieves the properties of the object.";"173";"ENVIGradientDescentTrainer__GetProperties.html";"120"
"17066";"ENVIGradientDescentTrainer::Hydrate";"Creates the object from its dehydrated form.";"173";"ENVIGradientDescentTrainer__Hydrate.html";"110"
"17067";"ENVIGradientDescentTrainer::Save";"Saves information about the object to a binary file so that you can restore it later using ENVIRestoreObject.";"173";"ENVIGradientDescentTrainer__Save.html";"122"
"17068";"ENVIGradientDescentTrainer::Train";"Iteratively updates the weights of a classifier until the classifier's change in loss falls below a specified convergence criterion or it reaches a specified maximum number of iterations.";"173";"ENVIGradientDescentTrainer__Train.html";"119"
"17069";"ENVIIterativeTrainer";"Uses an iterative loop to train a classifier that knows how to update its own weights.";"173";"ENVIIterativeTrainer.html";"125"
"17070";"ENVIIterativeTrainer::Dehydrate";"Returns a hash describing this object.";"173";"ENVIIterativeTrainer__Dehydrate.html";"98"
"17071";"ENVIIterativeTrainer::GetParameters";"Retrieves the parameters of the object.";"173";"ENVIIterativeTrainer__GetParameters.html";"89"
"17072";"ENVIIterativeTrainer::GetProperties";"Retrieves the properties of the object.";"173";"ENVIIterativeTrainer__GetProperties.html";"85"
"17073";"ENVIIterativeTrainer::Hydrate";"Creates the object from its dehydrated form.";"173";"ENVIIterativeTrainer__Hydrate.html";"109"
"17074";"ENVIIterativeTrainer::Save";"Saves information about the object to a binary file so that you can restore it later using ENVIRestoreObject.";"173";"ENVIIterativeTrainer__Save.html";"92"
"17075";"ENVIIterativeTrainer::Train";"Uses an iterative loop to train a classifier that knows how to update its own weights.";"173";"ENVIIterativeTrainer__Train.html";"110"
"17076";"ENVISVMClassifier";"Classifies a dataset using a Support Vector Machine (SVM) classifier.";"173";"ENVISVMClassifier.html";"131"
"17077";"ENVISVMClassifier::Classify";"Returns an array of class values corresponding to the data provided.";"173";"ENVISVMClassifier__Classify.html";"93"
"17078";"ENVISVMClassifier::Dehydrate";"Returns a hash describing this object.";"173";"ENVISVMClassifier__Dehydrate.html";"117"
"17079";"ENVISVMClassifier::GetParameters";"Retrieves the parameters of the object.";"173";"ENVISVMClassifier__GetParameters.html";"116"
"17080";"ENVISVMClassifier::GetProperties";"Retrieves the properties of the object.";"173";"ENVISVMClassifier__GetProperties.html";"114"
"17081";"ENVISVMClassifier::Hydrate";"Creates the object from its dehydrated form.";"173";"ENVISVMClassifier__Hydrate.html";"111"
"17082";"ENVISVMClassifier::Save";"Saves information about the object to a binary file so that you can restore it later using ENVIRestoreObject.";"173";"ENVISVMClassifier__Save.html";"107"
"17083";"ENVIShuffleExamples";"Shuffles examples and class values from an ENVIExamples object in order to create a random distribution of training data used for classification.";"173";"ENVIShuffleExamples.html";"113"
"17084";"ENVISoftmaxRegressionClassifier";"Classifies a dataset using a Softmax Regression classifier.";"173";"ENVISoftmaxRegressionClassifier.html";"145"
"17085";"ENVISoftmaxRegressionClassifier::Classify";"Returns an array of class values corresponding to the data provided.";"173";"ENVISoftmaxRegressionClassifier__Classify.html";"111"
"17086";"ENVISoftmaxRegressionClassifier::Dehydrate";"Returns a hash describing this object.";"173";"ENVISoftmaxRegressionClassifier__Dehydrate.html";"104"
"17087";"ENVISoftmaxRegressionClassifier::GetParameters";"Retrieves the parameters of the object.";"173";"ENVISoftmaxRegressionClassifier__GetParameters.html";"112"
"17088";"ENVISoftmaxRegressionClassifier::GetProperties";"Retrieves the properties of the object.";"173";"ENVISoftmaxRegressionClassifier__GetProperties.html";"107"
"17089";"ENVISoftmaxRegressionClassifier::Hydrate";"Creates the object from its dehydrated form.";"173";"ENVISoftmaxRegressionClassifier__Hydrate.html";"115"
"17090";"ENVISoftmaxRegressionClassifier::Save";"Saves information about the object to a binary file so that you can restore it later using ENVIRestoreObject.";"173";"ENVISoftmaxRegressionClassifier__Save.html";"114"
"17091";"ENVISplitExamples";"Splits examples and class values from an ENVIExamples object into two sets of examples and class values.";"173";"ENVISplitExamples.html";"124"
"17092";"ENVITrainClassifier";"Rrains a classifier. It updates the original classifier instead of creating a new output classifier.";"173";"ENVITrainClassifier.html";"120"
"17093";"ENVIRestoreObject";"Restores a persistable object from disk, including its saved properties and parameters.";"154";"ENVIRestoreObject.html";"93"
"17094";"ENVIApplyGainOffsetToExamplesTask";"Applies a gain and offset to the examples in an ENVIExamples object.";"173";"ENVIApplyGainOffsetToExamplesTask.html";"115"
"17095";"ENVICalculateConfusionMatrixFromRasterTask";"Returns a reference to an ENVIConfusionMatrix object computed from a classification raster and truth ROIs.";"173";"ENVICalculateConfusionMatrixFromRasterTask.html";"130"
"17096";"ENVIClassifyRasterTask";"Classifies a raster using a trained classifier.";"173";"ENVIClassifyRasterTask.html";"135"
"17097";"ENVICreateGradientDescentTrainerTask";"Creates a Gradient Descent trainer that can train a classifier using ENVITrainClassifierTask.";"173";"ENVICreateGradientDescentTrainerTask.html";"138"
"17098";"ENVICreateIterativeTrainerTask";"Creates an iterative trainer that can train a classifier using ENVITrainClassifierTask.";"173";"ENVICreateIterativeTrainerTask.html";"140"
"17099";"ENVICreateSVMClassifierTask";"Creates a Support Vector Machine (SVM) classifier.";"173";"ENVICreateSVMClassifierTask.html";"158"
"17100";"ENVICreateSoftmaxRegressionClassifierTask";"Creates a Softmax Regression classifier.";"173";"ENVICreateSoftmaxRegressionClassifierTask.html";"128"
"17101";"ENVIEvaluateClassifierTask";"Computes a confusion matrix and accuracy metrics between the truth and predicted class values.";"173";"ENVIEvaluateClassifierTask.html";"128"
"17102";"ENVIExtractExamplesFromRasterTask";"Returns a reference to an ENVIExamples object that contains examples, class values, and other properties from an input raster and regions of interest (ROIs).";"173";"ENVIExtractExamplesFromRasterTask.html";"115"
"17103";"ENVIShuffleExamplesTask";"Shuffles the examples and class values from an ENVIExamples object to randomize the order of the examples.";"173";"ENVIShuffleExamplesTask.html";"115"
"17104";"ENVISplitExamplesTask";"Splits the examples and class values from an ENVIExamples object into two sets of examples and class values.";"173";"ENVISplitExamplesTask.html";"110"
"17105";"ENVITrainClassifierTask";"Trains a classifier.";"173";"ENVITrainClassifierTask.html";"146"
"17106";"ENVIRestoreObjectTask";"Restores an ENVIPersistableObject, which allows access to its data.";"154";"ENVIRestoreObjectTask.html";"39"
"17107";"Support Vector Machine Background";;"173";"BackgroundSVMGeneral.html";"114"
"17108";"ENVI&#160;Classification";;"173";"ProgrammingGuideClassification.html";"156"
"17109";"Code Example: Support Vector Machine Classification Using API&#160;Objects";;"173";"ProgrammingGuideClassification_CodeExampleSVMAPIObjects.html";"143"
"17110";"Code Example: Support Vector Machine Classification Using ENVITasks";;"173";"ProgrammingGuideClassification_CodeExampleSVMTasks.html";"101"
"17111";"Code Example: Softmax Regression Classification Using API&#160;Objects";;"173";"ProgrammingGuideClassification_CodeExampleSoftmaxAPIObjects.html";"155"
"17112";"Code Example: Softmax Regression Classification Using ENVITasks";;"173";"ProgrammingGuideClassification_CodeExampleSoftmaxTasks.html";"72"
"17113";"Define and Train the Classifier";;"173";"ProgrammingGuideClassification_DefineClassifier.html";"150"
"17114";"Evaluate the Classifier";;"173";"ProgrammingGuideClassification_EvaluateClassifier.html";"168"
"17115";"Classification Framework Glossary";;"173";"ProgrammingGuideClassification_Glossary.html";"123"
"17116";"Optional Steps in Classification";;"173";"ProgrammingGuideClassification_OptionalSteps.html";"121"
"17117";"Prepare Data for Classification";;"173";"ProgrammingGuideClassification_PrepareData.html";"155"
"17118";"Run the Classifier";;"173";"ProgrammingGuideClassification_RunClassifier.html";"147"
"17119";"System Variables";;"135";"System_Variables.html";"6346"
"17120";"Preferences";;"136";"Preferences.html";"21820"
"17121";"On the Glass Annotations Background";;"136";"BackgroundOnGlassAnnotations.html";"146"
"17125";"GSF Glossary";;"174";"glossary.html";"98"
"17126";"GSF - Geospatial Services Framework";;"174";"geospatial_services_framework_home.html";"506"
"17128";"GSF Tutorials";;"174";"geospatial_services_framework_tutorials.html";"94"
"17129";"GSF Tutorial: Getting Started";;"174";"0getting-started.html";"96"
"17130";"GSF Tutorial: Amazon S3 Public Data Sets";;"174";"amazon-s3-landsat.html";"77"
"17131";"GSF Tutorial: Amazon S3 Workspace";;"174";"amazon-s3-workspace.html";"149"
"17132";"GSF Tutorial: Chaining Jobs";;"174";"chaining-jobs.html";"60"
"17133";"GSF Tutorial: Clustering";;"174";"clustering.html";"58"
"17134";"GSF Tutorial: Custom Licensing";;"174";"custom-licensing.html";"51"
"17135";"GSF Tutorial: Custom Parameter Mapper";;"174";"custom-param-mapper.html";"43"
"17136";"GSF Tutorial: Custom Request Handler";;"174";"custom-request-handler.html";"63"
"17137";"GSF Tutorial: Custom Route Mapping";;"174";"custom-route-mapper.html";"51"
"17138";"GSF Tutorial: Custom Metatasks";;"174";"metatasks.html";"85"
"17139";"GSF Tutorial: Server-Sent Events";;"174";"server-events.html";"43"
"17140";"GSF Tutorial: WebApp Map Client";;"174";"webapp-all.html";"59"
